// Generated by delombok at Thu Aug 20 15:16:22 CEST 2015
package ast;

import lombok.*;
import ast.Ast.MethodSelector;
import ast.Ast.Path;
import ast.Ast.Stage;
import ast.ExpCore.*;

public class Util {
	
	
	public static final class CsMx {
		@NonNull
		private final java.util.List<String> cs;
		@NonNull
		private final MethodSelector ms;
		
		public String toString() {
			String prefix = "Outer0";
			if (!cs.isEmpty()) {
				prefix = String.join("::", cs);
			}
			return prefix + "." + ms;
		}
		
		@java.beans.ConstructorProperties({"cs", "ms"})
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public CsMx(@NonNull final java.util.List<String> cs, @NonNull final MethodSelector ms) {
			if (cs == null) {
				throw new java.lang.NullPointerException("cs");
			}
			if (ms == null) {
				throw new java.lang.NullPointerException("ms");
			}
			this.cs = cs;
			this.ms = ms;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<String> getCs() {
			return this.cs;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public MethodSelector getMs() {
			return this.ms;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.CsMx)) return false;
			final CsMx other = (CsMx)o;
			final java.lang.Object this$cs = this.getCs();
			final java.lang.Object other$cs = other.getCs();
			if (this$cs == null ? other$cs != null : !this$cs.equals(other$cs)) return false;
			final java.lang.Object this$ms = this.getMs();
			final java.lang.Object other$ms = other.getMs();
			if (this$ms == null ? other$ms != null : !this$ms.equals(other$ms)) return false;
			return true;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $cs = this.getCs();
			result = result * PRIME + ($cs == null ? 0 : $cs.hashCode());
			final java.lang.Object $ms = this.getMs();
			result = result * PRIME + ($ms == null ? 0 : $ms.hashCode());
			return result;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public CsMx withCs(@NonNull final java.util.List<String> cs) {
			if (cs == null) {
				throw new java.lang.NullPointerException("cs");
			}
			return this.cs == cs ? this : new CsMx(cs, this.ms);
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public CsMx withMs(@NonNull final MethodSelector ms) {
			if (ms == null) {
				throw new java.lang.NullPointerException("ms");
			}
			return this.ms == ms ? this : new CsMx(this.cs, ms);
		}
	}
	
	public static final class PathMx {
		@NonNull
		private final Path path;
		@NonNull
		private final MethodSelector ms;
		
		public String toString() {
			return "" + path + "." + ms;
		}
		
		@java.beans.ConstructorProperties({"path", "ms"})
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMx(@NonNull final Path path, @NonNull final MethodSelector ms) {
			if (path == null) {
				throw new java.lang.NullPointerException("path");
			}
			if (ms == null) {
				throw new java.lang.NullPointerException("ms");
			}
			this.path = path;
			this.ms = ms;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public Path getPath() {
			return this.path;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public MethodSelector getMs() {
			return this.ms;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.PathMx)) return false;
			final PathMx other = (PathMx)o;
			final java.lang.Object this$path = this.getPath();
			final java.lang.Object other$path = other.getPath();
			if (this$path == null ? other$path != null : !this$path.equals(other$path)) return false;
			final java.lang.Object this$ms = this.getMs();
			final java.lang.Object other$ms = other.getMs();
			if (this$ms == null ? other$ms != null : !this$ms.equals(other$ms)) return false;
			return true;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $path = this.getPath();
			result = result * PRIME + ($path == null ? 0 : $path.hashCode());
			final java.lang.Object $ms = this.getMs();
			result = result * PRIME + ($ms == null ? 0 : $ms.hashCode());
			return result;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMx withPath(@NonNull final Path path) {
			if (path == null) {
				throw new java.lang.NullPointerException("path");
			}
			return this.path == path ? this : new PathMx(path, this.ms);
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMx withMs(@NonNull final MethodSelector ms) {
			if (ms == null) {
				throw new java.lang.NullPointerException("ms");
			}
			return this.ms == ms ? this : new PathMx(this.path, ms);
		}
	}
	
	public static final class PathMxMx {
		@NonNull
		private final Path path;
		@NonNull
		private final MethodSelector ms1;
		@NonNull
		private final MethodSelector ms2;
		
		@java.beans.ConstructorProperties({"path", "ms1", "ms2"})
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMxMx(@NonNull final Path path, @NonNull final MethodSelector ms1, @NonNull final MethodSelector ms2) {
			if (path == null) {
				throw new java.lang.NullPointerException("path");
			}
			if (ms1 == null) {
				throw new java.lang.NullPointerException("ms1");
			}
			if (ms2 == null) {
				throw new java.lang.NullPointerException("ms2");
			}
			this.path = path;
			this.ms1 = ms1;
			this.ms2 = ms2;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public Path getPath() {
			return this.path;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public MethodSelector getMs1() {
			return this.ms1;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public MethodSelector getMs2() {
			return this.ms2;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.PathMxMx)) return false;
			final PathMxMx other = (PathMxMx)o;
			final java.lang.Object this$path = this.getPath();
			final java.lang.Object other$path = other.getPath();
			if (this$path == null ? other$path != null : !this$path.equals(other$path)) return false;
			final java.lang.Object this$ms1 = this.getMs1();
			final java.lang.Object other$ms1 = other.getMs1();
			if (this$ms1 == null ? other$ms1 != null : !this$ms1.equals(other$ms1)) return false;
			final java.lang.Object this$ms2 = this.getMs2();
			final java.lang.Object other$ms2 = other.getMs2();
			if (this$ms2 == null ? other$ms2 != null : !this$ms2.equals(other$ms2)) return false;
			return true;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $path = this.getPath();
			result = result * PRIME + ($path == null ? 0 : $path.hashCode());
			final java.lang.Object $ms1 = this.getMs1();
			result = result * PRIME + ($ms1 == null ? 0 : $ms1.hashCode());
			final java.lang.Object $ms2 = this.getMs2();
			result = result * PRIME + ($ms2 == null ? 0 : $ms2.hashCode());
			return result;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.lang.String toString() {
			return "Util.PathMxMx(path=" + this.getPath() + ", ms1=" + this.getMs1() + ", ms2=" + this.getMs2() + ")";
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMxMx withPath(@NonNull final Path path) {
			if (path == null) {
				throw new java.lang.NullPointerException("path");
			}
			return this.path == path ? this : new PathMxMx(path, this.ms1, this.ms2);
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMxMx withMs1(@NonNull final MethodSelector ms1) {
			if (ms1 == null) {
				throw new java.lang.NullPointerException("ms1");
			}
			return this.ms1 == ms1 ? this : new PathMxMx(this.path, ms1, this.ms2);
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathMxMx withMs2(@NonNull final MethodSelector ms2) {
			if (ms2 == null) {
				throw new java.lang.NullPointerException("ms2");
			}
			return this.ms2 == ms2 ? this : new PathMxMx(this.path, this.ms1, ms2);
		}
	}
	
	public static final class PathPath {
		@NonNull
		private final Path path1;
		@NonNull
		private final Path path2;
		
		public String toString() {
			return "" + path1 + "->" + path2;
		}
		
		@java.beans.ConstructorProperties({"path1", "path2"})
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathPath(@NonNull final Path path1, @NonNull final Path path2) {
			if (path1 == null) {
				throw new java.lang.NullPointerException("path1");
			}
			if (path2 == null) {
				throw new java.lang.NullPointerException("path2");
			}
			this.path1 = path1;
			this.path2 = path2;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public Path getPath1() {
			return this.path1;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public Path getPath2() {
			return this.path2;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.PathPath)) return false;
			final PathPath other = (PathPath)o;
			final java.lang.Object this$path1 = this.getPath1();
			final java.lang.Object other$path1 = other.getPath1();
			if (this$path1 == null ? other$path1 != null : !this$path1.equals(other$path1)) return false;
			final java.lang.Object this$path2 = this.getPath2();
			final java.lang.Object other$path2 = other.getPath2();
			if (this$path2 == null ? other$path2 != null : !this$path2.equals(other$path2)) return false;
			return true;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $path1 = this.getPath1();
			result = result * PRIME + ($path1 == null ? 0 : $path1.hashCode());
			final java.lang.Object $path2 = this.getPath2();
			result = result * PRIME + ($path2 == null ? 0 : $path2.hashCode());
			return result;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathPath withPath1(@NonNull final Path path1) {
			if (path1 == null) {
				throw new java.lang.NullPointerException("path1");
			}
			return this.path1 == path1 ? this : new PathPath(path1, this.path2);
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public PathPath withPath2(@NonNull final Path path2) {
			if (path2 == null) {
				throw new java.lang.NullPointerException("path2");
			}
			return this.path2 == path2 ? this : new PathPath(this.path1, path2);
		}
	}
	
	public interface Locator {
		
		java.util.List<ClassB.Member> getMTail();
		
		java.util.List<Integer> getMPos();
		
		java.util.List<ClassB> getMOuters();
	}
	
	public static class MethodLocator implements Locator {
		@NonNull
		java.util.List<ClassB.Member> mTail;
		@NonNull
		java.util.List<Integer> mPos;
		@NonNull
		java.util.List<ClassB> mOuters;
		@NonNull
		ClassB.MethodWithType that;
		MethodSelector newName;
		
		public String toString() {
			return coreVisitors.PathAnnotateClass.computeComment(mTail, mPos) + that.getMs() + newName;
		}
		
		@java.beans.ConstructorProperties({"mTail", "mPos", "mOuters", "that"})
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public MethodLocator(@NonNull final java.util.List<ClassB.Member> mTail, @NonNull final java.util.List<Integer> mPos, @NonNull final java.util.List<ClassB> mOuters, @NonNull final ClassB.MethodWithType that) {
			if (mTail == null) {
				throw new java.lang.NullPointerException("mTail");
			}
			if (mPos == null) {
				throw new java.lang.NullPointerException("mPos");
			}
			if (mOuters == null) {
				throw new java.lang.NullPointerException("mOuters");
			}
			if (that == null) {
				throw new java.lang.NullPointerException("that");
			}
			this.mTail = mTail;
			this.mPos = mPos;
			this.mOuters = mOuters;
			this.that = that;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<ClassB.Member> getMTail() {
			return this.mTail;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<Integer> getMPos() {
			return this.mPos;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<ClassB> getMOuters() {
			return this.mOuters;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public ClassB.MethodWithType getThat() {
			return this.that;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public MethodSelector getNewName() {
			return this.newName;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMTail(@NonNull final java.util.List<ClassB.Member> mTail) {
			if (mTail == null) {
				throw new java.lang.NullPointerException("mTail");
			}
			this.mTail = mTail;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMPos(@NonNull final java.util.List<Integer> mPos) {
			if (mPos == null) {
				throw new java.lang.NullPointerException("mPos");
			}
			this.mPos = mPos;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMOuters(@NonNull final java.util.List<ClassB> mOuters) {
			if (mOuters == null) {
				throw new java.lang.NullPointerException("mOuters");
			}
			this.mOuters = mOuters;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setThat(@NonNull final ClassB.MethodWithType that) {
			if (that == null) {
				throw new java.lang.NullPointerException("that");
			}
			this.that = that;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setNewName(final MethodSelector newName) {
			this.newName = newName;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.MethodLocator)) return false;
			final MethodLocator other = (MethodLocator)o;
			if (!other.canEqual((java.lang.Object)this)) return false;
			final java.lang.Object this$mTail = this.getMTail();
			final java.lang.Object other$mTail = other.getMTail();
			if (this$mTail == null ? other$mTail != null : !this$mTail.equals(other$mTail)) return false;
			final java.lang.Object this$mPos = this.getMPos();
			final java.lang.Object other$mPos = other.getMPos();
			if (this$mPos == null ? other$mPos != null : !this$mPos.equals(other$mPos)) return false;
			final java.lang.Object this$mOuters = this.getMOuters();
			final java.lang.Object other$mOuters = other.getMOuters();
			if (this$mOuters == null ? other$mOuters != null : !this$mOuters.equals(other$mOuters)) return false;
			final java.lang.Object this$that = this.getThat();
			final java.lang.Object other$that = other.getThat();
			if (this$that == null ? other$that != null : !this$that.equals(other$that)) return false;
			final java.lang.Object this$newName = this.getNewName();
			final java.lang.Object other$newName = other.getNewName();
			if (this$newName == null ? other$newName != null : !this$newName.equals(other$newName)) return false;
			return true;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		protected boolean canEqual(final java.lang.Object other) {
			return other instanceof Util.MethodLocator;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $mTail = this.getMTail();
			result = result * PRIME + ($mTail == null ? 0 : $mTail.hashCode());
			final java.lang.Object $mPos = this.getMPos();
			result = result * PRIME + ($mPos == null ? 0 : $mPos.hashCode());
			final java.lang.Object $mOuters = this.getMOuters();
			result = result * PRIME + ($mOuters == null ? 0 : $mOuters.hashCode());
			final java.lang.Object $that = this.getThat();
			result = result * PRIME + ($that == null ? 0 : $that.hashCode());
			final java.lang.Object $newName = this.getNewName();
			result = result * PRIME + ($newName == null ? 0 : $newName.hashCode());
			return result;
		}
	}
	
	public static class NestedLocator implements Locator {
		@NonNull
		java.util.List<ClassB.Member> mTail;
		@NonNull
		java.util.List<Integer> mPos;
		@NonNull
		java.util.List<ClassB> mOuters;
		@NonNull
		String that;
		String newName;
		Path newPath;//either newName or newPath always null
		
		public String toString() {
			return coreVisitors.PathAnnotateClass.computeComment(mTail, mPos) + that + newName;
		}
		
		@java.beans.ConstructorProperties({"mTail", "mPos", "mOuters", "that"})
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public NestedLocator(@NonNull final java.util.List<ClassB.Member> mTail, @NonNull final java.util.List<Integer> mPos, @NonNull final java.util.List<ClassB> mOuters, @NonNull final String that) {
			if (mTail == null) {
				throw new java.lang.NullPointerException("mTail");
			}
			if (mPos == null) {
				throw new java.lang.NullPointerException("mPos");
			}
			if (mOuters == null) {
				throw new java.lang.NullPointerException("mOuters");
			}
			if (that == null) {
				throw new java.lang.NullPointerException("that");
			}
			this.mTail = mTail;
			this.mPos = mPos;
			this.mOuters = mOuters;
			this.that = that;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<ClassB.Member> getMTail() {
			return this.mTail;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<Integer> getMPos() {
			return this.mPos;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.List<ClassB> getMOuters() {
			return this.mOuters;
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public String getThat() {
			return this.that;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public String getNewName() {
			return this.newName;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public Path getNewPath() {
			return this.newPath;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMTail(@NonNull final java.util.List<ClassB.Member> mTail) {
			if (mTail == null) {
				throw new java.lang.NullPointerException("mTail");
			}
			this.mTail = mTail;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMPos(@NonNull final java.util.List<Integer> mPos) {
			if (mPos == null) {
				throw new java.lang.NullPointerException("mPos");
			}
			this.mPos = mPos;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMOuters(@NonNull final java.util.List<ClassB> mOuters) {
			if (mOuters == null) {
				throw new java.lang.NullPointerException("mOuters");
			}
			this.mOuters = mOuters;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setThat(@NonNull final String that) {
			if (that == null) {
				throw new java.lang.NullPointerException("that");
			}
			this.that = that;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setNewName(final String newName) {
			this.newName = newName;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setNewPath(final Path newPath) {
			this.newPath = newPath;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.NestedLocator)) return false;
			final NestedLocator other = (NestedLocator)o;
			if (!other.canEqual((java.lang.Object)this)) return false;
			final java.lang.Object this$mTail = this.getMTail();
			final java.lang.Object other$mTail = other.getMTail();
			if (this$mTail == null ? other$mTail != null : !this$mTail.equals(other$mTail)) return false;
			final java.lang.Object this$mPos = this.getMPos();
			final java.lang.Object other$mPos = other.getMPos();
			if (this$mPos == null ? other$mPos != null : !this$mPos.equals(other$mPos)) return false;
			final java.lang.Object this$mOuters = this.getMOuters();
			final java.lang.Object other$mOuters = other.getMOuters();
			if (this$mOuters == null ? other$mOuters != null : !this$mOuters.equals(other$mOuters)) return false;
			final java.lang.Object this$that = this.getThat();
			final java.lang.Object other$that = other.getThat();
			if (this$that == null ? other$that != null : !this$that.equals(other$that)) return false;
			final java.lang.Object this$newName = this.getNewName();
			final java.lang.Object other$newName = other.getNewName();
			if (this$newName == null ? other$newName != null : !this$newName.equals(other$newName)) return false;
			final java.lang.Object this$newPath = this.getNewPath();
			final java.lang.Object other$newPath = other.getNewPath();
			if (this$newPath == null ? other$newPath != null : !this$newPath.equals(other$newPath)) return false;
			return true;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		protected boolean canEqual(final java.lang.Object other) {
			return other instanceof Util.NestedLocator;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $mTail = this.getMTail();
			result = result * PRIME + ($mTail == null ? 0 : $mTail.hashCode());
			final java.lang.Object $mPos = this.getMPos();
			result = result * PRIME + ($mPos == null ? 0 : $mPos.hashCode());
			final java.lang.Object $mOuters = this.getMOuters();
			result = result * PRIME + ($mOuters == null ? 0 : $mOuters.hashCode());
			final java.lang.Object $that = this.getThat();
			result = result * PRIME + ($that == null ? 0 : $that.hashCode());
			final java.lang.Object $newName = this.getNewName();
			result = result * PRIME + ($newName == null ? 0 : $newName.hashCode());
			final java.lang.Object $newPath = this.getNewPath();
			result = result * PRIME + ($newPath == null ? 0 : $newPath.hashCode());
			return result;
		}
	}
	
	public static class CachedStage {
		@NonNull
		ast.Ast.Stage stage = Stage.None;
		final java.util.Map<Path, ClassB> dependencies = new java.util.HashMap<>();
		boolean verified = false;
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public CachedStage() {
		}
		
		@NonNull
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public ast.Ast.Stage getStage() {
			return this.stage;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.util.Map<Path, ClassB> getDependencies() {
			return this.dependencies;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean isVerified() {
			return this.verified;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setStage(@NonNull final ast.Ast.Stage stage) {
			if (stage == null) {
				throw new java.lang.NullPointerException("stage");
			}
			this.stage = stage;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setVerified(final boolean verified) {
			this.verified = verified;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.CachedStage)) return false;
			final CachedStage other = (CachedStage)o;
			if (!other.canEqual((java.lang.Object)this)) return false;
			final java.lang.Object this$stage = this.getStage();
			final java.lang.Object other$stage = other.getStage();
			if (this$stage == null ? other$stage != null : !this$stage.equals(other$stage)) return false;
			final java.lang.Object this$dependencies = this.getDependencies();
			final java.lang.Object other$dependencies = other.getDependencies();
			if (this$dependencies == null ? other$dependencies != null : !this$dependencies.equals(other$dependencies)) return false;
			if (this.isVerified() != other.isVerified()) return false;
			return true;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		protected boolean canEqual(final java.lang.Object other) {
			return other instanceof Util.CachedStage;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $stage = this.getStage();
			result = result * PRIME + ($stage == null ? 0 : $stage.hashCode());
			final java.lang.Object $dependencies = this.getDependencies();
			result = result * PRIME + ($dependencies == null ? 0 : $dependencies.hashCode());
			result = result * PRIME + (this.isVerified() ? 79 : 97);
			return result;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.lang.String toString() {
			return "Util.CachedStage(stage=" + this.getStage() + ", dependencies=" + this.getDependencies() + ", verified=" + this.isVerified() + ")";
		}
	}
	
	public static class CachedMt {
		ast.Ast.MethodType mt;
		Path path;
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public CachedMt() {
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public ast.Ast.MethodType getMt() {
			return this.mt;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public Path getPath() {
			return this.path;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setMt(final ast.Ast.MethodType mt) {
			this.mt = mt;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public void setPath(final Path path) {
			this.path = path;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public boolean equals(final java.lang.Object o) {
			if (o == this) return true;
			if (!(o instanceof Util.CachedMt)) return false;
			final CachedMt other = (CachedMt)o;
			if (!other.canEqual((java.lang.Object)this)) return false;
			final java.lang.Object this$mt = this.getMt();
			final java.lang.Object other$mt = other.getMt();
			if (this$mt == null ? other$mt != null : !this$mt.equals(other$mt)) return false;
			final java.lang.Object this$path = this.getPath();
			final java.lang.Object other$path = other.getPath();
			if (this$path == null ? other$path != null : !this$path.equals(other$path)) return false;
			return true;
		}
		
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		protected boolean canEqual(final java.lang.Object other) {
			return other instanceof Util.CachedMt;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public int hashCode() {
			final int PRIME = 59;
			int result = 1;
			final java.lang.Object $mt = this.getMt();
			result = result * PRIME + ($mt == null ? 0 : $mt.hashCode());
			final java.lang.Object $path = this.getPath();
			result = result * PRIME + ($path == null ? 0 : $path.hashCode());
			return result;
		}
		
		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.lang.String toString() {
			return "Util.CachedMt(mt=" + this.getMt() + ", path=" + this.getPath() + ")";
		}
	}
}