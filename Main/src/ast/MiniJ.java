// Generated by delombok at Thu Aug 24 22:09:06 NZST 2017
package ast;

import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Optional;
import java.util.function.Function;
import java.util.stream.Collectors;
import ast.Ast.Mdf;
import ast.L42F.Cn;
import l42FVisitors.Visitor;
import l42FVisitors.JVisitor;

public class MiniJ {


  public static interface S {

    <V> V accept(JVisitor<V> v);
  }

  public static interface E extends S {
  }

  public static final class VarDec implements S {
    private final String cn;
    private final String x;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"cn", "x"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public VarDec(final String cn, final String x) {
      this.cn = cn;
      this.x = x;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCn() {
      return this.cn;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getX() {
      return this.x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.VarDec)) return false;
      final VarDec other = (VarDec)o;
      final java.lang.Object this$cn = this.getCn();
      final java.lang.Object other$cn = other.getCn();
      if (this$cn == null ? other$cn != null : !this$cn.equals(other$cn)) return false;
      final java.lang.Object this$x = this.getX();
      final java.lang.Object other$x = other.getX();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $cn = this.getCn();
      result = result * PRIME + ($cn == null ? 0 : $cn.hashCode());
      final java.lang.Object $x = this.getX();
      result = result * PRIME + ($x == null ? 0 : $x.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.VarDec(cn=" + this.getCn() + ", x=" + this.getX() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public VarDec withCn(final String cn) {
      return this.cn == cn ? this : new VarDec(cn, this.x);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public VarDec withX(final String x) {
      return this.x == x ? this : new VarDec(this.cn, x);
    }
  }

  public static final class VarAss implements S {
    private final String x;
    private final E e;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"x", "e"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public VarAss(final String x, final E e) {
      this.x = x;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getX() {
      return this.x;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public E getE() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.VarAss)) return false;
      final VarAss other = (VarAss)o;
      final java.lang.Object this$x = this.getX();
      final java.lang.Object other$x = other.getX();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      final java.lang.Object this$e = this.getE();
      final java.lang.Object other$e = other.getE();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $x = this.getX();
      result = result * PRIME + ($x == null ? 0 : $x.hashCode());
      final java.lang.Object $e = this.getE();
      result = result * PRIME + ($e == null ? 0 : $e.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.VarAss(x=" + this.getX() + ", e=" + this.getE() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public VarAss withX(final String x) {
      return this.x == x ? this : new VarAss(x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public VarAss withE(final E e) {
      return this.e == e ? this : new VarAss(this.x, e);
    }
  }

  public static final class If implements S {
    private final String cond;
    private final B then;
    private final B _else;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"cond", "then", "_else"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public If(final String cond, final B then, final B _else) {
      this.cond = cond;
      this.then = then;
      this._else = _else;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCond() {
      return this.cond;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B getThen() {
      return this.then;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B get_else() {
      return this._else;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.If)) return false;
      final If other = (If)o;
      final java.lang.Object this$cond = this.getCond();
      final java.lang.Object other$cond = other.getCond();
      if (this$cond == null ? other$cond != null : !this$cond.equals(other$cond)) return false;
      final java.lang.Object this$then = this.getThen();
      final java.lang.Object other$then = other.getThen();
      if (this$then == null ? other$then != null : !this$then.equals(other$then)) return false;
      final java.lang.Object this$_else = this.get_else();
      final java.lang.Object other$_else = other.get_else();
      if (this$_else == null ? other$_else != null : !this$_else.equals(other$_else)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $cond = this.getCond();
      result = result * PRIME + ($cond == null ? 0 : $cond.hashCode());
      final java.lang.Object $then = this.getThen();
      result = result * PRIME + ($then == null ? 0 : $then.hashCode());
      final java.lang.Object $_else = this.get_else();
      result = result * PRIME + ($_else == null ? 0 : $_else.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.If(cond=" + this.getCond() + ", then=" + this.getThen() + ", _else=" + this.get_else() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public If withCond(final String cond) {
      return this.cond == cond ? this : new If(cond, this.then, this._else);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public If withThen(final B then) {
      return this.then == then ? this : new If(this.cond, then, this._else);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public If with_else(final B _else) {
      return this._else == _else ? this : new If(this.cond, this.then, _else);
    }
  }

  public static final class WhileTrue implements S {
    private final B b;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"b"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public WhileTrue(final B b) {
      this.b = b;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B getB() {
      return this.b;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.WhileTrue)) return false;
      final WhileTrue other = (WhileTrue)o;
      final java.lang.Object this$b = this.getB();
      final java.lang.Object other$b = other.getB();
      if (this$b == null ? other$b != null : !this$b.equals(other$b)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $b = this.getB();
      result = result * PRIME + ($b == null ? 0 : $b.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.WhileTrue(b=" + this.getB() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public WhileTrue withB(final B b) {
      return this.b == b ? this : new WhileTrue(b);
    }
  }

  public static final class Break implements S {
    private final String label;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"label"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Break(final String label) {
      this.label = label;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getLabel() {
      return this.label;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.Break)) return false;
      final Break other = (Break)o;
      final java.lang.Object this$label = this.getLabel();
      final java.lang.Object other$label = other.getLabel();
      if (this$label == null ? other$label != null : !this$label.equals(other$label)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $label = this.getLabel();
      result = result * PRIME + ($label == null ? 0 : $label.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.Break(label=" + this.getLabel() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Break withLabel(final String label) {
      return this.label == label ? this : new Break(label);
    }
  }

  public static final class Return implements S {
    private final String x;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"x"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Return(final String x) {
      this.x = x;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getX() {
      return this.x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.Return)) return false;
      final Return other = (Return)o;
      final java.lang.Object this$x = this.getX();
      final java.lang.Object other$x = other.getX();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $x = this.getX();
      result = result * PRIME + ($x == null ? 0 : $x.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.Return(x=" + this.getX() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Return withX(final String x) {
      return this.x == x ? this : new Return(x);
    }
  }

  public static final class Throw implements S {
    private final String cn;
    private final String x;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"cn", "x"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Throw(final String cn, final String x) {
      this.cn = cn;
      this.x = x;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCn() {
      return this.cn;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getX() {
      return this.x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.Throw)) return false;
      final Throw other = (Throw)o;
      final java.lang.Object this$cn = this.getCn();
      final java.lang.Object other$cn = other.getCn();
      if (this$cn == null ? other$cn != null : !this$cn.equals(other$cn)) return false;
      final java.lang.Object this$x = this.getX();
      final java.lang.Object other$x = other.getX();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $cn = this.getCn();
      result = result * PRIME + ($cn == null ? 0 : $cn.hashCode());
      final java.lang.Object $x = this.getX();
      result = result * PRIME + ($x == null ? 0 : $x.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.Throw(cn=" + this.getCn() + ", x=" + this.getX() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Throw withCn(final String cn) {
      return this.cn == cn ? this : new Throw(cn, this.x);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Throw withX(final String x) {
      return this.x == x ? this : new Throw(this.cn, x);
    }
  }

  public static final class Try implements S {
    private final B b;
    private final List<K> ks;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"b", "ks"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Try(final B b, final List<K> ks) {
      this.b = b;
      this.ks = ks;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B getB() {
      return this.b;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<K> getKs() {
      return this.ks;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.Try)) return false;
      final Try other = (Try)o;
      final java.lang.Object this$b = this.getB();
      final java.lang.Object other$b = other.getB();
      if (this$b == null ? other$b != null : !this$b.equals(other$b)) return false;
      final java.lang.Object this$ks = this.getKs();
      final java.lang.Object other$ks = other.getKs();
      if (this$ks == null ? other$ks != null : !this$ks.equals(other$ks)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $b = this.getB();
      result = result * PRIME + ($b == null ? 0 : $b.hashCode());
      final java.lang.Object $ks = this.getKs();
      result = result * PRIME + ($ks == null ? 0 : $ks.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.Try(b=" + this.getB() + ", ks=" + this.getKs() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Try withB(final B b) {
      return this.b == b ? this : new Try(b, this.ks);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Try withKs(final List<K> ks) {
      return this.ks == ks ? this : new Try(this.b, ks);
    }
  }

  public static final class K {
    private final String t;
    private final String x;
    private final B b;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"t", "x", "b"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public K(final String t, final String x, final B b) {
      this.t = t;
      this.x = x;
      this.b = b;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getT() {
      return this.t;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getX() {
      return this.x;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B getB() {
      return this.b;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.K)) return false;
      final K other = (K)o;
      final java.lang.Object this$t = this.getT();
      final java.lang.Object other$t = other.getT();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      final java.lang.Object this$x = this.getX();
      final java.lang.Object other$x = other.getX();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      final java.lang.Object this$b = this.getB();
      final java.lang.Object other$b = other.getB();
      if (this$b == null ? other$b != null : !this$b.equals(other$b)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $t = this.getT();
      result = result * PRIME + ($t == null ? 0 : $t.hashCode());
      final java.lang.Object $x = this.getX();
      result = result * PRIME + ($x == null ? 0 : $x.hashCode());
      final java.lang.Object $b = this.getB();
      result = result * PRIME + ($b == null ? 0 : $b.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.K(t=" + this.getT() + ", x=" + this.getX() + ", b=" + this.getB() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public K withT(final String t) {
      return this.t == t ? this : new K(t, this.x, this.b);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public K withX(final String x) {
      return this.x == x ? this : new K(this.t, x, this.b);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public K withB(final B b) {
      return this.b == b ? this : new K(this.t, this.x, b);
    }
  }

  public static final class MCall implements E {
    private final String cn;
    private final String mName;
    private final List<String> xs;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"cn", "mName", "xs"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public MCall(final String cn, final String mName, final List<String> xs) {
      this.cn = cn;
      this.mName = mName;
      this.xs = xs;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCn() {
      return this.cn;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getMName() {
      return this.mName;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<String> getXs() {
      return this.xs;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.MCall)) return false;
      final MCall other = (MCall)o;
      final java.lang.Object this$cn = this.getCn();
      final java.lang.Object other$cn = other.getCn();
      if (this$cn == null ? other$cn != null : !this$cn.equals(other$cn)) return false;
      final java.lang.Object this$mName = this.getMName();
      final java.lang.Object other$mName = other.getMName();
      if (this$mName == null ? other$mName != null : !this$mName.equals(other$mName)) return false;
      final java.lang.Object this$xs = this.getXs();
      final java.lang.Object other$xs = other.getXs();
      if (this$xs == null ? other$xs != null : !this$xs.equals(other$xs)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $cn = this.getCn();
      result = result * PRIME + ($cn == null ? 0 : $cn.hashCode());
      final java.lang.Object $mName = this.getMName();
      result = result * PRIME + ($mName == null ? 0 : $mName.hashCode());
      final java.lang.Object $xs = this.getXs();
      result = result * PRIME + ($xs == null ? 0 : $xs.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.MCall(cn=" + this.getCn() + ", mName=" + this.getMName() + ", xs=" + this.getXs() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public MCall withCn(final String cn) {
      return this.cn == cn ? this : new MCall(cn, this.mName, this.xs);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public MCall withMName(final String mName) {
      return this.mName == mName ? this : new MCall(this.cn, mName, this.xs);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public MCall withXs(final List<String> xs) {
      return this.xs == xs ? this : new MCall(this.cn, this.mName, xs);
    }
  }

  public static final class UseCall implements E {
    private final List<String> xs;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"xs"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public UseCall(final List<String> xs) {
      this.xs = xs;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<String> getXs() {
      return this.xs;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.UseCall)) return false;
      final UseCall other = (UseCall)o;
      final java.lang.Object this$xs = this.getXs();
      final java.lang.Object other$xs = other.getXs();
      if (this$xs == null ? other$xs != null : !this$xs.equals(other$xs)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $xs = this.getXs();
      result = result * PRIME + ($xs == null ? 0 : $xs.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.UseCall(xs=" + this.getXs() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public UseCall withXs(final List<String> xs) {
      return this.xs == xs ? this : new UseCall(xs);
    }
  }

  public static final class X implements E {
    private final String inner;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"inner"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public X(final String inner) {
      this.inner = inner;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getInner() {
      return this.inner;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.X)) return false;
      final X other = (X)o;
      final java.lang.Object this$inner = this.getInner();
      final java.lang.Object other$inner = other.getInner();
      if (this$inner == null ? other$inner != null : !this$inner.equals(other$inner)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $inner = this.getInner();
      result = result * PRIME + ($inner == null ? 0 : $inner.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.X(inner=" + this.getInner() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public X withInner(final String inner) {
      return this.inner == inner ? this : new X(inner);
    }
  }

  public static final class B implements S {
    private final String label;
    private final List<S> ss;

    public <V> V accept(JVisitor<V> v) {
      return v.visit(this);
    }

    @java.beans.ConstructorProperties({"label", "ss"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B(final String label, final List<S> ss) {
      this.label = label;
      this.ss = ss;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getLabel() {
      return this.label;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<S> getSs() {
      return this.ss;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof MiniJ.B)) return false;
      final B other = (B)o;
      final java.lang.Object this$label = this.getLabel();
      final java.lang.Object other$label = other.getLabel();
      if (this$label == null ? other$label != null : !this$label.equals(other$label)) return false;
      final java.lang.Object this$ss = this.getSs();
      final java.lang.Object other$ss = other.getSs();
      if (this$ss == null ? other$ss != null : !this$ss.equals(other$ss)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $label = this.getLabel();
      result = result * PRIME + ($label == null ? 0 : $label.hashCode());
      final java.lang.Object $ss = this.getSs();
      result = result * PRIME + ($ss == null ? 0 : $ss.hashCode());
      return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
      return "MiniJ.B(label=" + this.getLabel() + ", ss=" + this.getSs() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B withLabel(final String label) {
      return this.label == label ? this : new B(label, this.ss);
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public B withSs(final List<S> ss) {
      return this.ss == ss ? this : new B(this.label, ss);
    }
  }
}