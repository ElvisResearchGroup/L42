G : x -> T

(Dz; G |- e : T) // check that e has type T, where e is inside G(this) (or the main expression, if this not in dom(G)), G is the usual Gamma, and Dz the class table
=====================================

	----------------
	Dz; G |- x : G(x)

	
	Dz; G |- e0 : T0
	...
	Dz; G |- en : Tn
	-----------------------------  Dz(T0)(m) = T m(T1 x1 ... Tn xn) _
	Dz; G |- e0.m(e1 ... en) : T


	Dz; G |- e1 : T0
	...
	Dz; G |- en : Tn                  if this in dom(G) then Dz.accessible(G(this), T)
	--------------------------------  Dz(T)(m) = static T' m(T1 x1 ... Tn xn) _
	Dz; G |- T.m(e1 ... en) : T'


	Dz; G |- e : T'              if this in dom(G) then e = this
	---------------------------- Dz(T) = {_, T' x, _; _; _}
	Dz; G |- e.x : T


	Dz; G |- e1 : T1
	....
	Dz; G |- e1 : Tn                if this in dom(G) then T = G(this)
	------------------------------- Dz(T) = {T1 x1, ..., Tn xn, _; _; _}
	Dz; G |- new T(e1 ... en): T


	Dz; G |- e : T
	---------------------------- T' in Dz.superTypes(T)
	Dz; G |- e : T'
