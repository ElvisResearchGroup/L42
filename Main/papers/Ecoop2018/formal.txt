Syntax
D::=TD|CD
TE::=t:E Trait Decl Expr
CE::=C:E Class Decl
TD::=t:L
CD::=C:L
E::= L| t| E+E | E[rename T.m1->m2]|E[rename T1->T2]|E[redirect T1->T2]
L::= {interface? implements Ts Ms}//all L are like LC in 42
T::=C|C.T // .T is a shortcut for This.T
M::= static? method T m(T1 x1..Tn xn) e? | CD
e::= x| e.m(es) | T.m(es)

Notations: we use the . to extract sub parts of the tree, as in the 42 documents, to explain

      D.E -->^+_CDs L  CDs|-CD1:OK .. CDs|-CDn:OK       CDs=CD1..CDn
(top)-----------------------------------------------    D.E not of form L
      CD1..CDn CDs' D Ds -> CDs CDs' D[with E=L] Ds


    ---------------------
      t -->_CDs CDs(t)


      E0-->_CDsE1
    ----------------
    E0+E2  -->_CDs E1+E2


        E0-->_CDsE1
    ----------------
    L+E0  -->_CDs L+E1
      

    -----------------    
      L1+L2  -->_CDs L1+L2

   
   Define L1+L2, Ms+Ms,  M+M
   L1+L2  =  L3
   L1={ interface? implements Ts1 Ms1 Ms0}
   L2={ interface? implements Ts2 Ms2 Ms0'}
   L3={ interface? implements Ts1,Ts2 Ms1,Ms2 (Ms0+Ms0')}
   dom(Ms1) disj dom(Ms2)
   dom(Ms0) = dom(Ms0')
    
   M1..Mn+M'1..M'n  =  M1+M'1..Mn+M'n
   
   C=L1+C=L2  =  C=L3  if L1+L2
   
   M1+M2  =  M2+M1
   
   static? method T0 m(T1 x1..Tn xn) + static? method T0 m(T1 x1..Tn xn) e?
     =  static? method T0 m(T1 x1..Tn xn) e?

     
  C;CDs,C=L |- L[This=C] :OK
------------------------------ coherent(L)
  CDs|-C=L : OK

  
    This;CDs,This=L |- L :OK
------------------------------
    CDs|-t=L : OK

    
  forall i in 1..n CDs(Ti).interface?=interface
  forall i in 1..k T;CDs|-Mi:Ok
-------------------------------------------
  T;CDs|-{interface? implements T1..Tn M1..Mk} :Ok


  T.C; CDs|-L :Ok
 ------------------
  T;CDs|-C=L : Ok 

    
  if e?=e then CDs; this:T,x1:T1 .. xn:Tn|-e:T     CDs(C).Ts=T1..Tn
------------------------------------------------   forall i, if m in CDs(Ti) then
   T;CDs|-static? T0 m(T1 x1..Tn xn) e?              static? T0 m(T1 x1..Tn xn) in CDs(Ti)
  
   
   CDs;G|-e:T1
   CDs|-T1<=T2
--------------------
   CDs;G|-e:T2

   
--------------------
   CDs;G|-x:G(x)

   
  CDs;G|-e1:T1 .. CDs;G|-en:Tn
---------------------------------    static T m(T1 x1..Tn xn) _ in CDs(T0)
  CDs;G|-T0.m(e1..en):T


    CDs;G|-e0:T0 .. CDs;G|-en:Tn
---------------------------------    static T m(T1 x1..Tn xn) _ in CDs(T0)
  CDs;G|-e0.m(e1..en):T
