In this file we define the typing constrants for some of the plugins.

_______
#define typePlugin(p;MWT)    typePlugin(p;MWT;balCurly)
* typePlugin(p;MWT)=typePlugin(p;MWT;MWT.nativeUrl)

* typePlugin(p;MWT;balCurly)
    balCurly in {cacheLazy,cacheEager} 
    MWT.mdf in {imm,class}
    MWT.T.mdf in {imm,class}
    MWT.pars=empty
    //Note: we allow exceptions
    MWT.s not of form #$_(_)//is sufficient since bridges must be mut/lent

* typePlugin(p;MWT;cacheNow)
    MHs={MWT.MH| MWT in p(This0).MWTs, MWT.e?=empty}
    MWT.mdf=read
    MWT.T.mdf in {imm,class}
    MWT.pars=empty
    //Note: we allow exceptions. I can not find a problem for it on 5/7/2020. Note, this is not a capsule mutator but an invariant
    MWT.s not of form #$_(_)//is sufficient since bridges must be mut/lent
    forall ctx such that MWT.e=ctx[this],exists ctx' such that
      ctx=ctx'[[].m::0()] and immOrCapsule(MHs,m::0)
    clearCacheGood(p(This0),MHs)
//Note:we can not just use a read invariant method with no constraints, because we could have
//this.beer().see(this); return !this.isEmpty() and now beer see a possibly broken this. 
    
_______
#define immOrCapsule(MHs,m)    clearCacheGood(L,MHs)
* immOrCapsule(MHs,#sx::0)
    fieldTs(MHs, x, mut).mdfs={imm} //Note: here using mut or read is the same
* immOrCapsule(p,#sx::0)
    fieldTs(MHs, x, mut).mdfs={capsule}

* clearCacheGood(L,MHs)  
    L.Info is closed state, with zero
    forall MWT in L.MWTs:
      if isCapsuleMutator(MWT,MHs) then validCapsuleMutator(MWT,MHs)
_______
#define isCapsuleMutator(MWT,MHs)    validCapsuleMutator(MWT,MHs)
* isCapsuleMutator(MWT,MHs)
    MWT.mdf in {mut,lent}
    this.#sx::0() inside MWT.e
    fieldTs(MHs,x,mut).mdfs={capsule}
    either mdf method mut P #sx::0() in MHs
      or  mdf method lent P #sx::0() in MHs

* validCapsuleMutator(MWT,MHs)
    MWT.exceptions=empty
    MWT.T.mdf notin {mut,lent,fwd mut}
    MWT.pars.mdfs notin {read,lent,mut}
    MWT.e=ctx[this]
    not this inside ctx[void]//only one occurence of this
    //NOTE: if the capsule exposers was to return lent 
    //then it would be MWT.T.mdf !=lent, but
    //now capsule exposers only return mut.