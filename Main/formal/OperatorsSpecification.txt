Redirect:
  redirect starts from start, dest, call redirectOk (defined under)
  remove the set of internal paths
  redirect the internal path usage on the external ones.
  
  A= ambiguities, Set of (int Path-> (set ext Path)) functional
  V= verified redirects Set of int Path->ext Path functional
    so that for all v of them redirectOk(p,v, cb,A,Exc)  is well defined for some R,A,Exc
 Exc=Set of ( (Set of Path )-> (Set of extPath))
    then, starting from r1,  A={r1}, V=empty, Exc=empty
  take an element r from (unambiguos(A) less V),    
    if redirectOk(p,r,cb,A,Exc), then 
    V+=r, //this can throw amibuity error
    A+=V //this can throw ambiguty error //plus equal do the intersection of codomains
    A-=V //this remove all the dom(V) from dom(A), is safe since A+=V worked before
  When unambiguos(A)  is empty,  
    check that for all ps->ps' in Exc, V(ps) superset of ps'
    check that A is empty
   and return V
   
   define redirectOk(p,intPath->extPath,cb,R;A;Exc)
   intCb=cb(intPath)
   extCb=p,cb(extPath)
   if there is any implementation in intCb is an error src unfit
   if there is any private in intCb is error src unfit
   with ps, ps' is implemented interfaces of intCb,extCb
      ps=intPs,extPs
      extPs subset of ps' or srcUnfitError?
      A+=intPs[from intPath]->ps'[from extPath]//if intPath in A already mapped in A, do the intersection of the ambiguities. Error if the empty set is produced.
      //should give ambiguity error is interface in one set is empty on h other? redirect to Any?
   for all the nested c of intCb,
      A+= intPaht::c->extPath::c
   for all the mwt in intCb, check that there is a corresponding mwt' in extCb,
   if not error srcUnfit unextped member
   then redirectOkMwt(p,mwt[from intPath],mwt'.withNoBody()[from extPath],A,Exc)
   
   redirectOkMwt(p, T0 (T1..Tn) ps,T0' (T1'..Tn')ps',A,Exc)
     redirectOkT(p,Ti,T'i,A,Exc)
     Exc+=ps->ps'
     A+=ps->ps'//if intPath in A already mapped in A, do the intersection of the ambiguities. Error if the empty set is produced.
     
  
  redirectOkT(p, T,T,A,Exc)  is ok //same exact T, method clash if the two T are external but different.
  redirectOkT(p,.. intPath .. ,..extPath..,A,Exc)  A+=intPaht->extPath//two T different only for the path.
  
 