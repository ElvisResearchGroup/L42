{reuse L42.is/AdamTowel02


NotStringable:{(N that)}


Person:Data.AddToS<<{(S name, var N age)
  implements Concept.Classable
  method is(subtype) {  with subtype (on class This return Bool.true()) return Bool.false()}
  method classAny() This
  method readableName()GetMyName(This)
  }
//Person:Data.AddToS<<{(S name, var N age)}
Person2:Data.AddToS<<{(S name, NotStringable age)}
Person3:Data.AddToS<<{(Concept.ToS name, Any age)}

PP:Data.AddToS<<{(mut Person p)}
PP2:Data.AddToS<<{(mut Any p)}

Main:{
   p=Person(name:S"Bob",age:10N)
  Debug(p)
  p2=Person2(name:S"Bob",age:NotStringable(10N))
  Debug(p2)
  p3=Person3(name:S"Bob",age:NotStringable(10N))
  Debug(p3)
  pp=PP(p:p)
  Debug(pp)
  pp2=PP2(p:p)
  Debug(pp2)
  return ExitCode.normal()
  }
}
