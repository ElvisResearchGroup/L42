{reuse L42.is/AdamTowel02

Point: Data << {
  ( Num x
    Num y
    )
  method
  Point add(Num x)
    Point(x: x + this.x(), y: this.y())
  method
  Point add(Num y)
    this.with(y: y + this.y())
  }

  Nums: Collections.vector(of: Num) //declaration for vectors of nums
  Points: Collections.vector(of: Point) //same for points

Animal: Data << {
  var Point location
  capsule Points path
  mut method
  Void move() ( 
    this.location(this.path().left())
    this.#path().removeLeft()
    )
  }
  
  
Main:{// do not need to be called main

  xs= Nums[ 10Num; 20Num; 30Num ]//10Num is a shortcut for Num"10"
  ys= Nums[ 1Num; 2Num; 3Num ]
  points= Points[with x in xs.vals(), y in ys.vals() (
    use[Point(x: x, y: y)]
    )]

  Debug(points)

  zero= Point(x: 0Num, y: 0Num)
  capsule Points ps= Points[ Point(x: 12Num, y: 20Num);Point(x: 1Num, y: 2Num)]
  dog1= Animal(location: zero, path: ps)
  dog2= Animal(location: zero, path: Points[ Point(x: 12Num, y: 20Num);Point(x: 1Num, y: 2Num)])
  dog1.move()
  dog2.move()

  Debug(S""[dog1]"; "[dog2]"") 
  return ExitCode.normal()
  }
}