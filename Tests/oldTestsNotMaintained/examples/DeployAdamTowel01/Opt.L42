{
  class method Library (class Any that)
    SafeOperators.redirect({#new(TOpt that)
      method
      T get()
      exception Guard.Operation {
        return this.#get()
        catch error Guard.Operation err
          exception err
        }
      T:{}
      TOpt:{interface method T get() }
      TEmpty:{() implements TOpt method get()
        error Guard.Operation
          "TEmpty.get() Value not present in Optional" }
      TOf:{(T that) implements TOpt method get() this.that()}
      method T #get() this.that().get()
      method Bool isPresent(){
        with cell=this.that() (on TOf return Bool.true())
        return Bool.false()
        }
      class method This () This.#new(TEmpty())
      class method This (T that) This.#new(TOf(that))
      },
      src:Path"T",dest:that)
  }