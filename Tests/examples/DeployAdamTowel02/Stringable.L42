{
class method Library stringableTrait(){
  (S inner) implements Concept.ToS, Concept.Named, Concept
  class method This (Concept.ToS that)
    This(inner:that.toS())

  method S ~() this.inner()

  class method S myName()
  method toS()  This.myName()[]"["[this.inner()]"]"
  method Library binaryRepr() this.inner().binaryRepr()
  method Bool != (This that) !(this==that)
  method Bool == (This that) this.inner()==that.inner()
  method Bool equals(Any that) {
    with that (on This return this==that)
    return Bool.false()
    }
  }

class method
Library <<(Library that)
  SafeOperatorsAccess.compose(left:that, right:This.stringableTrait())
}
