{

class method Library opt() {
  Opt:{#new(TOpt that)
      TOpt:{interface method This2 get() }
      TEmpty:{() implements TOpt method get() error Guard.Operation"TEmpty.get() Value not present in Optional" }
      TOf:{(This2 that) implements TOpt method get() this.that()}
      method T ~() this.that().get()
      method Bool isPresent() {
        unused=~this
        return Bool.true()
        catch error Any return Bool.false()
        }
      class method This () This.#new(TEmpty())
      class method This (T that) This.#new(TOf(that))
      }
  Iterator:{interface 
    mut method
    Void #next() exception Void
    read method
    Void #checkEnd()
    read method
    This1 #inner()
    read method
    Void #close()
  }
}