{mut (mut This1 that, var N min, N ok, OptMax max, OptFill fill)
    mut method
    Void inner(Kind.elem() that) this.#that()(this.min(), val:that)

    'all here is the same?
    mut method
    Void #next() exception Void {
      this.min(this.min()+1N)
      if this.fill().isPresent() (
        if !this.max().isPresent() (return void)
        if this.min()>= ~this.max() (exception void)
        return void
        )
      if this.max().isPresent() (
          if this.min()>=~this.max() (exception void)
          )
      if this.min()>=this.that().size() (exception void)
      return void
      }
    
    read method
    Void #checkEnd()
      if this.min()<this.ok() ( error S"Unexpected termination of iteration, reached "[this.min()]" instead of "[this.ok()]"" )
    
    read method
    Kind.elem() #inner() {
      if !this.fill().isPresent() (return this.that()(this.min()))
      if this.min()<this.that().size() (return this.that()(this.min()))
      return ~this.fill()
      }
    read method
    Void #close() void
    }
  