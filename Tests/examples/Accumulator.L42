{_new()
type method
Library( type Any itType, type Any elemType, Library better)
  Use[better]< (Adapt[Name"IT" into:Name(itType);Name"ET" into:Name(elemType)]<{_new()
    IT:{
      mut method
      Void #next() exception Void 
      
      read method
      Void #checkEnd()

      read method
      ET #inner()

      read method
      Void #close()
      }
    ET:{}
    type method
    ET (ET a, ET b)
    type method ET (mut IT that){
      that.#next()
      catch exception ( on Void error S"Max undefined on empty lists")
      var result=that.#inner()
      with current in that ( result:=Outer0(a:result,b:current) )
      return result
      }
    })
}