{
  type method Library (type Any that)
    SafeOperators.redirect({#new(TOpt that)
      T:{}
      TOpt:{interface method T get() }
      TEmpty:{()<:TOpt method get()
        error Guard.Operation
          "TEmpty.get() Value not present in Optional" }
      TOf:{(T that)<:TOpt method get() this.that()}
      method T ~() this.that().get()
      method Bool isPresent(){
        aux=~this
        return Bool.true()
        catch error Any return Bool.false()
        }
      type method This () This.#new(TEmpty())
      type method This (T that) This.#new(TOf(that))
      },
      src:Path"T",dest:that)
  }