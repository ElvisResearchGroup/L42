{ type method
  Library (Library left,Library right) exception Report::ClassClash, Report::MethodClash {
    return SafeOperators.compose(left:left,right:right)
    catch error err (on Library (
      record=Introspection::Record(lib:err) 'Introspection(lib:err).record()
      with x=record"Kind" (
        case x== S"ClassClash"  (exception Report::ClassClash(record:record))
        case x== S"MethodClash"  (exception Report::MethodClash(record:record))
        default error err)))
    }
  }