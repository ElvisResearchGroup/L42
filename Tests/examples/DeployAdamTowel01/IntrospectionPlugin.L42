{'@plugin
  'L42.is/connected/withItself
  
  
  type method
  Library sumLib(Library l1,Library l2)
    using Outer0 check sumLib(l1:l1,l2:l2) error {sumLib()}
    
  type method
  Library adaptLib(Library l1 Library l2)
    using Outer0 check adaptLib(l1:l1,l2:l2) error {adaptLib()}
    
  type method
  Library sumComment(Library that,Library comment,Library adapter)
    using Outer0 check sumComment(that, comment:comment, adapter:adapter) error{sumComment()}
  type method
  Library purgePrivates(Library that)
    using Outer0 check purgePrivates(that) error{purgePrivates()}
  type method
  Library nameToAdapter(Library that)
    using Outer0 check nameToAdapter(that) error {nameToAdapter()}
    
  type method
  Library typeNameToAdapter(type Any that)
    using Outer0 check typeNameToAdapter(that) error {typeNameToAdapter()}
    
  type method
  Library getFreshName(Library that)
    using Outer0 check getFreshName(that) error{getFreshName()}
  
  type method Library adapter(type Any that, S name) {
    name1=IntrospectionPlugin.typeNameToAdapter(that)
    name2=IntrospectionPlugin.nameToAdapter(name.binaryRepr())
    return IntrospectionPlugin.adaptLib(l1:name1,l2:name2)
    }
  type method Library adapter(S nameDest, S nameSrc) {
    name1=IntrospectionPlugin.nameToAdapter(nameDest.binaryRepr())
    name2=IntrospectionPlugin.nameToAdapter(nameSrc.binaryRepr())
    return IntrospectionPlugin.adaptLib(l1:name1,l2:name2)
    }
  'discover what can be removed now. Basically only introspection stuff should survive
  }
  