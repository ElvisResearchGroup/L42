{interface
  method
  NestedClass introspectReport(NestedClass^ root,Path path) exception TargetUnavailable
  method
  Member introspectReportMember(NestedClass^ root,Path path, N memberN) exception TargetUnavailable,Void
  method
  Type introspectReportType(NestedClass^ root,Path path, N memberN, N typeN) exception TargetUnavailable,Void
  method
  S introspectDocAsString(Path path) exception TargetUnavailable
  method
  S introspectDocAsString(Path path, N annotationN) exception TargetUnavailable,Void
  method
  type Any introspectDocPath(Path path, N annotationN) exception TargetUnavailable,Void

  Lib:{(Library lib)<:Outer1
    method 'TODO: why is not throwing the exception?
    introspectReport(root, path)
      NestedClass(root:root,path:path,mirror:this,report:Record(Lib(lib:
        using SafeOperators
          check introspectLibraryReport(this.lib(), path:path.binaryRepr())
          error SafeOperators.mkError(S"introspectReport"))))

    method
    introspectReportMember(root,path,memberN)
      Record.dispatch(root:root,path:path,mirror:this,memberN:memberN,report:
        using SafeOperators
          check introspectLibraryReportMember(this.lib(), path:path.binaryRepr(),memberN:memberN.binaryRepr())
          exception void)

    method
    introspectReportType(root,path,memberN,typeN)
      Type(root:root,path:path,memberN:memberN,typeN:typeN,report: Record(Lib(lib:
        using SafeOperators
          check introspectLibraryReportType(this.lib()
            path:path.binaryRepr()
            memberN:memberN.binaryRepr()
            typeN:typeN.binaryRepr())
          exception void)))

    method
    introspectDocAsString(path,annotationN)
      S.#stringParser(using SafeOperators
        check introspectLibraryDocAsString(this.lib(), path:path.binaryRepr(),annotationN:(1N+annotationN).binaryRepr())
        exception void)

    method
    introspectDocAsString(path)
      S.#stringParser(using SafeOperators
        check introspectLibraryDocAsString(this.lib(), path:path.binaryRepr(),annotationN:0N.binaryRepr())
        error SafeOperators.mkError(S"introspectLibraryDocAsString"))

    method
    introspectDocPath(path,annotationN)
      using SafeOperators
        check introspectLibraryDocPath(this.lib(), path:path.binaryRepr(),annotationN:annotationN.binaryRepr())
        error SafeOperators.mkError(S"introspectLibraryDocPath")

    }


Class:{(type Any lib)<:Outer1
  method
  introspectReport(root,path) error S"NotImplementedYet"
  method
  introspectReportMember(root, path, memberN) error S"NotImplementedYet"
  method
  introspectReportType(root,path, memberN, typeN) error S"NotImplementedYet"
  method
  introspectDocAsString(path) error S"NotImplementedYet"
  method
  introspectDocAsString(path,annotationN) error S"NotImplementedYet"
  method
  introspectDocPath(path,annotationN) error S"NotImplementedYet"
  }
  }