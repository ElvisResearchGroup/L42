constructor: Introspection(Library lib)  and Introspection(type Any cls) 

1  method Report::Path query(Path path)
2  method Report::Member query(Path path, N memberNum)
3  method Report::Type queryParameterType(Path path, N memberNum, N parameterNum)
4  method Report::Type query(Path path, N memberNum, N exceptionNum)
5  method Report::Type queryReturnType(Path path, N memberNum)

1  method Report::Method query(Path path, Selector selector)
2  method Report::Type queryParameterType(Path path, Selector selector, N parameterName)
3  method Report::Type query(Path path, Selector selector, N exceptionNum)
4  method Report::Type Path queryReturnType(Path path, Selector selector)

1  method Report::Members queryMembers(Path path)
2  method Report::Methods queryMethods(Path path)
3  method Report::Paths Path queryNestedClasses(Path path)
4  method Report::Types Path queryExceptions(Path path, N memberNum)//or selector?
5  method Report::Types Path queryParameterTypes(Path path, N memberNum)//or selector?

16  method Report::Method Path queryConstructor(Path path)


Report:{

  Path:{(
    S classKind
    N memberNumber
    N implementedNumber
    S allAsString
    )}

  Member:{interface}

  Method:{(
    Doc doc
    S thisMdf
    Selector key
    N exceptionNumber
    N parameterNumber
    S memberKind
    S allAsString
    )<:Member}

  NestedClass:{(
    Doc doc
    Path key
    S allAsString
    )<:Member}

  Type:{(
    S typeKind '{InternalNormal,ExternalNormal,InternalAlias,ExternalAlias, InternalAliasUnresolvable,ExternalAliasUnresolvable,InternalExternalAlias}
    S mdf
    S resolvedMdf ' "" on *Normal
    Path iPath 'error on External*
    type Any ePath 'error on Internal*
    Path iResolvedPath 'error on ExternalAlias, InternalExternalAlias
    type Any eResolvedPath' error on InternalAlias
    Bool partial
    Bool resolvedPartial 'false on *Normal and *Unresolvable
    S suffix' "" on *Normal
    Doc doc
    S allAsString
    )}
  }




2*  Selector s s.name(N), s.names()

iterare sui campi -> meth name+ names(), and parameterTypes

Plugin: isValidPath, isValidSelector