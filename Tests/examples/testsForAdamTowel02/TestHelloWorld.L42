{reuse L42.is/AdamTowel02

NL:Use[Collections.vector(ofEq:N)]<<{ implements Concept.ToS
  method toS()
    S"["[with e in this.vals() (
      use[e separedBy:S";"]
      )]"]"
  }

UndefinedOnEmptyList: Message.$<<{ implements Guard}
$:{    
  class method N max(NL that) (
    if that.isEmpty() (error UndefinedOnEmptyList"on $.max")
    var N maxCandidate=that.left()
    with elem in that.vals() (
      if maxCandidate<elem (maxCandidate:=elem)
      )
    maxCandidate
    )
  }

Main:{
  myList=NL[1N;2N;3N]
  max=$.max(myList)
  Debug(S"the max for "[myList]" is "[max]"!")
  return ExitCode.normal()
  }

}