design

mut list imm/mut/...

read top
mut #top
top(that)

read bottom
mut #bottom
bottom(that)

val(that)
#val(that)
(that val)

size
isEmpty

mut remove(index)
mut removeTop
mut removeBottom
mut removeAll(elem:)
mut removeFirst
mut removeLast

pop(index)
popTop  need imm constr
popBottom   need imm constr
popAll(elem:)
popFirst
popLast


plus functionalList with
implements Flist? but with no generics?
read top
mut #top
top(that)

read bottom
mut #bottom
bottom(that)

val(that)
#val(that)
(that val)

size
isEmpty

pop(index)
popTop  need imm constr
popBottom   need imm constr
popAll(elem:)
popFirst
popLast


iteratorVals vals()
iterator?Vals #vals()
iteratorVars   vars()