{reuse L42.is/AdamTowel01

SV:Collections.vector(of:S)
SV2:Collections.vector(of:S)

Main:{
  // Builder
  mut SV sv=SV.#seqBuilder()
  sv.#add(S"a")
  sv.#add(S"b")
  Debug.test(S"Hello-"[with si in sv.vals() ( use[si sep:S"@@"])]""
    expected:S"Hello-a@@b")

  // Mutating list comprehensions.  NB the mutation is after the use[]
  Debug.test(S"Hello-"[with var si in sv.#vals() ( use[si sep:S"@@"]   si:=si++S"#")]""
    expected:S"Hello-a@@b")
  Debug.test(S"Hello-"[with var si in sv.#vals() ( use[si sep:S"@@"]   si:=si++S"%")]""
    expected:S"Hello-a#@@b#")
  
  Debug.test(sv.val(0Size) expected:S"a#%")
  Debug.test(sv.val(1Size) expected:S"b#%")
  
  // withoutAll
  var SV2 s2=SV2[S"c";S"d"]
  s2:=s2.withoutAll(val:S"c")
  Debug.test(S"Hello-"[with si in s2.vals() ( use[si sep:S"@@"])]""
    expected:S"Hello-d")
  
  return ExitCode.normal()
  }
}