{reuse L42.is/AdamTowel01
A:Refactor2.JavaImport<><{//@plugin  toFix @pluginPart testAux.TestShortPrograms$A
  class method Void #pluginUnresponsive(Library binaryRepr) void
  class method This()
  method This m()
  class method This k()
  method Void foo(This bar) exception This
  }
Main:(
  Debug(S"Hi Start")
  A a= A()
  Debug(S"Hi constructor")
  A a0=a.m()
  Debug(S"Hi method m")
  A a1=A.k()
  Debug(S"Hi method k static")
  a.foo(bar:a0)
  Debug(S"Hi wops Fail")
  catch exception A x ( 
    Debug(S"Hi catch!") 
    ExitCode.normal()
    )
  Debug(S"Fail")
  {/*fail*/}
  )

Main2:(
  unused=Refactor2.JavaImport<><{
    A2:{//@plugin  toFix @pluginPart testAux.TestShortPrograms$A
      class method Void #pluginUnresponsive(Library binaryRepr) void
      method B m()
      }
    B:{/*no annotation for plugin*/}
    }
  catch exception Refactor2.ClassUnfit x (
    Debug(S"captured exception, message is:"[S.nl();x]"")
    ExitCode.normal()
    )
  Debug(S"Fail")
  {/*fail*/}
  )
Compose:Refactor2.JavaImport<><{/*
  @plugin  toFix 
  @pluginPart is.L42.connected.withSafeOperators.refactor.Compose
  */
  class method Void #pluginUnresponsive(Library binaryRepr) void

  class method Library compose(Library left,Library right)
  }

Main3:(
  lRes=Compose.compose(left:{},right:{})
  ExitCode.normal())
}