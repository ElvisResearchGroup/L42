{

//------------------------------
//Infrastructure
//------------------------------
  Fail:{interface implements Concept.ToS, Concept.Classable
    //not implement Guard, not a message, no cause/more then a msg?
    read method S text()  
    }
  ErrorW:{
    class method Library trait(){
      //@plugin is.L42.connected.withSafeOperators
      implements Fail
      
      method toS() This.readableName()[
        S": ";S.nl();this.text().as42MultilineString()
        ]""
      
      refine read method class This class() This
      
      method readableName() GetMyName(This)
      
      method is(subtype) {
        with subtype (on class This return Bool.true())
        return Bool.false()
        }
      class method
      Library #pluginUnresponsive(Library binaryRepr)
        binaryRepr  
      }
    class method Library <><(Library that)
      UnsafeRefactor.Compose.compose(
        left:that,
        right:This.trait()
      )
    }


//------------------------------
//Kinds of Fails
//------------------------------

  UnresolvedOverloading:ErrorW<><{
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading
    }
  ClassUnfit:ErrorW<><{
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit
    }
  MethodUnfit:ErrorW<><{
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit
    } 

  ClassClash:ErrorW<><{
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash
    method Location.Lib left()
    method Location.Lib right()
    }
  MethodClash:ErrorW<><{
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash
    method Location.Method left()
    method Location.Method right()
    } 

//errors ready for other operations
//IncoherentMapping
//PathNotFound
//PrivacyCoupuled
//SelectorNotFound
SubtleSubtypeViolation:ErrorW<><{
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SubtleSubtypeViolation
    } 

//------------------------------
//JavaImport
//------------------------------

  JavaImport:{
    //@plugin is.L42.connected.withSafeOperators
    //@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator
    class method
    Library #pluginUnresponsive(Library binaryRepr)
      binaryRepr  

    class method
    Library <><(Library that)
    exception UnresolvedOverloading, ClassUnfit, MethodUnfit
      This.main(that)

    class method
    Library main(Library that)
    exception UnresolvedOverloading, ClassUnfit, MethodUnfit

    }


//------------------------------
//Compose/Use
//------------------------------
Compose:{
  //@plugin  toFix 
  //@pluginPart is.L42.connected.withSafeOperators.refactor.Compose
  
  class method
  Void #pluginUnresponsive(Library binaryRepr) 
    error X"Compose(that,and)"

  class method
  Library compose(Library left,Library right)
  exception MethodClash,ClassClash,SubtleSubtypeViolation
  }
class method
Library compose(Library that,Library and)
exception MethodClash,ClassClash,SubtleSubtypeViolation
  Compose.compose(left:that,right:and)

  }