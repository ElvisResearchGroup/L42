{  //user will need typecase to discover precise type, location() not refined
  //@plugin  toFix 
  //@pluginPart is.L42.connected.withSafeOperators.location.Doc
 implements This1.This$ 

  method location(){
    libRes=(use This check location()
      error This.#pluginUnresponsive(binaryRepr:{}))
    use Lib check instanceof(_this:libRes)
      return Lib.#from(binaryRepr:libRes)
    use Method check instanceof(_this:libRes)
      return Method.#from(binaryRepr:libRes)
    use Type.Return check instanceof(_this:libRes)
      return Type.Return.#from(binaryRepr:libRes)
    use Type.Parameter check instanceof(_this:libRes)
      return Type.Parameter.#from(binaryRepr:libRes)
    use Type.Exception check instanceof(_this:libRes)
      return Type.Exception.#from(binaryRepr:libRes)
    use Type.Implemented check instanceof(_this:libRes)
      return Type.Implemented.#from(binaryRepr:libRes)
    use This check instanceof(_this:libRes)
      return This.#from(binaryRepr:libRes)
    error libRes
    }


  This$:UnsafeRefactor.MiniData.thisLib()
  Annotation:UnsafeRefactor.MiniData<><{
    //@plugin  toFix 
    //@pluginPart is.L42.connected.withSafeOperators.location.Doc$Annotation
    //@todo:decomment later:Type.RefTo key
    S text
    class method Library #pluginUnresponsive(Library binaryRepr) binaryRepr
    This$:UnsafeRefactor.MiniData.thisLib()
    List:Collections.vector(of:This$)
    }
  method Size annotationSize()
  method Annotation annotation(Size that)   
  method
  Annotation.List annotations()
    Annotation.List[with i in 0Size.vals(upTo:this.annotationSize())  (use[this.annotation(i)])]  
  }