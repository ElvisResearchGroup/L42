{
Alu:{//@plugin
  //L42.is/connected/withAlu
  }
FileSystem:{//@plugin
  //L42.is/connected/withFileSystem
  }
ExitCode:...
Url:{
  Library _binaryRepr
  class method
  This(Library _binaryRepr)

  method
  Library #binaryRepr()this._binaryRepr()

  class method
  This #from(Library binaryRepr)
    This(_binaryRepr:binaryRepr)
  SBuilder:...

  class method
  This #from(SBuilder builder)
    This.#from(binaryRepr:builder.#binaryRepr())

  class method
  mut SBuilder #builder()
    SBuilder.empty()
  }
DeployTowel:...
ResourceDeploy:{class method Library (){
  ExitCode:...// TODO:need to add a check that deployed code is self consistent/self contained.
  //otherwise removing exitCode give errors only on the user side
  DeployTowel:...
  }}
AdamTowel01:{class method Library () ...}
Task0:DeployTowel.#$(fileName:Url"localhost/DeployTowel.L42")
  .deployWithError(ResourceDeploy())
Task1: DeployTowel.#$(fileName:Url"localhost/AdamTowel01.L42")
  .deployWithError(AdamTowel01())

Task2:(
  use Alu
    check stringDebug({//@stringU
     //[PASS] As we have not stopped on error, the towel is probably deployed.
     })
     void
  ExitCode.normal()
  )
}