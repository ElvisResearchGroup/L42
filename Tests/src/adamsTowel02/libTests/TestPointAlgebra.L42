{reuse L42.is/AdamTowel02
//header not counted for line number, also not counted in the other approaches
$p: Resource <>< {//4
  method Num x()
  method Num y()
  class method This of(Num x,Num y)
  }

$pointSum: Resource <>< Use[$p()] <>< {//3*4
  method This sum(This that)
    This.of(x: this.x()+that.x(), y: this.y()+that.y())
  }

$pointSub: Resource <>< Use[$p()] <>< {
  method This sub(This that)
    This.of(x: this.x()-that.x(), y: this.y()-that.y())
  }

$pointMul: Resource <>< Use[$p()] <>< {
  method This mul(This that)
    This.of(x: this.x()*that.x(), y: this.y()*that.y())
  }

$pointDiv: Resource <>< Use[$p()] <>< {
  method This div(This that)
    This.of(x: this.x()/that.x(), y: this.y()/that.y())
  }

Point: Use[$p()] <>< {}//1*16

PointSum: Use[$pointSum()] <>< {}

PointSub: Use[$pointSub()] <>< {}

PointMul: Use[$pointMul()] <>< {}

PointDiv: Use[$pointDiv()] <>< {}

PointSumSub: Use[$pointSum();$pointSub()] <>< {}

PointSumMul: Use[$pointSum();$pointMul()] <>< {}

PointSumDiv: Use[$pointSum();$pointDiv()] <>< {}

PointSubMul: Use[$pointSub();$pointMul()] <>< {}

PointSubDiv: Use[$pointSub();$pointDiv()] <>< {}

PointMulDiv: Use[$pointMul();$pointDiv()] <>< {}

PointSumSubDiv: Use[$pointSum();$pointSub();$pointDiv()] <>< {}

PointSumSubMul: Use[$pointSum();$pointSub();$pointMul()] <>< {}

PointSumMulDiv: Use[$pointSum();$pointMul();$pointDiv()] <>< {}

PointSubMulDiv: Use[$pointSub();$pointMul();$pointDiv()] <>< {}

PointSumSubMulDiv: Use[$pointSum();$pointSub();$pointMul();$pointDiv()] <>< {}

Main: {
  Debug(S"Hello Points")
  p=PointSumSub.of(x:90Num, y:120Num)
  p2=PointSumSub.of(x:110Num, y:220Num)
  Debug(p2.sub(p).x() ==20Num & p2.sub(p).y()==100Num)
  Debug(p2.sum(p).x() ==200Num & p2.sum(p).y()==340Num)
  p4=PointMul.of(x:90Num, y:120Num)
  p3=PointMul.of(x:2Num, y:3Num)
  Debug(p3.mul(p4).x() ==180Num & p3.mul(p4).y()==360Num)
  return ExitCode.normal()
} }