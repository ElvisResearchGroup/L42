{reuse L42.is/AdamTowel02

A:{class method Void () void}

Main:{
  loadA=A
  Debug(S"
  '[Defined output between][End of defined output]
  '[End of output]
  '
  ' {
  'method 
  'This0.C c() 
  'C: {}}
  ' {
  'method 
  'This1.A c() }
  ' {
  'method 
  'This0.B c() 
  'B: {}}
  ' {
  'method 
  'Void c() }
  '[End of defined output]
  ")
  b={  method A a1()  method B a2()  method Void a3() B:{}}
  c={  method C c() C:{}}
  i=Location.Lib(b)
  t1=i.method(selector:\"a1()").returnType().refTo()
  t2=i.method(selector:\"a2()").returnType().refTo()
  t3=i.method(selector:\"a3()").returnType().refTo()
  c1=Refactor2.redirect(path:\"C" intoRefTo:t1)<><c
  c2=Refactor2.redirect(path:\"C" intoRefTo:t2)<><c
  c3=Refactor2.redirect(path:\"C" intoRefTo:t3)<><c
  Debug(Location.Lib(c))
  Debug(Location.Lib(c1))
  Debug(Location.Lib(c2))
  Debug(Location.Lib(c3))
  Debug(S"[End of output]")
  return ExitCode.normal()
  }
}
