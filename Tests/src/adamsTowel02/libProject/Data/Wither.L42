{
Selector immK
Path of
class method class Selector #default##apply(Void immK)Selector
class method class Path #default##apply(Void of)Path

Fail:Message.$<><{ implements This2.Fail}

method
Library <><(Library that)
exception Fail Refactor2.PathUnfit {
  return PlgWither.witherJ(path:this.of(),top:that,immK:this.immK())
  exception on Refactor2.Fail Fail""
  }


PlgWither:Refactor2.JavaImport<><{
  //@plugin is.L42.connected.withSafeOperators
  //@pluginPart is.L42.connected.withSafeOperators.refactor.Wither
  class method
  Library witherJ(Path path,Library top,Selector immK)
  exception 
  ,,,,Refactor2.PathUnfit, Refactor2.SelectorUnfit,
  ,,,,Refactor2.MethodUnfit, Refactor2.ClassUnfit
  class method
  Library #pluginUnresponsive(Library binaryRepr)
    binaryRepr  
  }
}