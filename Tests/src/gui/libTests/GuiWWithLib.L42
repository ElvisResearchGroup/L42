{reuse L42.is/AdamTowel02

Gui:Load<><{reuse L42.is/WidgetGuiLib}

PrintPos: {class method S(read Gui.Widget that) that.id()[]", ("[that.left()]", "[that.top()]"), ("[that.width()]", "[that.height()]")"}
Box:Data<><Use[Gui.DispatchTrait()]<><{
  var Size left
  var Size top
  mut method Void process(Gui.Event event) void
  }
ButtonW:Data<><Use[Gui.DispatchTrait()]<><{implements Gui.Widget
  mut Box outer
  Size leftDelta
  Size topDelta
  method toS() PrintPos(this)
  mut method Void process(Gui.Event event) (
    Debug(S"Event processed: "[event]"")
    this.#outer().left(this.outer().left()+this.leftDelta())
    this.#outer().top(this.outer().top()+this.topDelta())
    )
  class method mut This left(mut Box outer,Size scale) This(
    id:outer.id()++S"_Left"
    left:0Size
    top:13Size*scale
    width:6Size*scale
    height:6Size*scale
    color:S"grey"
    children:Gui.Widget.List[]
    outer:outer
    leftDelta:Size"-10"
    topDelta:0Size
    )
  class method mut This right(mut Box outer,Size scale) This(
    id:outer.id()++S"_Right"
    left:26Size*scale
    top:13Size*scale
    width:6Size*scale
    height:6Size*scale
    color:S"grey"
    children:Gui.Widget.List[]
    outer:outer
    leftDelta:10Size
    topDelta:0Size
    )
  class method mut This up(mut Box outer,Size scale) This(
    id:outer.id()++S"_Up"
    left:13Size*scale
    top:0Size
    width:6Size*scale
    height:6Size*scale
    color:S"grey"
    children:Gui.Widget.List[]
    outer:outer
    leftDelta:0Size
    topDelta:Size"-10"
    )
  class method mut This down(mut Box outer,Size scale) This(
    id:outer.id()++S"_Down"
    left:13Size*scale
    top:26Size*scale
    width:6Size*scale
    height:6Size*scale
    color:S"grey"
    children:Gui.Widget.List[]
    outer:outer
    leftDelta:0Size
    topDelta:10Size
    )
  }
SafeMovable:Data<><{implements Gui.Widget
  capsule Box box
  class method mut This(S id,Size left,Size top,Size width,Size height,S color,capsule Gui.Widget.List children) (
    capsule Box cbox=(
      box=Box(id:id,children:children,left:left,top:top)
      box.#children().add(right:ButtonW.left(outer:box,scale:height/32Size))
      box.#children().add(right:ButtonW.right(outer:box,scale:height/32Size))
      box.#children().add(right:ButtonW.up(outer:box,scale:height/32Size))
      box.#children().add(right:ButtonW.down(outer:box,scale:height/32Size))
      box
      )
    This(width:width,height:height,color:color,box:cbox)
    )
  method id()this.box().id()
  method children()this.box().children()
  method left()this.box().left()
  method top()this.box().top()
  method dispatch(that)this.#box().dispatch(that)
  read method Bool #invariant(){
    with w1 in this.box().children().vals() (
      if !this.inside(w1) (return Bool.false())
      with w2 in this.box().children().vals() (
        if w1.id()!=w2.id() (
          if This.overlap(w1:w1,w2:w2) (return Bool.false())
          )
        )
      )
    return Bool.true()
    }
  class method Bool overlap(read Gui.Widget w1,read Gui.Widget w2)(
    Debug(S"overlap "[PrintPos(w1)]", "[PrintPos(w2)]"")

    if w1.left() > w2.left() + w2.width() | w2.left() > w1.left() + w1.width()
      (return Bool.false())

    if w1.top() > w2.top() + w2.height() | w2.top() > w1.top() + w1.height()
      (return Bool.false())

    return Bool.true()
    catch return Bool b (Debug(S"Returned: "[b]"") b)
    error void
    )
  read method Bool inside(read Gui.Widget that){
    Debug(S"inside "[this.id()]" "[that.id()]"")
    if that.left()<0Size (return Bool.false())
    if that.left()+that.width()>this.width() (return Bool.false())
    if that.top()<0Size (return Bool.false())
    if that.top()+that.height()>this.height() (return Bool.false())
    return Bool.true()
    }
  }

C: {
  wA=SafeMovable(width:700Size,height:700Size,color:S"green",box:Box(id:S"Green",
    children:Gui.Widget.List[
      SafeMovable(
        id:S"A"
        left:20Size
        top:40Size
        width:640Size
        height:640Size
        color:S"red"
        children:Gui.Widget.List[
          SafeMovable(
            id:S"D"
            left:280Size
            top:280Size
            width:64Size
            height:64Size
            color:S"blue"
            children:Gui.Widget.List[]);
          SafeMovable(
            id:S"B"
            left:50Size
            top:50Size
            width:128Size
            height:128Size
            color:S"blue"
            children:Gui.Widget.List[
              SafeMovable(
                id:S"C"
                left:2Size
                top:2Size
                width:32Size
                height:32Size
                color:S"black"
                children:Gui.Widget.List[]
                )
              ]
            )]
          )]
        left:2Size,top:2Size
      ))
  Gui.#$(id:S"a1").display(title:S"Moving",x:800Size,y:800Size,body:wA)
  Debug(S"#@Success@#")
  return ExitCode.normal()
  }
}