 {
PrW: {/*private wrapper
@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator
*/
class method 
Library #leftrightleft(Library that) use This0 check #main(_1_Library:that) error void}
Alu: {/*@plugin
L42.is/connected/withAlu
*/}
ExitCode: {
class method 
Library normal()  {/*@exitStatus
0
*/}
class method 
Library failure()  {/*@exitStatus
42000
*/}}
UnsafeRefactor: {
Compose: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Compose
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*Compose(that,and)*/}
class method 
Library compose(Library left, Library right) (
  Library res=use This0 check #compose(_1_ast%ExpCore$ClassB:left, _2_ast%ExpCore$ClassB:right) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Compose\u000amethod name: compose(left,right)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Compose.#compose(_1_ast%ExpCore$ClassB,_2_ast%ExpCore$ClassB)\u000a
*/})
  res
  )
class method 
Library #apply(Library that, Library and) This0.compose(left:that, right:and)}
RenameClass: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Rename
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*renameClass(Library that,S nameSrc,S nameDest)*/}
class method 
Library renameClassS(Library that, This2.S nameSrc, This2.S nameDest) (
  Library res=use This0 check #renameClassS(_1_ast%ExpCore$ClassB:that, _2_java%lang%String:nameSrc.#binaryRepr(), _3_java%lang%String:nameDest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Rename\u000amethod name: renameClassS(that,nameSrc,nameDest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Rename.#renameClassS(_1_ast%ExpCore$ClassB,_2_java%lang%String,_3_java%lang%String)\u000a
*/})
  res
  )}
Redirect: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Redirect
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*redirect(Library that,S src,class Any dest)*/}
class method 
Library redirectS(Library that, This2.S src, class Any dest) (
  Library res=use This0 check #redirectS(_1_ast%ExpCore$ClassB:that, _2_java%lang%String:src.#binaryRepr(), _3_ast%Ast$Path:dest) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Redirect\u000amethod name: redirectS(that,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Redirect.#redirectS(_1_ast%ExpCore$ClassB,_2_java%lang%String,_3_ast%Ast$Path)\u000a
*/})
  res
  )}
This$er: {
class method 
Library #leftrightleft(Library that) This1.RenameClass.renameClassS(that:that, nameSrc:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  Void unused3=b.#$()
  b
  )), nameDest:This2.S.#from(builder:(
  capsule This2.S.SBuilder b0=This2.S.#builder()
  Void unused4=b0.#T()
  Void unused5=b0.#h()
  Void unused6=b0.#i()
  Void unused7=b0.#s()
  b0
  )))}
MiniDataTrait: {
class method 
Library #apply()  {implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool equals(read This0 that) 
refine read method 
This3.S toS() 
This$: {}}}
MiniData: {
class method 
Library thisLib()  {implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine read method 
class This0 class() 
refine read method 
This3.S toS() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool #equalequal(read Any that) }
class method 
Library #leftrightleft(Library that) This1.This$er.#leftrightleft(that:This1.Compose.compose(left:This1.MiniDataTrait.#apply(), right:that))}
ClassableTrait: {
class method 
Library #apply()  {implements This3.Concept.Classable
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}}
Classable: {
class method 
Library #leftrightleft(Library that) This1.Compose.compose(left:This1.ClassableTrait.#apply(), right:that)}}
Range: {
class method 
mut This0.Iterator #apply(This1.Size that) This0.Iterator.#apply(start:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), end:that)
class method 
mut This0.Iterator #apply(This1.Size start, This1.Size stop) This0.Iterator.#apply(start:start, end:stop)
class method 
mut This0.Iterator #apply(This1.Size start) This0.Iterator.#apply(start:start, end:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
class method 
class This1.Size #default##apply(Void that) This1.Size
class method 
class This1.Size #default##apply(Void stop) This1.Size
class method 
class This1.Size #default##apply(Void start) This1.Size
Iterator: {
mut method 
Void start(This2.Size that) 
mut method 
This2.Size #start() 
read method 
This2.Size start() 
mut method 
This2.Size #end() 
read method 
This2.Size end() 
class method 
mut This0 #apply(This2.Size start, This2.Size end) 
mut method 
Void #next() exception Void ((
  This2.Bool cond=(
    This2.Size opNorm=this.end()
    This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).#right(that:opNorm)
    ).#or(that:(
    This2.Size opNorm0=this.start()
    this.end().#right(that:opNorm0)
    ))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched3 exception void
    
    (this.start(that:this.start().#plus(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This2.Size #inner() this.start().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
Debug: {
class method 
Void #apply(read This1.Concept.ToS that) use This1.Alu check stringDebug(that:that.toS().#binaryRepr()) void
class method 
Void #apply(Library lib) error This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#t()
  Void unused0=b.#o()
  Void unused1=b.#space()
  Void unused2=b.#f()
  Void unused3=b.#i()
  Void unused4=b.#x()
  Void unused5=b.#space()
  Void unused6=b.#i()
  Void unused7=b.#n()
  Void unused8=b.#space()
  Void unused9=b.#A()
  Void unused10=b.#d()
  Void unused11=b.#a()
  Void unused12=b.#m()
  Void unused13=b.#T()
  Void unused14=b.#o()
  Void unused15=b.#w()
  Void unused16=b.#e()
  Void unused17=b.#l()
  Void unused18=b.#2()
  b
  ))
class method 
Void #apply(This1.Concept.ToS fileName, This1.Concept.ToS content) use This1.Alu check fileDebug(fileName:fileName.toS().#binaryRepr(), content:content.toS().#binaryRepr()) void
class method 
This1.S readFile(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check fileReadDebug(fileName:fileName.toS().#binaryRepr()) error (
  This1.S.Continue rcv0=(
    This1.S rcv1=This1.S.#from(builder:(
      capsule This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv1.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv1.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv0.#from(builder:(
    capsule This1.S.SBuilder b1=rcv0.#builder()
    b1
    ))
  ))
class method 
This1.S localToAbsolute(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check localToAbsolute(fileName:fileName.toS().#binaryRepr()) error (
  This1.S.Continue rcv2=(
    This1.S rcv3=This1.S.#from(builder:(
      capsule This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv3.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv3.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv2.#from(builder:(
    capsule This1.S.SBuilder b1=rcv2.#builder()
    b1
    ))
  ))
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected, This1.S message) (
  This1.S sExpected=expected.toS()
  This1.S given=that.toS()
  (
    This1.Bool cond=sExpected.#equalequal(that:given).#bang()
    (
      Void unused=cond.#checkTrue()
      
      catch exception Void catched1 (/* message = given
*/This0.#apply(that:(
        This1.S.Continue rcv10=(
          This1.S rcv11=(
            This1.S.Continue rcv12=(
              This1.S rcv13=This1.S.#from(builder:(
                capsule This1.S.SBuilder b=This1.S.#builder()
                Void unused0=b.#oSquare()
                Void unused1=b.#P()
                Void unused2=b.#A()
                Void unused3=b.#S()
                Void unused4=b.#S()
                Void unused5=b.#cSquare()
                Void unused6=b.#space()
                b
                ))
              rcv13.#from(seqBuilder:(
                capsule This1.S.SConcat b0=rcv13.#seqBuilder()
                Void unused7=b0.#add(that:message)
                b0
                ))
              )
            rcv12.#from(builder:(
              capsule This1.S.SBuilder b1=rcv12.#builder()
              Void unused8=b1.#colon()
              Void unused9=b1.#space()
              b1
              ))
            )
          rcv11.#from(seqBuilder:(
            capsule This1.S.SConcat b2=rcv11.#seqBuilder()
            Void unused10=b2.#add(that:given)
            b2
            ))
          )
        rcv10.#from(builder:(
          capsule This1.S.SBuilder b3=rcv10.#builder()
          b3
          ))
        )))
      
      (This0.#apply(that:(
        This1.S.Continue rcv4=(
          This1.S rcv5=(
            This1.S.Continue rcv6=(
              This1.S rcv7=(
                This1.S.Continue rcv8=(
                  This1.S rcv9=This1.S.#from(builder:(
                    capsule This1.S.SBuilder b4=This1.S.#builder()
                    Void unused11=b4.#oSquare()
                    Void unused12=b4.#F()
                    Void unused13=b4.#A()
                    Void unused14=b4.#I()
                    Void unused15=b4.#L()
                    Void unused16=b4.#cSquare()
                    Void unused17=b4.#space()
                    b4
                    ))
                  rcv9.#from(seqBuilder:(
                    capsule This1.S.SConcat b5=rcv9.#seqBuilder()
                    Void unused18=b5.#add(that:message)
                    b5
                    ))
                  )
                rcv8.#from(builder:(
                  capsule This1.S.SBuilder b6=rcv8.#builder()
                  Void unused19=b6.#colon()
                  Void unused20=b6.#space()
                  Void unused21=b6.#sQuote()
                  b6
                  ))
                )
              rcv7.#from(seqBuilder:(
                capsule This1.S.SConcat b7=rcv7.#seqBuilder()
                Void unused22=b7.#add(that:given)
                b7
                ))
              )
            rcv6.#from(builder:(
              capsule This1.S.SBuilder b8=rcv6.#builder()
              Void unused23=b8.#sQuote()
              Void unused24=b8.#space()
              Void unused25=b8.#bang()
              Void unused26=b8.#equal()
              Void unused27=b8.#space()
              Void unused28=b8.#sQuote()
              b8
              ))
            )
          rcv5.#from(seqBuilder:(
            capsule This1.S.SConcat b9=rcv5.#seqBuilder()
            Void unused29=b9.#add(that:expected)
            b9
            ))
          )
        rcv4.#from(builder:(
          capsule This1.S.SBuilder b10=rcv4.#builder()
          Void unused30=b10.#sQuote()
          b10
          ))
        )))
      )
    )
  )
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected) This0.test(that:that, expected:expected, message:This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  b
  )))
Test: {/* Builder to look like a list and run a series of debug.test calls.
 Does not actually make an instance or store the list of calls anywhere :-)
*/
class method 
class This0 #seqBuilder() This0
class method 
Void #from(class This0 seqBuilder) void
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected) This1.test(that:that, expected:expected, message:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected, This2.S message) This1.test(that:that, expected:expected, message:message)}}
Count: {
mut method 
Void counter(This1.Size that) 
mut method 
This1.Size #counter() 
read method 
This1.Size counter() 
class method 
mut This0 #apply(This1.Size counter) 
class method 
mut This0 #seqBuilder() This0.#apply(counter:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.Size #from(mut This0 seqBuilder) seqBuilder.counter()
mut method 
Void #add(This1.Bool that) (
  Void unused=that.#checkTrue()
  
  catch exception Void catched void
  
  (this.counter(that:this.counter().#plus(that:This1.Size.#from(builder:(
    capsule This1.S.SBuilder b=This1.Size.#builder()
    Void unused0=b.#1()
    b
    )))))
  )}
Concept: {
ToS: {interface 
read method 
This2.S toS() }
Classable: {interface 
class method 
read This0 cast(read This0 that) 
class method 
mut This0 #cast(mut This0 that) 
read method 
class This0 class() 
class method 
This2.S readableName() 
class method 
This2.Bool is(class Any subtype) }
Base: {interface implements This1.ToS, This1.Classable, This1.Equals/*class method This from(Base base)
*/
refine read method 
This2.S toS() 
refine class method 
read This1.Classable cast(read This1.Classable that) 
refine class method 
mut This1.Classable #cast(mut This1.Classable that) 
refine read method 
class This1.Classable class() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool #equalequal(read Any that) }
Wrapper: {interface 
read method 
Any inner() }
ClassWrapper: {interface 
read method 
class Any inner() }
MutWrapper: {interface 
read method 
read Any inner() 
mut method 
mut Any #inner() }
Equals: {interface 
read method 
This2.Bool #equalequal(read Any that) }
Comparable: {interface 
read method 
This2.Bool greater(read Any that) }
Boollable: {interface 
read method 
Void #checkTrue() exception Void }
Decorator: {interface }
Contains: {interface 
read method 
This2.Bool contains(read Any that) }
Parsable: {interface }
Invariant: {interface 
read method /* can throw error or return false, as more opportune
*/This2.Bool invariant() }
RandomAccess: {interface 
read method 
read Any get(This2.Size that) 
mut method 
mut Any #get(This2.Size that) }
Sizable: {interface 
read method 
This2.Size size() 
read method 
This2.Bool isEmpty() }
Iterator: {interface 
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
Void #close() }}
Guard: {/* exception as Guard bureocracy, error as Guard detection
-is a check guarenteed to be performed, program logic can rely on this being enforced.
  as exceptions, Guards objects are a way to report/guard complex operations,
 where checking the shape of the input can be unconvenient.
as errors, they represent precondition violations.
Turning an exception Guard into an error Guard
 is equivalent of declaring that such misuse should not happen (blame on the caller),
 still, there is no bug in the program at this stage. Is legit for the caller to try and be blamed
*/interface implements This1.Message, This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
refine class method 
This1.S kind() 
refine read method 
This1.S text() 
refine read method 
This1.Message.Opt responseOf() 
refine read method 
class This1.Message class() 
refine read method 
This1.S toS() 
refine class method 
read This1.Concept.Classable cast(read This1.Concept.Classable that) 
refine class method 
mut This1.Concept.Classable #cast(mut This1.Concept.Classable that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
refine read method 
This1.Bool #equalequal(read Any that) 
Operation: {implements This1, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Parameter: {implements This1, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Precondition: {implements This1, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
ParseFail: {interface implements This1, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
refine class method 
This2.S kind() 
refine read method 
This2.S text() 
refine read method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine class method 
read This2.Concept.Classable cast(read This2.Concept.Classable that) 
refine class method 
mut This2.Concept.Classable #cast(mut This2.Concept.Classable that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool #equalequal(read Any that) }
CastFail: {implements This1, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
System: {
Guard: {/* implements Outer.Guard soon (remove "interface" for a bad translation bug: This1_System_Guard is not abstract and does not override abstract method MtoS()
*/interface implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
refine class method 
This2.S kind() 
refine read method 
This2.S text() 
refine read method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine class method 
read This2.Concept.Classable cast(read This2.Concept.Classable that) 
refine class method 
mut This2.Concept.Classable #cast(mut This2.Concept.Classable that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool #equalequal(read Any that) 
PluginFailure: {implements This1, This3.Guard, This3.Message, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) 
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This3.Message.Opt responseOf() this.cause()
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote())))
        )
      )
    var This3.S res=This0.kind()
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        capsule This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This3.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool equals(read This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This4.S #that() 
read method 
This4.S that() 
class method 
This0 #apply(This4.S that) 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
CollectionsMut: {
class method 
Library vector(class Any of) This1.UnsafeRefactor.Classable.#leftrightleft(that:(
  Void unused=(
    Void unused0=return this.eq(that:of)
    
    catch error Library catched return this.minimal(that:of)
    
    catch error This1.S catched return this.minimal(that:of)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
class method 
Library minimal(class Any that) (
  Library tmp=This1.UnsafeRefactor.Redirect.redirectS(that:This0.VectorTrait.#apply(), src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )), dest:that)
  This1.UnsafeRefactor.Redirect.redirectS(that:tmp, src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )), dest:This0.MutListAny)
  )
class method 
Library eq(class Any that) (
  Library lib=This1.UnsafeRefactor.Compose.compose(left:This0.VectorTrait.#apply(), right:This0.CodeEq.#apply())
  Library tmp=This1.UnsafeRefactor.Redirect.redirectS(that:lib, src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )), dest:that)
  This1.UnsafeRefactor.Redirect.redirectS(that:tmp, src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )), dest:This0.MutListAny)
  )
IterationFailure: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
CollectionErrors: {
class method 
Any negBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv15=(
    This2.Guard.Parameter rcv16=(
      This2.Guard.Parameter.Continue rcv17=(
        This2.Guard.Parameter rcv18=This2.Guard.Parameter.#from(builder:(
          capsule This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#n()
          Void unused17=b.#e()
          Void unused18=b.#g()
          Void unused19=b.#a()
          Void unused20=b.#t()
          Void unused21=b.#i()
          Void unused22=b.#v()
          Void unused23=b.#e()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#n()
          Void unused27=b.#d()
          Void unused28=b.#e()
          Void unused29=b.#x()
          Void unused30=b.#space()
          Void unused31=b.#p()
          Void unused32=b.#r()
          Void unused33=b.#o()
          Void unused34=b.#v()
          Void unused35=b.#i()
          Void unused36=b.#d()
          Void unused37=b.#e()
          Void unused38=b.#d()
          Void unused39=b.#semicolon()
          Void unused40=b.#space()
          Void unused41=b.#m()
          Void unused42=b.#a()
          Void unused43=b.#x()
          Void unused44=b.#space()
          Void unused45=b.#i()
          Void unused46=b.#s()
          Void unused47=b.#space()
          b
          ))
        rcv18.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv18.#seqBuilder()
          Void unused48=b0.#add(that:listSize)
          b0
          ))
        )
      rcv17.#from(builder:(
        capsule This2.S.SBuilder b1=rcv17.#builder()
        Void unused49=b1.#space()
        Void unused50=b1.#p()
        Void unused51=b1.#r()
        Void unused52=b1.#o()
        Void unused53=b1.#p()
        Void unused54=b1.#o()
        Void unused55=b1.#s()
        Void unused56=b1.#e()
        Void unused57=b1.#d()
        Void unused58=b1.#space()
        Void unused59=b1.#i()
        Void unused60=b1.#s()
        Void unused61=b1.#space()
        b1
        ))
      )
    rcv16.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv16.#seqBuilder()
      Void unused62=b2.#add(that:that)
      b2
      ))
    )
  rcv15.#from(builder:(
    capsule This2.S.SBuilder b3=rcv15.#builder()
    b3
    ))
  )
class method 
Any outBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv19=(
    This2.Guard.Parameter rcv20=(
      This2.Guard.Parameter.Continue rcv21=(
        This2.Guard.Parameter rcv22=This2.Guard.Parameter.#from(builder:(
          capsule This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#m()
          Void unused17=b.#a()
          Void unused18=b.#x()
          Void unused19=b.#space()
          Void unused20=b.#i()
          Void unused21=b.#s()
          Void unused22=b.#space()
          b
          ))
        rcv22.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv22.#seqBuilder()
          Void unused23=b0.#add(that:listSize)
          b0
          ))
        )
      rcv21.#from(builder:(
        capsule This2.S.SBuilder b1=rcv21.#builder()
        Void unused24=b1.#space()
        Void unused25=b1.#p()
        Void unused26=b1.#r()
        Void unused27=b1.#o()
        Void unused28=b1.#p()
        Void unused29=b1.#o()
        Void unused30=b1.#s()
        Void unused31=b1.#e()
        Void unused32=b1.#d()
        Void unused33=b1.#space()
        Void unused34=b1.#i()
        Void unused35=b1.#s()
        Void unused36=b1.#space()
        b1
        ))
      )
    rcv20.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv20.#seqBuilder()
      Void unused37=b2.#add(that:that)
      b2
      ))
    )
  rcv19.#from(builder:(
    capsule This2.S.SBuilder b3=rcv19.#builder()
    b3
    ))
  )
class method 
Any cast() This2.Guard.Operation.#from(builder:(
  capsule This2.S.SBuilder b=This2.Guard.Operation.#builder()
  Void unused=b.#c()
  Void unused0=b.#a()
  Void unused1=b.#s()
  Void unused2=b.#t()
  Void unused3=b.#space()
  Void unused4=b.#f()
  Void unused5=b.#a()
  Void unused6=b.#i()
  Void unused7=b.#l()
  Void unused8=b.#u()
  Void unused9=b.#r()
  Void unused10=b.#e()
  b
  ))
class method 
Any iterationTermination(This2.Size from, This2.Size minTo, This2.Size size) (
  This1.IterationFailure.Continue rcv23=(
    This1.IterationFailure rcv24=(
      This1.IterationFailure.Continue rcv25=(
        This1.IterationFailure rcv26=This1.IterationFailure.#from(builder:(
          capsule This2.S.SBuilder b=This1.IterationFailure.#builder()
          Void unused=b.#U()
          Void unused0=b.#n()
          Void unused1=b.#e()
          Void unused2=b.#x()
          Void unused3=b.#p()
          Void unused4=b.#e()
          Void unused5=b.#c()
          Void unused6=b.#t()
          Void unused7=b.#e()
          Void unused8=b.#d()
          Void unused9=b.#space()
          Void unused10=b.#t()
          Void unused11=b.#e()
          Void unused12=b.#r()
          Void unused13=b.#m()
          Void unused14=b.#i()
          Void unused15=b.#n()
          Void unused16=b.#a()
          Void unused17=b.#t()
          Void unused18=b.#i()
          Void unused19=b.#o()
          Void unused20=b.#n()
          Void unused21=b.#space()
          Void unused22=b.#o()
          Void unused23=b.#f()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#t()
          Void unused27=b.#e()
          Void unused28=b.#r()
          Void unused29=b.#a()
          Void unused30=b.#t()
          Void unused31=b.#i()
          Void unused32=b.#o()
          Void unused33=b.#n()
          Void unused34=b.#comma()
          Void unused35=b.#space()
          Void unused36=b.#r()
          Void unused37=b.#e()
          Void unused38=b.#a()
          Void unused39=b.#c()
          Void unused40=b.#h()
          Void unused41=b.#e()
          Void unused42=b.#d()
          Void unused43=b.#space()
          b
          ))
        rcv26.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv26.#seqBuilder()
          Void unused44=b0.#add(that:from)
          b0
          ))
        )
      rcv25.#from(builder:(
        capsule This2.S.SBuilder b1=rcv25.#builder()
        Void unused45=b1.#space()
        Void unused46=b1.#i()
        Void unused47=b1.#n()
        Void unused48=b1.#s()
        Void unused49=b1.#t()
        Void unused50=b1.#e()
        Void unused51=b1.#a()
        Void unused52=b1.#d()
        Void unused53=b1.#space()
        Void unused54=b1.#o()
        Void unused55=b1.#f()
        Void unused56=b1.#space()
        b1
        ))
      )
    rcv24.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv24.#seqBuilder()
      Void unused57=b2.#add(that:minTo)
      b2
      ))
    )
  rcv23.#from(builder:(
    capsule This2.S.SBuilder b3=rcv23.#builder()
    b3
    ))
  )
class method 
Void checkBound(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This0.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#rightequal(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This0.outBound(that:that, listSize:listSize))
      )
    )
  )
class method 
Void checkBoundAdd(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This0.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#right(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This0.outBound(that:that, listSize:listSize))
      )
    )
  )}
MutListAny: {implements This2.Concept.ToS
mut method 
Void head(mut This0.Cell that) 
mut method 
mut This0.Cell #head() 
read method 
read This0.Cell head() 
mut method 
Void size(This2.Size that) 
mut method 
This2.Size #size() 
read method 
This2.Size size() 
class method 
mut This0 #apply(fwd mut This0.Cell head, This2.Size size) 
class method 
mut This0 empty() This0.#apply(head:This0.CellEnd.#apply(), size:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
read Any val(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head().get(that:that)
  )
mut method 
mut Any #val(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.#head().#get(that:that)
  )
mut method 
Void #apply(This2.Size that, mut Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head(that:this.#head().#set(that:that, val:val, add:This2.Bool.false()))
  )
mut method 
Void add(This2.Size that, mut Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  Void unused0=this.head(that:this.#head().#set(that:that, val:val, add:This2.Bool.true()))
  this.size(that:this.size().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
mut method 
Void remove(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  Void unused0=this.head(that:this.#head().#remove(that:that))
  this.size(that:this.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
method 
This0 without(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().remove(that:that), size:this.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 withAlso(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.true()), size:this.size().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 with(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.false()), size:this.size().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
refine read method 
This2.S toS() (
  Void unused=(
    var This2.S ret=This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused1=b.#oSquare()
      b
      ))
    var This2.S sep=This2.S.#from(builder:(
      capsule This2.S.SBuilder b0=This2.S.#builder()
      b0
      ))
    var read This0.Cell c=this.head()
    Void unused0=loop (
      Void unused2=(
        read This0.CellNext c0=(
          Void unused3=return c
          
          catch return read This0.CellNext casted casted
          
          catch return read Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched2 return ret.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused4=b1.#cSquare()
          b1
          )))
        
        (
          Void unused5=(
            Void unused6=ret := ret.#plusplus(that:sep)
            Void unused7=(
              read Any v=c0.val()
              (
                read This2.Concept.ToS v2=(
                  Void unused8=return v
                  
                  catch return read This2.Concept.ToS casted2 casted2
                  
                  catch return read Any casted2 exception void
                  
                  error  {/*@stringU
CastT-Should be unreachable code
*/}
                  )
                
                catch exception Void catched6 (
                  read Void v1=(
                    Void unused9=return v
                    
                    catch return read Void casted1 casted1
                    
                    catch return read Any casted1 exception void
                    
                    error  {/*@stringU
CastT-Should be unreachable code
*/}
                    )
                  
                  catch exception Void catched8 (
                    read Library v0=(
                      Void unused10=return v
                      
                      catch return read Library casted0 casted0
                      
                      catch return read Any casted0 exception void
                      
                      error  {/*@stringU
CastT-Should be unreachable code
*/}
                      )
                    
                    catch exception Void catched10 ret := ret.#plusplus(that:This2.S.#from(builder:(
                      capsule This2.S.SBuilder b2=This2.S.#builder()
                      Void unused11=b2.#qMark()
                      b2
                      )))
                    
                    (
                      Void unused12=ret := ret.#plusplus(that:This2.S.#from(builder:(
                        capsule This2.S.SBuilder b3=This2.S.#builder()
                        Void unused13=b3.#oCurly()
                        Void unused14=b3.#dot()
                        Void unused15=b3.#dot()
                        Void unused16=b3.#cCurly()
                        b3
                        )))
                      void
                      )
                    )
                  
                  (
                    Void unused17=ret := ret.#plusplus(that:This2.S.#from(builder:(
                      capsule This2.S.SBuilder b4=This2.S.#builder()
                      Void unused18=b4.#v()
                      Void unused19=b4.#o()
                      Void unused20=b4.#i()
                      Void unused21=b4.#d()
                      b4
                      )))
                    void
                    )
                  )
                
                (
                  Void unused22=ret := ret.#plusplus(that:v2.toS())
                  void
                  )
                )
              )
            c := c0.next()
            )
          void
          )
        )
      sep := This2.S.#from(builder:(
        capsule This2.S.SBuilder b5=This2.S.#builder()
        Void unused23=b5.#semicolon()
        Void unused24=b5.#space()
        b5
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cell: {interface 
read method 
read Any get(This3.Size that) 
mut method 
mut Any #get(This3.Size that) 
read method 
read This0 set(This3.Size that, read Any val, This3.Bool add) 
mut method 
mut This0 #set(This3.Size that, mut Any val, This3.Bool add) 
read method 
read This0 remove(This3.Size that) 
mut method 
mut This0 #remove(This3.Size that) }
CellNext: {implements This1.Cell
mut method 
mut Any #val() 
read method 
read Any val() 
mut method 
mut This1.Cell #next() 
read method 
read This1.Cell next() 
class method 
mut This0 #apply(fwd mut Any val, fwd mut This1.Cell next) 
refine read method 
read Any get(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.val())
        )
      )
    Void unused1=return this.next().get(that:that.#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return read Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine mut method 
mut Any #get(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.#val())
        )
      )
    Void unused1=return this.#next().#get(that:that.#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return mut Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
read This1.Cell set(This3.Size that, read Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused3=b.#0()
        b
        ))).#bang()
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (
          read This0 res=This0.#apply(val:this.val(), next:this.next().set(that:that.#less(that:This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#1()
            b0
            ))), val:val, add:add))
          return res
          )
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched4 void
      
      (/*29/6/2017 buggy transation on java need res2, not res
*/
        read This0 res2=This0.#apply(val:val, next:this)
        return res2
        )
      )
    read This0 res3=This0.#apply(val:val, next:this.next())
    Void unused2=return res3
    void
    )
  
  catch return read This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine mut method 
mut This1.Cell #set(This3.Size that, mut Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused3=b.#0()
        b
        ))).#bang()
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (
          mut This0 res=This0.#apply(val:this.#val(), next:this.#next().#set(that:that.#less(that:This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#1()
            b0
            ))), val:val, add:add))
          return res
          )
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched4 void
      
      (
        mut This0 res2=This0.#apply(val:val, next:this)
        return res2
        )
      )
    mut This0 res3=This0.#apply(val:val, next:this.#next())
    Void unused2=return res3
    void
    )
  
  catch return mut This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
read This1.Cell remove(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (
          read This0 res=This0.#apply(val:this.val(), next:this.next().remove(that:that.#less(that:This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused4=b0.#1()
            b0
            )))))
          return res
          )
        )
      )
    Void unused1=return this.next()
    void
    )
  
  catch return read This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine mut method 
mut This1.Cell #remove(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (
          mut This0 res=This0.#apply(val:this.#val(), next:this.#next().#remove(that:that.#less(that:This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused4=b0.#1()
            b0
            )))))
          return res
          )
        )
      )
    Void unused1=return this.#next()
    void
    )
  
  catch return mut This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
CellEnd: {implements This1.Cell
class method 
mut This0 #apply() 
refine read method 
read Any get(This3.Size that) error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#g()
  Void unused8=b.#e()
  Void unused9=b.#t()
  b
  ))
refine mut method 
mut Any #get(This3.Size that) error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#g()
  Void unused8=b.#e()
  Void unused9=b.#t()
  b
  ))
refine read method 
read This1.Cell set(This3.Size that, read Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (error This3.X.#from(builder:(
          capsule This3.S.SBuilder b=This3.X.#builder()
          Void unused4=b.#C()
          Void unused5=b.#e()
          Void unused6=b.#l()
          Void unused7=b.#l()
          Void unused8=b.#E()
          Void unused9=b.#n()
          Void unused10=b.#d()
          Void unused11=b.#dot()
          Void unused12=b.#s()
          Void unused13=b.#e()
          Void unused14=b.#t()
          Void unused15=b.#1()
          b
          )))
        )
      )
    Void unused1=(
      This3.Bool cond0=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused16=b0.#0()
        b0
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (
          read This1.Cell res=This1.CellNext.#apply(val:val, next:this)
          return res
          )
        )
      )
    Void unused2=error This3.X.#from(builder:(
      capsule This3.S.SBuilder b1=This3.X.#builder()
      Void unused18=b1.#C()
      Void unused19=b1.#e()
      Void unused20=b1.#l()
      Void unused21=b1.#l()
      Void unused22=b1.#E()
      Void unused23=b1.#n()
      Void unused24=b1.#d()
      Void unused25=b1.#dot()
      Void unused26=b1.#s()
      Void unused27=b1.#e()
      Void unused28=b1.#t()
      Void unused29=b1.#2()
      b1
      ))
    void
    )
  
  catch return read This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine mut method 
mut This1.Cell #set(This3.Size that, mut Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (error This3.X.#from(builder:(
          capsule This3.S.SBuilder b=This3.X.#builder()
          Void unused4=b.#C()
          Void unused5=b.#e()
          Void unused6=b.#l()
          Void unused7=b.#l()
          Void unused8=b.#E()
          Void unused9=b.#n()
          Void unused10=b.#d()
          Void unused11=b.#dot()
          Void unused12=b.#s()
          Void unused13=b.#e()
          Void unused14=b.#t()
          Void unused15=b.#1()
          b
          )))
        )
      )
    Void unused1=(
      This3.Bool cond0=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused16=b0.#0()
        b0
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This1.CellNext.#apply(val:val, next:this))
        )
      )
    Void unused2=error This3.X.#from(builder:(
      capsule This3.S.SBuilder b1=This3.X.#builder()
      Void unused18=b1.#C()
      Void unused19=b1.#e()
      Void unused20=b1.#l()
      Void unused21=b1.#l()
      Void unused22=b1.#E()
      Void unused23=b1.#n()
      Void unused24=b1.#d()
      Void unused25=b1.#dot()
      Void unused26=b1.#s()
      Void unused27=b1.#e()
      Void unused28=b1.#t()
      Void unused29=b1.#2()
      b1
      ))
    void
    )
  
  catch return mut This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
read This1.Cell remove(This3.Size that) error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#r()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#o()
  Void unused11=b.#v()
  Void unused12=b.#e()
  b
  ))
refine mut method 
mut This1.Cell #remove(This3.Size that) error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#r()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#o()
  Void unused11=b.#v()
  Void unused12=b.#e()
  b
  ))}}
VectorTrait: {
class method 
Library #apply()  {implements This3.Concept.ToS, This3.Concept.Classable
mut method 
mut This0.MutListT #inner() 
read method 
read This0.MutListT inner() 
class method 
mut This0 #apply(fwd mut This0.MutListT inner) 
class method 
This0 #immK(This0.MutListT inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This0.MutListT.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(mut This0.Elem that) this.add(right:that)
mut method 
mut This0 #reverse() (/*TODO: read reverse is just impossible?
*/
  mut This0 result=This0.empty()
  Void unused=(
    mut This0.IteratorVar e=this.#vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
read This0.Elem val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
mut method 
mut This0.Elem #val(This3.Size that) This0.Cast.mut(that:this.#inner().#val(that:that))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
read This0.Elem left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
read This0.Elem right() This0.Cast.#apply(that:(
  read This0.MutListT rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
mut This0.Elem #left() This0.Cast.mut(that:this.#inner().#val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
mut method 
mut This0.Elem #right() (/*#################MUT METHODS
*/This0.Cast.mut(that:(
  mut This0.MutListT rcv28=this.#inner()
  rcv28.#val(that:rcv28.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, mut This0.Elem val) (
  mut This0.MutListT rcv29=this.#inner()
  rcv29.#apply(that:that, val:val)
  )
mut method 
Void left(mut This0.Elem that) (
  mut This0.MutListT rcv30=this.#inner()
  rcv30.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(mut This0.Elem that) (
  mut This0.MutListT rcv31=this.#inner()
  rcv31.#apply(that:rcv31.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, mut This0.Elem val) this.#inner().add(that:that, val:val)
mut method 
Void add(mut This0.Elem right) (
  mut This0.MutListT rcv32=this.#inner()
  rcv32.add(that:rcv32.size(), val:right)
  )
mut method 
Void add(mut This0.Elem left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This0.Elem that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(/*var This res=this//this does not work, iterator would return it read.
with e in that.vals() (res+=e)
return res
*/
    Void unused0=(
      This3.Bool cond=that.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return this)
        )
      )
    Void unused1=return (this.#plus(that:that.left())).#plusplus(that:that.withoutLeft())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This0.Elem that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This0.Elem that) (/*insertion
*/this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This0.Elem that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0.Elem that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, read This0.Elem filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, read This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, read This0.Elem filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(read This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
mut This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
mut This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
mut This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine read method 
class This3.Concept.Classable class() 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
MutListT: {implements This4.Concept.ToS
read method 
This4.Size size() 
class method 
mut This0 empty() 
read method 
read Any val(This4.Size that) 
mut method 
mut Any #val(This4.Size that) 
mut method 
Void #apply(This4.Size that, mut Any val) 
mut method 
Void add(This4.Size that, mut Any val) 
mut method 
Void remove(This4.Size that) 
method 
This0 without(This4.Size that) 
method 
This0 withAlso(This4.Size that, Any val) 
method 
This0 with(This4.Size that, Any val) 
refine read method 
This4.S toS() }
Elem: {}
Cast: {
class method 
read This1.Elem #apply(read Any that) (
  Void unused=(
    Void unused0=(
      read This1.Elem that0=(
        Void unused2=return that
        
        catch return read This1.Elem casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.CollectionErrors.cast()
    void
    )
  
  catch return read This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This1.Elem mut(mut Any that) (
  Void unused=(
    Void unused0=(
      mut This1.Elem that0=(
        Void unused2=return that
        
        catch return mut This1.Elem casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.CollectionErrors.cast()
    void
    )
  
  catch return mut This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This2.MutListT that() 
mut method 
mut This2.MutListT #that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
read This2.Elem filled() 
mut method 
mut This2.Elem #filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This2.Elem readInner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This2.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This2.Elem mutInner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This2.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This1.Elem readInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This1.Elem mutInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This1.MutListT that() 
mut method 
mut This1.MutListT #that() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#y()
  Void unused1=b.#p()
  Void unused2=b.#e()
  Void unused3=b.#space()
  Void unused4=b.#s()
  Void unused5=b.#y()
  Void unused6=b.#s()
  Void unused7=b.#t()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#space()
  Void unused11=b.#s()
  Void unused12=b.#h()
  Void unused13=b.#o()
  Void unused14=b.#u()
  Void unused15=b.#l()
  Void unused16=b.#d()
  Void unused17=b.#space()
  Void unused18=b.#m()
  Void unused19=b.#a()
  Void unused20=b.#k()
  Void unused21=b.#e()
  Void unused22=b.#space()
  Void unused23=b.#i()
  Void unused24=b.#t()
  Void unused25=b.#space()
  Void unused26=b.#n()
  Void unused27=b.#o()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#c()
  Void unused31=b.#a()
  Void unused32=b.#l()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#d()
  b
  ))
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
read method 
read This1.Elem #inner() this.readInner()
read method 
This4.Bool isFill() This4.Bool.false()
read method 
read This1.Elem filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
mut This1.Elem #filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This1.Elem readInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This1.Elem mutInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This1.Elem filled() 
mut method 
mut This1.Elem #filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#y()
  Void unused1=b.#p()
  Void unused2=b.#e()
  Void unused3=b.#space()
  Void unused4=b.#s()
  Void unused5=b.#y()
  Void unused6=b.#s()
  Void unused7=b.#t()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#space()
  Void unused11=b.#s()
  Void unused12=b.#h()
  Void unused13=b.#o()
  Void unused14=b.#u()
  Void unused15=b.#l()
  Void unused16=b.#d()
  Void unused17=b.#space()
  Void unused18=b.#m()
  Void unused19=b.#a()
  Void unused20=b.#k()
  Void unused21=b.#e()
  Void unused22=b.#space()
  Void unused23=b.#i()
  Void unused24=b.#t()
  Void unused25=b.#space()
  Void unused26=b.#n()
  Void unused27=b.#o()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#c()
  Void unused31=b.#a()
  Void unused32=b.#l()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#d()
  b
  ))
read method 
read This1.MutListT that() 
mut method 
mut This1.MutListT #that() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#y()
  Void unused1=b.#p()
  Void unused2=b.#e()
  Void unused3=b.#space()
  Void unused4=b.#s()
  Void unused5=b.#y()
  Void unused6=b.#s()
  Void unused7=b.#t()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#space()
  Void unused11=b.#s()
  Void unused12=b.#h()
  Void unused13=b.#o()
  Void unused14=b.#u()
  Void unused15=b.#l()
  Void unused16=b.#d()
  Void unused17=b.#space()
  Void unused18=b.#m()
  Void unused19=b.#a()
  Void unused20=b.#k()
  Void unused21=b.#e()
  Void unused22=b.#space()
  Void unused23=b.#i()
  Void unused24=b.#t()
  Void unused25=b.#space()
  Void unused26=b.#n()
  Void unused27=b.#o()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#c()
  Void unused31=b.#a()
  Void unused32=b.#l()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#d()
  b
  ))
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo, read This1.Elem filled) 
read method 
read This1.Elem #inner() this.readInner()
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This1.Elem readInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This1.Elem mutInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This1.MutListT #that() 
read method 
read This1.MutListT that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(mut This1.Elem that) (
  mut This1.MutListT rcv33=this.#that()
  rcv33.#apply(that:this.from(), val:that)
  )
mut method 
mut This1.Elem #inner() this.mutInner()
read method 
This4.Bool isFill() This4.Bool.false()
read method 
read This1.Elem filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
mut This1.Elem #filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}}
CodeEq: {
class method 
Library #apply()  {implements This3.Concept.Equals
read method 
This3.Size size() 
read method 
This3.Bool isEmpty() 
read method 
read This0.Elem val(This3.Size that) 
mut method 
mut This0.Elem #val(This3.Size that) 
class method 
mut This0 #seqBuilder() 
class method 
mut This0 #from(mut This0 seqBuilder) 
mut method 
Void #add(mut This0.Elem that) 
read method 
read This0.Elem left() 
method 
This0 withoutLeft() 
method 
This0 withAlsoLeft(This0.Elem that) 
read method 
lent This0.IteratorVal vals() 
read method 
This3.Bool contains(read This0.Elem that) (/*################# operators
TODO: general issue:  V[a;b] wants a,b mut to create a mut?
with the current builder desugaring, 
can not take imms since the collection under genration is still mut!
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This0.Elem that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) (
  Void unused=(/*This[with e in this.vals() ( if !that.contains(e)  (use[e])  )]
*/
    Void unused0=(
      This3.Bool cond=that.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return this)
        )
      )
    Void unused1=return (this.#less(that:that.left())).#lessless(that:that.withoutLeft())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #and(This0 that) (
  Void unused=(/*This[with v in this.vals() ( if (that>v) (use[v]) )]
*/
    var This0 res=this
    Void unused0=(
      lent This0.IteratorVal v=this.vals()
      (
        Void unused2=loop (
          Void unused3=v.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=v.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=that.contains(that:v.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (res := res.withoutAll(val:v.#inner()))
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=this.contains(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This0.Elem that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This2.IterationFailure catched13 (return This3.Bool.false())
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(read This0.Elem val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(read This0.Elem val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) 
method 
This0 withoutLeft(read This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(read This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(read This0.Elem val) (
  Void unused=(/*This[with e in this.vals() (if e!=val (use[e]))]
*/
    Void unused0=(
      This3.Bool cond=this.isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return this)
        )
      )
    This0 rec=this.withoutLeft().withoutAll(val:val)
    Void unused1=(
      This3.Bool cond0=this.left().#equalequal(that:val)
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return rec)
        )
      )
    Void unused2=return rec.withAlsoLeft(that:this.left())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method /*from VectorTrait
*/Void remove(This3.Size that) 
mut method 
Void removeAll(read This0.Elem val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(read This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(read This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Elem: {implements This4.Concept.Equals
refine read method 
This4.Bool #equalequal(read Any that) }
IteratorVal: {
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
read This1.Elem #inner() 
read method 
Void #close() }}}}
Collections: {
class method 
Library vector(class Any ofMut) This1.CollectionsMut.vector(of:ofMut)
class method 
Library vector(class Any of) This1.UnsafeRefactor.Classable.#leftrightleft(that:(
  Void unused=(
    Void unused0=return this.eq(that:of)
    
    catch error Library catched return this.minimal(that:of)
    
    catch error This1.S catched return this.minimal(that:of)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
class method 
Library minimal(class Any that) (
  Library tmp=This1.UnsafeRefactor.Redirect.redirectS(that:This0.VectorTrait.#apply(), src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )), dest:that)
  This1.UnsafeRefactor.Redirect.redirectS(that:tmp, src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )), dest:This0.MutListAny)
  )
class method 
Library eq(class Any that) (
  Library lib=This1.UnsafeRefactor.Compose.compose(left:This0.VectorTrait.#apply(), right:This0.CodeEq.#apply())
  Library tmp=This1.UnsafeRefactor.Redirect.redirectS(that:lib, src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )), dest:that)
  This1.UnsafeRefactor.Redirect.redirectS(that:tmp, src:This1.S.#from(builder:(
    capsule This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )), dest:This0.MutListAny)
  )
IterationFailure: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
CollectionErrors: {
class method 
Any negBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv34=(
    This2.Guard.Parameter rcv35=(
      This2.Guard.Parameter.Continue rcv36=(
        This2.Guard.Parameter rcv37=This2.Guard.Parameter.#from(builder:(
          capsule This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#n()
          Void unused17=b.#e()
          Void unused18=b.#g()
          Void unused19=b.#a()
          Void unused20=b.#t()
          Void unused21=b.#i()
          Void unused22=b.#v()
          Void unused23=b.#e()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#n()
          Void unused27=b.#d()
          Void unused28=b.#e()
          Void unused29=b.#x()
          Void unused30=b.#space()
          Void unused31=b.#p()
          Void unused32=b.#r()
          Void unused33=b.#o()
          Void unused34=b.#v()
          Void unused35=b.#i()
          Void unused36=b.#d()
          Void unused37=b.#e()
          Void unused38=b.#d()
          Void unused39=b.#semicolon()
          Void unused40=b.#space()
          Void unused41=b.#m()
          Void unused42=b.#a()
          Void unused43=b.#x()
          Void unused44=b.#space()
          Void unused45=b.#i()
          Void unused46=b.#s()
          Void unused47=b.#space()
          b
          ))
        rcv37.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv37.#seqBuilder()
          Void unused48=b0.#add(that:listSize)
          b0
          ))
        )
      rcv36.#from(builder:(
        capsule This2.S.SBuilder b1=rcv36.#builder()
        Void unused49=b1.#space()
        Void unused50=b1.#p()
        Void unused51=b1.#r()
        Void unused52=b1.#o()
        Void unused53=b1.#p()
        Void unused54=b1.#o()
        Void unused55=b1.#s()
        Void unused56=b1.#e()
        Void unused57=b1.#d()
        Void unused58=b1.#space()
        Void unused59=b1.#i()
        Void unused60=b1.#s()
        Void unused61=b1.#space()
        b1
        ))
      )
    rcv35.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv35.#seqBuilder()
      Void unused62=b2.#add(that:that)
      b2
      ))
    )
  rcv34.#from(builder:(
    capsule This2.S.SBuilder b3=rcv34.#builder()
    b3
    ))
  )
class method 
Any outBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv38=(
    This2.Guard.Parameter rcv39=(
      This2.Guard.Parameter.Continue rcv40=(
        This2.Guard.Parameter rcv41=This2.Guard.Parameter.#from(builder:(
          capsule This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#m()
          Void unused17=b.#a()
          Void unused18=b.#x()
          Void unused19=b.#space()
          Void unused20=b.#i()
          Void unused21=b.#s()
          Void unused22=b.#space()
          b
          ))
        rcv41.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv41.#seqBuilder()
          Void unused23=b0.#add(that:listSize)
          b0
          ))
        )
      rcv40.#from(builder:(
        capsule This2.S.SBuilder b1=rcv40.#builder()
        Void unused24=b1.#space()
        Void unused25=b1.#p()
        Void unused26=b1.#r()
        Void unused27=b1.#o()
        Void unused28=b1.#p()
        Void unused29=b1.#o()
        Void unused30=b1.#s()
        Void unused31=b1.#e()
        Void unused32=b1.#d()
        Void unused33=b1.#space()
        Void unused34=b1.#i()
        Void unused35=b1.#s()
        Void unused36=b1.#space()
        b1
        ))
      )
    rcv39.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv39.#seqBuilder()
      Void unused37=b2.#add(that:that)
      b2
      ))
    )
  rcv38.#from(builder:(
    capsule This2.S.SBuilder b3=rcv38.#builder()
    b3
    ))
  )
class method 
Any cast() This2.Guard.Operation.#from(builder:(
  capsule This2.S.SBuilder b=This2.Guard.Operation.#builder()
  Void unused=b.#c()
  Void unused0=b.#a()
  Void unused1=b.#s()
  Void unused2=b.#t()
  Void unused3=b.#space()
  Void unused4=b.#f()
  Void unused5=b.#a()
  Void unused6=b.#i()
  Void unused7=b.#l()
  Void unused8=b.#u()
  Void unused9=b.#r()
  Void unused10=b.#e()
  b
  ))
class method 
Any iterationTermination(This2.Size from, This2.Size minTo, This2.Size size) (
  This1.IterationFailure.Continue rcv42=(
    This1.IterationFailure rcv43=(
      This1.IterationFailure.Continue rcv44=(
        This1.IterationFailure rcv45=This1.IterationFailure.#from(builder:(
          capsule This2.S.SBuilder b=This1.IterationFailure.#builder()
          Void unused=b.#U()
          Void unused0=b.#n()
          Void unused1=b.#e()
          Void unused2=b.#x()
          Void unused3=b.#p()
          Void unused4=b.#e()
          Void unused5=b.#c()
          Void unused6=b.#t()
          Void unused7=b.#e()
          Void unused8=b.#d()
          Void unused9=b.#space()
          Void unused10=b.#t()
          Void unused11=b.#e()
          Void unused12=b.#r()
          Void unused13=b.#m()
          Void unused14=b.#i()
          Void unused15=b.#n()
          Void unused16=b.#a()
          Void unused17=b.#t()
          Void unused18=b.#i()
          Void unused19=b.#o()
          Void unused20=b.#n()
          Void unused21=b.#space()
          Void unused22=b.#o()
          Void unused23=b.#f()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#t()
          Void unused27=b.#e()
          Void unused28=b.#r()
          Void unused29=b.#a()
          Void unused30=b.#t()
          Void unused31=b.#i()
          Void unused32=b.#o()
          Void unused33=b.#n()
          Void unused34=b.#comma()
          Void unused35=b.#space()
          Void unused36=b.#r()
          Void unused37=b.#e()
          Void unused38=b.#a()
          Void unused39=b.#c()
          Void unused40=b.#h()
          Void unused41=b.#e()
          Void unused42=b.#d()
          Void unused43=b.#space()
          b
          ))
        rcv45.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv45.#seqBuilder()
          Void unused44=b0.#add(that:from)
          b0
          ))
        )
      rcv44.#from(builder:(
        capsule This2.S.SBuilder b1=rcv44.#builder()
        Void unused45=b1.#space()
        Void unused46=b1.#i()
        Void unused47=b1.#n()
        Void unused48=b1.#s()
        Void unused49=b1.#t()
        Void unused50=b1.#e()
        Void unused51=b1.#a()
        Void unused52=b1.#d()
        Void unused53=b1.#space()
        Void unused54=b1.#o()
        Void unused55=b1.#f()
        Void unused56=b1.#space()
        b1
        ))
      )
    rcv43.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv43.#seqBuilder()
      Void unused57=b2.#add(that:minTo)
      b2
      ))
    )
  rcv42.#from(builder:(
    capsule This2.S.SBuilder b3=rcv42.#builder()
    b3
    ))
  )
class method 
Void checkBound(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This0.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#rightequal(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This0.outBound(that:that, listSize:listSize))
      )
    )
  )
class method 
Void checkBoundAdd(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This0.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#right(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This0.outBound(that:that, listSize:listSize))
      )
    )
  )}
MutListAny: {implements This2.Concept.ToS
mut method 
Void head(This0.Cell that) 
mut method 
This0.Cell #head() 
read method 
This0.Cell head() 
mut method 
Void size(This2.Size that) 
mut method 
This2.Size #size() 
read method 
This2.Size size() 
class method 
mut This0 #apply(This0.Cell head, This2.Size size) 
class method 
mut This0 empty() This0.#apply(head:This0.CellEnd.#apply(), size:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Any val(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head().get(that:that)
  )
mut method 
Void #apply(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head(that:this.head().set(that:that, val:val, add:This2.Bool.false()))
  )
mut method 
Void add(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  Void unused0=this.head(that:this.head().set(that:that, val:val, add:This2.Bool.true()))
  this.size(that:this.size().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
mut method 
Void remove(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  Void unused0=this.head(that:this.head().remove(that:that))
  this.size(that:this.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
method 
This0 without(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().remove(that:that), size:this.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 withAlso(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.true()), size:this.size().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 with(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.false()), size:this.size().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
refine read method 
This2.S toS() (
  Void unused=(
    var This2.S ret=This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused1=b.#oSquare()
      b
      ))
    var This2.S sep=This2.S.#from(builder:(
      capsule This2.S.SBuilder b0=This2.S.#builder()
      b0
      ))
    var This0.Cell c=this.head()
    Void unused0=loop (/*Debug(S"MutListAny.toS() loop pass with ret='"[ret]"', sep='"[sep]"'")
*/
      Void unused2=(
        This0.CellNext c0=(
          Void unused3=return c
          
          catch return This0.CellNext casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched2 return ret.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused4=b1.#cSquare()
          b1
          )))
        
        (
          Void unused5=(
            Void unused6=ret := ret.#plusplus(that:sep)
            Void unused7=(
              Any v=c0.val()
              (
                This2.Concept.ToS v2=(
                  Void unused8=return v
                  
                  catch return This2.Concept.ToS casted2 casted2
                  
                  catch return Any casted2 exception void
                  
                  error  {/*@stringU
CastT-Should be unreachable code
*/}
                  )
                
                catch exception Void catched6 (
                  Void v1=(
                    Void unused9=return v
                    
                    catch return Void casted1 casted1
                    
                    catch return Any casted1 exception void
                    
                    error  {/*@stringU
CastT-Should be unreachable code
*/}
                    )
                  
                  catch exception Void catched8 (
                    Library v0=(
                      Void unused10=return v
                      
                      catch return Library casted0 casted0
                      
                      catch return Any casted0 exception void
                      
                      error  {/*@stringU
CastT-Should be unreachable code
*/}
                      )
                    
                    catch exception Void catched10 ret := ret.#plusplus(that:This2.S.#from(builder:(
                      capsule This2.S.SBuilder b2=This2.S.#builder()
                      Void unused11=b2.#qMark()
                      b2
                      )))
                    
                    (
                      Void unused12=ret := ret.#plusplus(that:This2.S.#from(builder:(
                        capsule This2.S.SBuilder b3=This2.S.#builder()
                        Void unused13=b3.#oCurly()
                        Void unused14=b3.#dot()
                        Void unused15=b3.#dot()
                        Void unused16=b3.#cCurly()
                        b3
                        )))
                      void
                      )
                    )
                  
                  (
                    Void unused17=ret := ret.#plusplus(that:This2.S.#from(builder:(
                      capsule This2.S.SBuilder b4=This2.S.#builder()
                      Void unused18=b4.#v()
                      Void unused19=b4.#o()
                      Void unused20=b4.#i()
                      Void unused21=b4.#d()
                      b4
                      )))
                    void
                    )
                  )
                
                (
                  Void unused22=ret := ret.#plusplus(that:v2.toS())
                  void
                  )
                )
              )
            c := c0.next()
            )
          void
          )
        )
      sep := This2.S.#from(builder:(
        capsule This2.S.SBuilder b5=This2.S.#builder()
        Void unused23=b5.#semicolon()
        Void unused24=b5.#space()
        b5
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cell: {interface 
method 
Any get(This3.Size that) 
method 
This0 set(This3.Size that, Any val, This3.Bool add) 
method 
This0 remove(This3.Size that) }
CellNext: {implements This1.Cell
mut method 
Any #val() 
read method 
Any val() 
mut method 
This1.Cell #next() 
read method 
This1.Cell next() 
class method 
mut This0 #apply(Any val, This1.Cell next) 
refine method 
Any get(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.val())
        )
      )
    Void unused1=return this.next().get(that:that.#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused3=b.#0()
        b
        ))).#bang()
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().set(that:that.#less(that:This3.Size.#from(builder:(
          capsule This3.S.SBuilder b0=This3.Size.#builder()
          Void unused5=b0.#1()
          b0
          ))), val:val, add:add)))
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched3 void
      
      (return This0.#apply(val:val, next:this))
      )
    Void unused2=return This0.#apply(val:val, next:this.next())
    void
    )
  
  catch return capsule This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().remove(that:that.#less(that:This3.Size.#from(builder:(
          capsule This3.S.SBuilder b0=This3.Size.#builder()
          Void unused4=b0.#1()
          b0
          ))))))
        )
      )
    Void unused1=return this.next()
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
CellEnd: {implements This1.Cell
class method 
mut This0 #apply() 
refine method 
Any get(This3.Size that) error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#g()
  Void unused8=b.#e()
  Void unused9=b.#t()
  b
  ))
refine method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (error This3.X.#from(builder:(
          capsule This3.S.SBuilder b=This3.X.#builder()
          Void unused4=b.#C()
          Void unused5=b.#e()
          Void unused6=b.#l()
          Void unused7=b.#l()
          Void unused8=b.#E()
          Void unused9=b.#n()
          Void unused10=b.#d()
          Void unused11=b.#dot()
          Void unused12=b.#s()
          Void unused13=b.#e()
          Void unused14=b.#t()
          Void unused15=b.#1()
          b
          )))
        )
      )
    Void unused1=(
      This3.Bool cond0=that.#equalequal(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused16=b0.#0()
        b0
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This1.CellNext.#apply(val:val, next:this))
        )
      )
    Void unused2=error This3.X.#from(builder:(
      capsule This3.S.SBuilder b1=This3.X.#builder()
      Void unused18=b1.#C()
      Void unused19=b1.#e()
      Void unused20=b1.#l()
      Void unused21=b1.#l()
      Void unused22=b1.#E()
      Void unused23=b1.#n()
      Void unused24=b1.#d()
      Void unused25=b1.#dot()
      Void unused26=b1.#s()
      Void unused27=b1.#e()
      Void unused28=b1.#t()
      Void unused29=b1.#2()
      b1
      ))
    void
    )
  
  catch return capsule This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.Size that) error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#r()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#o()
  Void unused11=b.#v()
  Void unused12=b.#e()
  b
  ))}}
VectorTrait: {
class method 
Library #apply()  {implements This3.Concept.ToS, This3.Concept.Classable
mut method 
mut This0.MutListT #inner() 
read method 
read This0.MutListT inner() 
class method 
mut This0 #apply(fwd mut This0.MutListT inner) 
class method 
This0 #immK(This0.MutListT inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This0.MutListT.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This0.Elem that) this.add(right:that)
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This0.Elem val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
This0.Elem left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This0.Elem right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This0.MutListT rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This0.Elem val) (
  mut This0.MutListT rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This0.Elem that) (
  mut This0.MutListT rcv48=this.#inner()
  rcv48.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This0.Elem that) (
  mut This0.MutListT rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This0.Elem val) this.#inner().add(that:that, val:val)
mut method 
Void add(This0.Elem right) (
  mut This0.MutListT rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This0.Elem left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This0.Elem that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This0.Elem that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This0.Elem that) (/*insertion
*/this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This0.Elem that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0.Elem that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This0.Elem filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This0.Elem filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine read method 
class This3.Concept.Classable class() 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
MutListT: {implements This4.Concept.ToS
read method 
This4.Size size() 
class method 
mut This0 empty() 
read method 
Any val(This4.Size that) 
mut method 
Void #apply(This4.Size that, Any val) 
mut method 
Void add(This4.Size that, Any val) 
mut method 
Void remove(This4.Size that) 
method 
This0 without(This4.Size that) 
method 
This0 withAlso(This4.Size that, Any val) 
method 
This0 with(This4.Size that, Any val) 
refine read method 
This4.S toS() }
Elem: {}
Cast: {
class method 
This1.Elem #apply(Any that) (
  Void unused=(
    Void unused0=(
      This1.Elem that0=(
        Void unused2=return that
        
        catch return This1.Elem casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.CollectionErrors.cast()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This2.MutListT that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This2.Elem filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Elem #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This1.MutListT #_that() 
read method 
read This1.MutListT _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This1.MutListT that() this._that()
class method 
lent This0 #apply(read This1.MutListT _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This1.MutListT #_that() 
read method 
read This1.MutListT _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This1.Elem #filled() 
read method 
This1.Elem filled() 
read method 
read This1.MutListT that() this._that()
class method 
lent This0 #apply(read This1.MutListT _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This1.Elem filled) 
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo, This1.Elem filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This1.MutListT #that() 
read method 
read This1.MutListT that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This1.Elem that) (
  mut This1.MutListT rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}}
CodeEq: {
class method 
Library #apply()  {implements This3.Concept.Equals
read method 
This3.Size size() 
read method 
This0.Elem val(This3.Size that) 
class method 
mut This0 #seqBuilder() 
class method 
mut This0 #from(mut This0 seqBuilder) 
mut method 
Void #add(This0.Elem that) 
read method 
lent This0.IteratorVal vals() 
read method 
This3.Bool contains(This0.Elem that) (/*################# operators
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This0.Elem that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This0.Elem that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This2.IterationFailure catched13 (return This3.Bool.false())
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This0.Elem val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This0.Elem val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) 
method 
This0 withoutLeft(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0.Elem val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) 
mut method 
Void removeAll(This0.Elem val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Elem: {implements This4.Concept.Equals
refine read method 
This4.Bool #equalequal(read Any that) }
IteratorVal: {
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
This1.Elem #inner() 
read method 
Void #close() }}}}
Strings: {implements This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
mut method 
mut This1.Collections.MutListAny #inner() 
read method 
read This1.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This1.Collections.MutListAny inner) 
class method 
This0 #immK(This1.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This1.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This1.Size #default#val(Void that) This1.Size
read method 
This1.S left() This0.Cast.#apply(that:this.inner().val(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.S right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This1.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This1.Size.#from(builder:(
    capsule This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This1.Size that, This1.S val) (
  mut This1.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1.S that) (
  mut This1.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This1.Size.#from(builder:(
    capsule This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.S that) (
  mut This1.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This1.Size.#from(builder:(
    capsule This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This1.Size that, This1.S val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.S right) (
  mut This1.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1.S left) this.#inner().add(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.S that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This1.Size that, This1.S val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.S that) this.with(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.S that) (/*insertion
*/this.with(that:this.size().#less(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.Size that, This1.S val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.S that) this.withAlso(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.S that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 withoutLeft() this.without(index:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This1.Size from, This1.Size maxTo, This1.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.Size minTo) this.vals(from:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.Size from, This1.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This1.Size from, This1.Size maxTo, This1.Size minTo, This1.S filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Size minTo, This1.S filled) this.vals(from:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Size from, This1.Size to, This1.S filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.S filled) this.vals(from:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This1.Size from, This1.Size maxTo, This1.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.Size minTo) this.#vals(from:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.Size from, This1.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b0=This1.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b1=This1.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This1.S toS() this.inner().toS()
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size size() this.inner().size()
read method 
This1.S val(This1.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.S that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  capsule This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This1.Bool contains(This1.S that) (/*################# operators
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This1.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This1.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.S that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This1.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This1.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This1.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This1.Bool.true()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This1.S that) this.contains(that:that)
read method 
This1.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This1.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This1.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This1.Collections.IterationFailure catched13 (return This1.Bool.false())
    
    (
      Void unused15=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size indexOfLeft(This1.S val) (
  Void unused=(
    This1.Size size=this.size()
    var This1.Size pos=This1.Size.#from(builder:(
      capsule This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This1.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This1.Size.#from(builder:(
            capsule This1.S.SBuilder b0=This1.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b1=This1.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size indexOfRight(This1.S val) (
  Void unused=(
    var This1.Size pos=this.size().#less(that:This1.Size.#from(builder:(
      capsule This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This1.Bool cond0=(
          This1.Size opNorm=pos
          This1.Size.#from(builder:(
            capsule This1.S.SBuilder b0=This1.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This1.Size.#from(builder:(
            capsule This1.S.SBuilder b1=This1.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b2=This1.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This1.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          capsule This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          capsule This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.S val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This1.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1.S val) (
  Void unused=(
    var This1.Size pos=This1.Size.#from(builder:(
      capsule This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This1.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b0=This1.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          capsule This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          capsule This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2.S #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2.S that0=(
        Void unused2=return that
        
        catch return This2.S casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() 
read method 
This3.S filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.S #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This2.Collections.MutListAny #_that() 
read method 
read This2.Collections.MutListAny _that() 
mut method 
Void from(This2.Size that) 
mut method 
This2.Size #from() 
read method 
This2.Size from() 
mut method 
This2.Size #maxTo() 
read method 
This2.Size maxTo() 
mut method 
This2.Size #minTo() 
read method 
This2.Size minTo() 
mut method 
This2.S #filled() 
read method 
This2.S filled() 
read method 
read This2.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This2.Collections.MutListAny _that, This2.Size from, This2.Size maxTo, This2.Size minTo, This2.S filled) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo, This2.S filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This2.Bool isFill() This2.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This2.Collections.MutListAny #that() 
read method 
read This2.Collections.MutListAny that() 
mut method 
Void from(This2.Size that) 
mut method 
This2.Size #from() 
read method 
This2.Size from() 
mut method 
This2.Size #maxTo() 
read method 
This2.Size maxTo() 
mut method 
This2.Size #minTo() 
read method 
This2.Size minTo() 
class method 
mut This0 #apply(mut This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) 
mut method 
Void inner(This2.S that) (
  mut This2.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.X.#from(builder:(
  capsule This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This2.Collections.MutListAny #_that() 
read method 
read This2.Collections.MutListAny _that() 
mut method 
Void from(This2.Size that) 
mut method 
This2.Size #from() 
read method 
This2.Size from() 
mut method 
This2.Size #maxTo() 
read method 
This2.Size maxTo() 
mut method 
This2.Size #minTo() 
read method 
This2.Size minTo() 
read method 
read This2.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This2.Collections.MutListAny _that, This2.Size from, This2.Size maxTo, This2.Size minTo) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.X.#from(builder:(
  capsule This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
SafeOperators: {/*@plugin
L42.is/connected/withSafeOperators
*/
class method 
Library makeMethod(Library that, This1.Path path, This1.Selector selector, This1.S mdfs, This1.Size exceptionN) use This0 check makeMethod(that:that, path:path.#binaryRepr(), selector:selector.#binaryRepr(), mdfs:mdfs.#binaryRepr(), exceptionN:exceptionN.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  capsule This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#m()
  Void unused14=b.#a()
  Void unused15=b.#k()
  Void unused16=b.#e()
  Void unused17=b.#M()
  Void unused18=b.#e()
  Void unused19=b.#t()
  Void unused20=b.#h()
  Void unused21=b.#o()
  Void unused22=b.#d()
  Void unused23=b.#oRound()
  Void unused24=b.#t()
  Void unused25=b.#h()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#comma()
  Void unused29=b.#p()
  Void unused30=b.#a()
  Void unused31=b.#t()
  Void unused32=b.#h()
  Void unused33=b.#comma()
  Void unused34=b.#s()
  Void unused35=b.#e()
  Void unused36=b.#l()
  Void unused37=b.#e()
  Void unused38=b.#c()
  Void unused39=b.#t()
  Void unused40=b.#o()
  Void unused41=b.#r()
  Void unused42=b.#comma()
  Void unused43=b.#m()
  Void unused44=b.#d()
  Void unused45=b.#f()
  Void unused46=b.#s()
  Void unused47=b.#comma()
  Void unused48=b.#e()
  Void unused49=b.#x()
  Void unused50=b.#c()
  Void unused51=b.#e()
  Void unused52=b.#p()
  Void unused53=b.#t()
  Void unused54=b.#i()
  Void unused55=b.#o()
  Void unused56=b.#n()
  Void unused57=b.#N()
  Void unused58=b.#cRound()
  b
  ))
class method 
Library liftValue(Any that, This1.Selector selector, Library lib) use This0 check liftValue(that:that, selector:selector.#binaryRepr(), lib:lib) error This1.System.Guard.PluginFailure.#from(builder:(
  capsule This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#l()
  Void unused14=b.#i()
  Void unused15=b.#f()
  Void unused16=b.#t()
  Void unused17=b.#V()
  Void unused18=b.#a()
  Void unused19=b.#l()
  Void unused20=b.#u()
  Void unused21=b.#e()
  Void unused22=b.#oRound()
  Void unused23=b.#t()
  Void unused24=b.#h()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#comma()
  Void unused28=b.#s()
  Void unused29=b.#e()
  Void unused30=b.#l()
  Void unused31=b.#e()
  Void unused32=b.#c()
  Void unused33=b.#t()
  Void unused34=b.#o()
  Void unused35=b.#r()
  Void unused36=b.#comma()
  Void unused37=b.#l()
  Void unused38=b.#i()
  Void unused39=b.#b()
  Void unused40=b.#cRound()
  b
  ))}
Enum: {
class method 
Library #leftrightleft(Library that) This1.UnsafeRefactor.MiniData.#leftrightleft(that:This1.UnsafeRefactor.Compose.#apply(that:this.enumTrait(), and:that))
class method 
Library enumTrait()  {implements This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.Size #inner() 
read method 
This2.Size inner() 
class method 
This0 #apply(This2.Size inner) 
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This2.S name() This0.names().val(that:this.inner())
read method 
This2.Bool equals(read This0 that) this.inner().#equalequal(that:that.inner())
class method 
This2.Strings names() 
class method 
This0 fromS(This2.S that) (
  Void unused=(
    Void unused0=(
      capsule This2.Size.Iterator n=This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        lent This2.Strings.IteratorVal d=This0.names().vals()
        (
          Void unused3=loop (
            Void unused4=n.#next()
            
            catch exception Void catched2 (
              Void unused5=(
                Void unused8=d.#next()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused6=(
                Void unused9=n.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              Void unused7=(
                Void unused10=d.#checkEnd()
                
                catch exception Void catched5 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=d.#next()
              
              catch exception Void catched7 (
                Void unused12=(
                  Void unused14=n.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=d.#checkEnd()
                  
                  catch exception Void catched9 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=d.#inner().#equalequal(that:that)
                (
                  Void unused16=cond.#checkTrue()
                  
                  catch exception Void catched12 void
                  
                  (return This0.#apply(inner:n.#inner()))
                  )
                ))
              )
            )
          
          catch exception Void catched13 void
          
          void
          )
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv64=(
        This0.ParseFail rcv65=This0.ParseFail.#from(builder:(
          capsule This2.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused17=b0.#T()
          Void unused18=b0.#h()
          Void unused19=b0.#e()
          Void unused20=b0.#space()
          Void unused21=b0.#p()
          Void unused22=b0.#r()
          Void unused23=b0.#o()
          Void unused24=b0.#v()
          Void unused25=b0.#i()
          Void unused26=b0.#d()
          Void unused27=b0.#e()
          Void unused28=b0.#d()
          Void unused29=b0.#space()
          Void unused30=b0.#s()
          Void unused31=b0.#t()
          Void unused32=b0.#r()
          Void unused33=b0.#i()
          Void unused34=b0.#n()
          Void unused35=b0.#g()
          Void unused36=b0.#space()
          Void unused37=b0.#i()
          Void unused38=b0.#s()
          Void unused39=b0.#space()
          Void unused40=b0.#n()
          Void unused41=b0.#o()
          Void unused42=b0.#t()
          Void unused43=b0.#space()
          Void unused44=b0.#v()
          Void unused45=b0.#a()
          Void unused46=b0.#l()
          Void unused47=b0.#i()
          Void unused48=b0.#d()
          Void unused49=b0.#colon()
          Void unused50=b0.#space()
          b0
          ))
        rcv65.#from(seqBuilder:(
          capsule This2.S.SConcat b1=rcv65.#seqBuilder()
          Void unused51=b1.#add(that:that)
          b1
          ))
        )
      rcv64.#from(builder:(
        capsule This2.S.SBuilder b2=rcv64.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
read This2.Concept.Classable cast(read This2.Concept.Classable that) 
refine class method 
mut This2.Concept.Classable #cast(mut This2.Concept.Classable that) 
refine read method 
class This2.Concept.Classable class() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool #equalequal(read Any that) 
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) 
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This3.Message.Opt responseOf() this.cause()
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    var This3.S res=This0.kind()
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        capsule This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This3.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool equals(read This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This4.S #that() 
read method 
This4.S that() 
class method 
This0 #apply(This4.S that) 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
This$: {implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine read method 
This3.S toS() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine read method 
class This3.Concept.Classable class() 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool #equalequal(read Any that) }
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This3.Collections.MutListAny inner) 
class method 
This0 #immK(This3.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
This1.This$ left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.This$ right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This3.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1.This$ val) (
  mut This3.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1.This$ that) (
  mut This3.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.This$ that) (
  mut This3.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1.This$ val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.This$ right) (
  mut This3.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1.This$ left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.This$ that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1.This$ val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.This$ that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.This$ that) (/*insertion
*/this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1.This$ val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.This$ that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.This$ that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1.This$ filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1.This$ filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1.This$ filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.This$ filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size size() this.inner().size()
read method 
This1.This$ val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.This$ that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This3.Bool contains(This1.This$ that) (/*################# operators
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.This$ that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1.This$ that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This3.Collections.IterationFailure catched13 (return This3.Bool.false())
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1.This$ val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1.This$ val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1.This$ val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.This$ val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.This$ val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1.This$ val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.This$ val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.This$ val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2.This$ #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2.This$ that0=(
        Void unused2=return that
        
        catch return This2.This$ casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2.This$ result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3.This$ filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.This$ #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.This$ result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.This$ #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.This$ result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This2.This$ #filled() 
read method 
This2.This$ filled() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2.This$ filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2.This$ filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.This$ #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.This$ result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This4.Collections.MutListAny #that() 
read method 
read This4.Collections.MutListAny that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This2.This$ that) (
  mut This4.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2.This$ filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2.This$ filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.This$ #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.This$ result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}}
Location: {interface implements This1.Concept.Base/*that is equals, toS and "know your class"
*/, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
method 
This1.Size originSize() 
method 
This0.Origin origin(This1.Size that) 
method 
This0 location() 
method 
This0.Doc doc() 
refine read method 
This1.S toS() 
refine class method 
read This1.Concept.Classable cast(read This1.Concept.Classable that) 
refine class method 
mut This1.Concept.Classable #cast(mut This1.Concept.Classable that) 
refine read method 
class This1.Concept.Classable class() 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
refine read method 
This1.Bool #equalequal(read Any that) 
NotAvailable: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Mdf: {implements This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.Size #inner() 
read method 
This2.Size inner() 
class method 
This0 #apply(This2.Size inner) 
read method 
This2.S name() This0.names().val(that:this.inner())
read method 
This2.Bool equals(read This0 that) this.inner().#equalequal(that:that.inner())
class method 
This0 fromS(This2.S that) (
  Void unused=(
    Void unused0=(
      capsule This2.Size.Iterator n=This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        lent This2.Strings.IteratorVal d=This0.names().vals()
        (
          Void unused3=loop (
            Void unused4=n.#next()
            
            catch exception Void catched2 (
              Void unused5=(
                Void unused8=d.#next()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused6=(
                Void unused9=n.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              Void unused7=(
                Void unused10=d.#checkEnd()
                
                catch exception Void catched5 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=d.#next()
              
              catch exception Void catched7 (
                Void unused12=(
                  Void unused14=n.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=d.#checkEnd()
                  
                  catch exception Void catched9 void
                  
                  void
                  )
                exception void
                )
              
              (
                This2.Bool cond=d.#inner().#equalequal(that:that)
                (
                  Void unused16=cond.#checkTrue()
                  
                  catch exception Void catched12 void
                  
                  return This0.#apply(inner:n.#inner())
                  )
                )
              )
            )
          
          catch exception Void catched13 void
          
          void
          )
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv64=(
        This0.ParseFail rcv65=This0.ParseFail.#from(builder:(
          capsule This2.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused17=b0.#T()
          Void unused18=b0.#h()
          Void unused19=b0.#e()
          Void unused20=b0.#space()
          Void unused21=b0.#p()
          Void unused22=b0.#r()
          Void unused23=b0.#o()
          Void unused24=b0.#v()
          Void unused25=b0.#i()
          Void unused26=b0.#d()
          Void unused27=b0.#e()
          Void unused28=b0.#d()
          Void unused29=b0.#space()
          Void unused30=b0.#s()
          Void unused31=b0.#t()
          Void unused32=b0.#r()
          Void unused33=b0.#i()
          Void unused34=b0.#n()
          Void unused35=b0.#g()
          Void unused36=b0.#space()
          Void unused37=b0.#i()
          Void unused38=b0.#s()
          Void unused39=b0.#space()
          Void unused40=b0.#n()
          Void unused41=b0.#o()
          Void unused42=b0.#t()
          Void unused43=b0.#space()
          Void unused44=b0.#v()
          Void unused45=b0.#a()
          Void unused46=b0.#l()
          Void unused47=b0.#i()
          Void unused48=b0.#d()
          Void unused49=b0.#colon()
          Void unused50=b0.#space()
          b0
          ))
        rcv65.#from(seqBuilder:(
          capsule This2.S.SConcat b1=rcv65.#seqBuilder()
          Void unused51=b1.#add(that:that)
          b1
          ))
        )
      rcv64.#from(builder:(
        capsule This2.S.SBuilder b2=rcv64.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This2.Strings names() This2.Strings.#from(seqBuilder:(
  capsule This2.Strings b=This2.Strings.#seqBuilder()
  Void unused=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b0=This2.S.#builder()
    Void unused7=b0.#c()
    Void unused8=b0.#m()
    Void unused9=b0.#p()
    Void unused10=b0.#I()
    Void unused11=b0.#m()
    Void unused12=b0.#m()
    b0
    )))
  Void unused0=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b1=This2.S.#builder()
    Void unused13=b1.#c()
    Void unused14=b1.#m()
    Void unused15=b1.#p()
    Void unused16=b1.#M()
    Void unused17=b1.#u()
    Void unused18=b1.#t()
    b1
    )))
  Void unused1=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b2=This2.S.#builder()
    Void unused19=b2.#c()
    Void unused20=b2.#m()
    Void unused21=b2.#p()
    Void unused22=b2.#R()
    Void unused23=b2.#e()
    Void unused24=b2.#a()
    Void unused25=b2.#d()
    b2
    )))
  Void unused2=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b3=This2.S.#builder()
    Void unused26=b3.#c()
    Void unused27=b3.#m()
    Void unused28=b3.#p()
    Void unused29=b3.#L()
    Void unused30=b3.#e()
    Void unused31=b3.#n()
    Void unused32=b3.#t()
    b3
    )))
  Void unused3=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b4=This2.S.#builder()
    Void unused33=b4.#c()
    Void unused34=b4.#m()
    Void unused35=b4.#p()
    Void unused36=b4.#C()
    Void unused37=b4.#a()
    Void unused38=b4.#p()
    Void unused39=b4.#s()
    Void unused40=b4.#u()
    Void unused41=b4.#l()
    Void unused42=b4.#e()
    b4
    )))
  Void unused4=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b5=This2.S.#builder()
    Void unused43=b5.#c()
    Void unused44=b5.#m()
    Void unused45=b5.#p()
    Void unused46=b5.#C()
    Void unused47=b5.#l()
    Void unused48=b5.#a()
    Void unused49=b5.#s()
    Void unused50=b5.#s()
    b5
    )))
  Void unused5=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b6=This2.S.#builder()
    Void unused51=b6.#f()
    Void unused52=b6.#w()
    Void unused53=b6.#d()
    Void unused54=b6.#I()
    Void unused55=b6.#m()
    Void unused56=b6.#m()
    b6
    )))
  Void unused6=b.#add(that:This2.S.#from(builder:(
    capsule This2.S.SBuilder b7=This2.S.#builder()
    Void unused57=b7.#f()
    Void unused58=b7.#w()
    Void unused59=b7.#d()
    Void unused60=b7.#M()
    Void unused61=b7.#u()
    Void unused62=b7.#t()
    b7
    )))
  b
  ))
class method 
This0 cmpImm() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This2.Bool isCmpImm() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This0 cmpMut() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
method 
This2.Bool isCmpMut() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
class method 
This0 cmpRead() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
method 
This2.Bool isCmpRead() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
class method 
This0 cmpLent() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#3()
  b
  )))
method 
This2.Bool isCmpLent() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#3()
  b
  )))
class method 
This0 cmpCapsule() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#4()
  b
  )))
method 
This2.Bool isCmpCapsule() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#4()
  b
  )))
class method 
This0 cmpClass() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#5()
  b
  )))
method 
This2.Bool isCmpClass() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#5()
  b
  )))
class method 
This0 fwdImm() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#6()
  b
  )))
method 
This2.Bool isFwdImm() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#6()
  b
  )))
class method 
This0 fwdMut() This0.#apply(inner:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#7()
  b
  )))
method 
This2.Bool isFwdMut() this.inner().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#7()
  b
  )))
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) 
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This3.Message.Opt responseOf() this.cause()
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote())))
        )
      )
    var This3.S res=This0.kind()
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        capsule This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This3.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool equals(read This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This4.S #that() 
read method 
This4.S that() 
class method 
This0 #apply(This4.S that) 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This3.Collections.MutListAny inner) 
class method 
This0 #immK(This3.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This3.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size size() this.inner().size()
read method 
This1 val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This3.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This3.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This3.Collections.IterationFailure catched13 return This3.Bool.false()
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This4.Collections.MutListAny #that() 
read method 
read This4.Collections.MutListAny that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
Origin: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Origin
*/implements This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
mut method 
This2.S #fileName() This2.S.#from(binaryRepr:(
  Library res=use This0 check fileName(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: #fileName()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.fileName(_this)\u000a
*/})
  res
  ))
read method 
This2.S fileName() This2.S.#from(binaryRepr:(
  Library res=use This0 check fileName(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: fileName()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.fileName(_this)\u000a
*/})
  res
  ))
mut method 
This2.Size #lineStart() This2.Size.#from(binaryRepr:(
  Library res=use This0 check lineStart(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: #lineStart()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.lineStart(_this)\u000a
*/})
  res
  ))
read method 
This2.Size lineStart() This2.Size.#from(binaryRepr:(
  Library res=use This0 check lineStart(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: lineStart()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.lineStart(_this)\u000a
*/})
  res
  ))
mut method 
This2.Size #lineEnd() This2.Size.#from(binaryRepr:(
  Library res=use This0 check lineEnd(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: #lineEnd()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.lineEnd(_this)\u000a
*/})
  res
  ))
read method 
This2.Size lineEnd() This2.Size.#from(binaryRepr:(
  Library res=use This0 check lineEnd(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: lineEnd()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.lineEnd(_this)\u000a
*/})
  res
  ))
mut method 
This2.Size #columnStart() This2.Size.#from(binaryRepr:(
  Library res=use This0 check columnStart(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: #columnStart()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.columnStart(_this)\u000a
*/})
  res
  ))
read method 
This2.Size columnStart() This2.Size.#from(binaryRepr:(
  Library res=use This0 check columnStart(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: columnStart()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.columnStart(_this)\u000a
*/})
  res
  ))
mut method 
This2.Size #columnEnd() This2.Size.#from(binaryRepr:(
  Library res=use This0 check columnEnd(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: #columnEnd()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.columnEnd(_this)\u000a
*/})
  res
  ))
read method 
This2.Size columnEnd() This2.Size.#from(binaryRepr:(
  Library res=use This0 check columnEnd(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: columnEnd()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.columnEnd(_this)\u000a
*/})
  res
  ))
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
class method 
This0 #apply(This2.S fileName, This2.Size lineStart, This2.Size lineEnd, This2.Size columnStart, This2.Size columnEnd) This0.#from(binaryRepr:(
  Library res=use This0 check new(_1_java%lang%String:fileName.#binaryRepr(), _2_int:lineStart.#binaryRepr(), _3_int:lineEnd.#binaryRepr(), _4_int:columnStart.#binaryRepr(), _5_int:columnEnd.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: #apply(fileName,lineStart,lineEnd,columnStart,columnEnd)\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.new(_1_java%lang%String,_2_int,_3_int,_4_int,_5_int)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This2.S toS() This2.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Origin\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Origin.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This3.Collections.MutListAny inner) 
class method 
This0 #immK(This3.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This3.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size size() this.inner().size()
read method 
This1 val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This3.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This3.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This3.Collections.IterationFailure catched13 return This3.Bool.false()
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This4.Collections.MutListAny #that() 
read method 
read This4.Collections.MutListAny that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
PUnresponsive: {
class method 
Library #leftrightleft(Library that) This2.UnsafeRefactor.Compose.compose(left:This0.#apply(), right:that)
class method 
Library #apply()  {
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr}}
This$Impl: {
class method 
Library #leftrightleft(Library that) This2.UnsafeRefactor.Compose.compose(left:This0.#apply(), right:that)
class method 
Library #apply()  {implements This2, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine read method 
class This0 class() 
method 
This2.Origin.List origins() This2.Origin.List.#from(seqBuilder:(
  capsule This2.Origin.List b=This2.Origin.List.#seqBuilder()
  Void unused=(
    capsule This3.Size.Iterator i=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This3.Size originSize() 
refine method 
This2.Origin origin(This3.Size that) 
refine method 
This2 location() 
refine method 
This2.Doc doc() 
refine read method 
This3.S toS() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool #equalequal(read Any that) }}
PlgClass: {
class method 
Library #leftrightleft(Library that) This1.PUnresponsive.#leftrightleft(that:This2.UnsafeRefactor.MiniData.#leftrightleft(that:This1.This$Impl.#leftrightleft(that:that)))}
Lib: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Lib
*/implements This1, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This1.Origin.List origins() This1.Origin.List.#from(seqBuilder:(
  capsule This1.Origin.List b=This1.Origin.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
method 
This0.List nesteds() This0.List.#from(seqBuilder:(
  capsule This0.List b=This0.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.nestedSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.nested(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
method 
This0.List allNesteds() This0.List.#from(seqBuilder:(
  capsule This0.List b0=This0.List.#seqBuilder()
  Void unused=b0.#add(that:this)
  b0
  )).#plusplus(that:This0.List.#from(seqBuilder:(
  capsule This0.List b=This0.List.#seqBuilder()
  Void unused0=(
    lent This0.List.IteratorVal nc=this.nesteds().vals()
    (
      Void unused1=loop (
        Void unused2=nc.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=nc.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          lent This0.List.IteratorVal nci=nc.#inner().allNesteds().vals()
          (
            Void unused5=loop (
              Void unused6=nci.#next()
              
              catch exception Void catched5 (
                Void unused7=(
                  Void unused8=nci.#checkEnd()
                  
                  catch exception Void catched6 void
                  
                  void
                  )
                exception void
                )
              
              (
                Void unused9=b.#add(that:nci.#inner())
                void
                )
              )
            
            catch exception Void catched9 void
            
            void
            )
          )
        )
      
      catch exception Void catched10 void
      
      void
      )
    )
  b
  )))
method 
class This2.Path #default#nested(Void path) This2.Path
method 
This0 nested(This2.Path path) exception This1.NotAvailable (
  Void unused=(/*with ni in this.root().allNesteds().vals() (
      if ni.path()==this.path()++path (return ni)
      )
    exception NotAvailable"Path "[path]"not present"
    more performance using navigate*/
    Void unused0=return this.navigate(that:path)
    
    catch error Library x exception (
      This1.NotAvailable.Continue rcv66=(
        This1.NotAvailable rcv67=This1.NotAvailable.#from(builder:(
          capsule This2.S.SBuilder b=This1.NotAvailable.#builder()
          Void unused1=b.#P()
          Void unused2=b.#a()
          Void unused3=b.#t()
          Void unused4=b.#h()
          Void unused5=b.#space()
          b
          ))
        rcv67.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv67.#seqBuilder()
          Void unused6=b0.#add(that:path)
          b0
          ))
        )
      rcv66.#from(builder:(
        capsule This2.S.SBuilder b1=rcv66.#builder()
        Void unused7=b1.#n()
        Void unused8=b1.#o()
        Void unused9=b1.#t()
        Void unused10=b1.#space()
        Void unused11=b1.#p()
        Void unused12=b1.#r()
        Void unused13=b1.#e()
        Void unused14=b1.#s()
        Void unused15=b1.#e()
        Void unused16=b1.#n()
        Void unused17=b1.#t()
        b1
        ))
      )
    
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
class This2.Path #default#has(Void path) This2.Path
method 
This2.Bool has(This2.Path path) (
  This0 unused=this.nested(path:path)
  
  catch exception This1.NotAvailable catched This2.Bool.false()
  
  This2.Bool.true()
  )
method 
This1.Method.List methods() This1.Method.List.#from(seqBuilder:(
  capsule This1.Method.List b=This1.Method.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.methodSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.method(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
method 
class This2.Selector #default#method(Void selector) This2.Selector
method 
This1.Method method(This2.Selector selector) exception This1.NotAvailable (
  Void unused=(
    Void unused0=(
      lent This1.Method.List.IteratorVal mi=this.methods().vals()
      (
        Void unused2=loop (
          Void unused3=mi.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=mi.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This2.Bool cond=mi.#inner().selector().#equalequal(that:selector)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return mi.#inner()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=exception (
      This1.NotAvailable.Continue rcv68=(
        This1.NotAvailable rcv69=This1.NotAvailable.#from(builder:(
          capsule This2.S.SBuilder b=This1.NotAvailable.#builder()
          Void unused7=b.#S()
          Void unused8=b.#e()
          Void unused9=b.#l()
          Void unused10=b.#e()
          Void unused11=b.#c()
          Void unused12=b.#t()
          Void unused13=b.#o()
          Void unused14=b.#r()
          Void unused15=b.#space()
          b
          ))
        rcv69.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv69.#seqBuilder()
          Void unused16=b0.#add(that:selector)
          b0
          ))
        )
      rcv68.#from(builder:(
        capsule This2.S.SBuilder b1=rcv68.#builder()
        Void unused17=b1.#n()
        Void unused18=b1.#o()
        Void unused19=b1.#t()
        Void unused20=b1.#space()
        Void unused21=b1.#p()
        Void unused22=b1.#r()
        Void unused23=b1.#e()
        Void unused24=b1.#s()
        Void unused25=b1.#e()
        Void unused26=b1.#n()
        Void unused27=b1.#t()
        b1
        ))
      )
    void
    )
  
  catch return This1.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
class This2.Selector #default#has(Void selector) This2.Selector
method 
This2.Bool has(This2.Selector selector) (
  This1.Method unused=this.method(selector:selector)
  
  catch exception This1.NotAvailable catched This2.Bool.false()
  
  This2.Bool.true()
  )
method 
This1.Type.Implemented.List implements() This1.Type.Implemented.List.#from(seqBuilder:(
  capsule This1.Type.Implemented.List b=This1.Type.Implemented.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.implementedSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.implemented(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
method 
This2.Bool implements(class Any classObj) (
  Void unused=(
    Void unused0=(
      This2.Bool cond=This1.Type.RefTo.Binded.equalsClassObj(that:Any, and:classObj)
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This2.Bool.true()
        )
      )
    Void unused1=(
      lent This1.Type.Implemented.List.IteratorVal ti=this.implements().vals()
      (
        Void unused4=loop (
          Void unused5=ti.#next()
          
          catch exception Void catched2 (
            Void unused6=(
              Void unused7=ti.#checkEnd()
              
              catch exception Void catched3 void
              
              void
              )
            exception void
            )
          
          (
            This1.Type.RefTo ri=ti.#inner().refTo()
            (
              This1.Type.RefTo.Binded ri0=(
                Void unused8=return ri
                
                catch return This1.Type.RefTo.Binded casted casted
                
                catch return Any casted exception void
                
                error  {/*@stringU
CastT-Should be unreachable code
*/}
                )
              
              catch exception Void catched7 void
              
              (
                Void unused9=(
                  class Any ci=ri0.referredClassObj()
                  (
                    This2.Bool cond0=This1.Type.RefTo.Binded.equalsClassObj(that:ci, and:classObj)
                    (
                      Void unused10=cond0.#checkTrue()
                      
                      catch exception Void catched10 void
                      
                      return This2.Bool.true()
                      )
                    )
                  )
                void
                )
              )
            )
          )
        
        catch exception Void catched12 void
        
        void
        )
      )
    Void unused2=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
class This2.Path #default#implements(Void path) This2.Path
method 
This2.Bool implements(This2.Path path) (
  Void unused=(
    Void unused0=(
      lent This1.Type.Implemented.List.IteratorVal ti=this.implements().vals()
      (
        Void unused2=loop (
          Void unused3=ti.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=ti.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This1.Type.RefTo ri=ti.#inner().refTo()
            (
              This1.Type.RefTo.Lib ri0=(
                Void unused6=return ri
                
                catch return This1.Type.RefTo.Lib casted casted
                
                catch return Any casted exception void
                
                error  {/*@stringU
CastT-Should be unreachable code
*/}
                )
              
              catch exception Void catched5 void
              
              (
                Void unused7=(
                  This0 libi=ri0.referredLib()
                  (
                    This2.Bool cond=path.#equalequal(that:libi.path())
                    (
                      Void unused8=cond.#checkTrue()
                      
                      catch exception Void catched8 void
                      
                      return This2.Bool.true()
                      )
                    )
                  )
                void
                )
              )
            )
          )
        
        catch exception Void catched10 void
        
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply(class Any classObj) This0.newFromClass(that:classObj)
class method 
This0 #apply(Library that) This0.newFromLibrary(that:that)
method 
This0 navigate(This2.Path that) This0.#from(binaryRepr:(
  Library res=use This0 check navigate(_this:this.#binaryRepr(), _1_java%util%List:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: navigate(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.navigate(_this,_1_java%util%List)\u000a
*/})
  res
  ))
class method 
This0 newFromClass(class Any that) This0.#from(binaryRepr:(
  Library res=use This0 check #newFromClass(_1_ast%Ast$Path:that) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: newFromClass(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.#newFromClass(_1_ast%Ast$Path)\u000a
*/})
  res
  ))
class method 
This0 newFromLibrary(Library that) This0.#from(binaryRepr:(
  Library res=use This0 check newFromLibrary(_1_ast%ExpCore$ClassB:that) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: newFromLibrary(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.newFromLibrary(_1_ast%ExpCore$ClassB)\u000a
*/})
  res
  ))
method 
This1.Type.Implemented implemented(This2.Size that) This1.Type.Implemented.#from(binaryRepr:(
  Library res=use This0 check implemented(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: implemented(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.implemented(_this,_1_int)\u000a
*/})
  res
  ))
method 
This2.Size implementedSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check implementedSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: implementedSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.implementedSize(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isBinded() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isBinded(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: isBinded()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.isBinded(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isCloseState() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isCloseState(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: isCloseState()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.isCloseState(_this)\u000a
*/})
  res
  ))
method /*as in EnsureCoherent<><
*/This2.Bool isEnsuredCoherent() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check #isEnsuredCoherent(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: isEnsuredCoherent()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.#isEnsuredCoherent(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isInterface() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isInterface(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: isInterface()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.isInterface(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isPotentialInterface() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isPotentialInterface(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: isPotentialInterface()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.isPotentialInterface(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isRedirectable() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isRedirectable(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: isRedirectable()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.isRedirectable(_this)\u000a
*/})
  res
  ))
method 
This1.Method method(This2.Size that) This1.Method.#from(binaryRepr:(
  Library res=use This0 check method(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: method(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.method(_this,_1_int)\u000a
*/})
  res
  ))
method 
This2.Size methodSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check methodSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: methodSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.methodSize(_this)\u000a
*/})
  res
  ))
method 
This0 nested(This2.Size that) This0.#from(binaryRepr:(
  Library res=use This0 check nested(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: nested(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.nested(_this,_1_int)\u000a
*/})
  res
  ))
method /*empty doc if it is root
*/This1.Doc nestedDoc() This1.Doc.#from(binaryRepr:(
  Library res=use This0 check nestedDoc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: nestedDoc()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.nestedDoc(_this)\u000a
*/})
  res
  ))
method 
This2.Size nestedSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check nestedSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: nestedSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.nestedSize(_this)\u000a
*/})
  res
  ))
method /*last is its name, empty path for root
*/This2.Path path() This2.Path.#from(binaryRepr:(
  Library res=use This0 check path(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: path()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.path(_this)\u000a
*/})
  res
  ))
method 
This0 root() This0.#from(binaryRepr:(
  Library res=use This0 check root(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: root()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.root(_this)\u000a
*/})
  res
  ))
refine method /*implemented but refined
*/This0 location() This0.#from(binaryRepr:(
  Library res=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: location()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.location(_this)\u000a
*/})
  res
  ))
refine method 
This2.Size originSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This1.Origin origin(This2.Size that) This1.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This1.Doc doc() This1.Doc.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This2.S toS() This2.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Lib\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Lib.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This3.Collections.MutListAny inner) 
class method 
This0 #immK(This3.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This3.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size size() this.inner().size()
read method 
This1 val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This3.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This3.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This3.Collections.IterationFailure catched13 return This3.Bool.false()
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This4.Collections.MutListAny #that() 
read method 
read This4.Collections.MutListAny that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
Method: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Method
*/implements This1, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Method.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This1.Origin.List origins() This1.Origin.List.#from(seqBuilder:(
  capsule This1.Origin.List b=This1.Origin.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This1.Lib location() This1.Lib.#from(binaryRepr:(
  Library res=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: location()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.location(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isAbstract() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isAbstract(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: isAbstract()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.isAbstract(_this)\u000a
*/})
  res
  ))
method 
This2.Bool isRefine() This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isRefine(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: isRefine()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.isRefine(_this)\u000a
*/})
  res
  ))
method 
This2.Selector selector() This2.Selector.#from(binaryRepr:(
  Library res=use This0 check selector(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: selector()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.selector(_this)\u000a
*/})
  res
  ))
method 
This1.Type.Return returnType() This1.Type.Return.#from(binaryRepr:(
  Library res=use This0 check returnType(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: returnType()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.returnType(_this)\u000a
*/})
  res
  ))
method 
This2.Size parameterTypeSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check parameterTypeSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: parameterTypeSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.parameterTypeSize(_this)\u000a
*/})
  res
  ))
method 
This1.Type.Parameter parameterType(This2.Size that) This1.Type.Parameter.#from(binaryRepr:(
  Library res=use This0 check parameterType(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: parameterType(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Method.parameterType(_this,_1_int)\u000a
*/})
  res
  ))
method 
This1.Type.Parameter.List parameterTypes() This1.Type.Parameter.List.#from(seqBuilder:(
  capsule This1.Type.Parameter.List b=This1.Type.Parameter.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.parameterTypeSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.parameterType(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
method 
This2.Size exceptionTypeSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check exceptionTypeSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: exceptionTypeSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.exceptionTypeSize(_this)\u000a
*/})
  res
  ))
method 
This1.Type.Exception exceptionType(This2.Size that) This1.Type.Exception.#from(binaryRepr:(
  Library res=use This0 check exceptionType(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: exceptionType(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Method.exceptionType(_this,_1_int)\u000a
*/})
  res
  ))
method 
This1.Type.Exception.List exceptionTypes() This1.Type.Exception.List.#from(seqBuilder:(
  capsule This1.Type.Exception.List b=This1.Type.Exception.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.exceptionTypeSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.exceptionType(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This2.Size originSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This1.Origin origin(This2.Size that) This1.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Method.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This1.Doc doc() This1.Doc.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This2.S toS() This2.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Method\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Method.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This3.Collections.MutListAny inner) 
class method 
This0 #immK(This3.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This3.Size #default#val(Void that) This3.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This3.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size size() this.inner().size()
read method 
This1 val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  capsule This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This3.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This3.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This3.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This3.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This3.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This3.Collections.IterationFailure catched13 return This3.Bool.false()
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    var This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=pos
          This3.Size.#from(builder:(
            capsule This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This3.Size.#from(builder:(
            capsule This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This3.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This3.Size pos=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This3.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This3.Size.#from(builder:(
        capsule This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          capsule This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This4.Collections.MutListAny #that() 
read method 
read This4.Collections.MutListAny that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  capsule This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
Type: {interface implements This1, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
method 
This0.RefTo refTo() 
method 
This2.Size mdfS() 
method 
This1.Mdf mdf() 
refine method 
This2.Size originSize() 
refine method 
This1.Origin origin(This2.Size that) 
refine method 
This1 location() 
refine method 
This1.Doc doc() 
refine read method 
This2.S toS() 
refine class method 
read This2.Concept.Classable cast(read This2.Concept.Classable that) 
refine class method 
mut This2.Concept.Classable #cast(mut This2.Concept.Classable that) 
refine read method 
class This2.Concept.Classable class() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool #equalequal(read Any that) 
DispatchRefTo: {
class method 
This1.RefTo #apply(Library that) (
  Void unused=(
    Void unused0=use This1.RefTo.Lib check instanceof(_this:that) return This1.RefTo.Lib.#from(binaryRepr:that)
    Void unused1=use This1.RefTo.Unavailable check instanceof(_this:that) return This1.RefTo.Unavailable.#from(binaryRepr:that)
    Void unused2=use This1.RefTo.Binded check instanceof(_this:that) return This1.RefTo.Binded.#from(binaryRepr:that)
    Void unused3=use This1.RefTo.Missing check instanceof(_this:that) return This1.RefTo.Missing.#from(binaryRepr:that)
    Void unused4=error that
    void
    )
  
  catch return capsule This1.RefTo result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Return: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Type$Return
*/implements This1, This2, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This3.Bool equals(read This0 that) This3.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Origin.List origins() This2.Origin.List.#from(seqBuilder:(
  capsule This2.Origin.List b=This2.Origin.List.#seqBuilder()
  Void unused=(
    capsule This3.Size.Iterator i=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This2.Method location() This2.Method.#from(binaryRepr:(
  Library res=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: location()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.location(_this)\u000a
*/})
  res
  ))
refine method 
This1.RefTo refTo() This1.DispatchRefTo.#apply(that:use This0 check #refTo(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )).#binaryRepr()))
refine method 
This2.Mdf mdf() This2.Mdf.#apply(inner:this.mdfS())
refine method 
This3.Size mdfS() This3.Size.#from(binaryRepr:(
  Library res=use This0 check mdfS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: mdfS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.mdfS(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size originSize() This3.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This2.Origin origin(This3.Size that) This2.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This2.Doc doc() This2.Doc.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This3.S toS() This3.S.#from(binaryRepr:(
  Library res=use This0 check #toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Return\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Return.#toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Parameter: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Type$Parameter     
*/implements This1, This2, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This3.Bool equals(read This0 that) This3.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Origin.List origins() This2.Origin.List.#from(seqBuilder:(
  capsule This2.Origin.List b=This2.Origin.List.#seqBuilder()
  Void unused=(
    capsule This3.Size.Iterator i=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This2.Method location() This2.Method.#from(binaryRepr:(
  Library res=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: location()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.location(_this)\u000a
*/})
  res
  ))
refine method 
This1.RefTo refTo() This1.DispatchRefTo.#apply(that:use This0 check #refTo(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )).#binaryRepr()))
refine method 
This2.Mdf mdf() This2.Mdf.#apply(inner:this.mdfS())
method 
This3.Size pos() This3.Size.#from(binaryRepr:(
  Library res=use This0 check pos(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: pos()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.pos(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size mdfS() This3.Size.#from(binaryRepr:(
  Library res=use This0 check mdfS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: mdfS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.mdfS(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size originSize() This3.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This2.Origin origin(This3.Size that) This2.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This2.Doc doc() This2.Doc.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This3.S toS() This3.S.#from(binaryRepr:(
  Library res=use This0 check #toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Parameter\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Parameter.#toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals
mut method 
mut This4.Collections.MutListAny #inner() 
read method 
read This4.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This4.Collections.MutListAny inner) 
class method 
This0 #immK(This4.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This4.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This4.Bool isEmpty() this.size().#equalequal(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This4.Size #default#val(Void that) This4.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This4.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This4.Size that, This1 val) (
  mut This4.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This4.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This4.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This4.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This4.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This4.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This4.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size minTo) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size maxTo, This4.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size minTo, This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size minTo) this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b1=This4.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This4.S toS() this.inner().toS()
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size size() this.inner().size()
read method 
This1 val(This4.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This4.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This4.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This4.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.true()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This4.Bool #right(This1 that) this.contains(that:that)
read method 
This4.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This4.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This4.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This4.Collections.IterationFailure catched13 return This4.Bool.false()
    
    (
      Void unused15=return This4.Bool.true()
      void
      )
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfLeft(This1 val) (
  Void unused=(
    This4.Size size=this.size()
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b1=This4.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfRight(This1 val) (
  Void unused=(
    var This4.Size pos=this.size().#less(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=(
          This4.Size opNorm=pos
          This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b1=This4.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b2=This4.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This4.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This4.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b0=This4.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This5.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This6.Collections.MutListAny that() 
read method 
This6.Size from() 
mut method 
Void from(This6.Size that) 
read method 
This6.Size maxTo() 
read method 
This6.Size minTo() 
read method 
This6.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This6.Size.#from(builder:(
    capsule This6.S.SBuilder b=This6.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This6.Bool cond=this.maxTo().#right(that:This6.Size.#from(builder:(
      capsule This6.S.SBuilder b0=This6.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This6.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This6.Bool cond=(
    This6.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This6.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This6.Bool cond=(
        This6.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This5.Bool isFill() This5.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This5.Collections.MutListAny #that() 
read method 
read This5.Collections.MutListAny that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
class method 
mut This0 #apply(mut This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This5.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
Exception: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Type$Exception
*/implements This1, This2, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This3.Bool equals(read This0 that) This3.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Origin.List origins() This2.Origin.List.#from(seqBuilder:(
  capsule This2.Origin.List b=This2.Origin.List.#seqBuilder()
  Void unused=(
    capsule This3.Size.Iterator i=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This2.Method location() This2.Method.#from(binaryRepr:(
  Library res=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: location()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.location(_this)\u000a
*/})
  res
  ))
refine method 
This1.RefTo refTo() This1.DispatchRefTo.#apply(that:use This0 check #refTo(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )).#binaryRepr()))
refine method 
This2.Mdf mdf() This2.Mdf.#apply(inner:this.mdfS())
method 
This3.Size pos() This3.Size.#from(binaryRepr:(
  Library res=use This0 check pos(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: pos()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.pos(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size mdfS() This3.Size.#from(binaryRepr:(
  Library res=use This0 check mdfS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: mdfS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.mdfS(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size originSize() This3.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This2.Origin origin(This3.Size that) This2.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This2.Doc doc() This2.Doc.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This3.S toS() This3.S.#from(binaryRepr:(
  Library res=use This0 check #toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Exception\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Exception.#toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals
mut method 
mut This4.Collections.MutListAny #inner() 
read method 
read This4.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This4.Collections.MutListAny inner) 
class method 
This0 #immK(This4.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This4.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This4.Bool isEmpty() this.size().#equalequal(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This4.Size #default#val(Void that) This4.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This4.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This4.Size that, This1 val) (
  mut This4.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This4.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This4.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This4.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This4.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This4.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This4.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size minTo) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size maxTo, This4.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size minTo, This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size minTo) this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b1=This4.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This4.S toS() this.inner().toS()
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size size() this.inner().size()
read method 
This1 val(This4.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This4.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This4.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This4.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.true()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This4.Bool #right(This1 that) this.contains(that:that)
read method 
This4.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This4.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This4.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This4.Collections.IterationFailure catched13 return This4.Bool.false()
    
    (
      Void unused15=return This4.Bool.true()
      void
      )
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfLeft(This1 val) (
  Void unused=(
    This4.Size size=this.size()
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b1=This4.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfRight(This1 val) (
  Void unused=(
    var This4.Size pos=this.size().#less(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=(
          This4.Size opNorm=pos
          This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b1=This4.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b2=This4.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This4.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This4.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b0=This4.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This5.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This6.Collections.MutListAny that() 
read method 
This6.Size from() 
mut method 
Void from(This6.Size that) 
read method 
This6.Size maxTo() 
read method 
This6.Size minTo() 
read method 
This6.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This6.Size.#from(builder:(
    capsule This6.S.SBuilder b=This6.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This6.Bool cond=this.maxTo().#right(that:This6.Size.#from(builder:(
      capsule This6.S.SBuilder b0=This6.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This6.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This6.Bool cond=(
    This6.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This6.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This6.Bool cond=(
        This6.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This5.Bool isFill() This5.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This5.Collections.MutListAny #that() 
read method 
read This5.Collections.MutListAny that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
class method 
mut This0 #apply(mut This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This5.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
Implemented: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Type$Implemented
*/implements This1, This2, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This3.Bool equals(read This0 that) This3.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Origin.List origins() This2.Origin.List.#from(seqBuilder:(
  capsule This2.Origin.List b=This2.Origin.List.#seqBuilder()
  Void unused=(
    capsule This3.Size.Iterator i=This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This2.Lib location() This2.Lib.#from(binaryRepr:(
  Library res=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: location()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.location(_this)\u000a
*/})
  res
  ))
refine method 
This1.RefTo refTo() This1.DispatchRefTo.#apply(that:use This0 check #refTo(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )).#binaryRepr()))
refine method 
This2.Mdf mdf() This2.Mdf.#apply(inner:this.mdfS())
method 
This3.Size pos() This3.Size.#from(binaryRepr:(
  Library res=use This0 check pos(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: pos()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.pos(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size mdfS() This3.Size.#from(binaryRepr:(
  Library res=use This0 check mdfS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: mdfS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.mdfS(_this)\u000a
*/})
  res
  ))
refine method 
This3.Size originSize() This3.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This2.Origin origin(This3.Size that) This2.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This2.Doc doc() This2.Doc.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This3.S toS() This3.S.#from(binaryRepr:(
  Library res=use This0 check #toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Type$Implemented\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Type$Implemented.#toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals
mut method 
mut This4.Collections.MutListAny #inner() 
read method 
read This4.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This4.Collections.MutListAny inner) 
class method 
This0 #immK(This4.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This4.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This4.Bool isEmpty() this.size().#equalequal(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This4.Size #default#val(Void that) This4.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This4.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This4.Size that, This1 val) (
  mut This4.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This4.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This4.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This4.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This4.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This4.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This4.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size minTo) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size maxTo, This4.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size minTo, This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size minTo) this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b1=This4.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This4.S toS() this.inner().toS()
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size size() this.inner().size()
read method 
This1 val(This4.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This4.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This4.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This4.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.true()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This4.Bool #right(This1 that) this.contains(that:that)
read method 
This4.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This4.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This4.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This4.Collections.IterationFailure catched13 return This4.Bool.false()
    
    (
      Void unused15=return This4.Bool.true()
      void
      )
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfLeft(This1 val) (
  Void unused=(
    This4.Size size=this.size()
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b1=This4.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfRight(This1 val) (
  Void unused=(
    var This4.Size pos=this.size().#less(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=(
          This4.Size opNorm=pos
          This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b1=This4.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b2=This4.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This4.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This4.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b0=This4.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This5.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This6.Collections.MutListAny that() 
read method 
This6.Size from() 
mut method 
Void from(This6.Size that) 
read method 
This6.Size maxTo() 
read method 
This6.Size minTo() 
read method 
This6.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This6.Size.#from(builder:(
    capsule This6.S.SBuilder b=This6.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This6.Bool cond=this.maxTo().#right(that:This6.Size.#from(builder:(
      capsule This6.S.SBuilder b0=This6.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This6.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This6.Bool cond=(
    This6.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This6.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This6.Bool cond=(
        This6.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This5.Bool isFill() This5.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This5.Collections.MutListAny #that() 
read method 
read This5.Collections.MutListAny that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
class method 
mut This0 #apply(mut This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This5.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
RefTo: {interface implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine read method 
This3.S toS() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine read method 
class This3.Concept.Classable class() 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool #equalequal(read Any that) 
Lib: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.TypeRefTo$Lib
*/implements This1, This4.Concept.Base, This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This4.Bool equals(read This0 that) This4.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Lib\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Lib.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This3.Lib referredLib() This3.Lib.#from(binaryRepr:(
  Library res=use This0 check referredLib(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Lib\u000amethod name: referredLib()\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Lib.referredLib(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This4.S toS() This4.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Lib\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Lib.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Unavailable: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.TypeRefTo$Unavailable
*/implements This1, This4.Concept.Base, This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This4.Bool equals(read This0 that) This4.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Unavailable\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Unavailable.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This4.S toS() This4.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Unavailable\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Unavailable.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Binded: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.TypeRefTo$Binded
*/implements This1/*includes primitives
*/, This4.Concept.Base, This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This4.Bool equals(read This0 that) This4.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
class Any referredClassObj() (
  class Any res=use This0 check referredClassObj(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded\u000amethod name: referredClassObj()\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded.referredClassObj(_this)\u000a
*/})
  res
  )
class method 
This0 #apply(class Any classObj) This0.#from(binaryRepr:(
  Library res=use This0 check new(_1_ast%Ast$Path:classObj) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded\u000amethod name: #apply(classObj)\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded.new(_1_ast%Ast$Path)\u000a
*/})
  res
  ))
class method 
This4.Bool equalsClassObj(class Any that, class Any and) This4.Bool.#from(binaryRepr:(
  Library res=use This0 check equalsClassObj(_1_ast%Ast$Path:that, _2_ast%Ast$Path:and) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded\u000amethod name: equalsClassObj(that,and)\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded.equalsClassObj(_1_ast%Ast$Path,_2_ast%Ast$Path)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This4.S toS() This4.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Binded.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Missing: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.TypeRefTo$Missing
*/implements This1, This4.Concept.Base, This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This4.Bool equals(read This0 that) This4.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Missing\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Missing.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This4.S toS() This4.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.TypeRefTo$Missing\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.TypeRefTo$Missing.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}}}
Doc: {/*user will need typecase to discover precise type, location() not refined
@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Doc
*/implements This1, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This1.Origin.List origins() This1.Origin.List.#from(seqBuilder:(
  capsule This1.Origin.List b=This1.Origin.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.originSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.origin(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This1 location() (
  Void unused=(
    Library libRes=use This0 check location(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {})
    Void unused0=use This1.Lib check instanceof(_this:libRes) return This1.Lib.#from(binaryRepr:libRes)
    Void unused1=use This1.Method check instanceof(_this:libRes) return This1.Method.#from(binaryRepr:libRes)
    Void unused2=use This1.Type.Return check instanceof(_this:libRes) return This1.Type.Return.#from(binaryRepr:libRes)
    Void unused3=use This1.Type.Parameter check instanceof(_this:libRes) return This1.Type.Parameter.#from(binaryRepr:libRes)
    Void unused4=use This1.Type.Exception check instanceof(_this:libRes) return This1.Type.Exception.#from(binaryRepr:libRes)
    Void unused5=use This1.Type.Implemented check instanceof(_this:libRes) return This1.Type.Implemented.#from(binaryRepr:libRes)
    Void unused6=use This0 check instanceof(_this:libRes) return This0.#from(binaryRepr:libRes)
    Void unused7=error libRes
    void
    )
  
  catch return capsule This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Size annotationSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check annotationSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: annotationSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.annotationSize(_this)\u000a
*/})
  res
  ))
method 
This0.Annotation annotation(This2.Size that) This0.Annotation.#from(binaryRepr:(
  Library res=use This0 check #annotation(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: annotation(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.#annotation(_this,_1_int)\u000a
*/})
  res
  ))
method 
This0.Annotation.List annotations() This0.Annotation.List.#from(seqBuilder:(
  capsule This0.Annotation.List b=This0.Annotation.List.#seqBuilder()
  Void unused=(
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b0=This2.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.annotationSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.annotation(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
refine method 
This2.Size originSize() This2.Size.#from(binaryRepr:(
  Library res=use This0 check originSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: originSize()\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.originSize(_this)\u000a
*/})
  res
  ))
refine method 
This1.Origin origin(This2.Size that) This1.Origin.#from(binaryRepr:(
  Library res=use This0 check origin(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: origin(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.origin(_this,_1_int)\u000a
*/})
  res
  ))
refine method 
This0 doc() This0.#from(binaryRepr:(
  Library res=use This0 check doc(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: doc()\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.doc(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine read method 
This2.S toS() This2.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Doc.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Annotation: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.location.Doc$Annotation
*/implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This3.Bool equals(read This0 that) This3.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc$Annotation\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.location.Doc$Annotation.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Type.RefTo title() This2.Type.DispatchRefTo.#apply(that:use This0 check title(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )).#binaryRepr()))
method 
This3.S text() This3.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc$Annotation\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.location.Doc$Annotation.text(_this)\u000a
*/})
  res
  ))
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
class This0 class() This0
refine read method 
This3.S toS() This3.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.location.Doc$Annotation\u000amethod name: toS()\u000ajava method: is.L42.connected.withSafeOperators.location.Doc$Annotation.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
List: {implements This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals
mut method 
mut This4.Collections.MutListAny #inner() 
read method 
read This4.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This4.Collections.MutListAny inner) 
class method 
This0 #immK(This4.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This4.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        result.add(left:e.#inner())
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This4.Bool isEmpty() this.size().#equalequal(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This4.Size #default#val(Void that) This4.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() This0.Cast.#apply(that:(
  read This4.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This4.Size that, This1 val) (
  mut This4.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This4.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This4.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This4.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This4.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() this.remove(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          res.add(right:e.#inner())
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This4.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) this.with(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that)
method 
This0 withAlso(This4.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 withoutLeft() this.without(index:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))))
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size minTo) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size maxTo, This4.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size minTo, This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size minTo) this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b1=This4.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This4.S toS() this.inner().toS()
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size size() this.inner().size()
read method 
This1 val(This4.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This4.Bool contains(This1 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.true()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=that.#right(that:v.#inner())
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:v.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This4.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:that.#rightrightequal(that:this).#bang())
method 
This4.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            This4.Bool cond=this.#right(that:e.#inner()).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              return This4.Bool.false()
              )
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.true()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This4.Bool #right(This1 that) this.contains(that:that)
read method 
This4.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (
                This4.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  return This4.Bool.false()
                  )
                )
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This4.Collections.IterationFailure catched13 return This4.Bool.false()
    
    (
      Void unused15=return This4.Bool.true()
      void
      )
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfLeft(This1 val) (
  Void unused=(
    This4.Size size=this.size()
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            ))
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b1=This4.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfRight(This1 val) (
  Void unused=(
    var This4.Size pos=this.size().#less(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          return pos
          )
        )
      Void unused3=(
        This4.Bool cond0=(
          This4.Size opNorm=pos
          This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b1=This4.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            ))
          )
        )
      pos := pos.#less(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b2=This4.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This4.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return this
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (
          This4.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            (
              Void unused5=b.#add(that:e.#inner())
              void
              )
            )
          )
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This4.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          this.remove(that:pos)
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          return void
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b0=This4.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return void
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This5.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This6.Collections.MutListAny that() 
read method 
This6.Size from() 
mut method 
Void from(This6.Size that) 
read method 
This6.Size maxTo() 
read method 
This6.Size minTo() 
read method 
This6.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This6.Size.#from(builder:(
    capsule This6.S.SBuilder b=This6.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This6.Bool cond=this.maxTo().#right(that:This6.Size.#from(builder:(
      capsule This6.S.SBuilder b0=This6.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This6.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This6.Bool cond=(
    This6.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This6.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This6.Bool cond=(
        This6.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This2.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This5.Bool isFill() This5.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This5.Collections.MutListAny #that() 
read method 
read This5.Collections.MutListAny that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
class method 
mut This0 #apply(mut This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This5.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      exception void
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size())
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Cast.#apply(that:this.that().val(that:this.from()))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}}}
Refactor2: {/*------------------------------
Infrastructure
------------------------------
*/
class method 
Library compose(Library that, Library and) exception This0.MethodClash, This0.ClassClash, This0.SubtleSubtypeViolation This0.Compose.compose(left:that, right:and)
class method 
class This1.Path #default#rename(Void path) This1.Path
class method 
class This1.Path #default#rename(Void into) This1.Path
class method 
This0.RenameClass rename(This1.Path path, This1.Path into) This0.RenameClass.#apply(src:path, dest:into)
class method 
class This1.Path #default#hide(Void path) This1.Path
class method 
This0.HideClass hide(This1.Path path) This0.HideClass.#apply(src:path)
class method 
class This1.Path #default#toAbstract(Void path) This1.Path
class method 
This0.ToAbstractClass toAbstract(This1.Path path) This0.ToAbstractClass.#apply(src:path)
class method 
This0.ToAbstract toAbstract(This1.Selector selector) This0.ToAbstract.#apply(src:selector)
class method 
This0.ToAbstractDest toAbstract(This1.Selector selector, This1.Selector into) This0.ToAbstractDest.#apply(src:selector, dest:into)
class method 
This0.ToAbstractPath toAbstract(This1.Selector selector, This1.Path of) This0.ToAbstractPath.#apply(path:of, src:selector)
class method 
This0.ToAbstractPathDest toAbstract(This1.Selector selector, This1.Path of, This1.Selector into) This0.ToAbstractPathDest.#apply(path:of, src:selector, dest:into)
class method 
class This1.Selector #default#toAbstract(Void selector) This1.Selector
class method 
class This1.Selector #default#toAbstract(Void into) This1.Selector
class method 
class This1.Path #default#toAbstract(Void of) This1.Path
class method 
class This1.Path #default#redirect(Void path) This1.Path
class method 
This0.Redirect redirect(This1.Path path, class Any into) This0.Redirect.#apply(src:path, dest:into)
class method 
This0.RedirectRefTo redirect(This1.Path path, This1.Location.Type.RefTo intoRefTo) This0.RedirectRefTo.#apply(src:path, into:intoRefTo)
class method 
This0.SumMethods sumMethods(This1.Selector that, This1.Selector and, This1.Path of, This1.S over, This1.Selector into) This0.SumMethods.#apply(that:that, and:and, of:of, over:over, into:into)
Fail: {interface implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
refine class method 
This2.S kind() 
refine read method 
This2.S text() 
refine read method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine class method 
read This2.Concept.Classable cast(read This2.Concept.Classable that) 
refine class method 
mut This2.Concept.Classable #cast(mut This2.Concept.Classable that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool #equalequal(read Any that) }
ErrorW: {
class method 
Library trait()  {/*@plugin is.L42.connected.withSafeOperators
*/implements This2.Fail, This3.Guard, This3.Message, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine class method 
This3.S kind() This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This3.Message.Opt responseOf() This3.Message.Opt.#apply()
refine read method 
This3.S toS() (
  This3.S.Continue rcv70=(
    This3.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This3.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This3.S.#from(builder:(
        capsule This3.S.SBuilder b0=This3.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This3.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This3.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This3.S text() 
refine read method 
class This3.Message class() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool #equalequal(read Any that) }
class method 
Library #leftrightleft(Library that) This2.UnsafeRefactor.MiniData.#leftrightleft(that:This2.UnsafeRefactor.Compose.compose(left:that, right:This0.trait()))}
ParseFail: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.S string() This2.S.#from(binaryRepr:(
  Library res=use This0 check string(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail\u000amethod name: string()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail.string(_this)\u000a
*/})
  res
  ))
method 
This2.S expected() This2.S.#from(binaryRepr:(
  Library res=use This0 check expected(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail\u000amethod name: expected()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail.expected(_this)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ParseFail.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
UnresolvedOverloading: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
ClassUnfit: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
MethodUnfit: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
ClassClash: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Location.Lib left() This2.Location.Lib.#from(binaryRepr:(
  Library res=use This0 check left(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash\u000amethod name: left()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash.left(_this)\u000a
*/})
  res
  ))
method 
This2.Location.Lib right() This2.Location.Lib.#from(binaryRepr:(
  Library res=use This0 check right(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash\u000amethod name: right()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash.right(_this)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassClash.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
MethodClash: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Location.Method left() This2.Location.Method.#from(binaryRepr:(
  Library res=use This0 check left(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash\u000amethod name: left()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash.left(_this)\u000a
*/})
  res
  ))
method 
This2.Location.Method right() This2.Location.Method.#from(binaryRepr:(
  Library res=use This0 check right(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash\u000amethod name: right()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash.right(_this)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodClash.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
PathUnfit: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Path path() This2.Path.#from(binaryRepr:(
  Library res=use This0 check path(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit\u000amethod name: path()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit.path(_this)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PathUnfit.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
SelectorUnfit: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
method 
This2.Path path() This2.Path.#from(binaryRepr:(
  Library res=use This0 check path(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit\u000amethod name: path()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit.path(_this)\u000a
*/})
  res
  ))
method 
This2.Selector selector() This2.Selector.#from(binaryRepr:(
  Library res=use This0 check selector(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit\u000amethod name: selector()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit.selector(_this)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IncoherentMapping: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SelectorUnfit.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
PrivacyCoupuled: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PrivacyCoupuled
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PrivacyCoupuled\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PrivacyCoupuled.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PrivacyCoupuled\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$PrivacyCoupuled.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
SubtleSubtypeViolation: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SubtleSubtypeViolation
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This2.Bool equals(read This0 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SubtleSubtypeViolation\u000amethod name: equals(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SubtleSubtypeViolation.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
refine class method 
This2.S kind() This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#R()
  Void unused0=b.#e()
  Void unused1=b.#f()
  Void unused2=b.#a()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#F()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  b
  ))
refine read method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
This2.S toS() (
  This2.S.Continue rcv70=(
    This2.S rcv71=This0.readableName()
    rcv71.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv71.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv70.#from(builder:(
    capsule This2.S.SBuilder b1=rcv70.#builder()
    b1
    ))
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine read method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SubtleSubtypeViolation\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$SubtleSubtypeViolation.text(_this)\u000a
*/})
  res
  ))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
JavaImport: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
class method 
Library #leftrightleft(Library that) exception This1.UnresolvedOverloading, This1.ClassUnfit, This1.MethodUnfit This0.main(that:that)
class method 
Library main(Library that) exception This1.UnresolvedOverloading, This1.ClassUnfit, This1.MethodUnfit (
  Library res=use This0 check #main(_1_ast%ExpCore$ClassB:that) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator\u000amethod name: main(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator.#main(_1_ast%ExpCore$ClassB)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.UnresolvedOverloading.#exceptionIf(binaryRepr:x)
    Void unused1=This1.ClassUnfit.#exceptionIf(binaryRepr:x)
    Void unused2=This1.MethodUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
Compose: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Compose
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error This2.X.#from(builder:(
  capsule This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#o()
  Void unused1=b.#m()
  Void unused2=b.#p()
  Void unused3=b.#o()
  Void unused4=b.#s()
  Void unused5=b.#e()
  Void unused6=b.#oRound()
  Void unused7=b.#t()
  Void unused8=b.#h()
  Void unused9=b.#a()
  Void unused10=b.#t()
  Void unused11=b.#comma()
  Void unused12=b.#a()
  Void unused13=b.#n()
  Void unused14=b.#d()
  Void unused15=b.#cRound()
  b
  ))
class method 
Library compose(Library left, Library right) exception This1.MethodClash, This1.ClassClash, This1.SubtleSubtypeViolation (
  Library res=use This0 check #compose(_1_ast%ExpCore$ClassB:left, _2_ast%ExpCore$ClassB:right) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Compose\u000amethod name: compose(left,right)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Compose.#compose(_1_ast%ExpCore$ClassB,_2_ast%ExpCore$ClassB)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.MethodClash.#exceptionIf(binaryRepr:x)
    Void unused1=This1.ClassClash.#exceptionIf(binaryRepr:x)
    Void unused2=This1.SubtleSubtypeViolation.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
PlgRenameClass: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Rename
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error This2.X.#from(builder:(
  capsule This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#r()
  Void unused0=b.#e()
  Void unused1=b.#n()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#C()
  Void unused6=b.#l()
  Void unused7=b.#a()
  Void unused8=b.#s()
  Void unused9=b.#s()
  Void unused10=b.#oRound()
  Void unused11=b.#L()
  Void unused12=b.#i()
  Void unused13=b.#b()
  Void unused14=b.#r()
  Void unused15=b.#a()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#space()
  Void unused19=b.#t()
  Void unused20=b.#h()
  Void unused21=b.#a()
  Void unused22=b.#t()
  Void unused23=b.#comma()
  Void unused24=b.#P()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#h()
  Void unused28=b.#space()
  Void unused29=b.#s()
  Void unused30=b.#r()
  Void unused31=b.#c()
  Void unused32=b.#comma()
  Void unused33=b.#P()
  Void unused34=b.#a()
  Void unused35=b.#t()
  Void unused36=b.#h()
  Void unused37=b.#space()
  Void unused38=b.#d()
  Void unused39=b.#e()
  Void unused40=b.#s()
  Void unused41=b.#t()
  Void unused42=b.#cRound()
  b
  ))
class method 
Library renameClassJ(Library that, This2.Path src, This2.Path dest) exception This1.PathUnfit, This1.MethodClash, This1.ClassClash, This1.SubtleSubtypeViolation (
  Library res=use This0 check #renameClassJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:src.#binaryRepr(), _3_java%util%List:dest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Rename\u000amethod name: renameClassJ(that,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Rename.#renameClassJ(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_java%util%List)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.MethodClash.#exceptionIf(binaryRepr:x)
    Void unused2=This1.ClassClash.#exceptionIf(binaryRepr:x)
    Void unused3=This1.SubtleSubtypeViolation.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )
class method 
Library hideClassJ(Library that, This2.Path src) exception This1.PathUnfit, This1.ClassUnfit (
  Library res=use This0 check #hideClassJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:src.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Rename\u000amethod name: hideClassJ(that,src)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Rename.#hideClassJ(_1_ast%ExpCore$ClassB,_2_java%util%List)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.ClassUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
RenameClass: {
method 
This2.Path src() 
method 
This2.Path dest() 
class method 
This0 #apply(This2.Path src, This2.Path dest) 
method 
Library #leftrightleft(Library that) exception This1.PathUnfit, This1.MethodClash, This1.ClassClash, This1.SubtleSubtypeViolation This1.PlgRenameClass.renameClassJ(that:that, src:this.src(), dest:this.dest())}
HideClass: {
method 
This2.Path src() 
class method 
This0 #apply(This2.Path src) 
method 
Library #leftrightleft(Library that) exception This1.PathUnfit, This1.ClassUnfit This1.PlgRenameClass.hideClassJ(that:that, src:this.src())}
PlgAbstractClass: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.AbstractClass
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error This2.X.#from(builder:(
  capsule This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#a()
  Void unused0=b.#b()
  Void unused1=b.#t()
  Void unused2=b.#r()
  Void unused3=b.#a()
  Void unused4=b.#c()
  Void unused5=b.#t()
  Void unused6=b.#C()
  Void unused7=b.#l()
  Void unused8=b.#a()
  Void unused9=b.#s()
  Void unused10=b.#s()
  Void unused11=b.#oRound()
  Void unused12=b.#L()
  Void unused13=b.#i()
  Void unused14=b.#b()
  Void unused15=b.#r()
  Void unused16=b.#a()
  Void unused17=b.#r()
  Void unused18=b.#y()
  Void unused19=b.#space()
  Void unused20=b.#t()
  Void unused21=b.#h()
  Void unused22=b.#a()
  Void unused23=b.#t()
  Void unused24=b.#comma()
  Void unused25=b.#P()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#h()
  Void unused29=b.#space()
  Void unused30=b.#s()
  Void unused31=b.#r()
  Void unused32=b.#c()
  Void unused33=b.#cRound()
  b
  ))
class method 
Library toAbstractJ(Library that, This2.Path src) exception This1.PathUnfit, This1.PrivacyCoupuled (
  Library res=use This0 check #toAbstractJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:src.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.AbstractClass\u000amethod name: toAbstractJ(that,src)\u000ajava method: is.L42.connected.withSafeOperators.refactor.AbstractClass.#toAbstractJ(_1_ast%ExpCore$ClassB,_2_java%util%List)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.PrivacyCoupuled.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
ToAbstractClass: {
mut method 
This2.Path #src() 
read method 
This2.Path src() 
class method 
This0 #apply(This2.Path src) 
method 
Library #leftrightleft(Library that) exception This1.PathUnfit, This1.PrivacyCoupuled This1.PlgAbstractClass.toAbstractJ(that:that, src:this.src())}
PlgToAbstract: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.ToAbstract
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error This2.X.#from(builder:(
  capsule This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#o()
  Void unused1=b.#A()
  Void unused2=b.#b()
  Void unused3=b.#s()
  Void unused4=b.#t()
  Void unused5=b.#r()
  Void unused6=b.#a()
  Void unused7=b.#c()
  Void unused8=b.#t()
  Void unused9=b.#S()
  Void unused10=b.#e()
  Void unused11=b.#l()
  Void unused12=b.#e()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  b
  ))
class method 
Library toAbstractPathDestJ(Library that, This2.Path path, This2.Selector src, This2.Selector dest) exception This1.SelectorUnfit, This1.PathUnfit, This1.MethodClash (
  Library res=use This0 check #toAbstractPathDestJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:path.#binaryRepr(), _3_ast%Ast$MethodSelector:src.#binaryRepr(), _4_ast%Ast$MethodSelector:dest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.ToAbstract\u000amethod name: toAbstractPathDestJ(that,path,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.ToAbstract.#toAbstractPathDestJ(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_ast%Ast$MethodSelector,_4_ast%Ast$MethodSelector)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.SelectorUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused2=This1.MethodClash.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )
class method 
Library toAbstractPathJ(Library that, This2.Path path, This2.Selector src) exception This1.SelectorUnfit, This1.PathUnfit (
  Library res=use This0 check #toAbstractPathJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:path.#binaryRepr(), _3_ast%Ast$MethodSelector:src.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.ToAbstract\u000amethod name: toAbstractPathJ(that,path,src)\u000ajava method: is.L42.connected.withSafeOperators.refactor.ToAbstract.#toAbstractPathJ(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_ast%Ast$MethodSelector)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.SelectorUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )
class method 
Library toAbstractDestJ(Library that, This2.Selector src, This2.Selector dest) exception This1.SelectorUnfit, This1.MethodClash (
  Library res=use This0 check #toAbstractDestJ(_1_ast%ExpCore$ClassB:that, _2_ast%Ast$MethodSelector:src.#binaryRepr(), _3_ast%Ast$MethodSelector:dest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.ToAbstract\u000amethod name: toAbstractDestJ(that,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.ToAbstract.#toAbstractDestJ(_1_ast%ExpCore$ClassB,_2_ast%Ast$MethodSelector,_3_ast%Ast$MethodSelector)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.SelectorUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.MethodClash.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )
class method 
Library toAbstractJ(Library that, This2.Selector src) exception This1.SelectorUnfit (
  Library res=use This0 check #toAbstractJ(_1_ast%ExpCore$ClassB:that, _2_ast%Ast$MethodSelector:src.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.ToAbstract\u000amethod name: toAbstractJ(that,src)\u000ajava method: is.L42.connected.withSafeOperators.refactor.ToAbstract.#toAbstractJ(_1_ast%ExpCore$ClassB,_2_ast%Ast$MethodSelector)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.SelectorUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
ToAbstract: {
method 
This2.Selector src() 
class method 
This0 #apply(This2.Selector src) 
method 
Library #leftrightleft(Library that) exception This1.SelectorUnfit This1.PlgToAbstract.toAbstractJ(that:that, src:this.src())}
ToAbstractDest: {
method 
This2.Selector src() 
method 
This2.Selector dest() 
class method 
This0 #apply(This2.Selector src, This2.Selector dest) 
method 
Library #leftrightleft(Library that) exception This1.SelectorUnfit, This1.MethodClash This1.PlgToAbstract.toAbstractDestJ(that:that, src:this.src(), dest:this.dest())}
ToAbstractPath: {
method 
This2.Path path() 
method 
This2.Selector src() 
class method 
This0 #apply(This2.Path path, This2.Selector src) 
method 
Library #leftrightleft(Library that) exception This1.SelectorUnfit, This1.PathUnfit This1.PlgToAbstract.toAbstractPathJ(that:that, path:this.path(), src:this.src())}
ToAbstractPathDest: {
method 
This2.Path path() 
method 
This2.Selector src() 
method 
This2.Selector dest() 
class method 
This0 #apply(This2.Path path, This2.Selector src, This2.Selector dest) 
method 
Library #leftrightleft(Library that) exception This1.SelectorUnfit, This1.PathUnfit, This1.MethodClash This1.PlgToAbstract.toAbstractPathDestJ(that:that, path:this.path(), src:this.src(), dest:this.dest())}
PlgRedirect: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Redirect
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*redirect(that,src,dest)*/}
class method 
Library redirectJ(Library that, This2.Path src, class Any dest) exception This1.ClassUnfit, This1.IncoherentMapping, This1.MethodClash, This1.PathUnfit (
  Library res=use This0 check #redirectJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:src.#binaryRepr(), _3_ast%Ast$Path:dest) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Redirect\u000amethod name: redirectJ(that,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Redirect.#redirectJ(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_ast%Ast$Path)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.ClassUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.IncoherentMapping.#exceptionIf(binaryRepr:x)
    Void unused2=This1.MethodClash.#exceptionIf(binaryRepr:x)
    Void unused3=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
Redirect: {
method 
This2.Path src() 
method 
class Any dest() 
class method 
This0 #apply(This2.Path src, class Any dest) 
method 
Library #leftrightleft(Library that) exception This1.ClassUnfit, This1.IncoherentMapping, This1.MethodClash, This1.PathUnfit This1.PlgRedirect.redirectJ(that:that, src:this.src(), dest:this.dest())}
RefToUnfit: {implements This1.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
RedirectRefTo: {
mut method 
This2.Path #src() 
read method 
This2.Path src() 
mut method 
This2.Location.Type.RefTo #into() 
read method 
This2.Location.Type.RefTo into() 
class method 
This0 #apply(This2.Path src, This2.Location.Type.RefTo into) 
method 
Library #leftrightleft(Library that) exception This1.ClassUnfit, This1.IncoherentMapping, This1.MethodClash, This1.PathUnfit, This1.RefToUnfit (
  Void unused=(
    Void unused0=(
      This2.Location.Type.RefTo r=this.into()
      (
        This2.Location.Type.RefTo.Binded r1=(
          Void unused2=return r
          
          catch return This2.Location.Type.RefTo.Binded casted0 casted0
          
          catch return Any casted0 exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 (
          This2.Location.Type.RefTo.Lib r0=(
            Void unused3=return r
            
            catch return This2.Location.Type.RefTo.Lib casted casted
            
            catch return Any casted exception void
            
            error  {/*@stringU
CastT-Should be unreachable code
*/}
            )
          
          catch exception Void catched3 void
          
          (
            Void unused4=return This1.rename(path:this.src(), into:r0.referredLib().path()).#leftrightleft(that:that)
            void
            )
          )
        
        (
          Void unused5=return This1.redirect(path:this.src(), into:r1.referredClassObj()).#leftrightleft(that:that)
          void
          )
        )
      )
    Void unused1=exception (
      This1.RefToUnfit.Continue rcv72=(
        This1.RefToUnfit rcv73=This1.RefToUnfit.#from(builder:(
          capsule This2.S.SBuilder b=This1.RefToUnfit.#builder()
          Void unused6=b.#P()
          Void unused7=b.#r()
          Void unused8=b.#o()
          Void unused9=b.#v()
          Void unused10=b.#i()
          Void unused11=b.#d()
          Void unused12=b.#e()
          Void unused13=b.#d()
          Void unused14=b.#space()
          Void unused15=b.#R()
          Void unused16=b.#e()
          Void unused17=b.#f()
          Void unused18=b.#T()
          Void unused19=b.#o()
          Void unused20=b.#space()
          Void unused21=b.#i()
          Void unused22=b.#s()
          Void unused23=b.#space()
          Void unused24=b.#n()
          Void unused25=b.#o()
          Void unused26=b.#t()
          Void unused27=b.#space()
          Void unused28=b.#B()
          Void unused29=b.#i()
          Void unused30=b.#n()
          Void unused31=b.#d()
          Void unused32=b.#e()
          Void unused33=b.#d()
          Void unused34=b.#space()
          Void unused35=b.#n()
          Void unused36=b.#o()
          Void unused37=b.#r()
          Void unused38=b.#space()
          Void unused39=b.#L()
          Void unused40=b.#i()
          Void unused41=b.#b()
          Void unused42=b.#colon()
          Void unused43=b.#space()
          b
          ))
        rcv73.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv73.#seqBuilder()
          Void unused44=b0.#add(that:this.into())
          b0
          ))
        )
      rcv72.#from(builder:(
        capsule This2.S.SBuilder b1=rcv72.#builder()
        b1
        ))
      )
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
PlgMethod: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.RenameMethods
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*redirect(that,src,dest)*/}
class method 
This0 #apply() This0.#from(binaryRepr:(
  Library res=use This0 check new() error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: #apply()\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.new()\u000a
*/})
  res
  ))
method 
Library act(Library that) exception This1.PathUnfit, This1.SelectorUnfit, This1.MethodClash, This1.ClassUnfit (
  Library res=use This0 check #act(_this:this.#binaryRepr(), _1_ast%ExpCore$ClassB:that) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: act(that)\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.#act(_this,_1_ast%ExpCore$ClassB)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This1.SelectorUnfit.#exceptionIf(binaryRepr:x)
    Void unused2=This1.MethodClash.#exceptionIf(binaryRepr:x)
    Void unused3=This1.ClassUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )
method 
This0 addRenameJ(This2.Path path, This2.Selector src, This2.Selector dest) This0.#from(binaryRepr:(
  Library res=use This0 check addRenameJ(_this:this.#binaryRepr(), _1_java%util%List:path.#binaryRepr(), _2_ast%Ast$MethodSelector:src.#binaryRepr(), _3_ast%Ast$MethodSelector:dest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: addRenameJ(path,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.addRenameJ(_this,_1_java%util%List,_2_ast%Ast$MethodSelector,_3_ast%Ast$MethodSelector)\u000a
*/})
  res
  ))
method 
This0 addHideJ(This2.Path path, This2.Selector src) This0.#from(binaryRepr:(
  Library res=use This0 check addHideJ(_this:this.#binaryRepr(), _1_java%util%List:path.#binaryRepr(), _2_ast%Ast$MethodSelector:src.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: addHideJ(path,src)\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.addHideJ(_this,_1_java%util%List,_2_ast%Ast$MethodSelector)\u000a
*/})
  res
  ))
method 
This0 addCloseJ(This2.Path path) This0.#from(binaryRepr:(
  Library res=use This0 check addCloseJ(_this:this.#binaryRepr(), _1_java%util%List:path.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: addCloseJ(path)\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.addCloseJ(_this,_1_java%util%List)\u000a
*/})
  res
  ))
method 
This0 addAbstractJ(This2.Path path, This2.Selector src) This0.#from(binaryRepr:(
  Library res=use This0 check addAbstractJ(_this:this.#binaryRepr(), _1_java%util%List:path.#binaryRepr(), _2_ast%Ast$MethodSelector:src.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: addAbstractJ(path,src)\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.addAbstractJ(_this,_1_java%util%List,_2_ast%Ast$MethodSelector)\u000a
*/})
  res
  ))
method 
This0 addAbstractAliasJ(This2.Path path, This2.Selector src, This2.Selector dest) This0.#from(binaryRepr:(
  Library res=use This0 check addAbstractAliasJ(_this:this.#binaryRepr(), _1_java%util%List:path.#binaryRepr(), _2_ast%Ast$MethodSelector:src.#binaryRepr(), _3_ast%Ast$MethodSelector:dest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.RenameMethods\u000amethod name: addAbstractAliasJ(path,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.RenameMethods.addAbstractAliasJ(_this,_1_java%util%List,_2_ast%Ast$MethodSelector,_3_ast%Ast$MethodSelector)\u000a
*/})
  res
  ))}
Method: {
mut method 
Void inner(This1.PlgMethod that) 
mut method 
This1.PlgMethod #inner() 
read method 
This1.PlgMethod inner() 
class method 
mut This0 #apply(This1.PlgMethod inner) 
read method 
Library #leftrightleft(Library that) exception This1.PathUnfit, This1.SelectorUnfit, This1.MethodClash, This1.ClassUnfit this.inner().act(that:that)
class method 
mut This0 #seqBuilder() This0.#apply(inner:This1.PlgMethod.#apply())
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
class method 
class This2.Path #default##square(Void of) This2.Path
class method 
class This2.Selector #default##square(Void hide) This2.Selector
class method 
class This2.Selector #default##square(Void rename) This2.Selector
class method 
class This2.Selector #default##square(Void into) This2.Selector
class method 
class This2.Selector #default##square(Void abstract) This2.Selector
class method 
class This2.Selector #default##square(Void alias) This2.Selector
mut method 
Void #add(This2.Selector hide, This2.Path of) this.inner(that:this.inner().addHideJ(path:of, src:hide))
mut method 
Void #add(This2.Selector hide) this.inner(that:this.inner().addHideJ(path:This2.Path.#from(builder:(
  capsule This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  b
  )), src:hide))
mut method 
Void #add(This2.Selector rename, This2.Path of, This2.Selector into) this.inner(that:this.inner().addRenameJ(path:of, src:rename, dest:into))
mut method 
Void #add(This2.Selector rename, This2.Selector into) this.inner(that:this.inner().addRenameJ(path:This2.Path.#from(builder:(
  capsule This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  b
  )), src:rename, dest:into))
mut method 
Void #add(This2.Path closeState) this.inner(that:this.inner().addCloseJ(path:closeState))
mut method 
Void #add(This2.Selector abstract, This2.Path of) this.inner(that:this.inner().addAbstractJ(path:of, src:abstract))
mut method 
Void #add(This2.Selector abstract, This2.Path of, This2.Selector alias) this.inner(that:this.inner().addAbstractAliasJ(path:of, src:abstract, dest:alias))
mut method 
Void #add(This2.Selector abstract) this.inner(that:this.inner().addAbstractJ(path:This2.Path.#from(builder:(
  capsule This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  b
  )), src:abstract))
mut method 
Void #add(This2.Selector abstract, This2.Selector alias) this.inner(that:this.inner().addAbstractAliasJ(path:This2.Path.#from(builder:(
  capsule This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  b
  )), src:abstract, dest:alias))}
PlgSumMethods: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.SumMethods
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*redirect(that,src,dest)*/}
class method 
Library sumMethodsJ(Library lib, This2.Path path, This2.Selector src1, This2.Selector src2, This2.Selector dest, This2.S name) exception This1.MethodClash, This1.PathUnfit, This1.SelectorUnfit (
  Library res=use This0 check #sumMethodsJ(_1_ast%ExpCore$ClassB:lib, _2_java%util%List:path.#binaryRepr(), _3_ast%Ast$MethodSelector:src1.#binaryRepr(), _4_ast%Ast$MethodSelector:src2.#binaryRepr(), _5_ast%Ast$MethodSelector:dest.#binaryRepr(), _6_java%lang%String:name.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.SumMethods\u000amethod name: sumMethodsJ(lib,path,src1,src2,dest,name)\u000ajava method: is.L42.connected.withSafeOperators.refactor.SumMethods.#sumMethodsJ(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_ast%Ast$MethodSelector,_4_ast%Ast$MethodSelector,_5_ast%Ast$MethodSelector,_6_java%lang%String)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.MethodClash.#exceptionIf(binaryRepr:x)
    Void unused1=This1.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused2=This1.SelectorUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
SumMethods: {
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Selector #and() 
read method 
This2.Selector and() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.S #over() 
read method 
This2.S over() 
mut method 
This2.Selector #into() 
read method 
This2.Selector into() 
class method 
This0 #apply(This2.Selector that, This2.Selector and, This2.Path of, This2.S over, This2.Selector into) 
method 
Library #leftrightleft(Library that) exception This1.MethodClash, This1.PathUnfit, This1.SelectorUnfit This1.PlgSumMethods.sumMethodsJ(lib:that, path:this.of(), src1:this.that(), src2:this.and(), dest:this.into(), name:this.over())}}
K: {
class method 
Library #leftrightleft(Library that) exception This1.Refactor2.ClassUnfit This0.PlgK.makeKJ(that:that, path:This1.Path.#from(builder:(
  capsule This1.S.SBuilder b=This1.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  b
  )), isFwd:This1.Bool.true())
PlgK: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.refactor.MakeK
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library makeKJ(Library that, This2.Path path, This2.Bool isFwd) (
  Library res=use This0 check makeKJ(_1_ast%ExpCore$ClassB:that, _2_java%util%List:path.#binaryRepr(), _3_boolean:isFwd.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.MakeK\u000amethod name: makeKJ(that,path,isFwd)\u000ajava method: is.L42.connected.withSafeOperators.refactor.MakeK.makeKJ(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_boolean)\u000a
*/})
  res
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr}}
Opt: {
class method 
Library #apply(class Any that) (
  Void unused=(
    Void unused0=return This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
      capsule This1.S.SBuilder b=This1.Refactor2.#default#redirect(path:void).#builder()
      Void unused1=b.#T()
      b
      )), into:that).#leftrightleft(that:This0.optTrait())
    
    catch exception This1.Refactor2.Fail catched0 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b0=This1.X.#builder()
      b0
      )).#apply(that:catched0)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library optTrait()  {
method 
This0.TOpt that() 
class method 
This0 #new(This0.TOpt that) 
method 
This0.T get() exception This2.Guard.Operation (
  Void unused=(
    Void unused0=return this.#get()
    
    catch error This2.Guard.Operation err exception err
    
    void
    )
  
  catch return This0.T result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0.T #get() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    Void unused0=(
      This0.TOpt cell=this.that()
      (
        This0.TOf cell0=(
          Void unused2=return cell
          
          catch return This0.TOf casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This2.Bool.true()
          void
          )
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This0.T that) This0.#new(that:This0.TOf.#apply(that:that))
T: {}
TOpt: {interface 
method 
This1.T get() }
TEmpty: {implements This1.TOpt
class method 
This0 #apply() 
refine method 
This1.T get() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#T()
  Void unused0=b.#E()
  Void unused1=b.#m()
  Void unused2=b.#p()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#dot()
  Void unused6=b.#g()
  Void unused7=b.#e()
  Void unused8=b.#t()
  Void unused9=b.#oRound()
  Void unused10=b.#cRound()
  Void unused11=b.#space()
  Void unused12=b.#V()
  Void unused13=b.#a()
  Void unused14=b.#l()
  Void unused15=b.#u()
  Void unused16=b.#e()
  Void unused17=b.#space()
  Void unused18=b.#n()
  Void unused19=b.#o()
  Void unused20=b.#t()
  Void unused21=b.#space()
  Void unused22=b.#p()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#s()
  Void unused26=b.#e()
  Void unused27=b.#n()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#i()
  Void unused31=b.#n()
  Void unused32=b.#space()
  Void unused33=b.#O()
  Void unused34=b.#p()
  Void unused35=b.#t()
  Void unused36=b.#i()
  Void unused37=b.#o()
  Void unused38=b.#n()
  Void unused39=b.#a()
  Void unused40=b.#l()
  b
  ))}
TOf: {implements This1.TOpt
method 
This1.T that() 
class method 
This0 #apply(This1.T that) 
refine method 
This1.T get() this.that()}}}
Composers: {/*
Main feature of Composers:
you implement an 
  mut method Void op(Path p, Location.Method m, Size i)
       op(p,meth,i) for example can be
         s=meth.selector()
         s2=this.superName(s,i)
         this.open(i).op(p,s,s2)//#add(rename:s of:p into:s2)
         this.close().op(p,s2)//hide selector of
*/
class method 
Library composerTrait()  {
mut method 
Void op(This2.Path p, This2.Location.Method m, This2.Size i) 
mut method 
Void fillMaps() (
  lent This2.Location.Lib.List.IteratorVal li=this.ls().vals()
  (
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).vals()
    (
      Void unused0=loop (
        Void unused1=li.#next()
        
        catch exception Void catched2 (
          Void unused2=(
            Void unused5=i.#next()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=li.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          Void unused4=(
            Void unused7=i.#checkEnd()
            
            catch exception Void catched5 void
            
            void
            )
          exception void
          )
        
        (
          Void unused8=i.#next()
          
          catch exception Void catched7 (
            Void unused9=(
              Void unused11=li.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            Void unused10=(
              Void unused12=i.#checkEnd()
              
              catch exception Void catched9 void
              
              void
              )
            exception void
            )
          
          (this.fillMaps(li:li.#inner(), i:i.#inner()))
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This2.Location.Lib li, This2.Size i) (
  lent This2.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This1.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            This2.Location.Lib lij=li.nested(path:nj.#inner().path())
            
            catch exception This2.Location.NotAvailable catched10 (/*continue
*/void)
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:nj.#inner().path(), i:i)
            )
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This2.Location.Lib lij, This1.Selectors ssj, This2.Path pj, This2.Size i) (
  lent This2.Location.Method.List.IteratorVal m=lij.methods().vals()
  (
    Void unused=loop (
      Void unused0=m.#next()
      
      catch exception Void catched0 (
        Void unused1=(
          Void unused2=m.#checkEnd()
          
          catch exception Void catched1 void
          
          void
          )
        exception void
        )
      
      ((
        This2.Bool cond=This1.noClash(m:m.#inner()).#bang().#and(that:(
          This2.Selector opNorm=m.#inner().selector()
          ssj.#right(that:opNorm)
          ))
        (
          Void unused3=cond.#checkTrue()
          
          catch exception Void catched5 void
          
          (this.op(p:pj, m:m.#inner(), i:i))
          )
        ))
      )
    
    catch exception Void catched6 void
    
    void
    )
  )
mut method 
This2.Selector superName(This2.Selector selector, This2.Size i) This2.Selector.from(string:(
  This2.S.Continue rcv74=(
    This2.S rcv75=This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#hash()
      b
      ))
    rcv75.#from(seqBuilder:(
      capsule This2.S.SConcat b0=rcv75.#seqBuilder()
      Void unused0=b0.#add(that:i.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b1=This2.Size.#builder()
        Void unused1=b1.#1()
        b1
        ))))
      b0
      ))
    )
  rcv74.#from(builder:(
    capsule This2.S.SBuilder b2=rcv74.#builder()
    b2
    ))
  ).#plusplus(that:selector.toS()))
class method 
mut This1.Libs #seqBuilder() This1.Libs.empty()
class method 
mut This0.Decorator #from(mut This1.Libs seqBuilder) This0.Decorator.#apply(inner:seqBuilder)
mut method 
mut This1.RenameMethods openMaps() 
mut method 
mut This2.Refactor2.Method close() 
read method 
This1.Libs inputs() 
read method 
Library input() 
read method 
This2.Location.Lib.List ls() 
read method 
This2.Location.Lib l0() 
read method 
This2.Location.Lib.List l0ns() 
read method 
This1.Selectorss sels() 
class method 
mut This0 #apply(This1.Libs libs, Library lib0) (
  This2.Location.Lib l0=This2.Location.Lib.#apply(that:lib0)
  capsule This2.Location.Lib.List ls=This2.Location.Lib.List.#from(seqBuilder:(
    capsule This2.Location.Lib.List b=This2.Location.Lib.List.#seqBuilder()
    Void unused=(
      lent This1.Libs.IteratorVal l=libs.vals()
      (
        Void unused0=loop (
          Void unused1=l.#next()
          
          catch exception Void catched0 (
            Void unused2=(
              Void unused3=l.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            Void unused4=b.#add(that:This2.Location.Lib.#apply(that:l.#inner()))
            void
            ))
          )
        
        catch exception Void catched4 void
        
        void
        )
      )
    b
    ))
  This2.Location.Lib.List l0ns=This1.filterClash(ls:l0.allNesteds())
  capsule This1.Selectorss sels=This1.Selectorss.#from(seqBuilder:(
    capsule This1.Selectorss b0=This1.Selectorss.#seqBuilder()
    Void unused5=(
      lent This2.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused6=loop (
          Void unused7=nj.#next()
          
          catch exception Void catched7 (
            Void unused8=(
              Void unused9=nj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          ((
            Void unused10=b0.#add(that:This1.filterClash(ms:nj.#inner().methods()))
            void
            ))
          )
        
        catch exception Void catched11 void
        
        void
        )
      )
    b0
    ))
  This0.#apply(openMaps:This1.RenameMethods.#from(seqBuilder:(
    capsule This1.RenameMethods b1=This1.RenameMethods.#seqBuilder()
    Void unused11=(
      lent This1.Libs.IteratorVal l=libs.vals()
      (
        Void unused12=loop (
          Void unused13=l.#next()
          
          catch exception Void catched15 (
            Void unused14=(
              Void unused15=l.#checkEnd()
              
              catch exception Void catched16 void
              
              void
              )
            exception void
            )
          
          ((
            Void unused16=b1.#add(that:This2.Refactor2.Method.#from(seqBuilder:(
              capsule This2.Refactor2.Method b2=This2.Refactor2.Method.#seqBuilder()
              b2
              )))
            void
            ))
          )
        
        catch exception Void catched20 void
        
        void
        )
      )
    b1
    )), close:This2.Refactor2.Method.#from(seqBuilder:(
    capsule This2.Refactor2.Method b3=This2.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:libs, input:lib0, ls:ls, l0:l0, l0ns:l0ns, sels:sels)
  )
mut method 
mut This2.Refactor2.Method open(This2.Size that) (/*------------------------------
Patch variation---------------
------------------------------
l0ns //all lFix nesteds
sels //all lFix selectors
*/this.openMaps().#val(that:that))
mut method 
Void fillMapsPatch(This2.Location.Lib top, This2.Path fix) (/*initPatch
*/(
  lent This2.Location.Lib.List.IteratorVal nj=(/*all patch nesteds
*/this.l0ns().vals())
  (
    lent This1.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (/*all patch selectors
*/
            This2.Path pj=This1.removePrefix(path:nj.#inner().path(), prefix:fix)
            This2.Location.Lib lij=(/*nested in nj exist in top
*/top.nested(path:pj))
            
            catch exception This2.Location.NotAvailable catched10 (/*continue
*/void)
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:pj, i:This2.Size.#from(builder:(
              capsule This2.S.SBuilder b=This2.Size.#builder()
              Void unused12=b.#0()
              b
              )))
            )
          )
        )
      
      catch exception Void catched12 void
      
      void
      )
    )
  ))
class method 
mut This0 #apply(Library top, This2.Path fix) exception This2.Location.NotAvailable (
  This2.Location.Lib lFix=This2.Location.Lib.#apply(that:top).nested(path:fix)
  capsule This2.Location.Lib.List ls=This2.Location.Lib.List.#from(seqBuilder:(
    capsule This2.Location.Lib.List b0=This2.Location.Lib.List.#seqBuilder()
    b0
    ))
  This2.Location.Lib.List l0ns=This1.filterClash(ls:lFix.allNesteds())
  capsule This1.Selectorss sels=This1.Selectorss.#from(seqBuilder:(
    capsule This1.Selectorss b=This1.Selectorss.#seqBuilder()
    Void unused=(
      lent This2.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused0=loop (
          Void unused1=nj.#next()
          
          catch exception Void catched1 (
            Void unused2=(
              Void unused3=nj.#checkEnd()
              
              catch exception Void catched2 void
              
              void
              )
            exception void
            )
          
          ((
            Void unused4=b.#add(that:This1.filterClash(ms:nj.#inner().methods()))
            void
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    b
    ))
  This0.#apply(openMaps:This1.RenameMethods.#from(seqBuilder:(
    capsule This1.RenameMethods b1=This1.RenameMethods.#seqBuilder()
    Void unused5=b1.#add(that:This2.Refactor2.Method.#from(seqBuilder:(
      capsule This2.Refactor2.Method b2=This2.Refactor2.Method.#seqBuilder()
      b2
      )))
    b1
    )), close:This2.Refactor2.Method.#from(seqBuilder:(
    capsule This2.Refactor2.Method b3=This2.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:This1.Libs.#from(seqBuilder:(
    capsule This1.Libs b4=This1.Libs.#seqBuilder()
    b4
    )), input:top, ls:ls, l0:lFix, l0ns:l0ns, sels:sels)
  )
class method 
class This2.Path #default##apply(Void patch) This2.Path
class method 
mut This0.Patcher #apply(This2.Path patch) This0.Patcher.#apply(patch:patch)
class method 
mut This0 #apply(mut This1.RenameMethods openMaps, mut This2.Refactor2.Method close, This1.Libs inputs, Library input, This2.Location.Lib.List ls, This2.Location.Lib l0, This2.Location.Lib.List l0ns, This1.Selectorss sels) 
Decorator: {
mut method 
mut This2.Libs #inner() 
read method 
read This2.Libs inner() 
class method 
mut This0 #apply(mut This2.Libs inner) 
method 
Library #leftrightleft(Library that) exception This3.Refactor2.MethodClash, This3.Refactor2.ClassClash, This3.Refactor2.SubtleSubtypeViolation (
  Void unused=(
    mut This1 cmp=This1.#apply(libs:this.inner(), lib0:that)
    Void unused0=cmp.fillMaps()
    var Library acc=that
    Void unused1=(
      lent This2.Libs.IteratorVal li=this.inner().reverse().vals()
      (
        mut This2.RenameMethods.IteratorVar mi=cmp.openMaps().#reverse().#vals()
        (
          Void unused3=loop (
            Void unused4=li.#next()
            
            catch exception Void catched1 (
              Void unused5=(
                Void unused8=mi.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused6=(
                Void unused9=li.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused7=(
                Void unused10=mi.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=mi.#next()
              
              catch exception Void catched6 (
                Void unused12=(
                  Void unused14=li.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=mi.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              (acc := This3.Refactor2.compose(that:mi.#inner().#leftrightleft(that:li.#inner()), and:acc))
              )
            )
          
          catch exception Void catched10 void
          
          void
          )
        )
      )
    Void unused2=return cmp.close().#leftrightleft(that:acc)
    
    catch exception This3.Refactor2.PathUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b=This3.X.#builder()
      Void unused16=b.#C()
      Void unused17=b.#o()
      Void unused18=b.#m()
      Void unused19=b.#p()
      Void unused20=b.#o()
      Void unused21=b.#s()
      Void unused22=b.#e()
      Void unused23=b.#r()
      Void unused24=b.#s()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#c()
      Void unused28=b.#t()
      Void unused29=b.#i()
      Void unused30=b.#o()
      Void unused31=b.#n()
      Void unused32=b.#space()
      Void unused33=b.#m()
      Void unused34=b.#e()
      Void unused35=b.#t()
      Void unused36=b.#h()
      Void unused37=b.#o()
      Void unused38=b.#d()
      Void unused39=b.#space()
      Void unused40=b.#p()
      Void unused41=b.#r()
      Void unused42=b.#o()
      Void unused43=b.#d()
      Void unused44=b.#u()
      Void unused45=b.#c()
      Void unused46=b.#e()
      Void unused47=b.#d()
      Void unused48=b.#space()
      Void unused49=b.#i()
      Void unused50=b.#n()
      Void unused51=b.#v()
      Void unused52=b.#a()
      Void unused53=b.#l()
      Void unused54=b.#i()
      Void unused55=b.#d()
      Void unused56=b.#space()
      Void unused57=b.#m()
      Void unused58=b.#a()
      Void unused59=b.#p()
      Void unused60=b.#s()
      b
      )).#apply(that:catched11)
    
    catch exception This3.Refactor2.SelectorUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b0=This3.X.#builder()
      Void unused61=b0.#C()
      Void unused62=b0.#o()
      Void unused63=b0.#m()
      Void unused64=b0.#p()
      Void unused65=b0.#o()
      Void unused66=b0.#s()
      Void unused67=b0.#e()
      Void unused68=b0.#r()
      Void unused69=b0.#s()
      Void unused70=b0.#space()
      Void unused71=b0.#a()
      Void unused72=b0.#c()
      Void unused73=b0.#t()
      Void unused74=b0.#i()
      Void unused75=b0.#o()
      Void unused76=b0.#n()
      Void unused77=b0.#space()
      Void unused78=b0.#m()
      Void unused79=b0.#e()
      Void unused80=b0.#t()
      Void unused81=b0.#h()
      Void unused82=b0.#o()
      Void unused83=b0.#d()
      Void unused84=b0.#space()
      Void unused85=b0.#p()
      Void unused86=b0.#r()
      Void unused87=b0.#o()
      Void unused88=b0.#d()
      Void unused89=b0.#u()
      Void unused90=b0.#c()
      Void unused91=b0.#e()
      Void unused92=b0.#d()
      Void unused93=b0.#space()
      Void unused94=b0.#i()
      Void unused95=b0.#n()
      Void unused96=b0.#v()
      Void unused97=b0.#a()
      Void unused98=b0.#l()
      Void unused99=b0.#i()
      Void unused100=b0.#d()
      Void unused101=b0.#space()
      Void unused102=b0.#m()
      Void unused103=b0.#a()
      Void unused104=b0.#p()
      Void unused105=b0.#s()
      b0
      )).#apply(that:catched11)
    
    catch exception This3.Refactor2.ClassUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b1=This3.X.#builder()
      Void unused106=b1.#C()
      Void unused107=b1.#o()
      Void unused108=b1.#m()
      Void unused109=b1.#p()
      Void unused110=b1.#o()
      Void unused111=b1.#s()
      Void unused112=b1.#e()
      Void unused113=b1.#r()
      Void unused114=b1.#s()
      Void unused115=b1.#space()
      Void unused116=b1.#a()
      Void unused117=b1.#c()
      Void unused118=b1.#t()
      Void unused119=b1.#i()
      Void unused120=b1.#o()
      Void unused121=b1.#n()
      Void unused122=b1.#space()
      Void unused123=b1.#m()
      Void unused124=b1.#e()
      Void unused125=b1.#t()
      Void unused126=b1.#h()
      Void unused127=b1.#o()
      Void unused128=b1.#d()
      Void unused129=b1.#space()
      Void unused130=b1.#p()
      Void unused131=b1.#r()
      Void unused132=b1.#o()
      Void unused133=b1.#d()
      Void unused134=b1.#u()
      Void unused135=b1.#c()
      Void unused136=b1.#e()
      Void unused137=b1.#d()
      Void unused138=b1.#space()
      Void unused139=b1.#i()
      Void unused140=b1.#n()
      Void unused141=b1.#v()
      Void unused142=b1.#a()
      Void unused143=b1.#l()
      Void unused144=b1.#i()
      Void unused145=b1.#d()
      Void unused146=b1.#space()
      Void unused147=b1.#m()
      Void unused148=b1.#a()
      Void unused149=b1.#p()
      Void unused150=b1.#s()
      b1
      )).#apply(that:catched11)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Patcher: {
mut method 
This3.Path #patch() 
read method 
This3.Path patch() 
class method 
mut This0 #apply(This3.Path patch) 
method 
Library #leftrightleft(Library that) exception This3.Refactor2.MethodClash, This3.Refactor2.ClassClash, This3.Refactor2.SubtleSubtypeViolation, This3.Refactor2.PathUnfit, This3.Refactor2.SelectorUnfit, This3.Refactor2.ClassUnfit, This3.Location.NotAvailable (
  mut This1 cmp=This1.#apply(top:that, fix:this.patch())
  Void unused=cmp.fillMapsPatch(top:This3.Location.Lib.#apply(that:that), fix:this.patch())
  var Library acc=that
  Void unused0=acc := (
    Library opNorm=acc
    cmp.open(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused3=b.#0()
      b
      ))).#leftrightleft(that:opNorm)
    )
  Void unused1=acc := (
    Library opNorm0=acc
    This3.Refactor2.rename(path:this.patch(), into:This3.Refactor2.#default#rename(into:void).#from(builder:(
      capsule This3.S.SBuilder b0=This3.Refactor2.#default#rename(into:void).#builder()
      Void unused4=b0.#T()
      Void unused5=b0.#h()
      Void unused6=b0.#i()
      Void unused7=b0.#s()
      b0
      ))).#leftrightleft(that:opNorm0)
    )
  Void unused2=acc := (
    Library opNorm1=acc
    cmp.close().#leftrightleft(that:opNorm1)
    )
  acc
  )}}
class method 
Library #leftrightleft(Library that) exception This1.Refactor2.MethodClash, This1.Refactor2.ClassClash, This1.Refactor2.SubtleSubtypeViolation (/*utils in the top Composers class
*/This1.Refactor2.compose(that:This0.composerTrait(), and:that))
class method 
This1.Location.Lib.List filterClash(This1.Location.Lib.List ls) This1.Location.Lib.List.#from(seqBuilder:(
  capsule This1.Location.Lib.List b=This1.Location.Lib.List.#seqBuilder()
  Void unused=(
    lent This1.Location.Lib.List.IteratorVal l=ls.vals()
    (
      Void unused0=loop (
        Void unused1=l.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=l.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=This0.noClash(l:l.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:l.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
class method 
This0.Selectors filterClash(This1.Location.Method.List ms) This0.Selectors.#from(seqBuilder:(
  capsule This0.Selectors b=This0.Selectors.#seqBuilder()
  Void unused=(
    lent This1.Location.Method.List.IteratorVal m=ms.vals()
    (
      Void unused0=loop (
        Void unused1=m.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=m.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=This0.noClash(m:m.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:m.#inner().selector())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
class method 
This1.Bool noClash(This1.Location.Method m) m.selector().isUnique().#or(that:m.isAbstract())
class method 
This1.Bool noClash(This1.Location.Lib l) l.path().isUnique().#or(that:l.isInterface()).#or(that:l.isRedirectable())
class method 
This1.Path removePrefix(This1.Path path, This1.Path prefix) (
  This1.Strings ns=path.names()
  This1.Strings ns2=prefix.names()
  Void unused=(/*res=Path.from(names:Strings[
  with n in ns.vals(from:ns2.size() to:ns.size()+1Size) (use[n])
  ])//TODO: from to seams buggy
*/(
    lent This1.Strings.IteratorVal n=ns.vals(minTo:This1.Size.#from(builder:(
      capsule This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      )))
    (
      lent This1.Strings.IteratorVal n2=ns2.vals()
      (
        Void unused2=loop (
          Void unused3=n.#next()
          
          catch exception Void catched2 (
            Void unused4=(
              Void unused7=n2.#next()
              
              catch exception Void catched3 void
              
              void
              )
            Void unused5=(
              Void unused8=n.#checkEnd()
              
              catch exception Void catched4 void
              
              void
              )
            Void unused6=(
              Void unused9=n2.#checkEnd()
              
              catch exception Void catched5 void
              
              void
              )
            exception void
            )
          
          (
            Void unused10=n2.#next()
            
            catch exception Void catched7 (
              Void unused11=(
                Void unused13=n.#checkEnd()
                
                catch exception Void catched8 void
                
                void
                )
              Void unused12=(
                Void unused14=n2.#checkEnd()
                
                catch exception Void catched9 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=n.#inner().#equalequal(that:n2.#inner()).#bang()
              (
                Void unused15=cond.#checkTrue()
                
                catch exception Void catched12 void
                
                (error (
                  This1.X.AssertionFail.Continue rcv76=(
                    This1.X.AssertionFail rcv77=(
                      This1.X.AssertionFail.Continue rcv78=(
                        This1.X.AssertionFail rcv79=This1.X.#from(builder:(
                          capsule This1.S.SBuilder b0=This1.X.#builder()
                          Void unused16=b0.#i()
                          Void unused17=b0.#n()
                          Void unused18=b0.#v()
                          Void unused19=b0.#a()
                          Void unused20=b0.#l()
                          Void unused21=b0.#i()
                          Void unused22=b0.#d()
                          Void unused23=b0.#space()
                          Void unused24=b0.#p()
                          Void unused25=b0.#r()
                          Void unused26=b0.#e()
                          Void unused27=b0.#f()
                          Void unused28=b0.#i()
                          Void unused29=b0.#x()
                          Void unused30=b0.#space()
                          b0
                          ))
                        rcv79.#from(seqBuilder:(
                          capsule This1.S.SConcat b1=rcv79.#seqBuilder()
                          Void unused31=b1.#add(that:prefix)
                          b1
                          ))
                        )
                      rcv78.#from(builder:(
                        capsule This1.S.SBuilder b2=rcv78.#builder()
                        Void unused32=b2.#space()
                        Void unused33=b2.#f()
                        Void unused34=b2.#o()
                        Void unused35=b2.#r()
                        Void unused36=b2.#space()
                        Void unused37=b2.#p()
                        Void unused38=b2.#a()
                        Void unused39=b2.#t()
                        Void unused40=b2.#h()
                        Void unused41=b2.#space()
                        b2
                        ))
                      )
                    rcv77.#from(seqBuilder:(
                      capsule This1.S.SConcat b3=rcv77.#seqBuilder()
                      Void unused42=b3.#add(that:path)
                      b3
                      ))
                    )
                  rcv76.#from(builder:(
                    capsule This1.S.SBuilder b4=rcv76.#builder()
                    b4
                    ))
                  ))
                )
              ))
            )
          )
        
        catch exception Void catched22 void
        
        void
        )
      )
    ))
  Void unused0=(
    This1.Bool cond0=ns2.size().#equalequal(that:This1.Size.#from(builder:(
      capsule This1.S.SBuilder b5=This1.Size.#builder()
      Void unused43=b5.#1()
      b5
      ))).#bang()
    (
      Void unused44=cond0.#checkTrue()
      
      catch exception Void catched25 void
      
      (error This1.X.#from(builder:(
        capsule This1.S.SBuilder b6=This1.X.#builder()
        Void unused45=b6.#s()
        Void unused46=b6.#t()
        Void unused47=b6.#i()
        Void unused48=b6.#l()
        Void unused49=b6.#l()
        Void unused50=b6.#space()
        Void unused51=b6.#t()
        Void unused52=b6.#o()
        Void unused53=b6.#space()
        Void unused54=b6.#i()
        Void unused55=b6.#m()
        Void unused56=b6.#p()
        Void unused57=b6.#l()
        Void unused58=b6.#m()
        Void unused59=b6.#e()
        Void unused60=b6.#n()
        Void unused61=b6.#t()
        Void unused62=b6.#less()
        Void unused63=b6.#space()
        Void unused64=b6.#n()
        Void unused65=b6.#e()
        Void unused66=b6.#e()
        Void unused67=b6.#d()
        Void unused68=b6.#space()
        Void unused69=b6.#t()
        Void unused70=b6.#o()
        Void unused71=b6.#space()
        Void unused72=b6.#f()
        Void unused73=b6.#i()
        Void unused74=b6.#x()
        Void unused75=b6.#space()
        Void unused76=b6.#i()
        Void unused77=b6.#t()
        Void unused78=b6.#e()
        Void unused79=b6.#r()
        Void unused80=b6.#a()
        Void unused81=b6.#t()
        Void unused82=b6.#o()
        Void unused83=b6.#r()
        Void unused84=b6.#s()
        Void unused85=b6.#space()
        Void unused86=b6.#f()
        Void unused87=b6.#r()
        Void unused88=b6.#o()
        Void unused89=b6.#m()
        Void unused90=b6.#less()
        Void unused91=b6.#t()
        Void unused92=b6.#o()
        b6
        )))
      )
    )
  This1.Path res=This1.Path.from(names:ns.withoutLeft())
  res
  )
Selectors: {implements This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This2.Collections.MutListAny inner) 
class method 
This0 #immK(This2.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This2.Size #default#val(Void that) This2.Size
read method 
This2.Selector left() This0.Cast.#apply(that:this.inner().val(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This2.Selector right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This2.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This2.Selector val) (
  mut This2.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This2.Selector that) (
  mut This2.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This2.Selector that) (
  mut This2.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This2.Selector val) this.#inner().add(that:that, val:val)
mut method 
Void add(This2.Selector right) (
  mut This2.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This2.Selector left) this.#inner().add(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This2.Selector that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This2.Selector val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This2.Selector that) this.with(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This2.Selector that) (/*insertion
*/this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This2.Selector val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This2.Selector that) this.withAlso(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This2.Selector that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This2.Selector filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This2.Selector filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This2.Selector filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Selector filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Selector val(This2.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This2.Selector that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This2.Bool contains(This2.Selector that) (/*################# operators
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This2.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This2.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This2.Selector that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This2.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This2.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This2.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This2.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This2.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This2.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This2.Bool.true()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #right(This2.Selector that) this.contains(that:that)
read method 
This2.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This2.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This2.Collections.IterationFailure catched13 (return This2.Bool.false())
    
    (
      Void unused15=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfLeft(This2.Selector val) (
  Void unused=(
    This2.Size size=this.size()
    var This2.Size pos=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This2.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This2.Size.#from(builder:(
            capsule This2.S.SBuilder b0=This2.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b1=This2.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfRight(This2.Selector val) (
  Void unused=(
    var This2.Size pos=this.size().#less(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This2.Bool cond0=(
          This2.Size opNorm=pos
          This2.Size.#from(builder:(
            capsule This2.S.SBuilder b0=This2.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This2.Size.#from(builder:(
            capsule This2.S.SBuilder b1=This2.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b2=This2.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This2.Selector val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This2.Selector val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This2.Selector val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This2.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This2.Selector val) (
  Void unused=(
    var This2.Size pos=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This2.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b0=This2.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This2.Selector val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This2.Selector val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This3.Selector #apply(Any that) (
  Void unused=(
    Void unused0=(
      This3.Selector that0=(
        Void unused2=return that
        
        catch return This3.Selector casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This3.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This4.Selector filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This4.Selector #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This4.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Selector #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
mut method 
This3.Selector #filled() 
read method 
This3.Selector filled() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo, This3.Selector filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This3.Selector filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This3.Bool isFill() This3.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Selector #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This3.Collections.MutListAny #that() 
read method 
read This3.Collections.MutListAny that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
mut method 
Void inner(This3.Selector that) (
  mut This3.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This3.Selector filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This3.Selector filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Selector #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
Selectorss: {implements This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This2.Collections.MutListAny inner) 
class method 
This0 #immK(This2.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This2.Size #default#val(Void that) This2.Size
read method 
This1.Selectors left() This0.Cast.#apply(that:this.inner().val(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Selectors right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This2.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.Selectors val) (
  mut This2.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Selectors that) (
  mut This2.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Selectors that) (
  mut This2.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.Selectors val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Selectors right) (
  mut This2.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1.Selectors left) this.#inner().add(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Selectors that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.Selectors val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Selectors that) this.with(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Selectors that) (/*insertion
*/this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.Selectors val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Selectors that) this.withAlso(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Selectors that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.Selectors filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.Selectors filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.Selectors filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Selectors filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size size() this.inner().size()
read method 
This1.Selectors val(This2.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.Selectors that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This2.Bool contains(This1.Selectors that) (/*################# operators
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This2.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This2.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.Selectors that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This2.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This2.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This2.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This2.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This2.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This2.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This2.Bool.true()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #right(This1.Selectors that) this.contains(that:that)
read method 
This2.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This2.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This2.Collections.IterationFailure catched13 (return This2.Bool.false())
    
    (
      Void unused15=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfLeft(This1.Selectors val) (
  Void unused=(
    This2.Size size=this.size()
    var This2.Size pos=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This2.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This2.Size.#from(builder:(
            capsule This2.S.SBuilder b0=This2.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b1=This2.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfRight(This1.Selectors val) (
  Void unused=(
    var This2.Size pos=this.size().#less(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This2.Bool cond0=(
          This2.Size opNorm=pos
          This2.Size.#from(builder:(
            capsule This2.S.SBuilder b0=This2.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This2.Size.#from(builder:(
            capsule This2.S.SBuilder b1=This2.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b2=This2.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1.Selectors val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.Selectors val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.Selectors val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This2.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1.Selectors val) (
  Void unused=(
    var This2.Size pos=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This2.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b0=This2.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.Selectors val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.Selectors val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          capsule This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2.Selectors #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2.Selectors that0=(
        Void unused2=return that
        
        catch return This2.Selectors casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2.Selectors result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.Selectors filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Selectors #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Selectors result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Selectors #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Selectors result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
mut method 
This2.Selectors #filled() 
read method 
This2.Selectors filled() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Selectors filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Selectors filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This3.Bool isFill() This3.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Selectors #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Selectors result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This3.Collections.MutListAny #that() 
read method 
read This3.Collections.MutListAny that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
mut method 
Void inner(This2.Selectors that) (
  mut This3.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Selectors filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Selectors filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Selectors #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Selectors result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
RenameMethods: {implements This2.Concept.ToS, This2.Concept.Classable
mut method 
mut This2.CollectionsMut.MutListAny #inner() 
read method 
read This2.CollectionsMut.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This2.CollectionsMut.MutListAny inner) 
class method 
This0 #immK(This2.CollectionsMut.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This2.CollectionsMut.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(mut This2.Refactor2.Method that) this.add(right:that)
mut method 
mut This0 #reverse() (/*TODO: read reverse is just impossible?
*/
  mut This0 result=This0.empty()
  Void unused=(
    mut This0.IteratorVar e=this.#vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
read This2.Refactor2.Method val(This2.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
mut method 
mut This2.Refactor2.Method #val(This2.Size that) This0.Cast.mut(that:this.#inner().#val(that:that))
read method 
class This2.Size #default#val(Void that) This2.Size
read method 
read This2.Refactor2.Method left() This0.Cast.#apply(that:this.inner().val(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
read This2.Refactor2.Method right() This0.Cast.#apply(that:(
  read This2.CollectionsMut.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
mut This2.Refactor2.Method #left() This0.Cast.mut(that:this.#inner().#val(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
mut method 
mut This2.Refactor2.Method #right() (/*#################MUT METHODS
*/This0.Cast.mut(that:(
  mut This2.CollectionsMut.MutListAny rcv28=this.#inner()
  rcv28.#val(that:rcv28.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, mut This2.Refactor2.Method val) (
  mut This2.CollectionsMut.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:that, val:val)
  )
mut method 
Void left(mut This2.Refactor2.Method that) (
  mut This2.CollectionsMut.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(mut This2.Refactor2.Method that) (
  mut This2.CollectionsMut.MutListAny rcv31=this.#inner()
  rcv31.#apply(that:rcv31.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, mut This2.Refactor2.Method val) this.#inner().add(that:that, val:val)
mut method 
Void add(mut This2.Refactor2.Method right) (
  mut This2.CollectionsMut.MutListAny rcv32=this.#inner()
  rcv32.add(that:rcv32.size(), val:right)
  )
mut method 
Void add(mut This2.Refactor2.Method left) this.#inner().add(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This2.Refactor2.Method that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(/*var This res=this//this does not work, iterator would return it read.
with e in that.vals() (res+=e)
return res
*/
    Void unused0=(
      This2.Bool cond=that.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return this)
        )
      )
    Void unused1=return (this.#plus(that:that.left())).#plusplus(that:that.withoutLeft())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This2.Refactor2.Method val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This2.Refactor2.Method that) this.with(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This2.Refactor2.Method that) (/*insertion
*/this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This2.Refactor2.Method val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This2.Refactor2.Method that) this.withAlso(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This2.Refactor2.Method that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, read This2.Refactor2.Method filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, read This2.Refactor2.Method filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, read This2.Refactor2.Method filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(read This2.Refactor2.Method filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
mut This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
mut This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
mut This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
read This3.Refactor2.Method #apply(read Any that) (
  Void unused=(
    Void unused0=(
      read This3.Refactor2.Method that0=(
        Void unused2=return that
        
        catch return read This3.Refactor2.Method casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.CollectionsMut.CollectionErrors.cast()
    void
    )
  
  catch return read This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This3.Refactor2.Method mut(mut Any that) (
  Void unused=(
    Void unused0=(
      mut This3.Refactor2.Method that0=(
        Void unused2=return that
        
        catch return mut This3.Refactor2.Method casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.CollectionsMut.CollectionErrors.cast()
    void
    )
  
  catch return mut This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.CollectionsMut.MutListAny that() 
mut method 
mut This4.CollectionsMut.MutListAny #that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
read This4.Refactor2.Method filled() 
mut method 
mut This4.Refactor2.Method #filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.CollectionsMut.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This4.Refactor2.Method readInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This4.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This4.Refactor2.Method mutInner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This4.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionsMut.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This3.Refactor2.Method readInner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This3.Refactor2.Method mutInner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
read method 
read This3.CollectionsMut.MutListAny that() 
mut method 
mut This3.CollectionsMut.MutListAny #that() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#y()
  Void unused1=b.#p()
  Void unused2=b.#e()
  Void unused3=b.#space()
  Void unused4=b.#s()
  Void unused5=b.#y()
  Void unused6=b.#s()
  Void unused7=b.#t()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#space()
  Void unused11=b.#s()
  Void unused12=b.#h()
  Void unused13=b.#o()
  Void unused14=b.#u()
  Void unused15=b.#l()
  Void unused16=b.#d()
  Void unused17=b.#space()
  Void unused18=b.#m()
  Void unused19=b.#a()
  Void unused20=b.#k()
  Void unused21=b.#e()
  Void unused22=b.#space()
  Void unused23=b.#i()
  Void unused24=b.#t()
  Void unused25=b.#space()
  Void unused26=b.#n()
  Void unused27=b.#o()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#c()
  Void unused31=b.#a()
  Void unused32=b.#l()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#d()
  b
  ))
class method 
lent This0 #apply(read This3.CollectionsMut.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
read method 
read This3.Refactor2.Method #inner() this.readInner()
read method 
This3.Bool isFill() This3.Bool.false()
read method 
read This3.Refactor2.Method filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
mut This3.Refactor2.Method #filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionsMut.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This3.Refactor2.Method readInner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This3.Refactor2.Method mutInner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
read method 
read This3.Refactor2.Method filled() 
mut method 
mut This3.Refactor2.Method #filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#y()
  Void unused1=b.#p()
  Void unused2=b.#e()
  Void unused3=b.#space()
  Void unused4=b.#s()
  Void unused5=b.#y()
  Void unused6=b.#s()
  Void unused7=b.#t()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#space()
  Void unused11=b.#s()
  Void unused12=b.#h()
  Void unused13=b.#o()
  Void unused14=b.#u()
  Void unused15=b.#l()
  Void unused16=b.#d()
  Void unused17=b.#space()
  Void unused18=b.#m()
  Void unused19=b.#a()
  Void unused20=b.#k()
  Void unused21=b.#e()
  Void unused22=b.#space()
  Void unused23=b.#i()
  Void unused24=b.#t()
  Void unused25=b.#space()
  Void unused26=b.#n()
  Void unused27=b.#o()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#c()
  Void unused31=b.#a()
  Void unused32=b.#l()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#d()
  b
  ))
read method 
read This3.CollectionsMut.MutListAny that() 
mut method 
mut This3.CollectionsMut.MutListAny #that() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#t()
  Void unused0=b.#y()
  Void unused1=b.#p()
  Void unused2=b.#e()
  Void unused3=b.#space()
  Void unused4=b.#s()
  Void unused5=b.#y()
  Void unused6=b.#s()
  Void unused7=b.#t()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#space()
  Void unused11=b.#s()
  Void unused12=b.#h()
  Void unused13=b.#o()
  Void unused14=b.#u()
  Void unused15=b.#l()
  Void unused16=b.#d()
  Void unused17=b.#space()
  Void unused18=b.#m()
  Void unused19=b.#a()
  Void unused20=b.#k()
  Void unused21=b.#e()
  Void unused22=b.#space()
  Void unused23=b.#i()
  Void unused24=b.#t()
  Void unused25=b.#space()
  Void unused26=b.#n()
  Void unused27=b.#o()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#c()
  Void unused31=b.#a()
  Void unused32=b.#l()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#d()
  b
  ))
class method 
lent This0 #apply(read This3.CollectionsMut.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, read This3.Refactor2.Method filled) 
read method 
read This3.Refactor2.Method #inner() this.readInner()
read method 
This3.Bool isFill() This3.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionsMut.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
read This3.Refactor2.Method readInner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return read This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
mut This3.Refactor2.Method mutInner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.mut(that:this.#that().#val(that:this.from())))
        )
      )
    Void unused1=return this.#filled()
    void
    )
  
  catch return mut This3.Refactor2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This3.CollectionsMut.MutListAny #that() 
read method 
read This3.CollectionsMut.MutListAny that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
class method 
mut This0 #apply(mut This3.CollectionsMut.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
mut method 
Void inner(mut This3.Refactor2.Method that) (
  mut This3.CollectionsMut.MutListAny rcv33=this.#that()
  rcv33.#apply(that:this.from(), val:that)
  )
mut method 
mut This3.Refactor2.Method #inner() this.mutInner()
read method 
This3.Bool isFill() This3.Bool.false()
read method 
read This3.Refactor2.Method filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
mut This3.Refactor2.Method #filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}
Libs: {implements This2.Concept.ToS, This2.Concept.Classable
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This2.Collections.MutListAny inner) 
class method 
This0 #immK(This2.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(Library that) this.add(right:that)
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Library val(This2.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
read method 
class This2.Size #default#val(Void that) This2.Size
read method 
Library left() This0.Cast.#apply(that:this.inner().val(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
Library right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This2.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, Library val) (
  mut This2.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(Library that) (
  mut This2.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(Library that) (
  mut This2.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, Library val) this.#inner().add(that:that, val:val)
mut method 
Void add(Library right) (
  mut This2.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(Library left) this.#inner().add(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(Library that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, Library val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(Library that) this.with(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(Library that) (/*insertion
*/this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, Library val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(Library that) this.withAlso(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(Library that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, Library filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, Library filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, Library filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(Library filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
Library #apply(Any that) (
  Void unused=(
    Void unused0=(
      Library that0=(
        Void unused2=return that
        
        catch return Library casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.Collections.CollectionErrors.cast()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
Library filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This3.Bool isFill() This3.Bool.false()
read method 
Library filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
mut method 
Library #filled() 
read method 
Library filled() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo, Library filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, Library filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This3.Bool isFill() This3.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This3.Collections.MutListAny #that() 
read method 
read This3.Collections.MutListAny that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
mut method 
Void inner(Library that) (
  mut This3.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This3.Bool isFill() This3.Bool.false()
read method 
Library filled() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}}
Use: {
mut method 
Void fillMaps() (
  lent This1.Location.Lib.List.IteratorVal li=this.ls().vals()
  (
    capsule This1.Size.Iterator i=This1.Size.#from(builder:(
      capsule This1.S.SBuilder b=This1.Size.#builder()
      Void unused=b.#0()
      b
      )).vals()
    (
      Void unused0=loop (
        Void unused1=li.#next()
        
        catch exception Void catched2 (
          Void unused2=(
            Void unused5=i.#next()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=li.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          Void unused4=(
            Void unused7=i.#checkEnd()
            
            catch exception Void catched5 void
            
            void
            )
          exception void
          )
        
        (
          Void unused8=i.#next()
          
          catch exception Void catched7 (
            Void unused9=(
              Void unused11=li.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            Void unused10=(
              Void unused12=i.#checkEnd()
              
              catch exception Void catched9 void
              
              void
              )
            exception void
            )
          
          this.fillMaps(li:li.#inner(), i:i.#inner())
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This1.Location.Lib li, This1.Size i) (
  lent This1.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This1.Composers.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            This1.Location.Lib lij=li.nested(path:nj.#inner().path())
            
            catch exception This1.Location.NotAvailable catched10 void
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:nj.#inner().path(), i:i)
            )
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This1.Location.Lib lij, This1.Composers.Selectors ssj, This1.Path pj, This1.Size i) (
  lent This1.Location.Method.List.IteratorVal m=lij.methods().vals()
  (
    Void unused=loop (
      Void unused0=m.#next()
      
      catch exception Void catched0 (
        Void unused1=(
          Void unused2=m.#checkEnd()
          
          catch exception Void catched1 void
          
          void
          )
        exception void
        )
      
      (
        This1.Bool cond=This1.Composers.noClash(m:m.#inner()).#bang().#and(that:(
          This1.Selector opNorm=m.#inner().selector()
          ssj.#right(that:opNorm)
          ))
        (
          Void unused3=cond.#checkTrue()
          
          catch exception Void catched5 void
          
          this.op(p:pj, m:m.#inner(), i:i)
          )
        )
      )
    
    catch exception Void catched6 void
    
    void
    )
  )
mut method 
This1.Selector superName(This1.Selector selector, This1.Size i) This1.Selector.from(string:(
  This1.S.Continue rcv74=(
    This1.S rcv75=This1.S.#from(builder:(
      capsule This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#hash()
      b
      ))
    rcv75.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv75.#seqBuilder()
      Void unused0=b0.#add(that:i.#plus(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b1=This1.Size.#builder()
        Void unused1=b1.#1()
        b1
        ))))
      b0
      ))
    )
  rcv74.#from(builder:(
    capsule This1.S.SBuilder b2=rcv74.#builder()
    b2
    ))
  ).#plusplus(that:selector.toS()))
class method 
mut This1.Composers.Libs #seqBuilder() This1.Composers.Libs.empty()
class method 
mut This0.Decorator #from(mut This1.Composers.Libs seqBuilder) This0.Decorator.#apply(inner:seqBuilder)
mut method 
mut This1.Composers.RenameMethods openMaps() 
mut method 
mut This1.Refactor2.Method close() 
read method 
This1.Composers.Libs inputs() 
read method 
Library input() 
read method 
This1.Location.Lib.List ls() 
read method 
This1.Location.Lib l0() 
read method 
This1.Location.Lib.List l0ns() 
read method 
This1.Composers.Selectorss sels() 
class method 
mut This0 #apply(This1.Composers.Libs libs, Library lib0) (
  This1.Location.Lib l0=This1.Location.Lib.#apply(that:lib0)
  capsule This1.Location.Lib.List ls=This1.Location.Lib.List.#from(seqBuilder:(
    capsule This1.Location.Lib.List b=This1.Location.Lib.List.#seqBuilder()
    Void unused=(
      lent This1.Composers.Libs.IteratorVal l=libs.vals()
      (
        Void unused0=loop (
          Void unused1=l.#next()
          
          catch exception Void catched0 (
            Void unused2=(
              Void unused3=l.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            Void unused4=b.#add(that:This1.Location.Lib.#apply(that:l.#inner()))
            void
            )
          )
        
        catch exception Void catched4 void
        
        void
        )
      )
    b
    ))
  This1.Location.Lib.List l0ns=This1.Composers.filterClash(ls:l0.allNesteds())
  capsule This1.Composers.Selectorss sels=This1.Composers.Selectorss.#from(seqBuilder:(
    capsule This1.Composers.Selectorss b0=This1.Composers.Selectorss.#seqBuilder()
    Void unused5=(
      lent This1.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused6=loop (
          Void unused7=nj.#next()
          
          catch exception Void catched7 (
            Void unused8=(
              Void unused9=nj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            Void unused10=b0.#add(that:This1.Composers.filterClash(ms:nj.#inner().methods()))
            void
            )
          )
        
        catch exception Void catched11 void
        
        void
        )
      )
    b0
    ))
  This0.#apply(openMaps:This1.Composers.RenameMethods.#from(seqBuilder:(
    capsule This1.Composers.RenameMethods b1=This1.Composers.RenameMethods.#seqBuilder()
    Void unused11=(
      lent This1.Composers.Libs.IteratorVal l=libs.vals()
      (
        Void unused12=loop (
          Void unused13=l.#next()
          
          catch exception Void catched15 (
            Void unused14=(
              Void unused15=l.#checkEnd()
              
              catch exception Void catched16 void
              
              void
              )
            exception void
            )
          
          (
            Void unused16=b1.#add(that:This1.Refactor2.Method.#from(seqBuilder:(
              capsule This1.Refactor2.Method b2=This1.Refactor2.Method.#seqBuilder()
              b2
              )))
            void
            )
          )
        
        catch exception Void catched20 void
        
        void
        )
      )
    b1
    )), close:This1.Refactor2.Method.#from(seqBuilder:(
    capsule This1.Refactor2.Method b3=This1.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:libs, input:lib0, ls:ls, l0:l0, l0ns:l0ns, sels:sels)
  )
mut method 
mut This1.Refactor2.Method open(This1.Size that) this.openMaps().#val(that:that)
mut method 
Void fillMapsPatch(This1.Location.Lib top, This1.Path fix) (
  lent This1.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This1.Composers.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (/*all patch selectors
*/
            This1.Path pj=This1.Composers.removePrefix(path:nj.#inner().path(), prefix:fix)
            This1.Location.Lib lij=top.nested(path:pj)
            
            catch exception This1.Location.NotAvailable catched10 void
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:pj, i:This1.Size.#from(builder:(
              capsule This1.S.SBuilder b=This1.Size.#builder()
              Void unused12=b.#0()
              b
              )))
            )
          )
        )
      
      catch exception Void catched12 void
      
      void
      )
    )
  )
class method 
mut This0 #apply(Library top, This1.Path fix) exception This1.Location.NotAvailable (
  This1.Location.Lib lFix=This1.Location.Lib.#apply(that:top).nested(path:fix)
  capsule This1.Location.Lib.List ls=This1.Location.Lib.List.#from(seqBuilder:(
    capsule This1.Location.Lib.List b0=This1.Location.Lib.List.#seqBuilder()
    b0
    ))
  This1.Location.Lib.List l0ns=This1.Composers.filterClash(ls:lFix.allNesteds())
  capsule This1.Composers.Selectorss sels=This1.Composers.Selectorss.#from(seqBuilder:(
    capsule This1.Composers.Selectorss b=This1.Composers.Selectorss.#seqBuilder()
    Void unused=(
      lent This1.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused0=loop (
          Void unused1=nj.#next()
          
          catch exception Void catched1 (
            Void unused2=(
              Void unused3=nj.#checkEnd()
              
              catch exception Void catched2 void
              
              void
              )
            exception void
            )
          
          (
            Void unused4=b.#add(that:This1.Composers.filterClash(ms:nj.#inner().methods()))
            void
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    b
    ))
  This0.#apply(openMaps:This1.Composers.RenameMethods.#from(seqBuilder:(
    capsule This1.Composers.RenameMethods b1=This1.Composers.RenameMethods.#seqBuilder()
    Void unused5=b1.#add(that:This1.Refactor2.Method.#from(seqBuilder:(
      capsule This1.Refactor2.Method b2=This1.Refactor2.Method.#seqBuilder()
      b2
      )))
    b1
    )), close:This1.Refactor2.Method.#from(seqBuilder:(
    capsule This1.Refactor2.Method b3=This1.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:This1.Composers.Libs.#from(seqBuilder:(
    capsule This1.Composers.Libs b4=This1.Composers.Libs.#seqBuilder()
    b4
    )), input:top, ls:ls, l0:lFix, l0ns:l0ns, sels:sels)
  )
class method 
class This1.Path #default##apply(Void patch) This1.Path
class method 
mut This0.Patcher #apply(This1.Path patch) This0.Patcher.#apply(patch:patch)
class method 
mut This0 #apply(mut This1.Composers.RenameMethods openMaps, mut This1.Refactor2.Method close, This1.Composers.Libs inputs, Library input, This1.Location.Lib.List ls, This1.Location.Lib l0, This1.Location.Lib.List l0ns, This1.Composers.Selectorss sels) 
mut method 
Void op(This1.Path p, This1.Location.Method m, This1.Size i) void
Over: {
mut method 
Void fillMaps() (
  lent This2.Location.Lib.List.IteratorVal li=this.ls().vals()
  (
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).vals()
    (
      Void unused0=loop (
        Void unused1=li.#next()
        
        catch exception Void catched2 (
          Void unused2=(
            Void unused5=i.#next()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=li.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          Void unused4=(
            Void unused7=i.#checkEnd()
            
            catch exception Void catched5 void
            
            void
            )
          exception void
          )
        
        (
          Void unused8=i.#next()
          
          catch exception Void catched7 (
            Void unused9=(
              Void unused11=li.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            Void unused10=(
              Void unused12=i.#checkEnd()
              
              catch exception Void catched9 void
              
              void
              )
            exception void
            )
          
          this.fillMaps(li:li.#inner(), i:i.#inner())
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This2.Location.Lib li, This2.Size i) (
  lent This2.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This2.Composers.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            This2.Location.Lib lij=li.nested(path:nj.#inner().path())
            
            catch exception This2.Location.NotAvailable catched10 void
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:nj.#inner().path(), i:i)
            )
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This2.Location.Lib lij, This2.Composers.Selectors ssj, This2.Path pj, This2.Size i) (
  lent This2.Location.Method.List.IteratorVal m=lij.methods().vals()
  (
    Void unused=loop (
      Void unused0=m.#next()
      
      catch exception Void catched0 (
        Void unused1=(
          Void unused2=m.#checkEnd()
          
          catch exception Void catched1 void
          
          void
          )
        exception void
        )
      
      (
        This2.Bool cond=This2.Composers.noClash(m:m.#inner()).#bang().#and(that:(
          This2.Selector opNorm=m.#inner().selector()
          ssj.#right(that:opNorm)
          ))
        (
          Void unused3=cond.#checkTrue()
          
          catch exception Void catched5 void
          
          this.op(p:pj, m:m.#inner(), i:i)
          )
        )
      )
    
    catch exception Void catched6 void
    
    void
    )
  )
mut method 
This2.Selector superName(This2.Selector selector, This2.Size i) This2.Selector.from(string:(
  This2.S.Continue rcv74=(
    This2.S rcv75=This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#hash()
      b
      ))
    rcv75.#from(seqBuilder:(
      capsule This2.S.SConcat b0=rcv75.#seqBuilder()
      Void unused0=b0.#add(that:i.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b1=This2.Size.#builder()
        Void unused1=b1.#1()
        b1
        ))))
      b0
      ))
    )
  rcv74.#from(builder:(
    capsule This2.S.SBuilder b2=rcv74.#builder()
    b2
    ))
  ).#plusplus(that:selector.toS()))
class method 
mut This2.Composers.Libs #seqBuilder() This2.Composers.Libs.empty()
class method 
mut This0.Decorator #from(mut This2.Composers.Libs seqBuilder) This0.Decorator.#apply(inner:seqBuilder)
mut method 
mut This2.Composers.RenameMethods openMaps() 
mut method 
mut This2.Refactor2.Method close() 
read method 
This2.Composers.Libs inputs() 
read method 
Library input() 
read method 
This2.Location.Lib.List ls() 
read method 
This2.Location.Lib l0() 
read method 
This2.Location.Lib.List l0ns() 
read method 
This2.Composers.Selectorss sels() 
class method 
mut This0 #apply(This2.Composers.Libs libs, Library lib0) (
  This2.Location.Lib l0=This2.Location.Lib.#apply(that:lib0)
  capsule This2.Location.Lib.List ls=This2.Location.Lib.List.#from(seqBuilder:(
    capsule This2.Location.Lib.List b=This2.Location.Lib.List.#seqBuilder()
    Void unused=(
      lent This2.Composers.Libs.IteratorVal l=libs.vals()
      (
        Void unused0=loop (
          Void unused1=l.#next()
          
          catch exception Void catched0 (
            Void unused2=(
              Void unused3=l.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            Void unused4=b.#add(that:This2.Location.Lib.#apply(that:l.#inner()))
            void
            )
          )
        
        catch exception Void catched4 void
        
        void
        )
      )
    b
    ))
  This2.Location.Lib.List l0ns=This2.Composers.filterClash(ls:l0.allNesteds())
  capsule This2.Composers.Selectorss sels=This2.Composers.Selectorss.#from(seqBuilder:(
    capsule This2.Composers.Selectorss b0=This2.Composers.Selectorss.#seqBuilder()
    Void unused5=(
      lent This2.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused6=loop (
          Void unused7=nj.#next()
          
          catch exception Void catched7 (
            Void unused8=(
              Void unused9=nj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            Void unused10=b0.#add(that:This2.Composers.filterClash(ms:nj.#inner().methods()))
            void
            )
          )
        
        catch exception Void catched11 void
        
        void
        )
      )
    b0
    ))
  This0.#apply(openMaps:This2.Composers.RenameMethods.#from(seqBuilder:(
    capsule This2.Composers.RenameMethods b1=This2.Composers.RenameMethods.#seqBuilder()
    Void unused11=(
      lent This2.Composers.Libs.IteratorVal l=libs.vals()
      (
        Void unused12=loop (
          Void unused13=l.#next()
          
          catch exception Void catched15 (
            Void unused14=(
              Void unused15=l.#checkEnd()
              
              catch exception Void catched16 void
              
              void
              )
            exception void
            )
          
          (
            Void unused16=b1.#add(that:This2.Refactor2.Method.#from(seqBuilder:(
              capsule This2.Refactor2.Method b2=This2.Refactor2.Method.#seqBuilder()
              b2
              )))
            void
            )
          )
        
        catch exception Void catched20 void
        
        void
        )
      )
    b1
    )), close:This2.Refactor2.Method.#from(seqBuilder:(
    capsule This2.Refactor2.Method b3=This2.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:libs, input:lib0, ls:ls, l0:l0, l0ns:l0ns, sels:sels)
  )
mut method 
mut This2.Refactor2.Method open(This2.Size that) this.openMaps().#val(that:that)
mut method 
Void fillMapsPatch(This2.Location.Lib top, This2.Path fix) (
  lent This2.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This2.Composers.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (/*all patch selectors
*/
            This2.Path pj=This2.Composers.removePrefix(path:nj.#inner().path(), prefix:fix)
            This2.Location.Lib lij=top.nested(path:pj)
            
            catch exception This2.Location.NotAvailable catched10 void
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:pj, i:This2.Size.#from(builder:(
              capsule This2.S.SBuilder b=This2.Size.#builder()
              Void unused12=b.#0()
              b
              )))
            )
          )
        )
      
      catch exception Void catched12 void
      
      void
      )
    )
  )
class method 
mut This0 #apply(Library top, This2.Path fix) exception This2.Location.NotAvailable (
  This2.Location.Lib lFix=This2.Location.Lib.#apply(that:top).nested(path:fix)
  capsule This2.Location.Lib.List ls=This2.Location.Lib.List.#from(seqBuilder:(
    capsule This2.Location.Lib.List b0=This2.Location.Lib.List.#seqBuilder()
    b0
    ))
  This2.Location.Lib.List l0ns=This2.Composers.filterClash(ls:lFix.allNesteds())
  capsule This2.Composers.Selectorss sels=This2.Composers.Selectorss.#from(seqBuilder:(
    capsule This2.Composers.Selectorss b=This2.Composers.Selectorss.#seqBuilder()
    Void unused=(
      lent This2.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused0=loop (
          Void unused1=nj.#next()
          
          catch exception Void catched1 (
            Void unused2=(
              Void unused3=nj.#checkEnd()
              
              catch exception Void catched2 void
              
              void
              )
            exception void
            )
          
          (
            Void unused4=b.#add(that:This2.Composers.filterClash(ms:nj.#inner().methods()))
            void
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    b
    ))
  This0.#apply(openMaps:This2.Composers.RenameMethods.#from(seqBuilder:(
    capsule This2.Composers.RenameMethods b1=This2.Composers.RenameMethods.#seqBuilder()
    Void unused5=b1.#add(that:This2.Refactor2.Method.#from(seqBuilder:(
      capsule This2.Refactor2.Method b2=This2.Refactor2.Method.#seqBuilder()
      b2
      )))
    b1
    )), close:This2.Refactor2.Method.#from(seqBuilder:(
    capsule This2.Refactor2.Method b3=This2.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:This2.Composers.Libs.#from(seqBuilder:(
    capsule This2.Composers.Libs b4=This2.Composers.Libs.#seqBuilder()
    b4
    )), input:top, ls:ls, l0:lFix, l0ns:l0ns, sels:sels)
  )
class method 
class This2.Path #default##apply(Void patch) This2.Path
class method 
mut This0.Patcher #apply(This2.Path patch) This0.Patcher.#apply(patch:patch)
class method 
mut This0 #apply(mut This2.Composers.RenameMethods openMaps, mut This2.Refactor2.Method close, This2.Composers.Libs inputs, Library input, This2.Location.Lib.List ls, This2.Location.Lib l0, This2.Location.Lib.List l0ns, This2.Composers.Selectorss sels) 
mut method 
Void op(This2.Path p, This2.Location.Method m, This2.Size i) (
  This2.Selector s=m.selector()
  This2.Selector s2=this.superName(selector:s, i:i)
  Void unused=this.open(that:i).#add(rename:s, of:p, into:s2)
  this.close().#add(hide:s2, of:p)
  )
Decorator: {
mut method 
mut This3.Composers.Libs #inner() 
read method 
read This3.Composers.Libs inner() 
class method 
mut This0 #apply(mut This3.Composers.Libs inner) 
method 
Library #leftrightleft(Library that) exception This3.Refactor2.MethodClash, This3.Refactor2.ClassClash, This3.Refactor2.SubtleSubtypeViolation (
  Void unused=(
    mut This1 cmp=This1.#apply(libs:this.inner(), lib0:that)
    Void unused0=cmp.fillMaps()
    var Library acc=that
    Void unused1=(
      lent This3.Composers.Libs.IteratorVal li=this.inner().reverse().vals()
      (
        mut This3.Composers.RenameMethods.IteratorVar mi=cmp.openMaps().#reverse().#vals()
        (
          Void unused3=loop (
            Void unused4=li.#next()
            
            catch exception Void catched1 (
              Void unused5=(
                Void unused8=mi.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused6=(
                Void unused9=li.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused7=(
                Void unused10=mi.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=mi.#next()
              
              catch exception Void catched6 (
                Void unused12=(
                  Void unused14=li.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=mi.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              acc := This3.Refactor2.compose(that:mi.#inner().#leftrightleft(that:li.#inner()), and:acc)
              )
            )
          
          catch exception Void catched10 void
          
          void
          )
        )
      )
    Void unused2=return cmp.close().#leftrightleft(that:acc)
    
    catch exception This3.Refactor2.PathUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b=This3.X.#builder()
      Void unused16=b.#C()
      Void unused17=b.#o()
      Void unused18=b.#m()
      Void unused19=b.#p()
      Void unused20=b.#o()
      Void unused21=b.#s()
      Void unused22=b.#e()
      Void unused23=b.#r()
      Void unused24=b.#s()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#c()
      Void unused28=b.#t()
      Void unused29=b.#i()
      Void unused30=b.#o()
      Void unused31=b.#n()
      Void unused32=b.#space()
      Void unused33=b.#m()
      Void unused34=b.#e()
      Void unused35=b.#t()
      Void unused36=b.#h()
      Void unused37=b.#o()
      Void unused38=b.#d()
      Void unused39=b.#space()
      Void unused40=b.#p()
      Void unused41=b.#r()
      Void unused42=b.#o()
      Void unused43=b.#d()
      Void unused44=b.#u()
      Void unused45=b.#c()
      Void unused46=b.#e()
      Void unused47=b.#d()
      Void unused48=b.#space()
      Void unused49=b.#i()
      Void unused50=b.#n()
      Void unused51=b.#v()
      Void unused52=b.#a()
      Void unused53=b.#l()
      Void unused54=b.#i()
      Void unused55=b.#d()
      Void unused56=b.#space()
      Void unused57=b.#m()
      Void unused58=b.#a()
      Void unused59=b.#p()
      Void unused60=b.#s()
      b
      )).#apply(that:catched11)
    
    catch exception This3.Refactor2.SelectorUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b0=This3.X.#builder()
      Void unused61=b0.#C()
      Void unused62=b0.#o()
      Void unused63=b0.#m()
      Void unused64=b0.#p()
      Void unused65=b0.#o()
      Void unused66=b0.#s()
      Void unused67=b0.#e()
      Void unused68=b0.#r()
      Void unused69=b0.#s()
      Void unused70=b0.#space()
      Void unused71=b0.#a()
      Void unused72=b0.#c()
      Void unused73=b0.#t()
      Void unused74=b0.#i()
      Void unused75=b0.#o()
      Void unused76=b0.#n()
      Void unused77=b0.#space()
      Void unused78=b0.#m()
      Void unused79=b0.#e()
      Void unused80=b0.#t()
      Void unused81=b0.#h()
      Void unused82=b0.#o()
      Void unused83=b0.#d()
      Void unused84=b0.#space()
      Void unused85=b0.#p()
      Void unused86=b0.#r()
      Void unused87=b0.#o()
      Void unused88=b0.#d()
      Void unused89=b0.#u()
      Void unused90=b0.#c()
      Void unused91=b0.#e()
      Void unused92=b0.#d()
      Void unused93=b0.#space()
      Void unused94=b0.#i()
      Void unused95=b0.#n()
      Void unused96=b0.#v()
      Void unused97=b0.#a()
      Void unused98=b0.#l()
      Void unused99=b0.#i()
      Void unused100=b0.#d()
      Void unused101=b0.#space()
      Void unused102=b0.#m()
      Void unused103=b0.#a()
      Void unused104=b0.#p()
      Void unused105=b0.#s()
      b0
      )).#apply(that:catched11)
    
    catch exception This3.Refactor2.ClassUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b1=This3.X.#builder()
      Void unused106=b1.#C()
      Void unused107=b1.#o()
      Void unused108=b1.#m()
      Void unused109=b1.#p()
      Void unused110=b1.#o()
      Void unused111=b1.#s()
      Void unused112=b1.#e()
      Void unused113=b1.#r()
      Void unused114=b1.#s()
      Void unused115=b1.#space()
      Void unused116=b1.#a()
      Void unused117=b1.#c()
      Void unused118=b1.#t()
      Void unused119=b1.#i()
      Void unused120=b1.#o()
      Void unused121=b1.#n()
      Void unused122=b1.#space()
      Void unused123=b1.#m()
      Void unused124=b1.#e()
      Void unused125=b1.#t()
      Void unused126=b1.#h()
      Void unused127=b1.#o()
      Void unused128=b1.#d()
      Void unused129=b1.#space()
      Void unused130=b1.#p()
      Void unused131=b1.#r()
      Void unused132=b1.#o()
      Void unused133=b1.#d()
      Void unused134=b1.#u()
      Void unused135=b1.#c()
      Void unused136=b1.#e()
      Void unused137=b1.#d()
      Void unused138=b1.#space()
      Void unused139=b1.#i()
      Void unused140=b1.#n()
      Void unused141=b1.#v()
      Void unused142=b1.#a()
      Void unused143=b1.#l()
      Void unused144=b1.#i()
      Void unused145=b1.#d()
      Void unused146=b1.#space()
      Void unused147=b1.#m()
      Void unused148=b1.#a()
      Void unused149=b1.#p()
      Void unused150=b1.#s()
      b1
      )).#apply(that:catched11)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Patcher: {
mut method 
This3.Path #patch() 
read method 
This3.Path patch() 
class method 
mut This0 #apply(This3.Path patch) 
method 
Library #leftrightleft(Library that) exception This3.Refactor2.MethodClash, This3.Refactor2.ClassClash, This3.Refactor2.SubtleSubtypeViolation, This3.Refactor2.PathUnfit, This3.Refactor2.SelectorUnfit, This3.Refactor2.ClassUnfit, This3.Location.NotAvailable (
  mut This1 cmp=This1.#apply(top:that, fix:this.patch())
  Void unused=cmp.fillMapsPatch(top:This3.Location.Lib.#apply(that:that), fix:this.patch())
  var Library acc=that
  Void unused0=acc := (
    Library opNorm=acc
    cmp.open(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused3=b.#0()
      b
      ))).#leftrightleft(that:opNorm)
    )
  Void unused1=acc := (
    Library opNorm0=acc
    This3.Refactor2.rename(path:this.patch(), into:This3.Refactor2.#default#rename(into:void).#from(builder:(
      capsule This3.S.SBuilder b0=This3.Refactor2.#default#rename(into:void).#builder()
      Void unused4=b0.#T()
      Void unused5=b0.#h()
      Void unused6=b0.#i()
      Void unused7=b0.#s()
      b0
      ))).#leftrightleft(that:opNorm0)
    )
  Void unused2=acc := (
    Library opNorm1=acc
    cmp.close().#leftrightleft(that:opNorm1)
    )
  acc
  )}}
Override: {
mut method 
Void fillMaps() (
  lent This2.Location.Lib.List.IteratorVal li=this.ls().vals()
  (
    capsule This2.Size.Iterator i=This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).vals()
    (
      Void unused0=loop (
        Void unused1=li.#next()
        
        catch exception Void catched2 (
          Void unused2=(
            Void unused5=i.#next()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=li.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          Void unused4=(
            Void unused7=i.#checkEnd()
            
            catch exception Void catched5 void
            
            void
            )
          exception void
          )
        
        (
          Void unused8=i.#next()
          
          catch exception Void catched7 (
            Void unused9=(
              Void unused11=li.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            Void unused10=(
              Void unused12=i.#checkEnd()
              
              catch exception Void catched9 void
              
              void
              )
            exception void
            )
          
          this.fillMaps(li:li.#inner(), i:i.#inner())
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This2.Location.Lib li, This2.Size i) (
  lent This2.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This2.Composers.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            This2.Location.Lib lij=li.nested(path:nj.#inner().path())
            
            catch exception This2.Location.NotAvailable catched10 void
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:nj.#inner().path(), i:i)
            )
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    )
  )
mut method 
Void fillMaps(This2.Location.Lib lij, This2.Composers.Selectors ssj, This2.Path pj, This2.Size i) (
  lent This2.Location.Method.List.IteratorVal m=lij.methods().vals()
  (
    Void unused=loop (
      Void unused0=m.#next()
      
      catch exception Void catched0 (
        Void unused1=(
          Void unused2=m.#checkEnd()
          
          catch exception Void catched1 void
          
          void
          )
        exception void
        )
      
      (
        This2.Bool cond=This2.Composers.noClash(m:m.#inner()).#bang().#and(that:(
          This2.Selector opNorm=m.#inner().selector()
          ssj.#right(that:opNorm)
          ))
        (
          Void unused3=cond.#checkTrue()
          
          catch exception Void catched5 void
          
          this.op(p:pj, m:m.#inner(), i:i)
          )
        )
      )
    
    catch exception Void catched6 void
    
    void
    )
  )
mut method 
This2.Selector superName(This2.Selector selector, This2.Size i) This2.Selector.from(string:(
  This2.S.Continue rcv74=(
    This2.S rcv75=This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#hash()
      b
      ))
    rcv75.#from(seqBuilder:(
      capsule This2.S.SConcat b0=rcv75.#seqBuilder()
      Void unused0=b0.#add(that:i.#plus(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b1=This2.Size.#builder()
        Void unused1=b1.#1()
        b1
        ))))
      b0
      ))
    )
  rcv74.#from(builder:(
    capsule This2.S.SBuilder b2=rcv74.#builder()
    b2
    ))
  ).#plusplus(that:selector.toS()))
class method 
mut This2.Composers.Libs #seqBuilder() This2.Composers.Libs.empty()
class method 
mut This0.Decorator #from(mut This2.Composers.Libs seqBuilder) This0.Decorator.#apply(inner:seqBuilder)
mut method 
mut This2.Composers.RenameMethods openMaps() 
mut method 
mut This2.Refactor2.Method close() 
read method 
This2.Composers.Libs inputs() 
read method 
Library input() 
read method 
This2.Location.Lib.List ls() 
read method 
This2.Location.Lib l0() 
read method 
This2.Location.Lib.List l0ns() 
read method 
This2.Composers.Selectorss sels() 
class method 
mut This0 #apply(This2.Composers.Libs libs, Library lib0) (
  This2.Location.Lib l0=This2.Location.Lib.#apply(that:lib0)
  capsule This2.Location.Lib.List ls=This2.Location.Lib.List.#from(seqBuilder:(
    capsule This2.Location.Lib.List b=This2.Location.Lib.List.#seqBuilder()
    Void unused=(
      lent This2.Composers.Libs.IteratorVal l=libs.vals()
      (
        Void unused0=loop (
          Void unused1=l.#next()
          
          catch exception Void catched0 (
            Void unused2=(
              Void unused3=l.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (
            Void unused4=b.#add(that:This2.Location.Lib.#apply(that:l.#inner()))
            void
            )
          )
        
        catch exception Void catched4 void
        
        void
        )
      )
    b
    ))
  This2.Location.Lib.List l0ns=This2.Composers.filterClash(ls:l0.allNesteds())
  capsule This2.Composers.Selectorss sels=This2.Composers.Selectorss.#from(seqBuilder:(
    capsule This2.Composers.Selectorss b0=This2.Composers.Selectorss.#seqBuilder()
    Void unused5=(
      lent This2.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused6=loop (
          Void unused7=nj.#next()
          
          catch exception Void catched7 (
            Void unused8=(
              Void unused9=nj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (
            Void unused10=b0.#add(that:This2.Composers.filterClash(ms:nj.#inner().methods()))
            void
            )
          )
        
        catch exception Void catched11 void
        
        void
        )
      )
    b0
    ))
  This0.#apply(openMaps:This2.Composers.RenameMethods.#from(seqBuilder:(
    capsule This2.Composers.RenameMethods b1=This2.Composers.RenameMethods.#seqBuilder()
    Void unused11=(
      lent This2.Composers.Libs.IteratorVal l=libs.vals()
      (
        Void unused12=loop (
          Void unused13=l.#next()
          
          catch exception Void catched15 (
            Void unused14=(
              Void unused15=l.#checkEnd()
              
              catch exception Void catched16 void
              
              void
              )
            exception void
            )
          
          (
            Void unused16=b1.#add(that:This2.Refactor2.Method.#from(seqBuilder:(
              capsule This2.Refactor2.Method b2=This2.Refactor2.Method.#seqBuilder()
              b2
              )))
            void
            )
          )
        
        catch exception Void catched20 void
        
        void
        )
      )
    b1
    )), close:This2.Refactor2.Method.#from(seqBuilder:(
    capsule This2.Refactor2.Method b3=This2.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:libs, input:lib0, ls:ls, l0:l0, l0ns:l0ns, sels:sels)
  )
mut method 
mut This2.Refactor2.Method open(This2.Size that) this.openMaps().#val(that:that)
mut method 
Void fillMapsPatch(This2.Location.Lib top, This2.Path fix) (
  lent This2.Location.Lib.List.IteratorVal nj=this.l0ns().vals()
  (
    lent This2.Composers.Selectorss.IteratorVal ssj=this.sels().vals()
    (
      Void unused=loop (
        Void unused0=nj.#next()
        
        catch exception Void catched1 (
          Void unused1=(
            Void unused4=ssj.#next()
            
            catch exception Void catched2 void
            
            void
            )
          Void unused2=(
            Void unused5=nj.#checkEnd()
            
            catch exception Void catched3 void
            
            void
            )
          Void unused3=(
            Void unused6=ssj.#checkEnd()
            
            catch exception Void catched4 void
            
            void
            )
          exception void
          )
        
        (
          Void unused7=ssj.#next()
          
          catch exception Void catched6 (
            Void unused8=(
              Void unused10=nj.#checkEnd()
              
              catch exception Void catched7 void
              
              void
              )
            Void unused9=(
              Void unused11=ssj.#checkEnd()
              
              catch exception Void catched8 void
              
              void
              )
            exception void
            )
          
          (/*all patch selectors
*/
            This2.Path pj=This2.Composers.removePrefix(path:nj.#inner().path(), prefix:fix)
            This2.Location.Lib lij=top.nested(path:pj)
            
            catch exception This2.Location.NotAvailable catched10 void
            
            this.fillMaps(lij:lij, ssj:ssj.#inner(), pj:pj, i:This2.Size.#from(builder:(
              capsule This2.S.SBuilder b=This2.Size.#builder()
              Void unused12=b.#0()
              b
              )))
            )
          )
        )
      
      catch exception Void catched12 void
      
      void
      )
    )
  )
class method 
mut This0 #apply(Library top, This2.Path fix) exception This2.Location.NotAvailable (
  This2.Location.Lib lFix=This2.Location.Lib.#apply(that:top).nested(path:fix)
  capsule This2.Location.Lib.List ls=This2.Location.Lib.List.#from(seqBuilder:(
    capsule This2.Location.Lib.List b0=This2.Location.Lib.List.#seqBuilder()
    b0
    ))
  This2.Location.Lib.List l0ns=This2.Composers.filterClash(ls:lFix.allNesteds())
  capsule This2.Composers.Selectorss sels=This2.Composers.Selectorss.#from(seqBuilder:(
    capsule This2.Composers.Selectorss b=This2.Composers.Selectorss.#seqBuilder()
    Void unused=(
      lent This2.Location.Lib.List.IteratorVal nj=l0ns.vals()
      (
        Void unused0=loop (
          Void unused1=nj.#next()
          
          catch exception Void catched1 (
            Void unused2=(
              Void unused3=nj.#checkEnd()
              
              catch exception Void catched2 void
              
              void
              )
            exception void
            )
          
          (
            Void unused4=b.#add(that:This2.Composers.filterClash(ms:nj.#inner().methods()))
            void
            )
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    b
    ))
  This0.#apply(openMaps:This2.Composers.RenameMethods.#from(seqBuilder:(
    capsule This2.Composers.RenameMethods b1=This2.Composers.RenameMethods.#seqBuilder()
    Void unused5=b1.#add(that:This2.Refactor2.Method.#from(seqBuilder:(
      capsule This2.Refactor2.Method b2=This2.Refactor2.Method.#seqBuilder()
      b2
      )))
    b1
    )), close:This2.Refactor2.Method.#from(seqBuilder:(
    capsule This2.Refactor2.Method b3=This2.Refactor2.Method.#seqBuilder()
    b3
    )), inputs:This2.Composers.Libs.#from(seqBuilder:(
    capsule This2.Composers.Libs b4=This2.Composers.Libs.#seqBuilder()
    b4
    )), input:top, ls:ls, l0:lFix, l0ns:l0ns, sels:sels)
  )
class method 
class This2.Path #default##apply(Void patch) This2.Path
class method 
mut This0.Patcher #apply(This2.Path patch) This0.Patcher.#apply(patch:patch)
class method 
mut This0 #apply(mut This2.Composers.RenameMethods openMaps, mut This2.Refactor2.Method close, This2.Composers.Libs inputs, Library input, This2.Location.Lib.List ls, This2.Location.Lib l0, This2.Location.Lib.List l0ns, This2.Composers.Selectorss sels) 
mut method 
Void op(This2.Path p, This2.Location.Method m, This2.Size i) (
  Void unused=This2.Debug.#apply(that:(
    This2.S.Continue rcv80=(
      This2.S rcv81=(
        This2.S.Continue rcv82=(
          This2.S rcv83=This2.S.#from(builder:(
            capsule This2.S.SBuilder b=This2.S.#builder()
            Void unused1=b.#F()
            Void unused2=b.#i()
            Void unused3=b.#x()
            Void unused4=b.#i()
            Void unused5=b.#n()
            Void unused6=b.#g()
            Void unused7=b.#space()
            b
            ))
          rcv83.#from(seqBuilder:(
            capsule This2.S.SConcat b0=rcv83.#seqBuilder()
            Void unused8=b0.#add(that:p)
            b0
            ))
          )
        rcv82.#from(builder:(
          capsule This2.S.SBuilder b1=rcv82.#builder()
          Void unused9=b1.#colon()
          Void unused10=b1.#colon()
          b1
          ))
        )
      rcv81.#from(seqBuilder:(
        capsule This2.S.SConcat b2=rcv81.#seqBuilder()
        Void unused11=b2.#add(that:m.selector())
        b2
        ))
      )
    rcv80.#from(builder:(
      capsule This2.S.SBuilder b3=rcv80.#builder()
      b3
      ))
    ))
  This2.Selector s=m.selector()
  This2.Selector s2=this.superName(selector:s, i:i)
  Void unused0=this.open(that:i).#add(abstract:s, of:p, alias:s2)
  this.close().#add(hide:s2, of:p)
  )
Decorator: {
mut method 
mut This3.Composers.Libs #inner() 
read method 
read This3.Composers.Libs inner() 
class method 
mut This0 #apply(mut This3.Composers.Libs inner) 
method 
Library #leftrightleft(Library that) exception This3.Refactor2.MethodClash, This3.Refactor2.ClassClash, This3.Refactor2.SubtleSubtypeViolation (
  Void unused=(
    mut This1 cmp=This1.#apply(libs:this.inner(), lib0:that)
    Void unused0=cmp.fillMaps()
    var Library acc=that
    Void unused1=(
      lent This3.Composers.Libs.IteratorVal li=this.inner().reverse().vals()
      (
        mut This3.Composers.RenameMethods.IteratorVar mi=cmp.openMaps().#reverse().#vals()
        (
          Void unused3=loop (
            Void unused4=li.#next()
            
            catch exception Void catched1 (
              Void unused5=(
                Void unused8=mi.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused6=(
                Void unused9=li.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused7=(
                Void unused10=mi.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=mi.#next()
              
              catch exception Void catched6 (
                Void unused12=(
                  Void unused14=li.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=mi.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              acc := This3.Refactor2.compose(that:mi.#inner().#leftrightleft(that:li.#inner()), and:acc)
              )
            )
          
          catch exception Void catched10 void
          
          void
          )
        )
      )
    Void unused2=return cmp.close().#leftrightleft(that:acc)
    
    catch exception This3.Refactor2.PathUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b=This3.X.#builder()
      Void unused16=b.#C()
      Void unused17=b.#o()
      Void unused18=b.#m()
      Void unused19=b.#p()
      Void unused20=b.#o()
      Void unused21=b.#s()
      Void unused22=b.#e()
      Void unused23=b.#r()
      Void unused24=b.#s()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#c()
      Void unused28=b.#t()
      Void unused29=b.#i()
      Void unused30=b.#o()
      Void unused31=b.#n()
      Void unused32=b.#space()
      Void unused33=b.#m()
      Void unused34=b.#e()
      Void unused35=b.#t()
      Void unused36=b.#h()
      Void unused37=b.#o()
      Void unused38=b.#d()
      Void unused39=b.#space()
      Void unused40=b.#p()
      Void unused41=b.#r()
      Void unused42=b.#o()
      Void unused43=b.#d()
      Void unused44=b.#u()
      Void unused45=b.#c()
      Void unused46=b.#e()
      Void unused47=b.#d()
      Void unused48=b.#space()
      Void unused49=b.#i()
      Void unused50=b.#n()
      Void unused51=b.#v()
      Void unused52=b.#a()
      Void unused53=b.#l()
      Void unused54=b.#i()
      Void unused55=b.#d()
      Void unused56=b.#space()
      Void unused57=b.#m()
      Void unused58=b.#a()
      Void unused59=b.#p()
      Void unused60=b.#s()
      b
      )).#apply(that:catched11)
    
    catch exception This3.Refactor2.SelectorUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b0=This3.X.#builder()
      Void unused61=b0.#C()
      Void unused62=b0.#o()
      Void unused63=b0.#m()
      Void unused64=b0.#p()
      Void unused65=b0.#o()
      Void unused66=b0.#s()
      Void unused67=b0.#e()
      Void unused68=b0.#r()
      Void unused69=b0.#s()
      Void unused70=b0.#space()
      Void unused71=b0.#a()
      Void unused72=b0.#c()
      Void unused73=b0.#t()
      Void unused74=b0.#i()
      Void unused75=b0.#o()
      Void unused76=b0.#n()
      Void unused77=b0.#space()
      Void unused78=b0.#m()
      Void unused79=b0.#e()
      Void unused80=b0.#t()
      Void unused81=b0.#h()
      Void unused82=b0.#o()
      Void unused83=b0.#d()
      Void unused84=b0.#space()
      Void unused85=b0.#p()
      Void unused86=b0.#r()
      Void unused87=b0.#o()
      Void unused88=b0.#d()
      Void unused89=b0.#u()
      Void unused90=b0.#c()
      Void unused91=b0.#e()
      Void unused92=b0.#d()
      Void unused93=b0.#space()
      Void unused94=b0.#i()
      Void unused95=b0.#n()
      Void unused96=b0.#v()
      Void unused97=b0.#a()
      Void unused98=b0.#l()
      Void unused99=b0.#i()
      Void unused100=b0.#d()
      Void unused101=b0.#space()
      Void unused102=b0.#m()
      Void unused103=b0.#a()
      Void unused104=b0.#p()
      Void unused105=b0.#s()
      b0
      )).#apply(that:catched11)
    
    catch exception This3.Refactor2.ClassUnfit catched11 error This3.X.#from(builder:(
      capsule This3.S.SBuilder b1=This3.X.#builder()
      Void unused106=b1.#C()
      Void unused107=b1.#o()
      Void unused108=b1.#m()
      Void unused109=b1.#p()
      Void unused110=b1.#o()
      Void unused111=b1.#s()
      Void unused112=b1.#e()
      Void unused113=b1.#r()
      Void unused114=b1.#s()
      Void unused115=b1.#space()
      Void unused116=b1.#a()
      Void unused117=b1.#c()
      Void unused118=b1.#t()
      Void unused119=b1.#i()
      Void unused120=b1.#o()
      Void unused121=b1.#n()
      Void unused122=b1.#space()
      Void unused123=b1.#m()
      Void unused124=b1.#e()
      Void unused125=b1.#t()
      Void unused126=b1.#h()
      Void unused127=b1.#o()
      Void unused128=b1.#d()
      Void unused129=b1.#space()
      Void unused130=b1.#p()
      Void unused131=b1.#r()
      Void unused132=b1.#o()
      Void unused133=b1.#d()
      Void unused134=b1.#u()
      Void unused135=b1.#c()
      Void unused136=b1.#e()
      Void unused137=b1.#d()
      Void unused138=b1.#space()
      Void unused139=b1.#i()
      Void unused140=b1.#n()
      Void unused141=b1.#v()
      Void unused142=b1.#a()
      Void unused143=b1.#l()
      Void unused144=b1.#i()
      Void unused145=b1.#d()
      Void unused146=b1.#space()
      Void unused147=b1.#m()
      Void unused148=b1.#a()
      Void unused149=b1.#p()
      Void unused150=b1.#s()
      b1
      )).#apply(that:catched11)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Patcher: {
mut method 
This3.Path #patch() 
read method 
This3.Path patch() 
class method 
mut This0 #apply(This3.Path patch) 
method 
Library #leftrightleft(Library that) exception This3.Refactor2.MethodClash, This3.Refactor2.ClassClash, This3.Refactor2.SubtleSubtypeViolation, This3.Refactor2.PathUnfit, This3.Refactor2.SelectorUnfit, This3.Refactor2.ClassUnfit, This3.Location.NotAvailable (
  mut This1 cmp=This1.#apply(top:that, fix:this.patch())
  Void unused=cmp.fillMapsPatch(top:This3.Location.Lib.#apply(that:that), fix:this.patch())
  var Library acc=that
  Void unused0=acc := (
    Library opNorm=acc
    cmp.open(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b=This3.Size.#builder()
      Void unused3=b.#0()
      b
      ))).#leftrightleft(that:opNorm)
    )
  Void unused1=acc := (
    Library opNorm0=acc
    This3.Refactor2.rename(path:this.patch(), into:This3.Refactor2.#default#rename(into:void).#from(builder:(
      capsule This3.S.SBuilder b0=This3.Refactor2.#default#rename(into:void).#builder()
      Void unused4=b0.#T()
      Void unused5=b0.#h()
      Void unused6=b0.#i()
      Void unused7=b0.#s()
      b0
      ))).#leftrightleft(that:opNorm0)
    )
  Void unused2=acc := (
    Library opNorm1=acc
    cmp.close().#leftrightleft(that:opNorm1)
    )
  acc
  )}}
Decorator: {
mut method 
mut This2.Composers.Libs #inner() 
read method 
read This2.Composers.Libs inner() 
class method 
mut This0 #apply(mut This2.Composers.Libs inner) 
method 
Library #leftrightleft(Library that) exception This2.Refactor2.MethodClash, This2.Refactor2.ClassClash, This2.Refactor2.SubtleSubtypeViolation (
  Void unused=(
    mut This1 cmp=This1.#apply(libs:this.inner(), lib0:that)
    Void unused0=cmp.fillMaps()
    var Library acc=that
    Void unused1=(
      lent This2.Composers.Libs.IteratorVal li=this.inner().reverse().vals()
      (
        mut This2.Composers.RenameMethods.IteratorVar mi=cmp.openMaps().#reverse().#vals()
        (
          Void unused3=loop (
            Void unused4=li.#next()
            
            catch exception Void catched1 (
              Void unused5=(
                Void unused8=mi.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused6=(
                Void unused9=li.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused7=(
                Void unused10=mi.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=mi.#next()
              
              catch exception Void catched6 (
                Void unused12=(
                  Void unused14=li.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=mi.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              acc := This2.Refactor2.compose(that:mi.#inner().#leftrightleft(that:li.#inner()), and:acc)
              )
            )
          
          catch exception Void catched10 void
          
          void
          )
        )
      )
    Void unused2=return cmp.close().#leftrightleft(that:acc)
    
    catch exception This2.Refactor2.PathUnfit catched11 error This2.X.#from(builder:(
      capsule This2.S.SBuilder b=This2.X.#builder()
      Void unused16=b.#C()
      Void unused17=b.#o()
      Void unused18=b.#m()
      Void unused19=b.#p()
      Void unused20=b.#o()
      Void unused21=b.#s()
      Void unused22=b.#e()
      Void unused23=b.#r()
      Void unused24=b.#s()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#c()
      Void unused28=b.#t()
      Void unused29=b.#i()
      Void unused30=b.#o()
      Void unused31=b.#n()
      Void unused32=b.#space()
      Void unused33=b.#m()
      Void unused34=b.#e()
      Void unused35=b.#t()
      Void unused36=b.#h()
      Void unused37=b.#o()
      Void unused38=b.#d()
      Void unused39=b.#space()
      Void unused40=b.#p()
      Void unused41=b.#r()
      Void unused42=b.#o()
      Void unused43=b.#d()
      Void unused44=b.#u()
      Void unused45=b.#c()
      Void unused46=b.#e()
      Void unused47=b.#d()
      Void unused48=b.#space()
      Void unused49=b.#i()
      Void unused50=b.#n()
      Void unused51=b.#v()
      Void unused52=b.#a()
      Void unused53=b.#l()
      Void unused54=b.#i()
      Void unused55=b.#d()
      Void unused56=b.#space()
      Void unused57=b.#m()
      Void unused58=b.#a()
      Void unused59=b.#p()
      Void unused60=b.#s()
      b
      )).#apply(that:catched11)
    
    catch exception This2.Refactor2.SelectorUnfit catched11 error This2.X.#from(builder:(
      capsule This2.S.SBuilder b0=This2.X.#builder()
      Void unused61=b0.#C()
      Void unused62=b0.#o()
      Void unused63=b0.#m()
      Void unused64=b0.#p()
      Void unused65=b0.#o()
      Void unused66=b0.#s()
      Void unused67=b0.#e()
      Void unused68=b0.#r()
      Void unused69=b0.#s()
      Void unused70=b0.#space()
      Void unused71=b0.#a()
      Void unused72=b0.#c()
      Void unused73=b0.#t()
      Void unused74=b0.#i()
      Void unused75=b0.#o()
      Void unused76=b0.#n()
      Void unused77=b0.#space()
      Void unused78=b0.#m()
      Void unused79=b0.#e()
      Void unused80=b0.#t()
      Void unused81=b0.#h()
      Void unused82=b0.#o()
      Void unused83=b0.#d()
      Void unused84=b0.#space()
      Void unused85=b0.#p()
      Void unused86=b0.#r()
      Void unused87=b0.#o()
      Void unused88=b0.#d()
      Void unused89=b0.#u()
      Void unused90=b0.#c()
      Void unused91=b0.#e()
      Void unused92=b0.#d()
      Void unused93=b0.#space()
      Void unused94=b0.#i()
      Void unused95=b0.#n()
      Void unused96=b0.#v()
      Void unused97=b0.#a()
      Void unused98=b0.#l()
      Void unused99=b0.#i()
      Void unused100=b0.#d()
      Void unused101=b0.#space()
      Void unused102=b0.#m()
      Void unused103=b0.#a()
      Void unused104=b0.#p()
      Void unused105=b0.#s()
      b0
      )).#apply(that:catched11)
    
    catch exception This2.Refactor2.ClassUnfit catched11 error This2.X.#from(builder:(
      capsule This2.S.SBuilder b1=This2.X.#builder()
      Void unused106=b1.#C()
      Void unused107=b1.#o()
      Void unused108=b1.#m()
      Void unused109=b1.#p()
      Void unused110=b1.#o()
      Void unused111=b1.#s()
      Void unused112=b1.#e()
      Void unused113=b1.#r()
      Void unused114=b1.#s()
      Void unused115=b1.#space()
      Void unused116=b1.#a()
      Void unused117=b1.#c()
      Void unused118=b1.#t()
      Void unused119=b1.#i()
      Void unused120=b1.#o()
      Void unused121=b1.#n()
      Void unused122=b1.#space()
      Void unused123=b1.#m()
      Void unused124=b1.#e()
      Void unused125=b1.#t()
      Void unused126=b1.#h()
      Void unused127=b1.#o()
      Void unused128=b1.#d()
      Void unused129=b1.#space()
      Void unused130=b1.#p()
      Void unused131=b1.#r()
      Void unused132=b1.#o()
      Void unused133=b1.#d()
      Void unused134=b1.#u()
      Void unused135=b1.#c()
      Void unused136=b1.#e()
      Void unused137=b1.#d()
      Void unused138=b1.#space()
      Void unused139=b1.#i()
      Void unused140=b1.#n()
      Void unused141=b1.#v()
      Void unused142=b1.#a()
      Void unused143=b1.#l()
      Void unused144=b1.#i()
      Void unused145=b1.#d()
      Void unused146=b1.#space()
      Void unused147=b1.#m()
      Void unused148=b1.#a()
      Void unused149=b1.#p()
      Void unused150=b1.#s()
      b1
      )).#apply(that:catched11)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Patcher: {
mut method 
This2.Path #patch() 
read method 
This2.Path patch() 
class method 
mut This0 #apply(This2.Path patch) 
method 
Library #leftrightleft(Library that) exception This2.Refactor2.MethodClash, This2.Refactor2.ClassClash, This2.Refactor2.SubtleSubtypeViolation, This2.Refactor2.PathUnfit, This2.Refactor2.SelectorUnfit, This2.Refactor2.ClassUnfit, This2.Location.NotAvailable (
  mut This1 cmp=This1.#apply(top:that, fix:this.patch())
  Void unused=cmp.fillMapsPatch(top:This2.Location.Lib.#apply(that:that), fix:this.patch())
  var Library acc=that
  Void unused0=acc := (
    Library opNorm=acc
    cmp.open(that:This2.Size.#from(builder:(
      capsule This2.S.SBuilder b=This2.Size.#builder()
      Void unused3=b.#0()
      b
      ))).#leftrightleft(that:opNorm)
    )
  Void unused1=acc := (
    Library opNorm0=acc
    This2.Refactor2.rename(path:this.patch(), into:This2.Refactor2.#default#rename(into:void).#from(builder:(
      capsule This2.S.SBuilder b0=This2.Refactor2.#default#rename(into:void).#builder()
      Void unused4=b0.#T()
      Void unused5=b0.#h()
      Void unused6=b0.#i()
      Void unused7=b0.#s()
      b0
      ))).#leftrightleft(that:opNorm0)
    )
  Void unused2=acc := (
    Library opNorm1=acc
    cmp.close().#leftrightleft(that:opNorm1)
    )
  acc
  )}}
Parsable: {
class method 
Library #leftrightleft(Library that) exception This0.Fail (
  Void unused=(
    Void unused0=return This1.Refactor2.compose(that:that, and: {
    class method /* if you do not implement it, it is a constructor?
may become an interface Concept.Parsable method?
*/This0 from(This2.Concept.ToS string) 
    class method 
    This0 #from(This2.S.SBuilder builder) This0.from(string:This2.S.#from(binaryRepr:builder.#binaryRepr()))
    class method 
    mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()})
    
    catch exception This1.Refactor2.Fail catched exception This0.Fail.#from(builder:(
      capsule This1.S.SBuilder b=This0.Fail.#builder()
      Void unused1=b.#P()
      Void unused2=b.#a()
      Void unused3=b.#r()
      Void unused4=b.#s()
      Void unused5=b.#a()
      Void unused6=b.#b()
      Void unused7=b.#l()
      Void unused8=b.#e()
      b
      )).#apply(that:catched)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Fail: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Url: {implements This1.Concept.ToS
read method 
This1.S inner() 
class method 
This0 #apply(This1.S inner) 
refine read method 
This1.S toS() this.inner()
method 
Library #binaryRepr() this.inner().#binaryRepr()
class method /* if you do not implement it, it is a constructor?
may become an interface Concept.Parsable method?
*/This0 from(This1.Concept.ToS string) This0.#apply(inner:string.toS())
class method 
This0 #from(This1.S.SBuilder builder) This0.from(string:This1.S.#from(binaryRepr:builder.#binaryRepr()))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()}
DeployTowel: {
mut method 
This1.Url #fileName() 
read method 
This1.Url fileName() 
class method 
This0 #apply(This1.Url fileName) 
method 
Library #leftrightleft(Library that) (
  Void unused=use This0.SafeOperatorsAccess check deployCode(that:that, url:this.fileName().#binaryRepr()) error  {/*fileDebug*/}
  This1.ExitCode.normal()
  )
SafeOperatorsAccess:/*@_private
*/ {/*@plugin
L42.is/connected/withSafeOperators
*/}}
StringSplit: {
class method 
This1.Strings split(This1.S that, capsule This0.Skip skipper) (
  Void unused=(
    capsule This1.Strings res=This1.Strings.empty()
    mut This0.Skip mskip=skipper
    var This1.Size index=This1.Size.#from(builder:(
      capsule This1.S.SBuilder b=This1.Size.#builder()
      Void unused3=b.#0()
      b
      ))
    Void unused0=(
      Void unused4=loop (
        Void unused5=(
          This1.Size opNorm=index
          that.size().#right(that:opNorm)
          ).#checkTrue()
        (
          This1.Size skip=mskip.#apply(that:that, index:index)
          (
            This1.Bool cond=skip.#right(that:This1.Size.#from(builder:(
              capsule This1.S.SBuilder b0=This1.Size.#builder()
              Void unused6=b0.#0()
              b0
              )))
            (
              Void unused7=cond.#checkTrue()
              
              catch exception Void catched5 (
                This1.Bool cond0=(
                  This1.Size opNorm0=skip
                  This1.Size.#from(builder:(
                    capsule This1.S.SBuilder b1=This1.Size.#builder()
                    Void unused8=b1.#0()
                    b1
                    )).#right(that:opNorm0)
                  )
                (
                  Void unused9=cond0.#checkTrue()
                  
                  catch exception Void catched9 (error (
                    This1.X.AssertionFail.Continue rcv84=(
                      This1.X.AssertionFail rcv85=(
                        This1.X.AssertionFail.Continue rcv86=(
                          This1.X.AssertionFail rcv87=This1.X.#from(builder:(
                            capsule This1.S.SBuilder b2=This1.X.#builder()
                            Void unused10=b2.#S()
                            Void unused11=b2.#t()
                            Void unused12=b2.#r()
                            Void unused13=b2.#i()
                            Void unused14=b2.#n()
                            Void unused15=b2.#g()
                            Void unused16=b2.#dot()
                            Void unused17=b2.#s()
                            Void unused18=b2.#p()
                            Void unused19=b2.#l()
                            Void unused20=b2.#i()
                            Void unused21=b2.#t()
                            Void unused22=b2.#oRound()
                            Void unused23=b2.#cRound()
                            Void unused24=b2.#colon()
                            Void unused25=b2.#space()
                            Void unused26=b2.#s()
                            Void unused27=b2.#k()
                            Void unused28=b2.#i()
                            Void unused29=b2.#p()
                            Void unused30=b2.#p()
                            Void unused31=b2.#e()
                            Void unused32=b2.#r()
                            Void unused33=b2.#space()
                            Void unused34=b2.#r()
                            Void unused35=b2.#e()
                            Void unused36=b2.#t()
                            Void unused37=b2.#u()
                            Void unused38=b2.#r()
                            Void unused39=b2.#n()
                            Void unused40=b2.#e()
                            Void unused41=b2.#d()
                            Void unused42=b2.#space()
                            Void unused43=b2.#0()
                            Void unused44=b2.#space()
                            Void unused45=b2.#o()
                            Void unused46=b2.#n()
                            Void unused47=b2.#colon()
                            Void unused48=b2.#space()
                            Void unused49=b2.#sQuote()
                            b2
                            ))
                          rcv87.#from(seqBuilder:(
                            capsule This1.S.SConcat b3=rcv87.#seqBuilder()
                            Void unused50=b3.#add(that:that)
                            b3
                            ))
                          )
                        rcv86.#from(builder:(
                          capsule This1.S.SBuilder b4=rcv86.#builder()
                          Void unused51=b4.#sQuote()
                          Void unused52=b4.#space()
                          Void unused53=b4.#less()
                          Void unused54=b4.#space()
                          b4
                          ))
                        )
                      rcv85.#from(seqBuilder:(
                        capsule This1.S.SConcat b5=rcv85.#seqBuilder()
                        Void unused55=b5.#add(that:index)
                        b5
                        ))
                      )
                    rcv84.#from(builder:(
                      capsule This1.S.SBuilder b6=rcv84.#builder()
                      b6
                      ))
                    ))
                  
                  (index := index.#less(that:skip))
                  )
                )
              
              (
                Void unused56=res.add(right:that.#apply(start:index, end:index.#plus(that:skip)))
                index := index.#plus(that:skip)
                )
              )
            )
          )
        )
      
      catch exception Void catched20 void
      
      void
      )
    Void unused1=(
      This1.Bool cond1=index.#equalequal(that:that.size()).#bang()
      (
        Void unused57=cond1.#checkTrue()
        
        catch exception Void catched22 void
        
        (error (
          This1.X.AssertionFail.Continue rcv88=(
            This1.X.AssertionFail rcv89=(
              This1.X.AssertionFail.Continue rcv90=(
                This1.X.AssertionFail rcv91=This1.X.#from(builder:(
                  capsule This1.S.SBuilder b7=This1.X.#builder()
                  Void unused58=b7.#S()
                  Void unused59=b7.#t()
                  Void unused60=b7.#r()
                  Void unused61=b7.#i()
                  Void unused62=b7.#n()
                  Void unused63=b7.#g()
                  Void unused64=b7.#dot()
                  Void unused65=b7.#s()
                  Void unused66=b7.#p()
                  Void unused67=b7.#l()
                  Void unused68=b7.#i()
                  Void unused69=b7.#t()
                  Void unused70=b7.#oRound()
                  Void unused71=b7.#cRound()
                  Void unused72=b7.#colon()
                  Void unused73=b7.#space()
                  Void unused74=b7.#s()
                  Void unused75=b7.#k()
                  Void unused76=b7.#i()
                  Void unused77=b7.#p()
                  Void unused78=b7.#p()
                  Void unused79=b7.#e()
                  Void unused80=b7.#r()
                  Void unused81=b7.#space()
                  Void unused82=b7.#i()
                  Void unused83=b7.#n()
                  Void unused84=b7.#d()
                  Void unused85=b7.#e()
                  Void unused86=b7.#x()
                  Void unused87=b7.#e()
                  Void unused88=b7.#s()
                  Void unused89=b7.#space()
                  Void unused90=b7.#s()
                  Void unused91=b7.#u()
                  Void unused92=b7.#m()
                  Void unused93=b7.#m()
                  Void unused94=b7.#e()
                  Void unused95=b7.#d()
                  Void unused96=b7.#space()
                  Void unused97=b7.#t()
                  Void unused98=b7.#o()
                  Void unused99=b7.#space()
                  b7
                  ))
                rcv91.#from(seqBuilder:(
                  capsule This1.S.SConcat b8=rcv91.#seqBuilder()
                  Void unused100=b8.#add(that:index)
                  b8
                  ))
                )
              rcv90.#from(builder:(
                capsule This1.S.SBuilder b9=rcv90.#builder()
                Void unused101=b9.#space()
                Void unused102=b9.#o()
                Void unused103=b9.#n()
                Void unused104=b9.#space()
                Void unused105=b9.#sQuote()
                b9
                ))
              )
            rcv89.#from(seqBuilder:(
              capsule This1.S.SConcat b10=rcv89.#seqBuilder()
              Void unused106=b10.#add(that:that)
              b10
              ))
            )
          rcv88.#from(builder:(
            capsule This1.S.SBuilder b11=rcv88.#builder()
            Void unused107=b11.#sQuote()
            b11
            ))
          ))
        )
      )
    Void unused2=return res
    void
    )
  
  catch return capsule This1.Strings result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Strings splitOn(This1.S that, This1.S chars) (This0.split(that:that, skipper:This0.SkipChars.#apply(chars:chars)))
Skip: {interface 
mut method 
This2.Size #apply(This2.S that, This2.Size index) }
SkipChars: {implements This1.Skip
mut method 
This2.S #chars() 
read method 
This2.S chars() 
refine mut method 
This2.Size #apply(This2.S that, This2.Size index) (
  Void unused=(
    This2.Size negSkip=(
      Void unused3=(
        Void unused4=(
          capsule This2.Range.Iterator r=This2.Range.#apply(that:that.size().#less(that:index))
          (
            Void unused6=loop (
              Void unused7=r.#next()
              
              catch exception Void catched0 (
                Void unused8=(
                  Void unused9=r.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (
                This2.Bool cond=this.chars().contains(that:that.#apply(that:index.#plus(that:r.#inner()))).#bang()
                (
                  Void unused10=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  return r.#inner()
                  )
                )
              )
            
            catch exception Void catched5 void
            
            void
            )
          )
        Void unused5=return that.size().#less(that:index)
        void
        )
      
      catch return This2.Size result0 result0
      
      error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
      )
    Void unused0=(
      This2.Bool cond0=negSkip.#right(that:This2.Size.#from(builder:(
        capsule This2.S.SBuilder b=This2.Size.#builder()
        Void unused11=b.#0()
        b
        )))
      (
        Void unused12=cond0.#checkTrue()
        
        catch exception Void catched10 void
        
        return This2.Size.#from(builder:(
          capsule This2.S.SBuilder b0=This2.Size.#builder()
          Void unused13=b0.#0()
          b0
          )).#less(that:negSkip)
        )
      )
    Void unused1=(
      capsule This2.Range.Iterator r=This2.Range.#apply(that:that.size().#less(that:index))
      (
        Void unused14=loop (
          Void unused15=r.#next()
          
          catch exception Void catched13 (
            Void unused16=(
              Void unused17=r.#checkEnd()
              
              catch exception Void catched14 void
              
              void
              )
            exception void
            )
          
          (
            This2.Bool cond1=this.chars().contains(that:that.#apply(that:index.#plus(that:r.#inner())))
            (
              Void unused18=cond1.#checkTrue()
              
              catch exception Void catched17 void
              
              return r.#inner()
              )
            )
          )
        
        catch exception Void catched18 void
        
        void
        )
      )
    Void unused2=return that.size().#less(that:index)
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #apply(fwd This2.S chars) }}
PostAction: {
mut method 
This1.Selector #that() 
read method 
This1.Selector that() 
mut method 
This1.Path #of() 
read method 
This1.Path of() 
mut method 
Library #action() 
read method 
Library action() 
mut method 
This1.Selector #deprecated() 
read method 
This1.Selector deprecated() 
class method 
This0 #apply(This1.Selector that, This1.Path of, Library action, This1.Selector deprecated) 
method 
Library #leftrightleft(Library that) exception This0.InvalidAction (
  Void unused=(
    Void unused0=(// check action well formed
this.checkAction(that:this.action()))
    This1.Selector src=(//src selector of the method
this.that())
    This1.Selector dest=(//dest selector for the copy of the method
this.deprecated())
    This1.Path p=(// path of the method
this.of())
    This1.Selector fresh=(// will be the name of the action
This1.Selector.fresh(like:This1.Selector.#from(builder:(
      capsule This1.S.SBuilder b=This1.Selector.#builder()
      Void unused6=b.#hash()
      Void unused7=b.#a()
      Void unused8=b.#p()
      Void unused9=b.#p()
      Void unused10=b.#l()
      Void unused11=b.#y()
      Void unused12=b.#oRound()
      Void unused13=b.#t()
      Void unused14=b.#h()
      Void unused15=b.#a()
      Void unused16=b.#t()
      Void unused17=b.#cRound()
      b
      ))))
    var Library acc=that
    Void unused1=acc := This1.Refactor2.toAbstract(selector:src, of:p, into:dest).#leftrightleft(that:(//now src is abstract
acc))
    Void unused2=acc := this.composeAction(that:acc, fresh:fresh)
    Void unused3=acc := (
      Void unused18=(
        Void unused19=return This1.Refactor2.sumMethods(that:dest, and:fresh, of:p, over:This1.S.#from(builder:(
          capsule This1.S.SBuilder b0=This1.S.#builder()
          Void unused20=b0.#t()
          Void unused21=b0.#h()
          Void unused22=b0.#a()
          Void unused23=b0.#t()
          b0
          )), into:src).#leftrightleft(that:acc)
        
        catch exception This1.Refactor2.PathUnfit catched1 exception This0.InvalidAction.#from(builder:(
          capsule This1.S.SBuilder b1=This0.InvalidAction.#builder()
          Void unused24=b1.#A()
          Void unused25=b1.#c()
          Void unused26=b1.#t()
          Void unused27=b1.#i()
          Void unused28=b1.#o()
          Void unused29=b1.#n()
          Void unused30=b1.#space()
          Void unused31=b1.#c()
          Void unused32=b1.#l()
          Void unused33=b1.#a()
          Void unused34=b1.#s()
          Void unused35=b1.#s()
          Void unused36=b1.#space()
          Void unused37=b1.#s()
          Void unused38=b1.#i()
          Void unused39=b1.#g()
          Void unused40=b1.#n()
          Void unused41=b1.#a()
          Void unused42=b1.#t()
          Void unused43=b1.#u()
          Void unused44=b1.#r()
          Void unused45=b1.#e()
          Void unused46=b1.#space()
          Void unused47=b1.#d()
          Void unused48=b1.#o()
          Void unused49=b1.#e()
          Void unused50=b1.#s()
          Void unused51=b1.#space()
          Void unused52=b1.#n()
          Void unused53=b1.#o()
          Void unused54=b1.#t()
          Void unused55=b1.#space()
          Void unused56=b1.#f()
          Void unused57=b1.#i()
          Void unused58=b1.#t()
          Void unused59=b1.#space()
          Void unused60=b1.#d()
          Void unused61=b1.#e()
          Void unused62=b1.#c()
          Void unused63=b1.#o()
          Void unused64=b1.#r()
          Void unused65=b1.#a()
          Void unused66=b1.#t()
          Void unused67=b1.#e()
          Void unused68=b1.#d()
          Void unused69=b1.#space()
          Void unused70=b1.#m()
          Void unused71=b1.#e()
          Void unused72=b1.#t()
          Void unused73=b1.#h()
          Void unused74=b1.#o()
          Void unused75=b1.#d()
          b1
          )).#apply(that:catched1)
        
        catch exception This1.Refactor2.MethodClash catched1 exception This0.InvalidAction.#from(builder:(
          capsule This1.S.SBuilder b2=This0.InvalidAction.#builder()
          Void unused76=b2.#A()
          Void unused77=b2.#c()
          Void unused78=b2.#t()
          Void unused79=b2.#i()
          Void unused80=b2.#o()
          Void unused81=b2.#n()
          Void unused82=b2.#space()
          Void unused83=b2.#c()
          Void unused84=b2.#l()
          Void unused85=b2.#a()
          Void unused86=b2.#s()
          Void unused87=b2.#s()
          Void unused88=b2.#space()
          Void unused89=b2.#s()
          Void unused90=b2.#i()
          Void unused91=b2.#g()
          Void unused92=b2.#n()
          Void unused93=b2.#a()
          Void unused94=b2.#t()
          Void unused95=b2.#u()
          Void unused96=b2.#r()
          Void unused97=b2.#e()
          Void unused98=b2.#space()
          Void unused99=b2.#d()
          Void unused100=b2.#o()
          Void unused101=b2.#e()
          Void unused102=b2.#s()
          Void unused103=b2.#space()
          Void unused104=b2.#n()
          Void unused105=b2.#o()
          Void unused106=b2.#t()
          Void unused107=b2.#space()
          Void unused108=b2.#f()
          Void unused109=b2.#i()
          Void unused110=b2.#t()
          Void unused111=b2.#space()
          Void unused112=b2.#d()
          Void unused113=b2.#e()
          Void unused114=b2.#c()
          Void unused115=b2.#o()
          Void unused116=b2.#r()
          Void unused117=b2.#a()
          Void unused118=b2.#t()
          Void unused119=b2.#e()
          Void unused120=b2.#d()
          Void unused121=b2.#space()
          Void unused122=b2.#m()
          Void unused123=b2.#e()
          Void unused124=b2.#t()
          Void unused125=b2.#h()
          Void unused126=b2.#o()
          Void unused127=b2.#d()
          b2
          )).#apply(that:catched1)
        
        void
        )
      
      catch return Library result0 result0
      
      error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
      )
    Void unused4=acc := This1.Refactor2.Method.#from(seqBuilder:(
      capsule This1.Refactor2.Method b3=This1.Refactor2.Method.#seqBuilder()
      Void unused128=b3.#add(hide:fresh, of:p)
      b3
      )).#leftrightleft(that:(//we do not need to refer to the action any more
acc))
    Void unused5=return acc
    
    catch exception This0.InvalidAction x exception x
    
    catch exception This1.Refactor2.Fail catched6 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b4=This1.X.#builder()
      Void unused129=b4.#P()
      Void unused130=b4.#o()
      Void unused131=b4.#s()
      Void unused132=b4.#t()
      Void unused133=b4.#A()
      Void unused134=b4.#c()
      Void unused135=b4.#t()
      Void unused136=b4.#dot()
      Void unused137=b4.#A()
      Void unused138=b4.#c()
      Void unused139=b4.#t()
      Void unused140=b4.#i()
      Void unused141=b4.#o()
      Void unused142=b4.#n()
      Void unused143=b4.#1()
      b4
      )).#apply(that:catched6)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*@_private
*/Library composeAction(Library that, This1.Selector fresh) (
  Void unused=(
    var Library acc=this.action()
    Void unused0=acc := This1.Refactor2.rename(path:This1.Refactor2.#default#rename(path:void).#from(builder:(
      capsule This1.S.SBuilder b=This1.Refactor2.#default#rename(path:void).#builder()
      Void unused4=b.#T()
      Void unused5=b.#h()
      Void unused6=b.#i()
      Void unused7=b.#s()
      b
      )), into:this.of()).#leftrightleft(that:acc)
    Void unused1=acc := This1.Refactor2.Method.#from(seqBuilder:(
      capsule This1.Refactor2.Method b0=This1.Refactor2.Method.#seqBuilder()
      Void unused8=b0.#add(rename:This1.Refactor2.Method.#default##square(rename:void).#from(builder:(
        capsule This1.S.SBuilder b1=This1.Refactor2.Method.#default##square(rename:void).#builder()
        Void unused9=b1.#hash()
        Void unused10=b1.#a()
        Void unused11=b1.#p()
        Void unused12=b1.#p()
        Void unused13=b1.#l()
        Void unused14=b1.#y()
        Void unused15=b1.#oRound()
        Void unused16=b1.#t()
        Void unused17=b1.#h()
        Void unused18=b1.#a()
        Void unused19=b1.#t()
        Void unused20=b1.#cRound()
        b1
        )), of:this.of(), into:fresh)
      b0
      )).#leftrightleft(that:acc)
    Void unused2=acc := (//ok since action res has fresh name
This1.Refactor2.compose(that:that, and:acc))
    Void unused3=return acc
    
    catch exception This1.Refactor2.Fail catched2 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b2=This1.X.#builder()
      Void unused21=b2.#P()
      Void unused22=b2.#o()
      Void unused23=b2.#s()
      Void unused24=b2.#t()
      Void unused25=b2.#A()
      Void unused26=b2.#c()
      Void unused27=b2.#t()
      Void unused28=b2.#dot()
      Void unused29=b2.#A()
      Void unused30=b2.#c()
      Void unused31=b2.#t()
      Void unused32=b2.#i()
      Void unused33=b2.#o()
      Void unused34=b2.#n()
      Void unused35=b2.#C()
      Void unused36=b2.#o()
      Void unused37=b2.#m()
      Void unused38=b2.#p()
      Void unused39=b2.#o()
      Void unused40=b2.#s()
      Void unused41=b2.#e()
      b2
      )).#apply(that:catched2)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*@_private
*/Void checkAction(Library that) exception This0.InvalidAction (
  This1.Location.Method defM=(
    This1.Location.Lib rcv=This1.Location.Lib.#apply(that:that)
    rcv.method(selector:rcv.#default#method(selector:void).#from(builder:(
      capsule This1.S.SBuilder b=rcv.#default#method(selector:void).#builder()
      Void unused=b.#hash()
      Void unused0=b.#a()
      Void unused1=b.#p()
      Void unused2=b.#p()
      Void unused3=b.#l()
      Void unused4=b.#y()
      Void unused5=b.#oRound()
      Void unused6=b.#t()
      Void unused7=b.#h()
      Void unused8=b.#a()
      Void unused9=b.#t()
      Void unused10=b.#cRound()
      b
      )))
    )
  
  catch exception This1.Refactor2.Fail catched1 exception This0.InvalidAction.#from(builder:(
    capsule This1.S.SBuilder b0=This0.InvalidAction.#builder()
    Void unused11=b0.#a()
    Void unused12=b0.#c()
    Void unused13=b0.#t()
    Void unused14=b0.#i()
    Void unused15=b0.#o()
    Void unused16=b0.#n()
    Void unused17=b0.#space()
    Void unused18=b0.#m()
    Void unused19=b0.#e()
    Void unused20=b0.#t()
    Void unused21=b0.#h()
    Void unused22=b0.#o()
    Void unused23=b0.#d()
    Void unused24=b0.#space()
    Void unused25=b0.#n()
    Void unused26=b0.#o()
    Void unused27=b0.#t()
    Void unused28=b0.#space()
    Void unused29=b0.#p()
    Void unused30=b0.#r()
    Void unused31=b0.#e()
    Void unused32=b0.#s()
    Void unused33=b0.#e()
    Void unused34=b0.#n()
    Void unused35=b0.#t()
    b0
    )).#apply(that:catched1)
  
  catch exception This1.Location.NotAvailable catched1 exception This0.InvalidAction.#from(builder:(
    capsule This1.S.SBuilder b1=This0.InvalidAction.#builder()
    Void unused36=b1.#a()
    Void unused37=b1.#c()
    Void unused38=b1.#t()
    Void unused39=b1.#i()
    Void unused40=b1.#o()
    Void unused41=b1.#n()
    Void unused42=b1.#space()
    Void unused43=b1.#m()
    Void unused44=b1.#e()
    Void unused45=b1.#t()
    Void unused46=b1.#h()
    Void unused47=b1.#o()
    Void unused48=b1.#d()
    Void unused49=b1.#space()
    Void unused50=b1.#n()
    Void unused51=b1.#o()
    Void unused52=b1.#t()
    Void unused53=b1.#space()
    Void unused54=b1.#p()
    Void unused55=b1.#r()
    Void unused56=b1.#e()
    Void unused57=b1.#s()
    Void unused58=b1.#e()
    Void unused59=b1.#n()
    Void unused60=b1.#t()
    b1
    )).#apply(that:catched1)
  
  (
    This1.Location.Type.Parameter pt=defM.parameterTypes().val(that:This1.Size.#from(builder:(
      capsule This1.S.SBuilder b2=This1.Size.#builder()
      Void unused61=b2.#1()
      b2
      )))
    This1.Location.Type.Return rt=defM.returnType()
    This1.Bool ok=pt.refTo().#equalequal(that:rt.refTo()).#and(that:pt.mdf().#equalequal(that:rt.mdf()))
    (
      This1.Bool cond=ok.#bang()
      (
        Void unused62=cond.#checkTrue()
        
        catch exception Void catched7 void
        
        (exception (
          This0.InvalidAction.Continue rcv0=(
            This0.InvalidAction rcv1=(
              This0.InvalidAction.Continue rcv2=(
                This0.InvalidAction rcv3=This0.InvalidAction.#from(builder:(
                  capsule This1.S.SBuilder b3=This0.InvalidAction.#builder()
                  Void unused63=b3.#a()
                  Void unused64=b3.#c()
                  Void unused65=b3.#t()
                  Void unused66=b3.#i()
                  Void unused67=b3.#o()
                  Void unused68=b3.#n()
                  Void unused69=b3.#space()
                  Void unused70=b3.#r()
                  Void unused71=b3.#e()
                  Void unused72=b3.#t()
                  Void unused73=b3.#u()
                  Void unused74=b3.#r()
                  Void unused75=b3.#n()
                  Void unused76=b3.#space()
                  Void unused77=b3.#c()
                  Void unused78=b3.#l()
                  Void unused79=b3.#a()
                  Void unused80=b3.#s()
                  Void unused81=b3.#s()
                  Void unused82=b3.#space()
                  Void unused83=b3.#n()
                  Void unused84=b3.#e()
                  Void unused85=b3.#e()
                  Void unused86=b3.#d()
                  Void unused87=b3.#space()
                  Void unused88=b3.#t()
                  Void unused89=b3.#o()
                  Void unused90=b3.#space()
                  Void unused91=b3.#b()
                  Void unused92=b3.#e()
                  Void unused93=b3.#space()
                  Void unused94=b3.#e()
                  Void unused95=b3.#q()
                  Void unused96=b3.#u()
                  Void unused97=b3.#a()
                  Void unused98=b3.#l()
                  Void unused99=b3.#space()
                  Void unused100=b3.#t()
                  Void unused101=b3.#o()
                  Void unused102=b3.#space()
                  Void unused103=b3.#p()
                  Void unused104=b3.#a()
                  Void unused105=b3.#r()
                  Void unused106=b3.#a()
                  Void unused107=b3.#m()
                  Void unused108=b3.#e()
                  Void unused109=b3.#t()
                  Void unused110=b3.#e()
                  Void unused111=b3.#r()
                  Void unused112=b3.#space()
                  Void unused113=b3.#c()
                  Void unused114=b3.#l()
                  Void unused115=b3.#a()
                  Void unused116=b3.#s()
                  Void unused117=b3.#s()
                  Void unused118=b3.#colon()
                  Void unused119=b3.#space()
                  Void unused120=b3.#sQuote()
                  b3
                  ))
                rcv3.#from(seqBuilder:(
                  capsule This1.S.SConcat b4=rcv3.#seqBuilder()
                  Void unused121=b4.#add(that:pt)
                  b4
                  ))
                )
              rcv2.#from(builder:(
                capsule This1.S.SBuilder b5=rcv2.#builder()
                Void unused122=b5.#sQuote()
                Void unused123=b5.#space()
                Void unused124=b5.#i()
                Void unused125=b5.#s()
                Void unused126=b5.#space()
                Void unused127=b5.#d()
                Void unused128=b5.#i()
                Void unused129=b5.#f()
                Void unused130=b5.#f()
                Void unused131=b5.#e()
                Void unused132=b5.#r()
                Void unused133=b5.#e()
                Void unused134=b5.#n()
                Void unused135=b5.#t()
                Void unused136=b5.#space()
                Void unused137=b5.#f()
                Void unused138=b5.#r()
                Void unused139=b5.#o()
                Void unused140=b5.#m()
                Void unused141=b5.#space()
                Void unused142=b5.#sQuote()
                b5
                ))
              )
            rcv1.#from(seqBuilder:(
              capsule This1.S.SConcat b6=rcv1.#seqBuilder()
              Void unused143=b6.#add(that:rt)
              b6
              ))
            )
          rcv0.#from(builder:(
            capsule This1.S.SBuilder b7=rcv0.#builder()
            Void unused144=b7.#sQuote()
            b7
            ))
          ))
        )
      )
    )
  )
InvalidAction: {implements This2.Refactor2.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Optimize: {
RemoveUnreachableCode: {
class method 
Library #leftrightleft(Library that) use This2.SafeOperators check removeUnreachableCode(that:that) error This2.System.Guard.PluginFailure.#from(builder:(
  capsule This2.S.SBuilder b=This2.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#U()
  Void unused20=b.#n()
  Void unused21=b.#r()
  Void unused22=b.#e()
  Void unused23=b.#a()
  Void unused24=b.#c()
  Void unused25=b.#h()
  Void unused26=b.#a()
  Void unused27=b.#b()
  Void unused28=b.#l()
  Void unused29=b.#e()
  Void unused30=b.#C()
  Void unused31=b.#o()
  Void unused32=b.#d()
  Void unused33=b.#e()
  b
  ))}}
Ontology: {
class method 
Library ontologicMap()  {interface 
method 
This2.Alu _Alu() 
method 
This2.ExitCode _ExitCode() 
method 
This2.Bool _Bool() 
method 
This2.Size _N() 
method 
This2.S _S() 
method 
This2.Concept _Concept() 
method 
This2.Message _Message() 
method 
This2.Guard _Guard() 
method 
This2.System _System() 
method 
This2.X _X() 
method 
This2.Strings _Strings() 
method 
This2.Debug _Debug() 
method 
This0 _ConceptMap() 
method 
This2.Url _Url() 
method 
This2.Path _Path() 
method 
This2.Selector _Selector() 
method 
This2.Location _Location() 
method 
This2.Refactor2 _Refactor2() 
method 
This2.Optimize _Optimize() 
method 
This2.Opt _Opt() 
method 
This2.Use _Use() 
method 
This2.Collections _Collections() 
method 
This2.CollectionsMut _CollectionsMut() 
method 
This2.K _K() 
method 
This2.DeployTowel _DeployTowel() 
method 
This2.Composers _Composers() }}
ConceptMap: {interface 
method 
This1.Alu _Alu() 
method 
This1.ExitCode _ExitCode() 
method 
This1.Bool _Bool() 
method 
This1.Size _N() 
method 
This1.S _S() 
method 
This1.Concept _Concept() 
method 
This1.Message _Message() 
method 
This1.Guard _Guard() 
method 
This1.System _System() 
method 
This1.X _X() 
method 
This1.Strings _Strings() 
method 
This1.Debug _Debug() 
method 
This0 _ConceptMap() 
method 
This1.Url _Url() 
method 
This1.Path _Path() 
method 
This1.Selector _Selector() 
method 
This1.Location _Location() 
method 
This1.Refactor2 _Refactor2() 
method 
This1.Optimize _Optimize() 
method 
This1.Opt _Opt() 
method 
This1.Use _Use() 
method 
This1.Collections _Collections() 
method 
This1.CollectionsMut _CollectionsMut() 
method 
This1.K _K() 
method 
This1.DeployTowel _DeployTowel() 
method 
This1.Composers _Composers() 
method 
This1.Load _Load() }
Load: {/*shape of a loadable library:
 This contains actual library, but
 Abstract:{} contains abstract classes, and
 Abstract.ConceptMap maps concepts names to abstract classes
*/
class method 
Library #leftrightleft(Library that) exception This0.ConceptMapMismatch, This0.ConceptMapUnavailable (
  Void unused=(
    Void unused0=return This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
      capsule This1.S.SBuilder b0=This1.Refactor2.#default#redirect(path:void).#builder()
      Void unused1=b0.#A()
      Void unused2=b0.#b()
      Void unused3=b0.#s()
      Void unused4=b0.#t()
      Void unused5=b0.#r()
      Void unused6=b0.#a()
      Void unused7=b0.#c()
      Void unused8=b0.#t()
      Void unused9=b0.#dot()
      Void unused10=b0.#C()
      Void unused11=b0.#o()
      Void unused12=b0.#n()
      Void unused13=b0.#c()
      Void unused14=b0.#e()
      Void unused15=b0.#p()
      Void unused16=b0.#t()
      Void unused17=b0.#M()
      Void unused18=b0.#a()
      Void unused19=b0.#p()
      b0
      )), into:This1.ConceptMap).#leftrightleft(that:that)
    
    catch exception This1.Refactor2.PathUnfit err exception (
      This0.ConceptMapUnavailable.Continue rcv4=(
        This0.ConceptMapUnavailable rcv5=(
          This0.ConceptMapUnavailable.Continue rcv6=(
            This0.ConceptMapUnavailable rcv7=This0.ConceptMapUnavailable.#from(builder:(
              capsule This1.S.SBuilder b1=This0.ConceptMapUnavailable.#builder()
              Void unused20=b1.#p()
              Void unused21=b1.#r()
              Void unused22=b1.#o()
              Void unused23=b1.#v()
              Void unused24=b1.#i()
              Void unused25=b1.#d()
              Void unused26=b1.#e()
              Void unused27=b1.#d()
              Void unused28=b1.#space()
              Void unused29=b1.#l()
              Void unused30=b1.#i()
              Void unused31=b1.#b()
              Void unused32=b1.#r()
              Void unused33=b1.#a()
              Void unused34=b1.#r()
              Void unused35=b1.#y()
              Void unused36=b1.#space()
              Void unused37=b1.#d()
              Void unused38=b1.#o()
              Void unused39=b1.#space()
              Void unused40=b1.#n()
              Void unused41=b1.#o()
              Void unused42=b1.#t()
              Void unused43=b1.#space()
              Void unused44=b1.#o()
              Void unused45=b1.#f()
              Void unused46=b1.#f()
              Void unused47=b1.#e()
              Void unused48=b1.#r()
              Void unused49=b1.#s()
              Void unused50=b1.#space()
              Void unused51=b1.#A()
              Void unused52=b1.#b()
              Void unused53=b1.#s()
              Void unused54=b1.#t()
              Void unused55=b1.#r()
              Void unused56=b1.#a()
              Void unused57=b1.#c()
              Void unused58=b1.#t()
              Void unused59=b1.#dot()
              Void unused60=b1.#C()
              Void unused61=b1.#o()
              Void unused62=b1.#n()
              Void unused63=b1.#c()
              Void unused64=b1.#e()
              Void unused65=b1.#p()
              Void unused66=b1.#t()
              Void unused67=b1.#M()
              Void unused68=b1.#a()
              Void unused69=b1.#p()
              Void unused70=b1.#space()
              Void unused71=b1.#o()
              Void unused72=b1.#r()
              Void unused73=b1.#space()
              b1
              ))
            rcv7.#from(seqBuilder:(
              capsule This1.S.SConcat b2=rcv7.#seqBuilder()
              Void unused74=b2.#add(that:err.path())
              b2
              ))
            )
          rcv6.#from(builder:(
            capsule This1.S.SBuilder b3=rcv6.#builder()
            Void unused75=b3.#space()
            Void unused76=b3.#a()
            Void unused77=b3.#v()
            Void unused78=b3.#a()
            Void unused79=b3.#i()
            Void unused80=b3.#l()
            Void unused81=b3.#a()
            Void unused82=b3.#b()
            Void unused83=b3.#l()
            Void unused84=b3.#e()
            Void unused85=b3.#space()
            Void unused86=b3.#p()
            Void unused87=b3.#a()
            Void unused88=b3.#t()
            Void unused89=b3.#h()
            Void unused90=b3.#s()
            Void unused91=b3.#space()
            Void unused92=b3.#a()
            Void unused93=b3.#r()
            Void unused94=b3.#e()
            Void unused95=b3.#space()
            b3
            ))
          )
        rcv5.#from(seqBuilder:(
          capsule This1.S.SConcat b=rcv5.#seqBuilder()
          Void unused96=(
            lent This1.Location.Lib.List.IteratorVal av=This1.Location.Lib.#apply(that:that).allNesteds().vals()
            (
              Void unused97=loop (
                Void unused98=av.#next()
                
                catch exception Void catched8 (
                  Void unused99=(
                    Void unused100=av.#checkEnd()
                    
                    catch exception Void catched9 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  Void unused101=b.#add(that:This1.S.nl().#plusplus(that:av.#inner().path().toS()))
                  void
                  ))
                )
              
              catch exception Void catched12 void
              
              void
              )
            )
          b
          ))
        )
      rcv4.#from(builder:(
        capsule This1.S.SBuilder b4=rcv4.#builder()
        b4
        ))
      )
    
    catch exception This1.Refactor2.ClassUnfit catched0 exception This0.ConceptMapMismatch.#from(builder:(
      capsule This1.S.SBuilder b5=This0.ConceptMapMismatch.#builder()
      b5
      )).#apply(that:catched0)
    
    catch exception This1.Refactor2.MethodClash catched0 exception This0.ConceptMapMismatch.#from(builder:(
      capsule This1.S.SBuilder b6=This0.ConceptMapMismatch.#builder()
      b6
      )).#apply(that:catched0)
    
    catch exception This1.Refactor2.IncoherentMapping catched0 exception This0.ConceptMapMismatch.#from(builder:(
      capsule This1.S.SBuilder b7=This0.ConceptMapMismatch.#builder()
      b7
      )).#apply(that:catched0)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
ConceptMapMismatch: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
ConceptMapUnavailable: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
DeployLibrary: {
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Url #url() 
read method 
This2.Url url() 
class method 
This0 #apply(This2.Path path, This2.Url url) 
class method 
Library moveToAbstract(This2.Path that, Library of) (
  Void unused=(
    Void unused0=return This2.Refactor2.rename(path:This2.Refactor2.#default#rename(path:void).#from(builder:(
      capsule This2.S.SBuilder b=This2.Refactor2.#default#rename(path:void).#builder()
      Void unused1=b.#P()
      Void unused2=b.#r()
      Void unused3=b.#I()
      Void unused4=b.#m()
      Void unused5=b.#p()
      Void unused6=b.#l()
      b
      )).#plusplus(that:that), into:This2.Refactor2.#default#rename(into:void).#from(builder:(
      capsule This2.S.SBuilder b0=This2.Refactor2.#default#rename(into:void).#builder()
      Void unused7=b0.#A()
      Void unused8=b0.#b()
      Void unused9=b0.#s()
      Void unused10=b0.#t()
      Void unused11=b0.#r()
      Void unused12=b0.#a()
      Void unused13=b0.#c()
      Void unused14=b0.#t()
      b0
      )).#plusplus(that:that)).#leftrightleft(that:of)
    
    catch exception This2.Refactor2.PathUnfit catched1 error This0.msg(that:that, of:of).#apply(that:catched1)
    
    catch exception This2.Refactor2.Fail catched1 error This2.X.#from(builder:(
      capsule This2.S.SBuilder b1=This2.X.#builder()
      Void unused15=b1.#D()
      Void unused16=b1.#e()
      Void unused17=b1.#p()
      Void unused18=b1.#l()
      Void unused19=b1.#o()
      Void unused20=b1.#y()
      Void unused21=b1.#L()
      Void unused22=b1.#i()
      Void unused23=b1.#b()
      Void unused24=b1.#r()
      Void unused25=b1.#a()
      Void unused26=b1.#r()
      Void unused27=b1.#y()
      Void unused28=b1.#3()
      b1
      )).#apply(that:catched1)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This2.X.AssertionFail msg(This2.Path that, Library of) (
  This2.Location.Lib.List available=(
    This2.Location.Lib rcv8=This2.Location.Lib.#apply(that:of)
    rcv8.nested(path:rcv8.#default#nested(path:void).#from(builder:(
      capsule This2.S.SBuilder b0=rcv8.#default#nested(path:void).#builder()
      Void unused=b0.#P()
      Void unused0=b0.#r()
      Void unused1=b0.#I()
      Void unused2=b0.#m()
      Void unused3=b0.#p()
      Void unused4=b0.#l()
      b0
      )))
    ).nesteds()
  
  catch exception This2.Location.NotAvailable catched1 error This2.X.#from(builder:(
    capsule This2.S.SBuilder b1=This2.X.#builder()
    Void unused5=b1.#D()
    Void unused6=b1.#e()
    Void unused7=b1.#p()
    Void unused8=b1.#l()
    Void unused9=b1.#o()
    Void unused10=b1.#y()
    Void unused11=b1.#L()
    Void unused12=b1.#i()
    Void unused13=b1.#b()
    Void unused14=b1.#r()
    Void unused15=b1.#a()
    Void unused16=b1.#r()
    Void unused17=b1.#y()
    Void unused18=b1.#2()
    b1
    )).#apply(that:catched1)
  
  (
    This2.X.AssertionFail.Continue rcv9=(
      This2.X.AssertionFail rcv10=(
        This2.X.AssertionFail.Continue rcv11=(
          This2.X.AssertionFail rcv12=This2.X.#from(builder:(
            capsule This2.S.SBuilder b2=This2.X.#builder()
            Void unused19=b2.#m()
            Void unused20=b2.#a()
            Void unused21=b2.#p()
            Void unused22=b2.#space()
            Void unused23=b2.#a()
            Void unused24=b2.#n()
            Void unused25=b2.#d()
            Void unused26=b2.#space()
            Void unused27=b2.#l()
            Void unused28=b2.#i()
            Void unused29=b2.#b()
            Void unused30=b2.#r()
            Void unused31=b2.#a()
            Void unused32=b2.#r()
            Void unused33=b2.#y()
            Void unused34=b2.#space()
            Void unused35=b2.#m()
            Void unused36=b2.#i()
            Void unused37=b2.#s()
            Void unused38=b2.#m()
            Void unused39=b2.#a()
            Void unused40=b2.#t()
            Void unused41=b2.#c()
            Void unused42=b2.#h()
            Void unused43=b2.#space()
            Void unused44=b2.#o()
            Void unused45=b2.#n()
            Void unused46=b2.#space()
            b2
            ))
          rcv12.#from(seqBuilder:(
            capsule This2.S.SConcat b3=rcv12.#seqBuilder()
            Void unused47=b3.#add(that:that)
            b3
            ))
          )
        rcv11.#from(builder:(
          capsule This2.S.SBuilder b4=rcv11.#builder()
          Void unused48=b4.#space()
          Void unused49=b4.#a()
          Void unused50=b4.#v()
          Void unused51=b4.#a()
          Void unused52=b4.#i()
          Void unused53=b4.#l()
          Void unused54=b4.#a()
          Void unused55=b4.#b()
          Void unused56=b4.#l()
          Void unused57=b4.#e()
          Void unused58=b4.#space()
          Void unused59=b4.#p()
          Void unused60=b4.#a()
          Void unused61=b4.#t()
          Void unused62=b4.#h()
          Void unused63=b4.#s()
          Void unused64=b4.#space()
          Void unused65=b4.#a()
          Void unused66=b4.#r()
          Void unused67=b4.#e()
          Void unused68=b4.#space()
          b4
          ))
        )
      rcv10.#from(seqBuilder:(
        capsule This2.S.SConcat b=rcv10.#seqBuilder()
        Void unused69=(
          lent This2.Location.Lib.List.IteratorVal av=available.vals()
          (
            Void unused70=loop (
              Void unused71=av.#next()
              
              catch exception Void catched10 (
                Void unused72=(
                  Void unused73=av.#checkEnd()
                  
                  catch exception Void catched11 void
                  
                  void
                  )
                exception void
                )
              
              ((
                Void unused74=b.#add(that:This2.S.nl().#plusplus(that:av.#inner().path().toS()))
                void
                ))
              )
            
            catch exception Void catched14 void
            
            void
            )
          )
        b
        ))
      )
    rcv9.#from(builder:(
      capsule This2.S.SBuilder b5=rcv9.#builder()
      b5
      ))
    )
  )
class method 
Library exposeAsLibrary(Library that, This2.Path path) exception This2.Refactor2.PathUnfit, This2.Refactor2.PrivacyCoupuled (
  Void unused=(/*X[path!=Path"This"]
*/
    Void unused0=(//throws Refactor2.PathUnfit
this.checkTargetExists(that:that, path:path))
    var Library res=that
    Void unused1=This2.Debug.#apply(that:This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused3=b.#1()
      Void unused4=b.#dot()
      Void unused5=b.#1()
      b
      )))
    Void unused2=res := This2.Refactor2.rename(path:This2.Refactor2.#default#rename(path:void).#from(builder:(
      capsule This2.S.SBuilder b0=This2.Refactor2.#default#rename(path:void).#builder()
      Void unused6=b0.#T()
      Void unused7=b0.#h()
      Void unused8=b0.#i()
      Void unused9=b0.#s()
      b0
      )), into:This2.Refactor2.#default#rename(into:void).#from(builder:(
      capsule This2.S.SBuilder b1=This2.Refactor2.#default#rename(into:void).#builder()
      Void unused10=b1.#P()
      Void unused11=b1.#r()
      Void unused12=b1.#I()
      Void unused13=b1.#m()
      Void unused14=b1.#p()
      Void unused15=b1.#l()
      b1
      ))).#leftrightleft(that:res)
    
    catch exception This2.Refactor2.Fail catched2 error This2.X.#from(builder:(
      capsule This2.S.SBuilder b2=This2.X.#builder()
      Void unused16=b2.#D()
      Void unused17=b2.#e()
      Void unused18=b2.#p()
      Void unused19=b2.#l()
      Void unused20=b2.#o()
      Void unused21=b2.#y()
      Void unused22=b2.#L()
      Void unused23=b2.#i()
      Void unused24=b2.#b()
      Void unused25=b2.#r()
      Void unused26=b2.#a()
      Void unused27=b2.#r()
      Void unused28=b2.#y()
      Void unused29=b2.#1()
      b2
      )).#apply(that:catched2)
    
    (/*X[path!=Path"This"]
*/
      Void unused30=This2.Debug.#apply(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b3=This2.S.#builder()
        Void unused35=b3.#1()
        Void unused36=b3.#dot()
        Void unused37=b3.#2()
        b3
        )))
      This2.Location.Method.List ms=This2.Location.Lib.#apply(that:that).nested(path:This2.Path.#from(builder:(
        capsule This2.S.SBuilder b4=This2.Path.#builder()
        Void unused38=b4.#C()
        Void unused39=b4.#o()
        Void unused40=b4.#n()
        Void unused41=b4.#c()
        Void unused42=b4.#e()
        Void unused43=b4.#p()
        Void unused44=b4.#t()
        Void unused45=b4.#M()
        Void unused46=b4.#a()
        Void unused47=b4.#p()
        b4
        ))).methods()
      Void unused31=(
        lent This2.Location.Method.List.IteratorVal m=ms.vals()
        (
          Void unused48=loop (
            Void unused49=m.#next()
            
            catch exception Void catched7 (
              Void unused50=(
                Void unused51=m.#checkEnd()
                
                catch exception Void catched8 void
                
                void
                )
              exception void
              )
            
            (
              This2.Path p=(
                Void unused53=(
                  Void unused54=(
                    This2.Location.Type.RefTo r=m.#inner().returnType().refTo()
                    (
                      This2.Location.Type.RefTo.Lib r0=(
                        Void unused56=return r
                        
                        catch return This2.Location.Type.RefTo.Lib casted casted
                        
                        catch return Any casted exception void
                        
                        error  {/*@stringU
CastT-Should be unreachable code
*/}
                        )
                      
                      catch exception Void catched12 void
                      
                      (
                        Void unused57=return r0.referredLib().path()
                        void
                        )
                      )
                    )
                  Void unused55=error This2.X.#from(builder:(
                    capsule This2.S.SBuilder b5=This2.X.#builder()
                    b5
                    ))
                  void
                  )
                
                catch return This2.Path result0 result0
                
                error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
                )
              Void unused52=res := This0.moveToAbstract(that:p, of:res)
              This2.Debug.#apply(that:(
                This2.S.Continue rcv13=(
                  This2.S rcv14=This2.S.#from(builder:(
                    capsule This2.S.SBuilder b6=This2.S.#builder()
                    Void unused58=b6.#1()
                    Void unused59=b6.#dot()
                    Void unused60=b6.#2()
                    Void unused61=b6.#b()
                    Void unused62=b6.#space()
                    b6
                    ))
                  rcv14.#from(seqBuilder:(
                    capsule This2.S.SConcat b7=rcv14.#seqBuilder()
                    Void unused63=b7.#add(that:p)
                    b7
                    ))
                  )
                rcv13.#from(builder:(
                  capsule This2.S.SBuilder b8=rcv13.#builder()
                  Void unused64=b8.#space()
                  Void unused65=b8.#r()
                  Void unused66=b8.#e()
                  Void unused67=b8.#n()
                  Void unused68=b8.#a()
                  Void unused69=b8.#m()
                  Void unused70=b8.#e()
                  Void unused71=b8.#d()
                  b8
                  ))
                ))
              )
            )
          
          catch exception Void catched23 void
          
          void
          )
        )
      Void unused32=This2.Debug.#apply(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b9=This2.S.#builder()
        Void unused72=b9.#1()
        Void unused73=b9.#dot()
        Void unused74=b9.#3()
        b9
        )))
      Void unused33=res := This2.Refactor2.toAbstract(path:This2.Refactor2.#default#toAbstract(path:void).#from(builder:(
        capsule This2.S.SBuilder b10=This2.Refactor2.#default#toAbstract(path:void).#builder()
        Void unused75=b10.#A()
        Void unused76=b10.#b()
        Void unused77=b10.#s()
        Void unused78=b10.#t()
        Void unused79=b10.#r()
        Void unused80=b10.#a()
        Void unused81=b10.#c()
        Void unused82=b10.#t()
        b10
        ))).#leftrightleft(that:(//leak PrivacyCoupuled
res))
      Void unused34=This2.Debug.#apply(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b11=This2.S.#builder()
        Void unused83=b11.#1()
        Void unused84=b11.#dot()
        Void unused85=b11.#4()
        b11
        )))
      
      catch exception This2.Refactor2.PathUnfit catched27 error This2.X.#from(builder:(
        capsule This2.S.SBuilder b12=This2.X.#builder()
        Void unused86=b12.#D()
        Void unused87=b12.#e()
        Void unused88=b12.#p()
        Void unused89=b12.#l()
        Void unused90=b12.#o()
        Void unused91=b12.#y()
        Void unused92=b12.#L()
        Void unused93=b12.#i()
        Void unused94=b12.#b()
        Void unused95=b12.#r()
        Void unused96=b12.#a()
        Void unused97=b12.#r()
        Void unused98=b12.#y()
        Void unused99=b12.#3()
        b12
        )).#apply(that:catched27)
      
      (/*X[path!=Path"This"]
*/
        Void unused100=res := This2.Refactor2.rename(path:This2.Refactor2.#default#rename(path:void).#from(builder:(
          capsule This2.S.SBuilder b13=This2.Refactor2.#default#rename(path:void).#builder()
          Void unused105=b13.#P()
          Void unused106=b13.#r()
          Void unused107=b13.#I()
          Void unused108=b13.#m()
          Void unused109=b13.#p()
          Void unused110=b13.#l()
          b13
          )).#plusplus(that:path), into:This2.Refactor2.#default#rename(into:void).#from(builder:(
          capsule This2.S.SBuilder b14=This2.Refactor2.#default#rename(into:void).#builder()
          Void unused111=b14.#T()
          Void unused112=b14.#h()
          Void unused113=b14.#i()
          Void unused114=b14.#s()
          b14
          ))).#leftrightleft(that:res)
        Void unused101=This2.Debug.#apply(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b15=This2.S.#builder()
          Void unused115=b15.#1()
          Void unused116=b15.#dot()
          Void unused117=b15.#5()
          b15
          )))
        Void unused102=res := This2.Refactor2.hide(path:This2.Refactor2.#default#hide(path:void).#from(builder:(
          capsule This2.S.SBuilder b16=This2.Refactor2.#default#hide(path:void).#builder()
          Void unused118=b16.#P()
          Void unused119=b16.#r()
          Void unused120=b16.#I()
          Void unused121=b16.#m()
          Void unused122=b16.#p()
          Void unused123=b16.#l()
          b16
          ))).#leftrightleft(that:res)
        Void unused103=This2.Debug.#apply(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b17=This2.S.#builder()
          Void unused124=b17.#1()
          Void unused125=b17.#dot()
          Void unused126=b17.#6()
          b17
          )))
        Void unused104=return res
        
        catch exception This2.Refactor2.Fail catched34 error This2.X.#from(builder:(
          capsule This2.S.SBuilder b18=This2.X.#builder()
          Void unused127=b18.#D()
          Void unused128=b18.#e()
          Void unused129=b18.#p()
          Void unused130=b18.#l()
          Void unused131=b18.#o()
          Void unused132=b18.#y()
          Void unused133=b18.#L()
          Void unused134=b18.#i()
          Void unused135=b18.#b()
          Void unused136=b18.#r()
          Void unused137=b18.#a()
          Void unused138=b18.#r()
          Void unused139=b18.#y()
          Void unused140=b18.#4()
          b18
          )).#apply(that:catched34)
        
        void
        )
      )
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Void checkTargetExists(Library that, This2.Path path) exception This2.Refactor2.PathUnfit (
  Library unused=This2.Refactor2.hide(path:path).#leftrightleft(that:that)
  
  catch exception This2.Refactor2.ClassUnfit catched void
  
  (//just a way to test if path is there
void)
  )
method 
Library #leftrightleft(Library that) exception This2.Refactor2.PathUnfit, This2.Refactor2.PrivacyCoupuled (
  Void unused=(
    Void unused0=This2.Debug.#apply(that:This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused5=b.#1()
      b
      )))
    var Library res=This0.exposeAsLibrary(that:that, path:this.path())
    Void unused1=This2.Debug.#apply(that:This2.S.#from(builder:(
      capsule This2.S.SBuilder b0=This2.S.#builder()
      Void unused6=b0.#2()
      b0
      )))
    Void unused2=res := This2.Optimize.RemoveUnreachableCode.#leftrightleft(that:res)
    Void unused3=This2.Debug.#apply(that:This2.S.#from(builder:(
      capsule This2.S.SBuilder b1=This2.S.#builder()
      Void unused7=b1.#3()
      b1
      )))
    Void unused4=return This2.DeployTowel.#apply(fileName:this.url()).#leftrightleft(that:res)
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}}
Resource: {
class method 
Library #leftrightleft(Library that) This0.#apply(that:that)
class method 
Library #apply(Any that) (
  Void unused=(
    Void unused0=(
      This1.Concept.Classable that2=(
        Void unused2=return that
        
        catch return This1.Concept.Classable casted1 casted1
        
        catch return Any casted1 exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 (
        Library that1=(
          Void unused3=return that
          
          catch return Library casted0 casted0
          
          catch return Any casted0 exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched2 (
          Void that0=(
            Void unused4=return that
            
            catch return Void casted casted
            
            catch return Any casted exception void
            
            error  {/*@stringU
CastT-Should be unreachable code
*/}
            )
          
          catch exception Void catched4 void
          
          (
            Void unused5=return this.#apply(that:that0, clazz:Void)
            void
            )
          )
        
        (
          Void unused6=return this.#apply(that:that1, clazz:Library)
          void
          )
        )
      
      (
        Void unused7=return this.#apply(that:that2, clazz:that2.class())
        void
        )
      )
    Void unused1=return this.#apply(that:that, clazz:Any)
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library castTrait()  {
class method 
Any val() 
class method 
This0.T #apply() (
  Void unused=(
    Void unused0=(
      Any val=this.val()
      (
        This0.T val0=(
          Void unused2=return val
          
          catch return This0.T casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return val0
          void
          )
        )
      )
    Void unused1=error This1.ProvidedValueNotOfExpectedType.#from(builder:(
      capsule This2.S.SBuilder b=This1.ProvidedValueNotOfExpectedType.#builder()
      b
      ))
    void
    )
  
  catch return This0.T result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
T: {}}
class method 
Library #apply(Any that, class Any clazz) (
  Library trait=This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
    capsule This1.S.SBuilder b=This1.Refactor2.#default#redirect(path:void).#builder()
    Void unused=b.#T()
    b
    )), into:clazz).#leftrightleft(that:this.castTrait())
  
  catch exception This1.Refactor2.Fail catched0 error This1.X.#from(builder:(
    capsule This1.S.SBuilder b0=This1.X.#builder()
    Void unused0=b0.#R()
    Void unused1=b0.#e()
    Void unused2=b0.#s()
    Void unused3=b0.#o()
    Void unused4=b0.#u()
    Void unused5=b0.#r()
    Void unused6=b0.#c()
    Void unused7=b0.#e()
    Void unused8=b0.#space()
    Void unused9=b0.#u()
    Void unused10=b0.#s()
    Void unused11=b0.#a()
    Void unused12=b0.#g()
    Void unused13=b0.#e()
    Void unused14=b0.#space()
    Void unused15=b0.#o()
    Void unused16=b0.#f()
    Void unused17=b0.#space()
    Void unused18=b0.#r()
    Void unused19=b0.#e()
    Void unused20=b0.#d()
    Void unused21=b0.#i()
    Void unused22=b0.#r()
    Void unused23=b0.#e()
    Void unused24=b0.#c()
    Void unused25=b0.#t()
    Void unused26=b0.#space()
    Void unused27=b0.#f()
    Void unused28=b0.#a()
    Void unused29=b0.#i()
    Void unused30=b0.#l()
    Void unused31=b0.#e()
    Void unused32=b0.#d()
    b0
    )).#apply(that:catched0)
  
  (//can throw primitive error MethodClash, but should never happen here
This1.SafeOperators.liftValue(that:that, selector:This1.Selector.#from(builder:(
    capsule This1.S.SBuilder b1=This1.Selector.#builder()
    Void unused33=b1.#v()
    Void unused34=b1.#a()
    Void unused35=b1.#l()
    Void unused36=b1.#oRound()
    Void unused37=b1.#cRound()
    b1
    )), lib:trait))
  )
ProvidedValueNotOfExpectedType: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Data: {
StateUnfit: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
InvariantUnfit: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Base: {/*class, ToS == required
*/
class method 
Library #apply()  {implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool equals(read This0 that) 
refine read method 
This3.S toS() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) }
class method 
Library #leftrightleft(Library that) exception This2.Refactor2.MethodClash, This2.Refactor2.ClassClash, This2.Refactor2.SubtleSubtypeViolation This2.Use.Override.#from(seqBuilder:(
  capsule This2.Composers.Libs b=This2.Use.Override.#seqBuilder()
  Void unused=b.#add(that:this.#apply())
  b
  )).#leftrightleft(that:that)}
EnsureInvariant: {
mut method 
This2.Path #path() 
read method 
This2.Path path() 
method 
Library #leftrightleft(Library that) exception This2.NotAvailable (
  Void unused0=(
    This2.Location.Lib i=This2.Location.Lib.#apply(that:that).nested(path:this.path())
    Void unused1=(
      This2.Location.Method m=i.method(selector:i.#default#method(selector:void).#from(builder:(
        capsule This2.S.SBuilder b=i.#default#method(selector:void).#builder()
        Void unused4=b.#hash()
        Void unused5=b.#i()
        Void unused6=b.#n()
        Void unused7=b.#v()
        Void unused8=b.#a()
        Void unused9=b.#r()
        Void unused10=b.#i()
        Void unused11=b.#a()
        Void unused12=b.#n()
        Void unused13=b.#t()
        Void unused14=b.#oRound()
        Void unused15=b.#cRound()
        b
        )))
      
      catch exception This2.NotAvailable catched0 return This2.Refactor2.compose(that:that, and: {
      read method 
      Void #invariant() void})
      
      void
      )
    Void unused2=(
      Library unused=This2.Refactor2.compose(that:that, and: {
      read method 
      Void #invariant() })
      
      catch exception This2.Refactor2.Fail catched1 exception This1.InvariantUnfit.#from(builder:(
        capsule This2.S.SBuilder b0=This1.InvariantUnfit.#builder()
        Void unused16=b0.#M()
        Void unused17=b0.#e()
        Void unused18=b0.#t()
        Void unused19=b0.#h()
        Void unused20=b0.#o()
        Void unused21=b0.#d()
        Void unused22=b0.#space()
        Void unused23=b0.#sQuote()
        Void unused24=b0.#hash()
        Void unused25=b0.#i()
        Void unused26=b0.#n()
        Void unused27=b0.#v()
        Void unused28=b0.#a()
        Void unused29=b0.#r()
        Void unused30=b0.#i()
        Void unused31=b0.#a()
        Void unused32=b0.#n()
        Void unused33=b0.#t()
        Void unused34=b0.#oRound()
        Void unused35=b0.#cRound()
        Void unused36=b0.#sQuote()
        Void unused37=b0.#space()
        Void unused38=b0.#h()
        Void unused39=b0.#a()
        Void unused40=b0.#s()
        Void unused41=b0.#space()
        Void unused42=b0.#i()
        Void unused43=b0.#n()
        Void unused44=b0.#c()
        Void unused45=b0.#o()
        Void unused46=b0.#m()
        Void unused47=b0.#p()
        Void unused48=b0.#a()
        Void unused49=b0.#t()
        Void unused50=b0.#i()
        Void unused51=b0.#b()
        Void unused52=b0.#l()
        Void unused53=b0.#e()
        Void unused54=b0.#space()
        Void unused55=b0.#t()
        Void unused56=b0.#y()
        Void unused57=b0.#p()
        Void unused58=b0.#e()
        b0
        )).#apply(that:catched1)
      
      void
      )
    Void unused3=return that
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #apply(fwd This2.Path path) }
PlgDataOpen: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.refactor.MakeK
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library dataOpen(Library that, This2.Path path, This2.S fresh, This2.S mutKName, This2.S immKName) exception This2.Refactor2.PathUnfit, This2.Refactor2.ParseFail, This2.Refactor2.ClassUnfit, This2.Refactor2.MethodClash (
  Library res=use This0 check #dataOpen(_1_ast%ExpCore$ClassB:that, _2_java%util%List:path.#binaryRepr(), _3_java%lang%String:fresh.#binaryRepr(), _4_java%lang%String:mutKName.#binaryRepr(), _5_java%lang%String:immKName.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.MakeK\u000amethod name: dataOpen(that,path,fresh,mutKName,immKName)\u000ajava method: is.L42.connected.withSafeOperators.refactor.MakeK.#dataOpen(_1_ast%ExpCore$ClassB,_2_java%util%List,_3_java%lang%String,_4_java%lang%String,_5_java%lang%String)\u000a
*/})
  
  catch error Library x (
    Void unused0=This2.Refactor2.PathUnfit.#exceptionIf(binaryRepr:x)
    Void unused1=This2.Refactor2.ParseFail.#exceptionIf(binaryRepr:x)
    Void unused2=This2.Refactor2.ClassUnfit.#exceptionIf(binaryRepr:x)
    Void unused3=This2.Refactor2.MethodClash.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr}
DataOpen: {
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.S #fresh() 
read method 
This2.S fresh() 
mut method 
This2.S #mutKName() 
read method 
This2.S mutKName() 
mut method 
This2.S #immKName() 
read method 
This2.S immKName() 
method 
Library #leftrightleft(Library that) exception This2.Refactor2.PathUnfit, This2.Refactor2.ParseFail, This2.Refactor2.ClassUnfit, This2.Refactor2.MethodClash This1.PlgDataOpen.dataOpen(that:that, path:this.path(), fresh:this.fresh(), mutKName:this.mutKName(), immKName:this.immKName())
class method 
mut This0 #apply(fwd This2.Path path, fwd This2.S fresh, fwd This2.S mutKName, fwd This2.S immKName) }
PlgWrapExposers: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.refactor.MakeK
*/
class method 
Library wrapExposers(This2.Path path, Library top, This2.Selector fresh) exception This2.Refactor2.PathUnfit, This2.Refactor2.ClassUnfit 
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr}
WrapExposers: {
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
method 
Library #leftrightleft(Library that) exception This2.Refactor2.PathUnfit, This2.Refactor2.ClassUnfit This1.PlgWrapExposers.wrapExposers(path:this.of(), top:that, fresh:this.that())
class method 
mut This0 #apply(fwd This2.Selector that, fwd This2.Path of) }}
Num: {implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
class method 
This0 fromS(This1.Concept.ToS that) (
  This1.S s=that.toS()
  This0._private(_binaryRepr:use This0.Plg check stringToNum(that:s.#binaryRepr()) error This0.parseError(that:s))
  )
class method 
This0 #from(Library binaryRepr) This0._private(_binaryRepr:binaryRepr)
read method 
Library #binaryRepr() this._binaryRepr()
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This0 #from(This1.S.SBuilder builder) This0._private(_binaryRepr:use This0.Plg check stringToNum(that:builder.#binaryRepr()) error This0.parseError(that:This1.S.#from(builder:builder)))
class method 
Any parseError(This1.S that) (
  This0.ParseFail.Continue rcv15=(
    This0.ParseFail rcv16=This0.ParseFail.#from(builder:(
      capsule This1.S.SBuilder b=This0.ParseFail.#builder()
      Void unused=b.#T()
      Void unused0=b.#h()
      Void unused1=b.#e()
      Void unused2=b.#space()
      Void unused3=b.#p()
      Void unused4=b.#r()
      Void unused5=b.#o()
      Void unused6=b.#v()
      Void unused7=b.#i()
      Void unused8=b.#d()
      Void unused9=b.#e()
      Void unused10=b.#d()
      Void unused11=b.#space()
      Void unused12=b.#s()
      Void unused13=b.#t()
      Void unused14=b.#r()
      Void unused15=b.#i()
      Void unused16=b.#n()
      Void unused17=b.#g()
      Void unused18=b.#space()
      Void unused19=b.#i()
      Void unused20=b.#s()
      Void unused21=b.#space()
      Void unused22=b.#n()
      Void unused23=b.#o()
      Void unused24=b.#t()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#space()
      Void unused28=b.#v()
      Void unused29=b.#a()
      Void unused30=b.#l()
      Void unused31=b.#i()
      Void unused32=b.#d()
      Void unused33=b.#space()
      Void unused34=b.#R()
      Void unused35=b.#a()
      Void unused36=b.#t()
      Void unused37=b.#i()
      Void unused38=b.#o()
      Void unused39=b.#n()
      Void unused40=b.#a()
      Void unused41=b.#l()
      Void unused42=b.#colon()
      Void unused43=b.#space()
      b
      ))
    rcv16.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv16.#seqBuilder()
      Void unused44=b0.#add(that:that)
      b0
      ))
    )
  rcv15.#from(builder:(
    capsule This1.S.SBuilder b1=rcv15.#builder()
    b1
    ))
  )
refine read method 
This1.S toS() This1.S.#from(binaryRepr:use This0.Plg check numToString(that:this.#binaryRepr()) error void)
method 
This0 #plus(This0 that) This0._private(_binaryRepr:use This0.Plg check sumNum(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This0 #less(This0 that) This0._private(_binaryRepr:use This0.Plg check subNum(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This0 #times(This0 that) This0._private(_binaryRepr:use This0.Plg check mulNum(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This0 #divide(This0 that) This0._private(_binaryRepr:use This0.Plg check divNum(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
read method 
This1.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=use This0.Plg check ifNumEqualDo(n1:this.#binaryRepr(), n2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This0 that) (
  Void unused=(
    Void unused0=use This0.Plg check ifNumGrtDo(n1:that.#binaryRepr(), n2:this.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #rightequal(This0 that) (
  Void unused=(
    Void unused0=use This0.Plg check ifNumGEqDo(n1:that.#binaryRepr(), n2:this.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Plg: {/*@plugin
L42.is/connected/withNumbers
*/}
ParseFail: {implements This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Units: {/*of(that)//base
of(that and) comp*
of(that on) comp/
*/
class method 
Library traitUnit()  {implements This2.Concept.Equals, This2.Concept.ToS
mut method 
This0.Support #that() 
read method 
This0.Support that() 
class method /*factory
*/This0 #apply(This0.Support that) 
method 
This0.Support #inner() this.that()
refine read method 
This2.S toS() this.that().toS()
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(that:This0.Support.#from(builder:builder))
method 
This0 #plus(This0 that) This0.#apply(that:this.that().#plus(that:that.that()))
method 
This0 #less(This0 that) This0.#apply(that:this.that().#less(that:that.that()))
method 
This0 #times(This0.Support that) This0.#apply(that:this.that().#times(that:that))
method 
This0 #divide(This0.Support that) This0.#apply(that:this.that().#divide(that:that))
read method 
This2.Bool equals(read This0 that) this.that().#equalequal(that:that.that())
method 
This2.Bool #right(This0 that) this.that().#right(that:that.that())
method 
This2.Bool #rightequal(This0 that) this.that().#rightequal(that:that.that())
method 
This0.Support divide(This0 that) this.that().#divide(that:(//*********
that.that()))
refine read method 
This2.Bool #equalequal(read Any that) 
Support: {implements This3.Concept.ToS, This3.Concept.Equals
class method 
This0 #from(This3.S.SBuilder builder) 
method 
This0 #plus(This0 that) 
method 
This0 #less(This0 that) 
method 
This0 #times(This0 that) 
method 
This0 #divide(This0 that) 
read method 
This3.Bool equals(read This0 that) 
method 
This3.Bool #right(This0 that) 
method 
This3.Bool #rightequal(This0 that) 
refine read method 
This3.S toS() 
refine read method 
This3.Bool #equalequal(read Any that) }}
class method 
Library of(class Any that) exception This0.NotValidSupport (
  Void unused=(
    Void unused0=return This1.UnsafeRefactor.MiniData.#leftrightleft(that:This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
      capsule This1.S.SBuilder b=This1.Refactor2.#default#redirect(path:void).#builder()
      Void unused1=b.#S()
      Void unused2=b.#u()
      Void unused3=b.#p()
      Void unused4=b.#p()
      Void unused5=b.#o()
      Void unused6=b.#r()
      Void unused7=b.#t()
      b
      )), into:that).#leftrightleft(that:this.traitUnit()))
    
    catch exception This1.Refactor2.Fail catched0 exception (
      This0.NotValidSupport.Continue rcv17=(
        This0.NotValidSupport rcv18=This0.NotValidSupport.#from(builder:(
          capsule This1.S.SBuilder b0=This0.NotValidSupport.#builder()
          Void unused8=b0.#T()
          Void unused9=b0.#h()
          Void unused10=b0.#e()
          Void unused11=b0.#space()
          Void unused12=b0.#p()
          Void unused13=b0.#r()
          Void unused14=b0.#o()
          Void unused15=b0.#v()
          Void unused16=b0.#i()
          Void unused17=b0.#d()
          Void unused18=b0.#e()
          Void unused19=b0.#d()
          Void unused20=b0.#space()
          Void unused21=b0.#c()
          Void unused22=b0.#l()
          Void unused23=b0.#a()
          Void unused24=b0.#s()
          Void unused25=b0.#s()
          Void unused26=b0.#space()
          Void unused27=b0.#i()
          Void unused28=b0.#s()
          Void unused29=b0.#space()
          Void unused30=b0.#n()
          Void unused31=b0.#o()
          Void unused32=b0.#t()
          Void unused33=b0.#space()
          Void unused34=b0.#a()
          Void unused35=b0.#space()
          Void unused36=b0.#v()
          Void unused37=b0.#a()
          Void unused38=b0.#l()
          Void unused39=b0.#i()
          Void unused40=b0.#d()
          Void unused41=b0.#space()
          Void unused42=b0.#s()
          Void unused43=b0.#u()
          Void unused44=b0.#p()
          Void unused45=b0.#p()
          Void unused46=b0.#o()
          Void unused47=b0.#r()
          Void unused48=b0.#t()
          Void unused49=b0.#space()
          Void unused50=b0.#c()
          Void unused51=b0.#l()
          Void unused52=b0.#a()
          Void unused53=b0.#s()
          Void unused54=b0.#s()
          Void unused55=b0.#space()
          Void unused56=b0.#f()
          Void unused57=b0.#o()
          Void unused58=b0.#r()
          Void unused59=b0.#space()
          Void unused60=b0.#a()
          Void unused61=b0.#space()
          Void unused62=b0.#u()
          Void unused63=b0.#n()
          Void unused64=b0.#i()
          Void unused65=b0.#t()
          Void unused66=b0.#space()
          Void unused67=b0.#o()
          Void unused68=b0.#f()
          Void unused69=b0.#space()
          Void unused70=b0.#m()
          Void unused71=b0.#e()
          Void unused72=b0.#a()
          Void unused73=b0.#s()
          Void unused74=b0.#u()
          Void unused75=b0.#r()
          Void unused76=b0.#e()
          Void unused77=b0.#colon()
          Void unused78=b0.#space()
          b0
          ))
        rcv18.#from(seqBuilder:(
          capsule This1.S.SConcat b1=rcv18.#seqBuilder()
          Void unused79=b1.#add(that:This1.GetMyName.#apply(that:that))
          b1
          ))
        )
      rcv17.#from(builder:(
        capsule This1.S.SBuilder b2=rcv17.#builder()
        b2
        ))
      ).#apply(that:catched0)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library traitAnd()  {
method 
This0.S #inner() 
class method 
This0 #apply(This0.S that) 
class method 
This0 #apply(This0.T1 that, This0.T2 and) This0.#apply(that:that.#inner().#times(that:and.#inner()))
method 
This0.T1 left(This0.T2 right) This0.T1.#apply(that:this.#inner().#divide(that:right.#inner()))
method 
This0.T2 right(This0.T1 left) This0.T2.#apply(that:this.#inner().#divide(that:left.#inner()))
T1: {
method 
This1.S #inner() 
class method 
This0 #apply(This1.S that) }
T2: {
method 
This1.S #inner() 
class method 
This0 #apply(This1.S that) }
S: {
method 
This0 #times(This0 that) 
method 
This0 #divide(This0 that) }}
class method 
Library traitPer()  {
method 
This0.S #inner() 
class method 
This0 #apply(This0.S that) 
class method 
This0 #apply(This0.T1 that, This0.T2 per) This0.#apply(that:that.#inner().#divide(that:per.#inner()))
method 
This0.T1 left(This0.T2 right) This0.T1.#apply(that:this.#inner().#times(that:right.#inner()))
method 
This0.T1 right(This0.T2 left) This0.T1.#apply(that:left.#inner().#divide(that:this.#inner()))
T1: {
method 
This1.S #inner() 
class method 
This0 #apply(This1.S that) }
T2: {
method 
This1.S #inner() 
class method 
This0 #apply(This1.S that) }
S: {
method 
This0 #times(This0 that) 
method 
This0 #divide(This0 that) }}
class method 
Library of(class Any that, class Any and) exception This0.NotValidUnit, This0.NotSameSupport this.of(c1:that, c2:and, trait:this.traitAnd())
class method 
Library of(class Any that, class Any per) exception This0.NotValidUnit, This0.NotSameSupport this.of(c1:that, c2:per, trait:this.traitPer())
class method 
Library of(class Any c1, class Any c2, Library trait) exception This0.NotValidUnit, This0.NotSameSupport (//Meter2:Unit(Meter and:Meter)
//Meter2(m1 and:m2)
//Speed:Unit(Meter on:Second)
(
  Void unused=(/*check c1.#inner() and c2.#inner() are same type t
*/
    This1.Location.Type.Return t1=(
      This1.Location.Lib rcv19=This1.Location.Lib.#apply(classObj:c1)
      rcv19.method(selector:rcv19.#default#method(selector:void).#from(builder:(
        capsule This1.S.SBuilder b=rcv19.#default#method(selector:void).#builder()
        Void unused0=b.#hash()
        Void unused1=b.#i()
        Void unused2=b.#n()
        Void unused3=b.#n()
        Void unused4=b.#e()
        Void unused5=b.#r()
        Void unused6=b.#oRound()
        Void unused7=b.#cRound()
        b
        )))
      ).returnType()
    
    catch exception This1.Refactor2.SelectorUnfit catched1 exception (
      This0.NotValidUnit.Continue rcv20=(
        This0.NotValidUnit rcv21=This0.NotValidUnit.#from(builder:(
          capsule This1.S.SBuilder b0=This0.NotValidUnit.#builder()
          Void unused8=b0.#P()
          Void unused9=b0.#r()
          Void unused10=b0.#o()
          Void unused11=b0.#v()
          Void unused12=b0.#i()
          Void unused13=b0.#d()
          Void unused14=b0.#e()
          Void unused15=b0.#d()
          Void unused16=b0.#space()
          Void unused17=b0.#c()
          Void unused18=b0.#l()
          Void unused19=b0.#a()
          Void unused20=b0.#s()
          Void unused21=b0.#s()
          Void unused22=b0.#space()
          b0
          ))
        rcv21.#from(seqBuilder:(
          capsule This1.S.SConcat b1=rcv21.#seqBuilder()
          Void unused23=b1.#add(that:This1.GetMyName.#apply(that:c1))
          b1
          ))
        )
      rcv20.#from(builder:(
        capsule This1.S.SBuilder b2=rcv20.#builder()
        Void unused24=b2.#space()
        Void unused25=b2.#d()
        Void unused26=b2.#o()
        Void unused27=b2.#space()
        Void unused28=b2.#n()
        Void unused29=b2.#o()
        Void unused30=b2.#t()
        Void unused31=b2.#space()
        Void unused32=b2.#o()
        Void unused33=b2.#f()
        Void unused34=b2.#f()
        Void unused35=b2.#e()
        Void unused36=b2.#r()
        Void unused37=b2.#s()
        Void unused38=b2.#space()
        Void unused39=b2.#sQuote()
        Void unused40=b2.#m()
        Void unused41=b2.#e()
        Void unused42=b2.#t()
        Void unused43=b2.#h()
        Void unused44=b2.#o()
        Void unused45=b2.#d()
        Void unused46=b2.#space()
        Void unused47=b2.#S()
        Void unused48=b2.#u()
        Void unused49=b2.#p()
        Void unused50=b2.#p()
        Void unused51=b2.#o()
        Void unused52=b2.#r()
        Void unused53=b2.#t()
        Void unused54=b2.#space()
        Void unused55=b2.#hash()
        Void unused56=b2.#i()
        Void unused57=b2.#n()
        Void unused58=b2.#n()
        Void unused59=b2.#e()
        Void unused60=b2.#r()
        Void unused61=b2.#oRound()
        Void unused62=b2.#cRound()
        Void unused63=b2.#sQuote()
        b2
        ))
      ).#apply(that:catched1)
    
    (/*check c1.#inner() and c2.#inner() are same type t
*/
      This1.Location.Type.Return t2=(
        This1.Location.Lib rcv22=This1.Location.Lib.#apply(classObj:c2)
        rcv22.method(selector:rcv22.#default#method(selector:void).#from(builder:(
          capsule This1.S.SBuilder b3=rcv22.#default#method(selector:void).#builder()
          Void unused64=b3.#hash()
          Void unused65=b3.#i()
          Void unused66=b3.#n()
          Void unused67=b3.#n()
          Void unused68=b3.#e()
          Void unused69=b3.#r()
          Void unused70=b3.#oRound()
          Void unused71=b3.#cRound()
          b3
          )))
        ).returnType()
      
      catch exception This1.Refactor2.SelectorUnfit catched9 exception (
        This0.NotValidUnit.Continue rcv23=(
          This0.NotValidUnit rcv24=This0.NotValidUnit.#from(builder:(
            capsule This1.S.SBuilder b4=This0.NotValidUnit.#builder()
            Void unused72=b4.#P()
            Void unused73=b4.#r()
            Void unused74=b4.#o()
            Void unused75=b4.#v()
            Void unused76=b4.#i()
            Void unused77=b4.#d()
            Void unused78=b4.#e()
            Void unused79=b4.#d()
            Void unused80=b4.#space()
            Void unused81=b4.#c()
            Void unused82=b4.#l()
            Void unused83=b4.#a()
            Void unused84=b4.#s()
            Void unused85=b4.#s()
            Void unused86=b4.#space()
            b4
            ))
          rcv24.#from(seqBuilder:(
            capsule This1.S.SConcat b5=rcv24.#seqBuilder()
            Void unused87=b5.#add(that:This1.GetMyName.#apply(that:c2))
            b5
            ))
          )
        rcv23.#from(builder:(
          capsule This1.S.SBuilder b6=rcv23.#builder()
          Void unused88=b6.#space()
          Void unused89=b6.#d()
          Void unused90=b6.#o()
          Void unused91=b6.#space()
          Void unused92=b6.#n()
          Void unused93=b6.#o()
          Void unused94=b6.#t()
          Void unused95=b6.#space()
          Void unused96=b6.#o()
          Void unused97=b6.#f()
          Void unused98=b6.#f()
          Void unused99=b6.#e()
          Void unused100=b6.#r()
          Void unused101=b6.#s()
          Void unused102=b6.#space()
          Void unused103=b6.#sQuote()
          Void unused104=b6.#m()
          Void unused105=b6.#e()
          Void unused106=b6.#t()
          Void unused107=b6.#h()
          Void unused108=b6.#o()
          Void unused109=b6.#d()
          Void unused110=b6.#space()
          Void unused111=b6.#S()
          Void unused112=b6.#u()
          Void unused113=b6.#p()
          Void unused114=b6.#p()
          Void unused115=b6.#o()
          Void unused116=b6.#r()
          Void unused117=b6.#t()
          Void unused118=b6.#space()
          Void unused119=b6.#hash()
          Void unused120=b6.#i()
          Void unused121=b6.#n()
          Void unused122=b6.#n()
          Void unused123=b6.#e()
          Void unused124=b6.#r()
          Void unused125=b6.#oRound()
          Void unused126=b6.#cRound()
          Void unused127=b6.#sQuote()
          b6
          ))
        ).#apply(that:catched9)
      
      (/*check c1.#inner() and c2.#inner() are same type t
*/
        This1.Location.Type.RefTo r=t1.refTo()
        Void unused128=(
          This1.Bool cond=r.#equalequal(that:t2.refTo()).#bang()
          (
            Void unused132=cond.#checkTrue()
            
            catch exception Void catched16 void
            
            (exception (
              This0.NotSameSupport.Continue rcv25=(
                This0.NotSameSupport rcv26=(
                  This0.NotSameSupport.Continue rcv27=(
                    This0.NotSameSupport rcv28=(
                      This0.NotSameSupport.Continue rcv29=(
                        This0.NotSameSupport rcv30=(
                          This0.NotSameSupport.Continue rcv31=(
                            This0.NotSameSupport rcv32=This0.NotSameSupport.#from(builder:(
                              capsule This1.S.SBuilder b7=This0.NotSameSupport.#builder()
                              Void unused133=b7.#P()
                              Void unused134=b7.#r()
                              Void unused135=b7.#o()
                              Void unused136=b7.#v()
                              Void unused137=b7.#i()
                              Void unused138=b7.#d()
                              Void unused139=b7.#e()
                              Void unused140=b7.#d()
                              Void unused141=b7.#space()
                              Void unused142=b7.#c()
                              Void unused143=b7.#l()
                              Void unused144=b7.#a()
                              Void unused145=b7.#s()
                              Void unused146=b7.#s()
                              Void unused147=b7.#e()
                              Void unused148=b7.#s()
                              Void unused149=b7.#space()
                              b7
                              ))
                            rcv32.#from(seqBuilder:(
                              capsule This1.S.SConcat b8=rcv32.#seqBuilder()
                              Void unused150=b8.#add(that:This1.GetMyName.#apply(that:c1))
                              b8
                              ))
                            )
                          rcv31.#from(builder:(
                            capsule This1.S.SBuilder b9=rcv31.#builder()
                            Void unused151=b9.#oRound()
                            b9
                            ))
                          )
                        rcv30.#from(seqBuilder:(
                          capsule This1.S.SConcat b10=rcv30.#seqBuilder()
                          Void unused152=b10.#add(that:This1.GetMyName.#apply(that:r.class()))
                          b10
                          ))
                        )
                      rcv29.#from(builder:(
                        capsule This1.S.SBuilder b11=rcv29.#builder()
                        Void unused153=b11.#cRound()
                        Void unused154=b11.#space()
                        Void unused155=b11.#a()
                        Void unused156=b11.#n()
                        Void unused157=b11.#d()
                        Void unused158=b11.#space()
                        b11
                        ))
                      )
                    rcv28.#from(seqBuilder:(
                      capsule This1.S.SConcat b12=rcv28.#seqBuilder()
                      Void unused159=b12.#add(that:This1.GetMyName.#apply(that:c2))
                      b12
                      ))
                    )
                  rcv27.#from(builder:(
                    capsule This1.S.SBuilder b13=rcv27.#builder()
                    Void unused160=b13.#oRound()
                    b13
                    ))
                  )
                rcv26.#from(seqBuilder:(
                  capsule This1.S.SConcat b14=rcv26.#seqBuilder()
                  Void unused161=b14.#add(that:This1.GetMyName.#apply(that:t2.refTo().class()))
                  b14
                  ))
                )
              rcv25.#from(builder:(
                capsule This1.S.SBuilder b15=rcv25.#builder()
                Void unused162=b15.#cRound()
                Void unused163=b15.#space()
                Void unused164=b15.#h()
                Void unused165=b15.#a()
                Void unused166=b15.#v()
                Void unused167=b15.#e()
                Void unused168=b15.#space()
                Void unused169=b15.#d()
                Void unused170=b15.#i()
                Void unused171=b15.#f()
                Void unused172=b15.#f()
                Void unused173=b15.#e()
                Void unused174=b15.#r()
                Void unused175=b15.#e()
                Void unused176=b15.#n()
                Void unused177=b15.#t()
                Void unused178=b15.#space()
                Void unused179=b15.#s()
                Void unused180=b15.#u()
                Void unused181=b15.#p()
                Void unused182=b15.#p()
                Void unused183=b15.#o()
                Void unused184=b15.#r()
                Void unused185=b15.#t()
                Void unused186=b15.#s()
                Void unused187=b15.#dot()
                b15
                ))
              ))
            )
          )
        This1.Location.Type.RefTo.Binded cObj=(
          Void unused188=(
            Void unused189=(
              This1.Location.Type.RefTo.Binded r0=(
                Void unused191=return r
                
                catch return This1.Location.Type.RefTo.Binded casted casted
                
                catch return Any casted exception void
                
                error  {/*@stringU
CastT-Should be unreachable code
*/}
                )
              
              catch exception Void catched35 void
              
              (
                Void unused192=return r0
                void
                )
              )
            Void unused190=error This1.X.#from(builder:(
              capsule This1.S.SBuilder b16=This1.X.#builder()
              b16
              ))
            void
            )
          
          catch return This1.Location.Type.RefTo.Binded result0 result0
          
          error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
          )
        Library res=This1.UnsafeRefactor.MiniData.#leftrightleft(that:This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
          capsule This1.S.SBuilder b17=This1.Refactor2.#default#redirect(path:void).#builder()
          Void unused193=b17.#S()
          Void unused194=b17.#u()
          Void unused195=b17.#p()
          Void unused196=b17.#p()
          Void unused197=b17.#o()
          Void unused198=b17.#r()
          Void unused199=b17.#t()
          b17
          )), into:cObj.referredClassObj()).#leftrightleft(that:this.traitUnit()))
        var Library traitAnd=This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
          capsule This1.S.SBuilder b18=This1.Refactor2.#default#redirect(path:void).#builder()
          Void unused200=b18.#S()
          b18
          )), into:cObj.referredClassObj()).#leftrightleft(that:trait)
        Void unused129=traitAnd := This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
          capsule This1.S.SBuilder b19=This1.Refactor2.#default#redirect(path:void).#builder()
          Void unused201=b19.#T()
          Void unused202=b19.#1()
          b19
          )), into:c1).#leftrightleft(that:traitAnd)
        Void unused130=traitAnd := This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
          capsule This1.S.SBuilder b20=This1.Refactor2.#default#redirect(path:void).#builder()
          Void unused203=b20.#T()
          Void unused204=b20.#2()
          b20
          )), into:c2).#leftrightleft(that:traitAnd)
        Void unused131=return This1.Use.Over.#from(seqBuilder:(
          capsule This1.Composers.Libs b21=This1.Use.Over.#seqBuilder()
          Void unused205=b21.#add(that:res)
          b21
          )).#leftrightleft(that:traitAnd)
        
        catch exception This1.Refactor2.Fail catched45 exception (
          This0.NotValidUnit.Continue rcv33=(
            This0.NotValidUnit rcv34=(
              This0.NotValidUnit.Continue rcv35=(
                This0.NotValidUnit rcv36=This0.NotValidUnit.#from(builder:(
                  capsule This1.S.SBuilder b22=This0.NotValidUnit.#builder()
                  Void unused206=b22.#T()
                  Void unused207=b22.#h()
                  Void unused208=b22.#e()
                  Void unused209=b22.#space()
                  Void unused210=b22.#p()
                  Void unused211=b22.#r()
                  Void unused212=b22.#o()
                  Void unused213=b22.#v()
                  Void unused214=b22.#i()
                  Void unused215=b22.#d()
                  Void unused216=b22.#e()
                  Void unused217=b22.#d()
                  Void unused218=b22.#space()
                  Void unused219=b22.#c()
                  Void unused220=b22.#l()
                  Void unused221=b22.#a()
                  Void unused222=b22.#s()
                  Void unused223=b22.#s()
                  Void unused224=b22.#e()
                  Void unused225=b22.#s()
                  Void unused226=b22.#space()
                  b22
                  ))
                rcv36.#from(seqBuilder:(
                  capsule This1.S.SConcat b23=rcv36.#seqBuilder()
                  Void unused227=b23.#add(that:This1.GetMyName.#apply(that:c1))
                  b23
                  ))
                )
              rcv35.#from(builder:(
                capsule This1.S.SBuilder b24=rcv35.#builder()
                Void unused228=b24.#space()
                Void unused229=b24.#a()
                Void unused230=b24.#n()
                Void unused231=b24.#d()
                Void unused232=b24.#space()
                b24
                ))
              )
            rcv34.#from(seqBuilder:(
              capsule This1.S.SConcat b25=rcv34.#seqBuilder()
              Void unused233=b25.#add(that:This1.GetMyName.#apply(that:c2))
              b25
              ))
            )
          rcv33.#from(builder:(
            capsule This1.S.SBuilder b26=rcv33.#builder()
            Void unused234=b26.#space()
            Void unused235=b26.#a()
            Void unused236=b26.#r()
            Void unused237=b26.#e()
            Void unused238=b26.#space()
            Void unused239=b26.#n()
            Void unused240=b26.#o()
            Void unused241=b26.#t()
            Void unused242=b26.#space()
            Void unused243=b26.#space()
            Void unused244=b26.#v()
            Void unused245=b26.#a()
            Void unused246=b26.#l()
            Void unused247=b26.#i()
            Void unused248=b26.#d()
            Void unused249=b26.#space()
            Void unused250=b26.#U()
            Void unused251=b26.#n()
            Void unused252=b26.#i()
            Void unused253=b26.#t()
            Void unused254=b26.#space()
            Void unused255=b26.#c()
            Void unused256=b26.#l()
            Void unused257=b26.#a()
            Void unused258=b26.#s()
            Void unused259=b26.#s()
            Void unused260=b26.#e()
            Void unused261=b26.#s()
            Void unused262=b26.#dot()
            b26
            ))
          ).#apply(that:catched45)
        
        void
        )
      )
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
NotValidSupport: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
NotSameSupport: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
NotValidUnit: {implements This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Alphanumeric: {
class method 
Library #leftrightleft(Library that) (
  Void unused=(
    Library lib=( {implements This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
    mut method 
    This2.S #that() 
    read method 
    This2.S that() 
    class method 
    This0 #from(This2.S.SBuilder builder) This0.parse(that:This2.S.#from(builder:builder))
    class method 
    mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
    class method 
    This0 parse(This2.S that) 
    refine read method 
    This2.S toS() (// Assumes simple, non-destructive parsing
this.that())
    read method 
    This2.Bool equals(read This0 that) this.that().#equalequal(that:that.that())
    refine class method 
    read This2.Concept.Classable cast(read This2.Concept.Classable that) 
    refine class method 
    mut This2.Concept.Classable #cast(mut This2.Concept.Classable that) 
    refine read method 
    class This2.Concept.Classable class() 
    refine class method 
    This2.S readableName() 
    refine class method 
    This2.Bool is(class Any subtype) 
    refine read method 
    This2.Bool #equalequal(read Any that) })
    Library res=This1.Use.Override.#from(seqBuilder:(
      capsule This1.Composers.Libs b=This1.Use.Override.#seqBuilder()
      Void unused0=b.#add(that:This1.UnsafeRefactor.MiniDataTrait.#apply())
      Void unused1=b.#add(that:lib)
      b
      )).#leftrightleft(that:that)
    
    catch exception This1.Refactor2.ClassClash catched0 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b0=This1.X.#builder()
      Void unused2=b0.#S()
      Void unused3=b0.#o()
      Void unused4=b0.#m()
      Void unused5=b0.#e()
      Void unused6=b0.#o()
      Void unused7=b0.#n()
      Void unused8=b0.#e()
      Void unused9=b0.#space()
      Void unused10=b0.#r()
      Void unused11=b0.#e()
      Void unused12=b0.#d()
      Void unused13=b0.#e()
      Void unused14=b0.#f()
      Void unused15=b0.#i()
      Void unused16=b0.#n()
      Void unused17=b0.#e()
      Void unused18=b0.#d()
      Void unused19=b0.#space()
      Void unused20=b0.#p()
      Void unused21=b0.#a()
      Void unused22=b0.#r()
      Void unused23=b0.#t()
      Void unused24=b0.#space()
      Void unused25=b0.#o()
      Void unused26=b0.#f()
      Void unused27=b0.#space()
      Void unused28=b0.#t()
      Void unused29=b0.#h()
      Void unused30=b0.#e()
      Void unused31=b0.#space()
      Void unused32=b0.#i()
      Void unused33=b0.#m()
      Void unused34=b0.#p()
      Void unused35=b0.#l()
      Void unused36=b0.#e()
      Void unused37=b0.#m()
      Void unused38=b0.#e()
      Void unused39=b0.#n()
      Void unused40=b0.#t()
      Void unused41=b0.#a()
      Void unused42=b0.#t()
      Void unused43=b0.#i()
      Void unused44=b0.#o()
      Void unused45=b0.#n()
      Void unused46=b0.#space()
      Void unused47=b0.#o()
      Void unused48=b0.#f()
      Void unused49=b0.#space()
      Void unused50=b0.#A()
      Void unused51=b0.#l()
      Void unused52=b0.#p()
      Void unused53=b0.#h()
      Void unused54=b0.#a()
      Void unused55=b0.#N()
      Void unused56=b0.#u()
      Void unused57=b0.#m()
      Void unused58=b0.#e()
      Void unused59=b0.#r()
      Void unused60=b0.#i()
      Void unused61=b0.#c()
      b0
      )).#apply(that:catched0)
    
    catch exception This1.Refactor2.MethodClash catched0 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b1=This1.X.#builder()
      Void unused62=b1.#S()
      Void unused63=b1.#o()
      Void unused64=b1.#m()
      Void unused65=b1.#e()
      Void unused66=b1.#o()
      Void unused67=b1.#n()
      Void unused68=b1.#e()
      Void unused69=b1.#space()
      Void unused70=b1.#r()
      Void unused71=b1.#e()
      Void unused72=b1.#d()
      Void unused73=b1.#e()
      Void unused74=b1.#f()
      Void unused75=b1.#i()
      Void unused76=b1.#n()
      Void unused77=b1.#e()
      Void unused78=b1.#d()
      Void unused79=b1.#space()
      Void unused80=b1.#p()
      Void unused81=b1.#a()
      Void unused82=b1.#r()
      Void unused83=b1.#t()
      Void unused84=b1.#s()
      Void unused85=b1.#space()
      Void unused86=b1.#o()
      Void unused87=b1.#f()
      Void unused88=b1.#space()
      Void unused89=b1.#t()
      Void unused90=b1.#h()
      Void unused91=b1.#e()
      Void unused92=b1.#space()
      Void unused93=b1.#i()
      Void unused94=b1.#m()
      Void unused95=b1.#p()
      Void unused96=b1.#l()
      Void unused97=b1.#e()
      Void unused98=b1.#m()
      Void unused99=b1.#e()
      Void unused100=b1.#n()
      Void unused101=b1.#t()
      Void unused102=b1.#a()
      Void unused103=b1.#t()
      Void unused104=b1.#i()
      Void unused105=b1.#o()
      Void unused106=b1.#n()
      Void unused107=b1.#space()
      Void unused108=b1.#o()
      Void unused109=b1.#f()
      Void unused110=b1.#space()
      Void unused111=b1.#A()
      Void unused112=b1.#l()
      Void unused113=b1.#p()
      Void unused114=b1.#h()
      Void unused115=b1.#a()
      Void unused116=b1.#n()
      Void unused117=b1.#u()
      Void unused118=b1.#m()
      Void unused119=b1.#e()
      Void unused120=b1.#r()
      Void unused121=b1.#i()
      Void unused122=b1.#c()
      Void unused123=b1.#space()
      Void unused124=b1.#b()
      Void unused125=b1.#a()
      Void unused126=b1.#d()
      Void unused127=b1.#l()
      Void unused128=b1.#y()
      b1
      )).#apply(that:catched0)
    
    (
      Void unused129=return This1.K.#leftrightleft(that:res)
      void
      )
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
ParseFail: {implements This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Enumeration: {
class method 
Library #from(This1.S.SBuilder builder) exception This0.InvalidElements This0.from(base:This1.S.#from(builder:builder))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This1.Selector numToSel(This1.Size that) exception This0.InvalidElements (
  Void unused=(
    Void unused0=(
      This1.Bool cond=that.#rightequal(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#6()
        Void unused3=b.#4()
        b
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (exception (
          This0.InvalidElements.Continue rcv66=(
            This0.InvalidElements rcv67=This0.InvalidElements.#from(builder:(
              capsule This1.S.SBuilder b0=This0.InvalidElements.#builder()
              Void unused5=b0.#t()
              Void unused6=b0.#o()
              Void unused7=b0.#o()
              Void unused8=b0.#space()
              Void unused9=b0.#m()
              Void unused10=b0.#a()
              Void unused11=b0.#n()
              Void unused12=b0.#y()
              Void unused13=b0.#space()
              Void unused14=b0.#e()
              Void unused15=b0.#n()
              Void unused16=b0.#u()
              Void unused17=b0.#m()
              Void unused18=b0.#e()
              Void unused19=b0.#r()
              Void unused20=b0.#a()
              Void unused21=b0.#t()
              Void unused22=b0.#i()
              Void unused23=b0.#o()
              Void unused24=b0.#n()
              Void unused25=b0.#space()
              Void unused26=b0.#e()
              Void unused27=b0.#l()
              Void unused28=b0.#e()
              Void unused29=b0.#m()
              Void unused30=b0.#e()
              Void unused31=b0.#n()
              Void unused32=b0.#t()
              Void unused33=b0.#s()
              Void unused34=b0.#colon()
              b0
              ))
            rcv67.#from(seqBuilder:(
              capsule This1.S.SConcat b1=rcv67.#seqBuilder()
              Void unused35=b1.#add(that:that.#plus(that:This1.Size.#from(builder:(
                capsule This1.S.SBuilder b2=This1.Size.#builder()
                Void unused36=b2.#1()
                b2
                ))))
              b1
              ))
            )
          rcv66.#from(builder:(
            capsule This1.S.SBuilder b3=rcv66.#builder()
            Void unused37=b3.#comma()
            Void unused38=b3.#space()
            Void unused39=b3.#m()
            Void unused40=b3.#a()
            Void unused41=b3.#x()
            Void unused42=b3.#space()
            Void unused43=b3.#i()
            Void unused44=b3.#s()
            Void unused45=b3.#space()
            Void unused46=b3.#6()
            Void unused47=b3.#4()
            b3
            ))
          ))
        )
      )
    Void unused1=return This1.Selector.from(string:This1.S.#from(builder:(
      capsule This1.S.SBuilder b4=This1.S.#builder()
      Void unused48=b4.#hash()
      b4
      )).#plusplus(that:that.toS().#plusplus(that:This1.S.#from(builder:(
      capsule This1.S.SBuilder b5=This1.S.#builder()
      Void unused49=b5.#oRound()
      Void unused50=b5.#cRound()
      b5
      )))))
    void
    )
  
  catch return This1.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Selector sToSel(This1.S that) exception This0.InvalidElements (
  Void unused=(
    Void unused0=return This1.Selector.from(string:that.#plusplus(that:This1.S.#from(builder:(
      capsule This1.S.SBuilder b=This1.S.#builder()
      Void unused1=b.#oRound()
      Void unused2=b.#cRound()
      b
      ))))
    
    catch error This1.Selector.ParseFail pf (/*does not implements Message before we do the fixing
*/
      This1.Guard gpf=(
        Void unused3=(
          Void unused4=(
            This1.Guard pf0=(
              Void unused6=return pf
              
              catch return This1.Guard casted casted
              
              catch return Any casted exception void
              
              error  {/*@stringU
CastT-Should be unreachable code
*/}
              )
            
            catch exception Void catched2 void
            
            (
              Void unused7=return pf0
              void
              )
            )
          Void unused5=error This1.S.#from(builder:(
            capsule This1.S.SBuilder b0=This1.S.#builder()
            Void unused8=b0.#s()
            Void unused9=b0.#u()
            Void unused10=b0.#b()
            Void unused11=b0.#t()
            Void unused12=b0.#y()
            Void unused13=b0.#p()
            Void unused14=b0.#e()
            Void unused15=b0.#space()
            Void unused16=b0.#w()
            Void unused17=b0.#i()
            Void unused18=b0.#l()
            Void unused19=b0.#l()
            Void unused20=b0.#space()
            Void unused21=b0.#b()
            Void unused22=b0.#e()
            Void unused23=b0.#space()
            Void unused24=b0.#f()
            Void unused25=b0.#i()
            Void unused26=b0.#x()
            Void unused27=b0.#e()
            Void unused28=b0.#d()
            Void unused29=b0.#space()
            Void unused30=b0.#i()
            Void unused31=b0.#n()
            Void unused32=b0.#space()
            Void unused33=b0.#a()
            Void unused34=b0.#d()
            Void unused35=b0.#a()
            Void unused36=b0.#m()
            Void unused37=b0.#2()
            b0
            ))
          void
          )
        
        catch return This1.Guard result0 result0
        
        error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
        )
      exception (
        This0.InvalidElements rcv68=(
          This0.InvalidElements.Continue rcv69=(
            This0.InvalidElements rcv70=This0.InvalidElements.#from(builder:(
              capsule This1.S.SBuilder b1=This0.InvalidElements.#builder()
              Void unused38=b1.#i()
              Void unused39=b1.#n()
              Void unused40=b1.#v()
              Void unused41=b1.#a()
              Void unused42=b1.#l()
              Void unused43=b1.#i()
              Void unused44=b1.#d()
              Void unused45=b1.#space()
              Void unused46=b1.#e()
              Void unused47=b1.#n()
              Void unused48=b1.#u()
              Void unused49=b1.#m()
              Void unused50=b1.#e()
              Void unused51=b1.#r()
              Void unused52=b1.#a()
              Void unused53=b1.#t()
              Void unused54=b1.#i()
              Void unused55=b1.#o()
              Void unused56=b1.#n()
              Void unused57=b1.#space()
              Void unused58=b1.#n()
              Void unused59=b1.#a()
              Void unused60=b1.#m()
              Void unused61=b1.#e()
              Void unused62=b1.#colon()
              b1
              ))
            rcv70.#from(seqBuilder:(
              capsule This1.S.SConcat b2=rcv70.#seqBuilder()
              Void unused63=b2.#add(that:that)
              b2
              ))
            )
          rcv69.#from(builder:(
            capsule This1.S.SBuilder b3=rcv69.#builder()
            b3
            ))
          )
        rcv68.#apply(that:gpf)
        )
      )
    
    void
    )
  
  catch return This1.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Strings sToSs(This1.S that) (//we need to use StringSplit since we are still in the adam2 creation
This1.StringSplit.splitOn(that:that, chars:This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#comma()
  Void unused0=b.#space()
  b
  )).#plusplus(that:This1.S.nl())))
class method 
Library traitMeth() ( {
mut method 
This0.T #inner() 
read method 
This0.T inner() 
class method 
This0 #apply(This0.T inner) 
class method 
This0 n() This0.#apply(inner:This0.T.ord())
method 
This2.Bool isN() this.inner().#equalequal(that:This0.T.ord())
T: {implements This3.Concept.Equals
class method 
This0 ord() 
refine read method 
This3.Bool #equalequal(read Any that) }})
class method 
Library enumElem(This1.Size ord, This1.S s) exception This0.InvalidElements (
  Void unused=(
    This1.Selector sel=this.sToSel(that:s)
    Void unused0=return This1.Refactor2.Method.#from(seqBuilder:(
      capsule This1.Refactor2.Method b=This1.Refactor2.Method.#seqBuilder()
      Void unused1=b.#add(rename:This1.Refactor2.Method.#default##square(rename:void).#from(builder:(
        capsule This1.S.SBuilder b0=This1.Refactor2.Method.#default##square(rename:void).#builder()
        Void unused4=b0.#o()
        Void unused5=b0.#r()
        Void unused6=b0.#d()
        Void unused7=b0.#oRound()
        Void unused8=b0.#cRound()
        b0
        )), of:This1.Refactor2.Method.#default##square(of:void).#from(builder:(
        capsule This1.S.SBuilder b1=This1.Refactor2.Method.#default##square(of:void).#builder()
        Void unused9=b1.#T()
        b1
        )), into:this.numToSel(that:ord))
      Void unused2=b.#add(rename:This1.Refactor2.Method.#default##square(rename:void).#from(builder:(
        capsule This1.S.SBuilder b2=This1.Refactor2.Method.#default##square(rename:void).#builder()
        Void unused10=b2.#n()
        Void unused11=b2.#oRound()
        Void unused12=b2.#cRound()
        b2
        )), into:sel)
      Void unused3=b.#add(rename:This1.Refactor2.Method.#default##square(rename:void).#from(builder:(
        capsule This1.S.SBuilder b3=This1.Refactor2.Method.#default##square(rename:void).#builder()
        Void unused13=b3.#i()
        Void unused14=b3.#s()
        Void unused15=b3.#N()
        Void unused16=b3.#oRound()
        Void unused17=b3.#cRound()
        b3
        )), into:sel.with(prefix:This1.S.#from(builder:(
        capsule This1.S.SBuilder b4=This1.S.#builder()
        Void unused18=b4.#i()
        Void unused19=b4.#s()
        b4
        ))))
      b
      )).#leftrightleft(that:this.traitMeth())
    
    catch exception This0.InvalidElements e (exception e)
    
    catch exception This1.Refactor2.Fail catched5 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b5=This1.X.#builder()
      b5
      )).#apply(that:catched5)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library from(This1.Concept.Base base) exception This0.InvalidElements (
  Void unused=(
    This1.Strings ss=this.sToSs(that:base.toS())
    Library res=This1.Use.Override.#from(seqBuilder:(
      capsule This1.Composers.Libs b0=This1.Use.Override.#seqBuilder()
      Void unused0=b0.#add(that:This0.EnumTrait.#apply())
      b0
      )).#leftrightleft(that:This1.Refactor2.redirect(path:This1.Refactor2.#default#redirect(path:void).#from(builder:(
      capsule This1.S.SBuilder b1=This1.Refactor2.#default#redirect(path:void).#builder()
      Void unused1=b1.#T()
      b1
      )), into:This1.Size).#leftrightleft(that:This1.Use.Override.#from(seqBuilder:(
      capsule This1.Composers.Libs b=This1.Use.Override.#seqBuilder()
      Void unused2=(
        capsule This1.Range.Iterator ord=This1.Range.#apply(start:This1.Size.#from(builder:(
          capsule This1.S.SBuilder b2=This1.Size.#builder()
          Void unused3=b2.#0()
          b2
          )))
        (
          lent This1.Strings.IteratorVal s=ss.vals()
          (
            Void unused4=loop (
              Void unused5=ord.#next()
              
              catch exception Void catched4 (
                Void unused6=(
                  Void unused9=s.#next()
                  
                  catch exception Void catched5 void
                  
                  void
                  )
                Void unused7=(
                  Void unused10=ord.#checkEnd()
                  
                  catch exception Void catched6 void
                  
                  void
                  )
                Void unused8=(
                  Void unused11=s.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                exception void
                )
              
              (
                Void unused12=s.#next()
                
                catch exception Void catched9 (
                  Void unused13=(
                    Void unused15=ord.#checkEnd()
                    
                    catch exception Void catched10 void
                    
                    void
                    )
                  Void unused14=(
                    Void unused16=s.#checkEnd()
                    
                    catch exception Void catched11 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  Void unused17=b.#add(that:this.enumElem(ord:ord.#inner(), s:s.#inner()))
                  void
                  ))
                )
              )
            
            catch exception Void catched14 void
            
            void
            )
          )
        )
      b
      )).#leftrightleft(that:This1.Refactor2.Method.#from(seqBuilder:(
      capsule This1.Refactor2.Method b3=This1.Refactor2.Method.#seqBuilder()
      Void unused18=b3.#add(rename:This1.Refactor2.Method.#default##square(rename:void).#from(builder:(
        capsule This1.S.SBuilder b4=This1.Refactor2.Method.#default##square(rename:void).#builder()
        Void unused19=b4.#hash()
        Void unused20=b4.#a()
        Void unused21=b4.#p()
        Void unused22=b4.#p()
        Void unused23=b4.#l()
        Void unused24=b4.#y()
        Void unused25=b4.#oRound()
        Void unused26=b4.#cRound()
        b4
        )), into:This1.Refactor2.Method.#default##square(into:void).#from(builder:(
        capsule This1.S.SBuilder b5=This1.Refactor2.Method.#default##square(into:void).#builder()
        Void unused27=b5.#n()
        Void unused28=b5.#a()
        Void unused29=b5.#m()
        Void unused30=b5.#e()
        Void unused31=b5.#s()
        Void unused32=b5.#oRound()
        Void unused33=b5.#cRound()
        b5
        )))
      b3
      )).#leftrightleft(that:This1.Resource.#apply(that:ss)))))
    
    catch exception This0.InvalidElements e (exception e)
    
    catch exception This1.Refactor2.Fail catched19 error This1.X.#from(builder:(
      capsule This1.S.SBuilder b6=This1.X.#builder()
      b6
      )).#apply(that:catched19)
    
    (
      Void unused34=return res
      void
      )
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
InvalidElements: {implements This2.Refactor2.Fail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
EnumTrait: {
class method 
Any val()  {implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
mut method 
This3.Size #inner() 
read method 
This3.Size inner() 
class method 
This0 #apply(This3.Size inner) 
read method 
This3.S name() This0.names().val(that:this.inner())
read method 
This3.Bool equals(read This0 that) this.inner().#equalequal(that:that.inner())
class method 
This3.Strings names() 
class method 
This0 fromS(This3.S that) (
  Void unused=(
    Void unused0=(
      capsule This3.Size.Iterator n=This3.Size.#from(builder:(
        capsule This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        lent This3.Strings.IteratorVal d=This0.names().vals()
        (
          Void unused3=loop (
            Void unused4=n.#next()
            
            catch exception Void catched2 (
              Void unused5=(
                Void unused8=d.#next()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused6=(
                Void unused9=n.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              Void unused7=(
                Void unused10=d.#checkEnd()
                
                catch exception Void catched5 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=d.#next()
              
              catch exception Void catched7 (
                Void unused12=(
                  Void unused14=n.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=d.#checkEnd()
                  
                  catch exception Void catched9 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=d.#inner().#equalequal(that:that)
                (
                  Void unused16=cond.#checkTrue()
                  
                  catch exception Void catched12 void
                  
                  (return This0.#apply(inner:n.#inner()))
                  )
                ))
              )
            )
          
          catch exception Void catched13 void
          
          void
          )
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv64=(
        This0.ParseFail rcv65=This0.ParseFail.#from(builder:(
          capsule This3.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused17=b0.#T()
          Void unused18=b0.#h()
          Void unused19=b0.#e()
          Void unused20=b0.#space()
          Void unused21=b0.#p()
          Void unused22=b0.#r()
          Void unused23=b0.#o()
          Void unused24=b0.#v()
          Void unused25=b0.#i()
          Void unused26=b0.#d()
          Void unused27=b0.#e()
          Void unused28=b0.#d()
          Void unused29=b0.#space()
          Void unused30=b0.#s()
          Void unused31=b0.#t()
          Void unused32=b0.#r()
          Void unused33=b0.#i()
          Void unused34=b0.#n()
          Void unused35=b0.#g()
          Void unused36=b0.#space()
          Void unused37=b0.#i()
          Void unused38=b0.#s()
          Void unused39=b0.#space()
          Void unused40=b0.#n()
          Void unused41=b0.#o()
          Void unused42=b0.#t()
          Void unused43=b0.#space()
          Void unused44=b0.#v()
          Void unused45=b0.#a()
          Void unused46=b0.#l()
          Void unused47=b0.#i()
          Void unused48=b0.#d()
          Void unused49=b0.#colon()
          Void unused50=b0.#space()
          b0
          ))
        rcv65.#from(seqBuilder:(
          capsule This3.S.SConcat b1=rcv65.#seqBuilder()
          Void unused51=b1.#add(that:that)
          b1
          ))
        )
      rcv64.#from(builder:(
        capsule This3.S.SBuilder b2=rcv64.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.S toS() This0.readableName().#plusplus(that:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
refine class method 
read This0 cast(read This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This3.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
ParseFail: {implements This4.Guard.ParseFail, This4.Guard, This4.Message, This4.Concept.Base, This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals/*class method This from(Base base)
*/
mut method 
This4.S #_text() 
read method 
This4.S _text() 
mut method 
This4.Message.Opt #cause() 
read method 
This4.Message.Opt cause() 
class method 
This0 #apply(This4.S _text, This4.Message.Opt cause) 
refine class method 
This4.S kind() this.readableName()
refine read method 
This4.S text() this._text()
refine read method 
This4.Message.Opt responseOf() this.cause()
method 
This0 #apply(This4.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This4.S toS() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This4.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This4.S.doubleQuote()))))
        )
      )
    var This4.S res=This0.kind()
    Void unused1=(
      This4.Bool cond0=this.text().#equalequal(that:This4.S.#from(builder:(
        capsule This4.S.SBuilder b=This4.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This4.S.#from(builder:(
          capsule This4.S.SBuilder b0=This4.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This4.S.#from(builder:(
          capsule This4.S.SBuilder b1=This4.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This4.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This4.S.doubleQuote().#plusplus(that:This4.S.#from(builder:(
          capsule This4.S.SBuilder b2=This4.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This4.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This4.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This4.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This4.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Bool equals(read This0 that) This4.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This4.S text) This0.#apply(_text:text, cause:This4.Message.Opt.#apply())
class method 
This0 #apply(This4.S text, This4.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This4.Message.Opt.#apply(that:cause)))
class method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
class method 
This0 #from(This4.S.SBuilder builder) This0.#apply(text:This4.S.#from(builder:builder))
method 
This0.Continue #from(This4.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This4.S.SConcat #seqBuilder() This4.S.SConcat.#apply(old:this.text(), accumulator:This4.S.#from(builder:(
  capsule This4.S.SBuilder b=This4.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This5.S #that() 
read method 
This5.S that() 
class method 
This0 #apply(This5.S that) 
method 
mut This5.S.SBuilder #builder() This5.S.SBuilder.empty()
method 
This1 #from(This5.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This5.S.#from(builder:builder)))}}
List: {implements This4.Concept.ToS, This4.Concept.Classable, This4.Concept.Equals
mut method 
mut This4.Collections.MutListAny #inner() 
read method 
read This4.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This4.Collections.MutListAny inner) 
class method 
This0 #immK(This4.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This4.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This4.Bool isEmpty() this.size().#equalequal(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
class This4.Size #default#val(Void that) This4.Size
read method 
This1 left() This0.Cast.#apply(that:this.inner().val(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This4.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This4.Size that, This1 val) (
  mut This4.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This4.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This4.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This4.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This4.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This4.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) (/*insertion
*/this.with(that:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This4.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 withoutLeft() this.without(index:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size minTo) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This4.Size from, This4.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size maxTo, This4.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size minTo, This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This4.Size from, This4.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size maxTo, This4.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size minTo) this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This4.Size from, This4.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b1=This4.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This4.S toS() this.inner().toS()
refine class method 
read This0 cast(read This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This4.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This4.S readableName() This4.GetMyName.#apply(that:This0)
refine class method 
This4.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This4.Bool.true()
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size size() this.inner().size()
read method 
This1 val(This4.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b=This4.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This4.Size.#from(builder:(
  capsule This4.S.SBuilder b0=This4.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This4.Bool contains(This1 that) (/*################# operators
*/(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This4.Bool cond=e.#inner().#equalequal(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This4.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This4.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This4.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This4.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This4.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This4.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This4.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This4.Bool.true()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This4.Bool #right(This1 that) this.contains(that:that)
read method 
This4.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This4.Bool cond=e1.#inner().#equalequal(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This4.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This4.Collections.IterationFailure catched13 (return This4.Bool.false())
    
    (
      Void unused15=return This4.Bool.true()
      void
      )
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This4.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This4.Bool.false()
    void
    )
  
  catch return This4.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfLeft(This1 val) (
  Void unused=(
    This4.Size size=this.size()
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b1=This4.Size.#builder()
        Void unused8=b1.#1()
        b1
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This4.Size indexOfRight(This1 val) (
  Void unused=(
    var This4.Size pos=this.size().#less(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return pos)
          )
        )
      Void unused3=(
        This4.Bool cond0=(
          This4.Size opNorm=pos
          This4.Size.#from(builder:(
            capsule This4.S.SBuilder b0=This4.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This4.Size.#from(builder:(
            capsule This4.S.SBuilder b1=This4.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      pos := pos.#less(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b2=This4.Size.#builder()
        Void unused9=b2.#1()
        b2
        )))
      )
    void
    )
  
  catch return This4.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This4.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  capsule This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This4.Bool cond=e.#inner().#equalequal(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This4.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1 val) (
  Void unused=(
    var This4.Size pos=This4.Size.#from(builder:(
      capsule This4.S.SBuilder b=This4.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    Void unused0=loop (
      Void unused2=(
        This4.Bool cond=this.val(that:pos).#equalequal(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:pos))
          )
        )
      Void unused3=(
        This4.Bool cond0=pos.#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      pos := pos.#plus(that:This4.Size.#from(builder:(
        capsule This4.S.SBuilder b0=This4.Size.#builder()
        Void unused6=b0.#1()
        b0
        )))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This4.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=pos
        This4.Size.#from(builder:(
          capsule This4.S.SBuilder b=This4.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2 #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2 that0=(
        Void unused2=return that
        
        catch return This2 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This5.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This6.Collections.MutListAny that() 
read method 
This6.Size from() 
mut method 
Void from(This6.Size that) 
read method 
This6.Size maxTo() 
read method 
This6.Size minTo() 
read method 
This6.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This6.Size.#from(builder:(
    capsule This6.S.SBuilder b=This6.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This6.Bool cond=this.maxTo().#right(that:This6.Size.#from(builder:(
      capsule This6.S.SBuilder b0=This6.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This6.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This6.Bool cond=(
    This6.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This6.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This6.Bool cond=(
        This6.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
mut method 
This2 #filled() 
read method 
This2 filled() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo, This2 filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This5.Bool isFill() This5.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This5.Collections.MutListAny #that() 
read method 
read This5.Collections.MutListAny that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
class method 
mut This0 #apply(mut This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
mut method 
Void inner(This2 that) (
  mut This5.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorVal: {
mut method 
read This5.Collections.MutListAny #_that() 
read method 
read This5.Collections.MutListAny _that() 
mut method 
Void from(This5.Size that) 
mut method 
This5.Size #from() 
read method 
This5.Size from() 
mut method 
This5.Size #maxTo() 
read method 
This5.Size maxTo() 
mut method 
This5.Size #minTo() 
read method 
This5.Size minTo() 
read method 
read This5.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This5.Collections.MutListAny _that, This5.Size from, This5.Size maxTo, This5.Size minTo) 
class method 
lent This0 #apply(read This5.Collections.MutListAny that, This5.Size from, This5.Size maxTo, This5.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This5.Bool isFill() This5.Bool.false()
read method 
This2 filled() error This5.X.#from(builder:(
  capsule This5.S.SBuilder b=This5.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    capsule This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      capsule This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}}
class method 
Library #apply() (
  Void unused=(
    Void unused0=(
      Any val=this.val()
      (
        Library val0=(
          Void unused2=return val
          
          catch return Library casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return val0
          void
          )
        )
      )
    Void unused1=error This2.Resource.ProvidedValueNotOfExpectedType.#from(builder:(
      capsule This2.S.SBuilder b=This2.Resource.ProvidedValueNotOfExpectedType.#builder()
      b
      ))
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}}
GetMyName: {
class method 
This1.S #1#apply_$_4(class Any that) This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#less()
  Void unused0=b.#less()
  Void unused1=b.#N()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#S()
  Void unused6=b.#t()
  Void unused7=b.#i()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#T()
  Void unused11=b.#o()
  Void unused12=b.#F()
  Void unused13=b.#i()
  Void unused14=b.#x()
  Void unused15=b.#less()
  Void unused16=b.#less()
  b
  ))
class method 
Any #1classCastError_$_5(read This1.Concept.Classable that, class This1.Concept.Classable classObj) This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#less()
  Void unused0=b.#less()
  Void unused1=b.#C()
  Void unused2=b.#a()
  Void unused3=b.#s()
  Void unused4=b.#t()
  Void unused5=b.#S()
  Void unused6=b.#t()
  Void unused7=b.#i()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#T()
  Void unused11=b.#o()
  Void unused12=b.#F()
  Void unused13=b.#i()
  Void unused14=b.#x()
  b
  ))
class method 
This1.S #apply(class Any that) This1.Location.Type.RefTo.Binded.#apply(classObj:that).toS().withoutLeft(val:This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  Void unused3=b.#0()
  Void unused4=b.#dot()
  b
  )))
class method 
Any classCastError(read This1.Concept.Classable that, class This1.Concept.Classable classObj) (
  This1.Guard.CastFail.Continue rcv37=(
    This1.Guard.CastFail rcv38=(
      This1.Guard.CastFail.Continue rcv39=(
        This1.Guard.CastFail rcv40=(
          This1.Guard.CastFail.Continue rcv41=(
            This1.Guard.CastFail rcv42=This1.Guard.CastFail.#from(builder:(
              capsule This1.S.SBuilder b=This1.Guard.CastFail.#builder()
              Void unused=b.#N()
              Void unused0=b.#o()
              Void unused1=b.#t()
              Void unused2=b.#space()
              b
              ))
            rcv42.#from(seqBuilder:(
              capsule This1.S.SConcat b0=rcv42.#seqBuilder()
              Void unused3=b0.#add(that:This0.#apply(that:that.class()))
              b0
              ))
            )
          rcv41.#from(builder:(
            capsule This1.S.SBuilder b1=rcv41.#builder()
            Void unused4=b1.#left()
            Void unused5=b1.#equal()
            b1
            ))
          )
        rcv40.#from(seqBuilder:(
          capsule This1.S.SConcat b2=rcv40.#seqBuilder()
          Void unused6=b2.#add(that:This0.#apply(that:classObj))
          b2
          ))
        )
      rcv39.#from(builder:(
        capsule This1.S.SBuilder b3=rcv39.#builder()
        Void unused7=b3.#semicolon()
        Void unused8=b3.#space()
        Void unused9=b3.#p()
        Void unused10=b3.#r()
        Void unused11=b3.#o()
        Void unused12=b3.#v()
        Void unused13=b3.#i()
        Void unused14=b3.#d()
        Void unused15=b3.#e()
        Void unused16=b3.#d()
        Void unused17=b3.#space()
        Void unused18=b3.#o()
        Void unused19=b3.#b()
        Void unused20=b3.#j()
        Void unused21=b3.#e()
        Void unused22=b3.#c()
        Void unused23=b3.#t()
        Void unused24=b3.#space()
        Void unused25=b3.#i()
        Void unused26=b3.#s()
        Void unused27=b3.#space()
        Void unused28=b3.#o()
        Void unused29=b3.#f()
        Void unused30=b3.#space()
        Void unused31=b3.#t()
        Void unused32=b3.#y()
        Void unused33=b3.#p()
        Void unused34=b3.#e()
        Void unused35=b3.#space()
        b3
        ))
      )
    rcv38.#from(seqBuilder:(
      capsule This1.S.SConcat b4=rcv38.#seqBuilder()
      Void unused36=b4.#add(that:This0.#apply(that:that.class()))
      b4
      ))
    )
  rcv37.#from(builder:(
    capsule This1.S.SBuilder b5=rcv37.#builder()
    b5
    ))
  )}
Message: {interface implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
class method 
This1.S kind() 
read method 
This1.S text() 
read method 
This0.Opt responseOf() 
refine read method 
class This0 class() 
refine read method 
This1.S toS() 
refine class method 
read This1.Concept.Classable cast(read This1.Concept.Classable that) 
refine class method 
mut This1.Concept.Classable #cast(mut This1.Concept.Classable that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
refine read method 
This1.Bool #equalequal(read Any that) 
EqualMessages: {
class method 
This2.Bool #apply(read This1 that, read This1 other) (
  Void unused=(/*assuming they have the same class
*/
    This2.Bool res=that.class().kind().#equalequal(that:other.class().kind()).#and(that:that.text().#equalequal(that:other.text())).#and(that:that.responseOf().isPresent().#equalequal(that:other.responseOf().isPresent()))
    Void unused0=(
      This2.Bool cond=res.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(/*i know both are present
*/(
      This2.Bool cond0=that.responseOf().isPresent().#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return This2.Bool.true())
        )
      ))
    Void unused2=return that.responseOf().#get().#equalequal(that:(/* this calls  equals in message,
that check for equal class and then call EqualMessages
*/other.responseOf().#get()))
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
$: {
class method 
This0 #apply() 
class method 
Library #leftrightleft(Library that) This2.UnsafeRefactor.MiniData.#leftrightleft(that:This2.UnsafeRefactor.Compose.compose(left:that, right:This0.messageTrait()))
class method 
Library messageTrait()  {implements This2, This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals/*class method This from(Base base)
*/
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This2.Opt #cause() 
read method 
This2.Opt cause() 
class method 
This0 #apply(This3.S _text, This2.Opt cause) 
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This2.Opt responseOf() this.cause()
method 
This0 #apply(This2 that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    var This3.S res=This0.kind()
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        capsule This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          capsule This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This3.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool equals(read This0 that) This2.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This2.Opt.#apply())
class method 
This0 #apply(This3.S text, This2 cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  capsule This3.S.SBuilder b=This3.S.#builder()
  b
  )))
refine read method 
class This2 class() 
refine class method 
read This3.Concept.Classable cast(read This3.Concept.Classable that) 
refine class method 
mut This3.Concept.Classable #cast(mut This3.Concept.Classable that) 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool #equalequal(read Any that) 
Continue: {
mut method 
This4.S #that() 
read method 
This4.S that() 
class method 
This0 #apply(This4.S that) 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}
Opt: {/*will be Fixed in AdamTowel02
*/
class method 
This0 #1#apply0_$_6(This1 that) This0.#apply()
method 
This2.Bool #1isPresent_$_7() This2.Bool.false()
method 
This1 #1#get_$_8() error  {/*toFix*/}
method 
This0.TOpt that() 
class method 
This0 #new(This0.TOpt that) 
method 
This1 get() exception This2.Guard.Operation (
  Void unused=(
    Void unused0=return this.#get()
    
    catch error This2.Guard.Operation err exception err
    
    void
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1 #get() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    Void unused0=(
      This0.TOpt cell=this.that()
      (
        This0.TOf cell0=(
          Void unused2=return cell
          
          catch return This0.TOf casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This2.Bool.true()
          void
          )
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This1 that) This0.#new(that:This0.TOf.#apply(that:that))
TOpt: {interface 
method 
This2 get() }
TEmpty: {implements This1.TOpt
class method 
This0 #apply() 
refine method 
This2 get() error This3.X.#from(builder:(
  capsule This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#T()
  Void unused0=b.#E()
  Void unused1=b.#m()
  Void unused2=b.#p()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#dot()
  Void unused6=b.#g()
  Void unused7=b.#e()
  Void unused8=b.#t()
  Void unused9=b.#oRound()
  Void unused10=b.#cRound()
  Void unused11=b.#space()
  Void unused12=b.#V()
  Void unused13=b.#a()
  Void unused14=b.#l()
  Void unused15=b.#u()
  Void unused16=b.#e()
  Void unused17=b.#space()
  Void unused18=b.#n()
  Void unused19=b.#o()
  Void unused20=b.#t()
  Void unused21=b.#space()
  Void unused22=b.#p()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#s()
  Void unused26=b.#e()
  Void unused27=b.#n()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#i()
  Void unused31=b.#n()
  Void unused32=b.#space()
  Void unused33=b.#O()
  Void unused34=b.#p()
  Void unused35=b.#t()
  Void unused36=b.#i()
  Void unused37=b.#o()
  Void unused38=b.#n()
  Void unused39=b.#a()
  Void unused40=b.#l()
  b
  ))}
TOf: {implements This1.TOpt
method 
This2 that() 
class method 
This0 #apply(This2 that) 
refine method 
This2 get() this.that()}}}
Bool: {implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
class method 
mut This0 #apply(Library _binaryRepr) 
read method 
This0 clone() This0.#apply(_binaryRepr:this._binaryRepr())
read method 
Library #binaryRepr() this._binaryRepr()
class method 
mut This0 #from(Library binaryRepr) This0.#apply(_binaryRepr:binaryRepr)
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This0 is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This0.true()
        void
        )
      )
    Void unused1=return This0.false()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine read method 
This1.S toS() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This1.S.#from(builder:(
        capsule This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      )
    Void unused1=return This1.S.#from(builder:(
      capsule This1.S.SBuilder b0=This1.S.#builder()
      Void unused7=b0.#f()
      Void unused8=b0.#a()
      Void unused9=b0.#l()
      Void unused10=b0.#s()
      Void unused11=b0.#e()
      b0
      ))
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This0 #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This0.false()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #checkTrue() exception Void use This1.Alu check ifFalseBoolDo(that:this._binaryRepr()) exception void
class method 
This0 true() This0.#from(binaryRepr:use This1.Alu check constTrue() error void)
class method 
This0 false() This0.#from(binaryRepr:use This1.Alu check constFalse() error void)
method 
This0 #and(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that)
      )
    Void unused1=return this
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #or(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return this)
      )
    Void unused1=return that
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #bang() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This0.false())
      )
    Void unused1=return This0.true()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This0 equals(read This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that.clone())
      )
    Void unused1=return that.clone().#bang()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 fromS(read This1.Concept.ToS that) (
  Void unused=(
    Void unused0=(
      This0 cond=that.toS().#equalequal(that:This1.S.#from(builder:(
        capsule This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.true())
        )
      )
    Void unused1=(
      This0 cond0=that.toS().#equalequal(that:This1.S.#from(builder:(
        capsule This1.S.SBuilder b0=This1.S.#builder()
        Void unused8=b0.#f()
        Void unused9=b0.#a()
        Void unused10=b0.#l()
        Void unused11=b0.#s()
        Void unused12=b0.#e()
        b0
        )))
      (
        Void unused13=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This0.false())
        )
      )
    Void unused2=error This0.parseError(that:that.toS())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Any #1parseError_$_9(This1.S that) This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#B()
  Void unused0=b.#o()
  Void unused1=b.#o()
  Void unused2=b.#l()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))
class method 
Any parseError(This1.S that) (
  This0.ParseFail.Continue rcv43=(
    This0.ParseFail rcv44=This0.ParseFail.#from(builder:(
      capsule This1.S.SBuilder b=This0.ParseFail.#builder()
      Void unused=b.#T()
      Void unused0=b.#h()
      Void unused1=b.#e()
      Void unused2=b.#space()
      Void unused3=b.#p()
      Void unused4=b.#r()
      Void unused5=b.#o()
      Void unused6=b.#v()
      Void unused7=b.#i()
      Void unused8=b.#d()
      Void unused9=b.#e()
      Void unused10=b.#d()
      Void unused11=b.#space()
      Void unused12=b.#s()
      Void unused13=b.#t()
      Void unused14=b.#r()
      Void unused15=b.#i()
      Void unused16=b.#n()
      Void unused17=b.#g()
      Void unused18=b.#space()
      Void unused19=b.#i()
      Void unused20=b.#s()
      Void unused21=b.#space()
      Void unused22=b.#n()
      Void unused23=b.#o()
      Void unused24=b.#t()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#space()
      Void unused28=b.#v()
      Void unused29=b.#a()
      Void unused30=b.#l()
      Void unused31=b.#i()
      Void unused32=b.#d()
      Void unused33=b.#space()
      Void unused34=b.#b()
      Void unused35=b.#o()
      Void unused36=b.#o()
      Void unused37=b.#l()
      Void unused38=b.#colon()
      Void unused39=b.#space()
      b
      ))
    rcv44.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv44.#seqBuilder()
      Void unused40=b0.#add(that:that)
      b0
      ))
    )
  rcv43.#from(builder:(
    capsule This1.S.SBuilder b1=rcv43.#builder()
    b1
    ))
  )
ParseFail: {implements This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This1 cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This1 cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1 equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This1 is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.true()
        void
        )
      )
    Void unused1=return This1.false()
    void
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1 #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.false()
    void
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Size: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable/*@_private
*/
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) (
  This1.S s=that.toS()
  This0._private(_binaryRepr:use This1.Alu check stringToInt32(that:s.#binaryRepr()) error This0.parseError(that:s))
  )
class method 
mut This0 #from(Library binaryRepr) This0._private(_binaryRepr:binaryRepr)
read method 
Library #binaryRepr() this._binaryRepr()
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This0 #from(This1.S.SBuilder builder) This0._private(_binaryRepr:use This1.Alu check stringToInt32(that:builder.#binaryRepr()) error This0.parseError(that:This1.S.#from(builder:builder)))
refine read method 
This1.S toS() This1.S.#from(binaryRepr:use This1.Alu check int32ToString(that:this.#binaryRepr()) error void)
method 
This0 #plus(This0 that) This0._private(_binaryRepr:use This1.Alu check sumInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This0 #less(This0 that) This0._private(_binaryRepr:use This1.Alu check subInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This0 #times(This0 that) This0._private(_binaryRepr:use This1.Alu check mulInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This0 #divide(This0 that) This0._private(_binaryRepr:use This1.Alu check divInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
read method 
This1.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32EqualDo(n1:this.#binaryRepr(), n2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GrtDo(n1:that.#binaryRepr(), n2:this.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #rightequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GEqDo(n1:that.#binaryRepr(), n2:this.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
mut This0.Iterator vals() This0.Iterator.#apply(start:this, end:This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
method 
mut This0.Iterator vals(This0 upTo) This0.Iterator.#apply(start:this, end:upTo)
class method 
This0 #0() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#0()
  b
  ))
class method 
This0 #1() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  b
  ))
class method 
This0 #2() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  b
  ))
class method 
This0 #3() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  b
  ))
class method 
This0 #4() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  b
  ))
class method 
This0 #5() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  b
  ))
class method 
This0 #6() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  b
  ))
class method 
This0 #7() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#7()
  b
  ))
class method 
This0 #8() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#8()
  b
  ))
class method 
This0 #9() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#9()
  b
  ))
class method 
This0 #10() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #11() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #12() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #13() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #14() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #15() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #16() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #17() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #18() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #19() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #20() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #21() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #22() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #23() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #24() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #25() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #26() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #27() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #28() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #29() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #30() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #31() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #32() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #33() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #34() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #35() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #36() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #37() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #38() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #39() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #40() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #41() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #42() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #43() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #44() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #45() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #46() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #47() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #48() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #49() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #50() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #51() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #52() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #53() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #54() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #55() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #56() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #57() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #58() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #59() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #60() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #61() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #62() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #63() This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#3()
  b
  ))
class method 
Any #1parseError0_$_10(This1.S that) This1.S.#from(builder:(
  capsule This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#i()
  Void unused1=b.#z()
  Void unused2=b.#e()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))
class method 
Any parseError(This1.S that) (
  This0.ParseFail.Continue rcv45=(
    This0.ParseFail rcv46=This0.ParseFail.#from(builder:(
      capsule This1.S.SBuilder b=This0.ParseFail.#builder()
      Void unused=b.#T()
      Void unused0=b.#h()
      Void unused1=b.#e()
      Void unused2=b.#space()
      Void unused3=b.#p()
      Void unused4=b.#r()
      Void unused5=b.#o()
      Void unused6=b.#v()
      Void unused7=b.#i()
      Void unused8=b.#d()
      Void unused9=b.#e()
      Void unused10=b.#d()
      Void unused11=b.#space()
      Void unused12=b.#s()
      Void unused13=b.#t()
      Void unused14=b.#r()
      Void unused15=b.#i()
      Void unused16=b.#n()
      Void unused17=b.#g()
      Void unused18=b.#space()
      Void unused19=b.#i()
      Void unused20=b.#s()
      Void unused21=b.#space()
      Void unused22=b.#n()
      Void unused23=b.#o()
      Void unused24=b.#t()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#space()
      Void unused28=b.#v()
      Void unused29=b.#a()
      Void unused30=b.#l()
      Void unused31=b.#i()
      Void unused32=b.#d()
      Void unused33=b.#space()
      Void unused34=b.#I()
      Void unused35=b.#n()
      Void unused36=b.#t()
      Void unused37=b.#3()
      Void unused38=b.#2()
      Void unused39=b.#colon()
      Void unused40=b.#space()
      b
      ))
    rcv46.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv46.#seqBuilder()
      Void unused41=b0.#add(that:that)
      b0
      ))
    )
  rcv45.#from(builder:(
    capsule This1.S.SBuilder b1=rcv45.#builder()
    b1
    ))
  )
Iterator: {
mut method 
Void start(This1 that) 
mut method 
This1 #start() 
read method 
This1 start() 
mut method 
This1 #end() 
read method 
This1 end() 
class method 
mut This0 #apply(This1 start, This1 end) 
mut method 
Void #next() exception Void ((
  This2.Bool cond=(
    This1 opNorm=this.end()
    This1.#from(builder:(
      capsule This2.S.SBuilder b=This1.#builder()
      Void unused=b.#0()
      b
      )).#right(that:opNorm)
    ).#or(that:(
    This1 opNorm0=this.start()
    this.end().#right(that:opNorm0)
    ))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched3 exception void
    
    (this.start(that:this.start().#plus(that:This1.#from(builder:(
      capsule This2.S.SBuilder b0=This1.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This1 #inner() this.start().#less(that:This1.#from(builder:(
  capsule This2.S.SBuilder b=This1.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}
ParseFail: {implements This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
S: {implements This1.Concept.Base/*, Concept.Equals //needed until we do (also refine) normalization
*/, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/, This1.Concept.ToS
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
read method 
This0 clone() (/*#####Implemented
*/This0._private(_binaryRepr:this._binaryRepr()))
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This0 readableName() This1.GetMyName.#apply(that:This0)
class method 
mut This0 #from(Library binaryRepr) This0._private(_binaryRepr:binaryRepr)
read method 
Library #binaryRepr() this._binaryRepr()
refine read method 
This1.Bool #equalequal(read Any that) (/*#####operators
*/(
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #plusplus(This0 that) This0.#from(binaryRepr:use This1.Alu check stringConcat(s1:this.#binaryRepr(), s2:that.#binaryRepr()) error void)
read method 
This1.Bool equals(read This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.#binaryRepr(), s2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This0 that) this.withoutAll(val:that)
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:this.size().#right(that:that.size()))
method 
This1.Bool #rightrightequal(This0 that) this.contains(that:that)
method 
This1.Bool #right(This0 that) (/*#####other sequence like methods
*/this.contains(that:that))
method 
This1.Size indexOfLeft(This0 val) this.indexOfLeft(val:val, start:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This1.Size indexOfLeft(This0 val, This1.Size start) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    var This1.Size current=start
    Void unused0=(
      Void unused2=loop (
        Void unused3=(
          This1.Size opNorm=current
          this.size().#right(that:opNorm)
          ).#checkTrue()
        (
          Void unused4=(
            This1.Bool cond=this.subStrEq(that:val, start:current)
            (
              Void unused5=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return current)
              )
            )
          current := current.#plus(that:This1.Size.#from(builder:(
            capsule This0.SBuilder b=This1.Size.#builder()
            Void unused6=b.#1()
            b
            )))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.Size.#from(builder:(
      capsule This0.SBuilder b0=This1.Size.#builder()
      Void unused7=b0.#less()
      Void unused8=b0.#1()
      b0
      ))
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Size indexOfRight(This0 val) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    var This1.Size current=this.size().#less(that:val.size())
    Void unused0=(
      Void unused2=loop (
        Void unused3=current.#rightequal(that:This1.Size.#from(builder:(
          capsule This0.SBuilder b=This1.Size.#builder()
          Void unused4=b.#0()
          b
          ))).#checkTrue()
        (
          Void unused5=(
            This1.Bool cond=this.#apply(start:current).beginsWith(that:val)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return current)
              )
            )
          current := current.#less(that:This1.Size.#from(builder:(
            capsule This0.SBuilder b0=This1.Size.#builder()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.Size.#from(builder:(
      capsule This0.SBuilder b1=This1.Size.#builder()
      Void unused8=b1.#less()
      Void unused9=b1.#1()
      b1
      ))
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This0 val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          capsule This0.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0 val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          capsule This0.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0 val) this.replace(that:val, into:This0.#from(builder:(
  capsule This0.SBuilder b=This0.#builder()
  b
  )))
method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 val(This1.Size that) this.#apply(that:that)
method 
This1.Size #default#val(Void that) this.size()
method 
This0 left() this.val(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 right() (/*#################Withs
*/this.val(that:this.size().#less(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 with(This1.Size that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that.#plus(that:val.size()))))
method 
This1.Size #default#with(Void that) this.size()
method 
This0 withLeft(This0 that) (/*TODO: should be with(left)??
*/this.with(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that))
method 
This0 withRight(This0 that) (/*insertion
*/this.with(that:this.size().#less(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.Size that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that)))
method 
This1.Size #default#withAlso(Void that) this.size()
method 
This0 withAlsoLeft(This0 that) this.withAlso(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0 that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 without(This1.Size index) this.#apply(end:index).#plusplus(that:this.#apply(start:index.#plus(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This1.Size #default#without(Void index) this.size()
method 
This0 without(This1.Size index, This1.Size skipNum) this.#apply(end:index).#plusplus(that:this.#apply(start:skipNum.#plus(that:index)))
method 
This0 withoutLeft() this.without(index:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.Bool contains(This0 that) (
  Void unused=(
    This1.Size res=this.indexOfLeft(val:that)
    Void unused0=(
      This1.Bool cond=res.#rightequal(that:This1.Size.#from(builder:(
        capsule This0.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Bool.true())
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This1.Size start, This1.Size end) This0.#from(binaryRepr:use This1.Alu check stringSubstring(that:this.#binaryRepr(), start:start.#binaryRepr(), end:end.#binaryRepr()) error void)
method 
This0 #apply(This1.Size that) this.#apply(start:that, end:that.#plus(that:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This0 #apply(This1.Size start) this.#apply(start:start, end:this.size())
method 
This0 #apply(This1.Size end) this.#apply(start:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), end:end)
method 
This1.Size #default##apply(Void that) this.size()
method 
This1.Size #default##apply(Void end) this.size()
method 
This1.Size #default##apply(Void start) this.size()
method 
This1.Size size() (/*##### string special
*/This1.Size.#from(binaryRepr:use This1.Alu check stringSize(that:this.#binaryRepr()) error void))
method 
This1.Bool subStrEq(This0 that, This1.Size start) this.#apply(start:start, end:that.size().#plus(that:start)).#equalequal(that:(/*optimizing this one may help many methods
*/that))
method 
This1.Bool beginsWith(This0 that) this.subStrEq(that:that, start:This1.Size.#from(builder:(
  capsule This0.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This0 aSCIILowerCase() This0.#from(builder:(
  capsule This0.SBuilder b=This0.#builder()
  Void unused=b.#q()
  Void unused0=b.#w()
  Void unused1=b.#e()
  Void unused2=b.#r()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#u()
  Void unused6=b.#i()
  Void unused7=b.#o()
  Void unused8=b.#p()
  Void unused9=b.#a()
  Void unused10=b.#s()
  Void unused11=b.#d()
  Void unused12=b.#f()
  Void unused13=b.#g()
  Void unused14=b.#h()
  Void unused15=b.#j()
  Void unused16=b.#k()
  Void unused17=b.#l()
  Void unused18=b.#z()
  Void unused19=b.#x()
  Void unused20=b.#c()
  Void unused21=b.#v()
  Void unused22=b.#b()
  Void unused23=b.#n()
  Void unused24=b.#m()
  b
  ))
class method 
This0 aSCIIUpperCase() This0.#from(builder:(
  capsule This0.SBuilder b=This0.#builder()
  Void unused=b.#Q()
  Void unused0=b.#W()
  Void unused1=b.#E()
  Void unused2=b.#R()
  Void unused3=b.#T()
  Void unused4=b.#Y()
  Void unused5=b.#U()
  Void unused6=b.#I()
  Void unused7=b.#O()
  Void unused8=b.#P()
  Void unused9=b.#A()
  Void unused10=b.#S()
  Void unused11=b.#D()
  Void unused12=b.#F()
  Void unused13=b.#G()
  Void unused14=b.#H()
  Void unused15=b.#J()
  Void unused16=b.#K()
  Void unused17=b.#L()
  Void unused18=b.#Z()
  Void unused19=b.#X()
  Void unused20=b.#C()
  Void unused21=b.#V()
  Void unused22=b.#B()
  Void unused23=b.#N()
  Void unused24=b.#M()
  b
  ))
method 
This1.Bool isASCIILowerCase(This1.Size that) This0.aSCIILowerCase().contains(that:this.#apply(that:that))
method 
This1.Bool isASCIIUpperCase(This1.Size that) (This0.aSCIIUpperCase().contains(that:this.#apply(that:that)))
class method 
This0 doubleQuote() (
  This0 rcv=This0.#from(builder:(
    capsule This0.SBuilder b=This0.#builder()
    Void unused=b.#dQuote()
    Void unused0=b.#newline()
    b
    ))
  rcv.#apply(that:This1.Size.#from(builder:(
    capsule This0.SBuilder b0=This1.Size.#builder()
    Void unused1=b0.#0()
    b0
    )))
  )
class method 
This0 nl() This0.#from(builder:(
  capsule This0.SBuilder b=This0.#builder()
  Void unused=b.#newline()
  b
  ))
method 
This0 replace(This0 that, This0 into) This0.#from(binaryRepr:use This1.Alu check stringReplace(that:this.#binaryRepr(), src:that.#binaryRepr(), dest:into.#binaryRepr()) error void)
method 
This0 as42MultilineString() This0.doubleQuote().#plusplus(that:This0.nl().#plusplus(that:This0.#from(builder:(
  capsule This0.SBuilder b=This0.#builder()
  Void unused=b.#sQuote()
  b
  )).#plusplus(that:this.replace(that:This0.nl(), into:This0.nl().#plusplus(that:This0.#from(builder:(
  capsule This0.SBuilder b0=This0.#builder()
  Void unused0=b0.#sQuote()
  b0
  )))).#plusplus(that:This0.nl().#plusplus(that:This0.doubleQuote())))))
method 
This0.Continue #from(This0.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This0.SConcat #seqBuilder() This0.SConcat.#apply(old:this, accumulator:This0.#from(builder:(
  capsule This0.SBuilder b=This0.#builder()
  b
  )))
class method 
This0 #from(This0.SBuilder builder) This0._private(_binaryRepr:builder.#binaryRepr())
class method 
mut This0.SBuilder #builder() This0.SBuilder.empty()
method 
This1.Strings splitOn(This0 chars) This1.StringSplit.splitOn(that:this.toS(), chars:chars)
refine read method 
This0 toS() this.clone()
Continue: {
mut method 
This1 #that() 
read method 
This1 that() 
class method 
This0 #apply(This1 that) 
method 
mut This1.SBuilder #builder() This1.SBuilder.empty()
method 
This1 #from(This1.SBuilder builder) this.that().#plusplus(that:This1.#from(builder:builder))}
SConcat: {
mut method 
This1 #old() 
read method 
This1 old() 
mut method 
Void accumulator(This1 that) 
mut method 
This1 #accumulator() 
read method 
This1 accumulator() 
class method 
mut This0 #apply(This1 old, This1 accumulator) 
mut method 
Void #add(read This2.Concept.ToS that) this.accumulator(that:this.accumulator().#plusplus(that:that.toS()))
mut method 
Void #add(read This2.Concept.ToS that, This2.Concept.ToS sep) (
  var This1 newAcc=that.toS()
  Void unused=(
    This2.Bool cond=this.accumulator().#equalequal(that:This1.#from(builder:(
      capsule This1.SBuilder b=This1.#builder()
      b
      ))).#bang()
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (newAcc := this.accumulator().#plusplus(that:sep.toS().#plusplus(that:newAcc)))
      )
    )
  this.accumulator(that:newAcc)
  )}
SBuilder: {
mut method 
Void _binaryRepr(Library that) 
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library #binaryRepr() this._binaryRepr()
mut method 
Void acc(Library that) this._binaryRepr(that:use This2.Alu check stringConcat(s1:this.#binaryRepr(), s2:that) error void)
class method 
mut This0 empty() (/*NUMBERS:
*/This0._private(_binaryRepr:use This2.Alu check constStringEmpty() error void))
mut method 
Void #0() this.acc(that: {/*@stringU
0
*/})
mut method 
Void #1() this.acc(that: {/*@stringU
1
*/})
mut method 
Void #2() this.acc(that: {/*@stringU
2
*/})
mut method 
Void #3() this.acc(that: {/*@stringU
3
*/})
mut method 
Void #4() this.acc(that: {/*@stringU
4
*/})
mut method 
Void #5() this.acc(that: {/*@stringU
5
*/})
mut method 
Void #6() this.acc(that: {/*@stringU
6
*/})
mut method 
Void #7() this.acc(that: {/*@stringU
7
*/})
mut method 
Void #8() this.acc(that: {/*@stringU
8
*/})
mut method 
Void #9() (/*LOWERCASE:
*/this.acc(that: {/*@stringU
9
*/}))
mut method 
Void #q() this.acc(that: {/*@stringU
q
*/})
mut method 
Void #w() this.acc(that: {/*@stringU
w
*/})
mut method 
Void #e() this.acc(that: {/*@stringU
e
*/})
mut method 
Void #r() this.acc(that: {/*@stringU
r
*/})
mut method 
Void #t() this.acc(that: {/*@stringU
t
*/})
mut method 
Void #y() this.acc(that: {/*@stringU
y
*/})
mut method 
Void #u() this.acc(that: {/*@stringU
u
*/})
mut method 
Void #i() this.acc(that: {/*@stringU
i
*/})
mut method 
Void #o() this.acc(that: {/*@stringU
o
*/})
mut method 
Void #p() this.acc(that: {/*@stringU
p
*/})
mut method 
Void #a() this.acc(that: {/*@stringU
a
*/})
mut method 
Void #s() this.acc(that: {/*@stringU
s
*/})
mut method 
Void #d() this.acc(that: {/*@stringU
d
*/})
mut method 
Void #f() this.acc(that: {/*@stringU
f
*/})
mut method 
Void #g() this.acc(that: {/*@stringU
g
*/})
mut method 
Void #h() this.acc(that: {/*@stringU
h
*/})
mut method 
Void #j() this.acc(that: {/*@stringU
j
*/})
mut method 
Void #k() this.acc(that: {/*@stringU
k
*/})
mut method 
Void #l() this.acc(that: {/*@stringU
l
*/})
mut method 
Void #z() this.acc(that: {/*@stringU
z
*/})
mut method 
Void #x() this.acc(that: {/*@stringU
x
*/})
mut method 
Void #c() this.acc(that: {/*@stringU
c
*/})
mut method 
Void #v() this.acc(that: {/*@stringU
v
*/})
mut method 
Void #b() this.acc(that: {/*@stringU
b
*/})
mut method 
Void #n() this.acc(that: {/*@stringU
n
*/})
mut method 
Void #m() (/*UPPERCASE:
*/this.acc(that: {/*@stringU
m
*/}))
mut method 
Void #Q() this.acc(that: {/*@stringU
Q
*/})
mut method 
Void #W() this.acc(that: {/*@stringU
W
*/})
mut method 
Void #E() this.acc(that: {/*@stringU
E
*/})
mut method 
Void #R() this.acc(that: {/*@stringU
R
*/})
mut method 
Void #T() this.acc(that: {/*@stringU
T
*/})
mut method 
Void #Y() this.acc(that: {/*@stringU
Y
*/})
mut method 
Void #U() this.acc(that: {/*@stringU
U
*/})
mut method 
Void #I() this.acc(that: {/*@stringU
I
*/})
mut method 
Void #O() this.acc(that: {/*@stringU
O
*/})
mut method 
Void #P() this.acc(that: {/*@stringU
P
*/})
mut method 
Void #A() this.acc(that: {/*@stringU
A
*/})
mut method 
Void #S() this.acc(that: {/*@stringU
S
*/})
mut method 
Void #D() this.acc(that: {/*@stringU
D
*/})
mut method 
Void #F() this.acc(that: {/*@stringU
F
*/})
mut method 
Void #G() this.acc(that: {/*@stringU
G
*/})
mut method 
Void #H() this.acc(that: {/*@stringU
H
*/})
mut method 
Void #J() this.acc(that: {/*@stringU
J
*/})
mut method 
Void #K() this.acc(that: {/*@stringU
K
*/})
mut method 
Void #L() this.acc(that: {/*@stringU
L
*/})
mut method 
Void #Z() this.acc(that: {/*@stringU
Z
*/})
mut method 
Void #X() this.acc(that: {/*@stringU
X
*/})
mut method 
Void #C() this.acc(that: {/*@stringU
C
*/})
mut method 
Void #V() this.acc(that: {/*@stringU
V
*/})
mut method 
Void #B() this.acc(that: {/*@stringU
B
*/})
mut method 
Void #N() this.acc(that: {/*@stringU
N
*/})
mut method 
Void #M() this.acc(that: {/*@stringU
M
*/})
mut method 
Void #%() this.acc(that: {/*@stringU
%
*/})
mut method 
Void #$() (/*OPERATORS:
*/this.acc(that: {/*@stringU
$
*/}))
mut method 
Void #left() this.acc(that: {/*@stringU
<
*/})
mut method 
Void #right() this.acc(that: {/*@stringU
>
*/})
mut method 
Void #bang() this.acc(that: {/*@stringU
!
*/})
mut method 
Void #tilde() this.acc(that: {/*@stringU
~
*/})
mut method 
Void #plus() this.acc(that: {/*@stringU
+
*/})
mut method 
Void #times() this.acc(that: {/*@stringU
*
*/})
mut method 
Void #divide() this.acc(that: {/*@stringU
/
*/})
mut method 
Void #less() this.acc(that: {/*@stringU
-
*/})
mut method 
Void #and() this.acc(that: {/*@stringU
&
*/})
mut method 
Void #or() (/*SYMBOLS- Parenthesis:
*/this.acc(that: {/*@stringU
|
*/}))
mut method 
Void #oRound() this.acc(that: {/*@stringU
(
*/})
mut method 
Void #cRound() this.acc(that: {/*@stringU
)
*/})
mut method 
Void #oSquare() this.acc(that: {/*@stringU
[
*/})
mut method 
Void #cSquare() this.acc(that: {/*@stringU
]
*/})
mut method 
Void #oCurly() this.acc(that: {/*@stringU
{
*/})
mut method 
Void #cCurly() this.acc(that: {/*@stringU
}
*/})
mut method 
Void #dQuote() this.acc(that: {/*@stringU
"
*/})
mut method 
Void #sQuote() this.acc(that: {/*@stringU
'
*/})
mut method 
Void #hQuote() (/*SYMBOLS- Unused operators:
*/this.acc(that: {/*@stringU
`
*/}))
mut method 
Void #equal() this.acc(that: {/*@stringU
=
*/})
mut method 
Void #qMark() this.acc(that: {/*@stringU
?
*/})
mut method 
Void #hat() this.acc(that: {/*@stringU
^
*/})
mut method 
Void #comma() this.acc(that: {/*@stringU
,
*/})
mut method 
Void #semicolon() this.acc(that: {/*@stringU
;
*/})
mut method 
Void #colon() this.acc(that: {/*@stringU
:
*/})
mut method 
Void #dot() this.acc(that: {/*@stringU
.
*/})
mut method 
Void #underscore() this.acc(that: {/*@stringU
_
*/})
mut method 
Void #hash() this.acc(that: {/*@stringU
#
*/})
mut method 
Void #at() this.acc(that: {/*@stringU
\u0040
*/})
mut method 
Void #backslash() this.acc(that: {/*@stringU
\u005C
*/})
mut method 
Void #space() this.acc(that: {/*@stringU
 
*/})
mut method 
Void #newline() this.acc(that: {/*@stringU


*/})}}
Selector: {/*@plugin  toFix 
@pluginPart ast.Ast$MethodSelector
*/implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This1.Bool equals(read This0 that) This1.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: equals(that)\u000ajava method: ast.Ast$MethodSelector.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
class method 
This0 parse(This1.S that) This0.#from(binaryRepr:(
  Library res=use This0 check parse(_1_java%lang%String:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: parse(that)\u000ajava method: ast.Ast$MethodSelector.parse(_1_java%lang%String)\u000a
*/})
  res
  ))
class method 
This0 from(This1.Concept.ToS string) (
  Void unused=(
    Void unused0=return This0.parse(that:string.toS())
    
    catch error Any catched error (
      This0.ParseFail.Continue rcv56=(
        This0.ParseFail rcv57=This0.ParseFail.#from(builder:(
          capsule This1.S.SBuilder b=This0.ParseFail.#builder()
          Void unused1=b.#T()
          Void unused2=b.#h()
          Void unused3=b.#e()
          Void unused4=b.#space()
          Void unused5=b.#p()
          Void unused6=b.#r()
          Void unused7=b.#o()
          Void unused8=b.#v()
          Void unused9=b.#i()
          Void unused10=b.#d()
          Void unused11=b.#e()
          Void unused12=b.#d()
          Void unused13=b.#space()
          Void unused14=b.#s()
          Void unused15=b.#t()
          Void unused16=b.#r()
          Void unused17=b.#i()
          Void unused18=b.#n()
          Void unused19=b.#g()
          Void unused20=b.#space()
          Void unused21=b.#i()
          Void unused22=b.#s()
          Void unused23=b.#space()
          Void unused24=b.#n()
          Void unused25=b.#o()
          Void unused26=b.#t()
          Void unused27=b.#space()
          Void unused28=b.#a()
          Void unused29=b.#space()
          Void unused30=b.#v()
          Void unused31=b.#a()
          Void unused32=b.#l()
          Void unused33=b.#i()
          Void unused34=b.#d()
          Void unused35=b.#space()
          Void unused36=b.#s()
          Void unused37=b.#e()
          Void unused38=b.#l()
          Void unused39=b.#e()
          Void unused40=b.#c()
          Void unused41=b.#t()
          Void unused42=b.#o()
          Void unused43=b.#r()
          Void unused44=b.#colon()
          Void unused45=b.#space()
          b
          ))
        rcv57.#from(seqBuilder:(
          capsule This1.S.SConcat b0=rcv57.#seqBuilder()
          Void unused46=b0.#add(that:string)
          b0
          ))
        )
      rcv56.#from(builder:(
        capsule This1.S.SBuilder b1=rcv56.#builder()
        b1
        ))
      )
    
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #from(This1.S.SBuilder builder) This0.from(string:This1.S.#from(binaryRepr:builder.#binaryRepr()))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This0 from(This1.S name, This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.from(string:name.#plusplus(that:This1.S.#from(builder:(
          capsule This1.S.SBuilder b0=This1.S.#builder()
          Void unused3=b0.#oRound()
          Void unused4=b0.#cRound()
          b0
          ))))
        )
      )
    This1.S pars=(
      This1.S.Continue rcv58=(
        This1.S rcv59=This1.S.#from(builder:(
          capsule This1.S.SBuilder b1=This1.S.#builder()
          Void unused5=b1.#oRound()
          b1
          ))
        rcv59.#from(seqBuilder:(
          capsule This1.S.SConcat b=rcv59.#seqBuilder()
          Void unused6=(
            lent This1.Strings.IteratorVal n=names.vals()
            (
              Void unused7=loop (
                Void unused8=n.#next()
                
                catch exception Void catched5 (
                  Void unused9=(
                    Void unused10=n.#checkEnd()
                    
                    catch exception Void catched6 void
                    
                    void
                    )
                  exception void
                  )
                
                (
                  Void unused11=b.#add(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
                    capsule This1.S.SBuilder b2=This1.S.#builder()
                    Void unused12=b2.#comma()
                    b2
                    ))))
                  void
                  )
                )
              
              catch exception Void catched10 void
              
              void
              )
            )
          b
          ))
        )
      rcv58.#from(builder:(
        capsule This1.S.SBuilder b3=rcv58.#builder()
        b3
        ))
      )
    Void unused1=return This0.from(string:(
      This1.S.Continue rcv60=name.#from(seqBuilder:(
        capsule This1.S.SConcat b4=name.#seqBuilder()
        Void unused13=b4.#add(that:pars.#apply(end:pars.#default##apply(end:void).#less(that:This1.Size.#from(builder:(
          capsule This1.S.SBuilder b5=This1.Size.#builder()
          Void unused14=b5.#1()
          b5
          )))))
        b4
        ))
      rcv60.#from(builder:(
        capsule This1.S.SBuilder b6=rcv60.#builder()
        Void unused15=b6.#cRound()
        b6
        ))
      ))
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S nameAsField() (
  Void unused=(
    This1.S n=this.name()
    Void unused0=(
      This1.Bool cond=n.#apply(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#equalequal(that:This1.S.#from(builder:(
        capsule This1.S.SBuilder b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        return n.#apply(start:This1.Size.#from(builder:(
          capsule This1.S.SBuilder b1=This1.Size.#builder()
          Void unused5=b1.#1()
          b1
          )))
        )
      )
    Void unused1=return n
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S prefixAsField() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=(
        This1.S rcv61=this.toS()
        rcv61.#apply(that:This1.Size.#from(builder:(
          capsule This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )))
        ).#equalequal(that:This1.S.#from(builder:(
        capsule This1.S.SBuilder b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched3 void
        
        return This1.S.#from(builder:(
          capsule This1.S.SBuilder b1=This1.S.#builder()
          Void unused5=b1.#hash()
          b1
          ))
        )
      )
    Void unused1=return This1.S.#from(builder:(
      capsule This1.S.SBuilder b2=This1.S.#builder()
      b2
      ))
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool isOperator() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.name().size().#equalequal(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Bool.true()
        )
      )
    Void unused1=return (
      This1.S rcv62=this.name()
      rcv62.#apply(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b0=This1.Size.#builder()
        Void unused4=b0.#0()
        b0
        )))
      ).#equalequal(that:This1.S.#from(builder:(
      capsule This1.S.SBuilder b1=This1.S.#builder()
      Void unused5=b1.#hash()
      b1
      )))
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool isUnique() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.name().size().#equalequal(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return This1.Bool.false()
        )
      )
    Void unused1=return (
      This1.S opNorm=This1.S.#from(builder:(
        capsule This1.S.SBuilder b0=This1.S.#builder()
        Void unused4=b0.#underscore()
        Void unused5=b0.#$()
        Void unused6=b0.#underscore()
        b0
        ))
      this.name().#right(that:opNorm)
      )
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S nameToS() This1.S.#from(binaryRepr:(
  Library res=use This0 check nameToS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: nameToS()\u000ajava method: ast.Ast$MethodSelector.nameToS(_this)\u000a
*/})
  res
  ))
method 
This1.S name() this.nameToS()
method 
This1.Size nameSize() This1.Size.#from(binaryRepr:(
  Library res=use This0 check nameSize(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: nameSize()\u000ajava method: ast.Ast$MethodSelector.nameSize(_this)\u000a
*/})
  res
  ))
method 
This1.S name(This1.Size that) This1.S.#from(binaryRepr:(
  Library res=use This0 check name(_this:this.#binaryRepr(), _1_int:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: name(that)\u000ajava method: ast.Ast$MethodSelector.name(_this,_1_int)\u000a
*/})
  res
  ))
method 
This1.Strings names() This1.Strings.#from(seqBuilder:(
  capsule This1.Strings b=This1.Strings.#seqBuilder()
  Void unused=(
    capsule This1.Size.Iterator i=This1.Size.#from(builder:(
      capsule This1.S.SBuilder b0=This1.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.nameSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.name(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
class method 
This0 fresh(This0 like) This0.#from(binaryRepr:(
  Library res=use This0 check fresh(_1_ast%Ast$MethodSelector:like.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: fresh(like)\u000ajava method: ast.Ast$MethodSelector.fresh(_1_ast%Ast$MethodSelector)\u000a
*/})
  res
  ))
class method /*will be private
*/This1.S leftAsASCIIUpperCase(This1.S that) (
  Void unused=(
    This1.Size index=This1.S.aSCIILowerCase().indexOfLeft(val:that.left())
    Void unused0=(
      This1.Bool cond=index.#rightequal(that:This1.Size.#from(builder:(
        capsule This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        return that.withLeft(that:(
          This1.S rcv63=This1.S.aSCIIUpperCase()
          rcv63.#apply(that:index)
          ))
        )
      )
    Void unused1=return that
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This1.S prefix) (
  Void unused=(
    This1.S newName=prefix.#plusplus(that:This0.leftAsASCIIUpperCase(that:this.name()))
    Void unused0=return This0.from(name:newName, names:this.names())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.S toS() This1.S.#from(binaryRepr:(
  Library res=use This0 check toS(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: ast.Ast$MethodSelector\u000amethod name: toS()\u000ajava method: ast.Ast$MethodSelector.toS(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Any parseError(This1.S that) (
  This0.ParseFail.Continue rcv47=(
    This0.ParseFail rcv48=This0.ParseFail.#from(builder:(
      capsule This1.S.SBuilder b=This0.ParseFail.#builder()
      Void unused=b.#T()
      Void unused0=b.#h()
      Void unused1=b.#e()
      Void unused2=b.#space()
      Void unused3=b.#p()
      Void unused4=b.#r()
      Void unused5=b.#o()
      Void unused6=b.#v()
      Void unused7=b.#i()
      Void unused8=b.#d()
      Void unused9=b.#e()
      Void unused10=b.#d()
      Void unused11=b.#space()
      Void unused12=b.#s()
      Void unused13=b.#t()
      Void unused14=b.#r()
      Void unused15=b.#i()
      Void unused16=b.#n()
      Void unused17=b.#g()
      Void unused18=b.#space()
      Void unused19=b.#i()
      Void unused20=b.#s()
      Void unused21=b.#space()
      Void unused22=b.#n()
      Void unused23=b.#o()
      Void unused24=b.#t()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#space()
      Void unused28=b.#v()
      Void unused29=b.#a()
      Void unused30=b.#l()
      Void unused31=b.#i()
      Void unused32=b.#d()
      Void unused33=b.#space()
      Void unused34=b.#s()
      Void unused35=b.#e()
      Void unused36=b.#l()
      Void unused37=b.#e()
      Void unused38=b.#c()
      Void unused39=b.#t()
      Void unused40=b.#o()
      Void unused41=b.#r()
      Void unused42=b.#colon()
      Void unused43=b.#space()
      b
      ))
    rcv48.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv48.#seqBuilder()
      Void unused44=b0.#add(that:that)
      b0
      ))
    )
  rcv47.#from(builder:(
    capsule This1.S.SBuilder b1=rcv47.#builder()
    b1
    ))
  )
ParseFail: {implements This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/, This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
This2.S #1kind_$_11() this.readableName()
read method 
This2.S #1text_$_12() this._text()
read method 
This2.Message.Opt #1responseOf_$_13() this.cause()
method 
This0 #1#apply1_$_14(This2.Message that) This0.#apply(text:this.text(), cause:that)
read method 
This2.S #1toS_$_15() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #1equals_$_16(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #1#apply2_$_17(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #1#apply3_$_18(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #1#builder_$_19() This2.S.SBuilder.empty()
class method 
This0 #1#from_$_20(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #1#from0_$_21(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #1#seqBuilder_$_22() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
read method 
class This0 #1class_$_23() This0
class method 
read This0 #1cast_$_24(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #1#cast_$_25(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This2.S #1readableName_$_26() This2.GetMyName.#apply(that:This0)
class method 
This2.Bool #1is_$_27(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #1#equalequal_$_28(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
method 
mut This3.S.SBuilder #1#builder0_$_29() This3.S.SBuilder.empty()
method 
This1 #1#from1_$_30(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Path: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart java.util.List
*/implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals/*class method This from(Base base)
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
read method 
This1.Bool equals(read This0 that) This1.Bool.#from(binaryRepr:(
  Library res=use This0 check equals(_this:this.#binaryRepr(), _1_java%lang%Object:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: java.util.List\u000amethod name: equals(that)\u000ajava method: java.util.List.equals(_this,_1_java%lang%Object)\u000a
*/})
  res
  ))
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
class method 
This0 from(This1.Concept.ToS string) (
  Void unused=(
    Void unused0=return This0.PlgPath.rawFromS(that:string.toS())
    
    catch error Any catched error (
      This0.ParseFail.Continue rcv52=(
        This0.ParseFail rcv53=This0.ParseFail.#from(builder:(
          capsule This1.S.SBuilder b=This0.ParseFail.#builder()
          Void unused1=b.#T()
          Void unused2=b.#h()
          Void unused3=b.#e()
          Void unused4=b.#space()
          Void unused5=b.#p()
          Void unused6=b.#r()
          Void unused7=b.#o()
          Void unused8=b.#v()
          Void unused9=b.#i()
          Void unused10=b.#d()
          Void unused11=b.#e()
          Void unused12=b.#d()
          Void unused13=b.#space()
          Void unused14=b.#s()
          Void unused15=b.#t()
          Void unused16=b.#r()
          Void unused17=b.#i()
          Void unused18=b.#n()
          Void unused19=b.#g()
          Void unused20=b.#space()
          Void unused21=b.#i()
          Void unused22=b.#s()
          Void unused23=b.#space()
          Void unused24=b.#n()
          Void unused25=b.#o()
          Void unused26=b.#t()
          Void unused27=b.#space()
          Void unused28=b.#a()
          Void unused29=b.#space()
          Void unused30=b.#v()
          Void unused31=b.#a()
          Void unused32=b.#l()
          Void unused33=b.#i()
          Void unused34=b.#d()
          Void unused35=b.#space()
          Void unused36=b.#p()
          Void unused37=b.#a()
          Void unused38=b.#t()
          Void unused39=b.#h()
          Void unused40=b.#colon()
          Void unused41=b.#space()
          b
          ))
        rcv53.#from(seqBuilder:(
          capsule This1.S.SConcat b0=rcv53.#seqBuilder()
          Void unused42=b0.#add(that:string)
          b0
          ))
        )
      rcv52.#from(builder:(
        capsule This1.S.SBuilder b1=rcv52.#builder()
        b1
        ))
      )
    
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #from(This1.S.SBuilder builder) This0.from(string:This1.S.#from(binaryRepr:builder.#binaryRepr()))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
method 
This1.Strings names() This1.Strings.#from(seqBuilder:(
  capsule This1.Strings b=This1.Strings.#seqBuilder()
  Void unused=(
    capsule This1.Size.Iterator i=This1.Size.#from(builder:(
      capsule This1.S.SBuilder b0=This1.Size.#builder()
      Void unused0=b0.#0()
      b0
      )).vals(upTo:this.nameSize())
    (
      Void unused1=loop (
        Void unused2=i.#next()
        
        catch exception Void catched1 (
          Void unused3=(
            Void unused4=i.#checkEnd()
            
            catch exception Void catched2 void
            
            void
            )
          exception void
          )
        
        (
          Void unused5=b.#add(that:this.name(that:i.#inner()))
          void
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    )
  b
  ))
class method 
This0 from(read This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.#from(builder:(
          capsule This1.S.SBuilder b0=This0.#builder()
          Void unused3=b0.#T()
          Void unused4=b0.#h()
          Void unused5=b0.#i()
          Void unused6=b0.#s()
          b0
          ))
        )
      )
    This1.S s=(
      This1.S.Continue rcv54=(
        This1.S rcv55=This1.S.#from(builder:(
          capsule This1.S.SBuilder b1=This1.S.#builder()
          b1
          ))
        rcv55.#from(seqBuilder:(
          capsule This1.S.SConcat b=rcv55.#seqBuilder()
          Void unused7=(
            lent This1.Strings.IteratorVal n=names.vals()
            (
              Void unused8=loop (
                Void unused9=n.#next()
                
                catch exception Void catched5 (
                  Void unused10=(
                    Void unused11=n.#checkEnd()
                    
                    catch exception Void catched6 void
                    
                    void
                    )
                  exception void
                  )
                
                (
                  Void unused12=b.#add(that:n.#inner(), sep:This1.S.#from(builder:(
                    capsule This1.S.SBuilder b2=This1.S.#builder()
                    Void unused13=b2.#dot()
                    b2
                    )))
                  void
                  )
                )
              
              catch exception Void catched10 void
              
              void
              )
            )
          b
          ))
        )
      rcv54.#from(builder:(
        capsule This1.S.SBuilder b3=rcv54.#builder()
        b3
        ))
      )
    Void unused1=return This0.from(string:s)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 fresh() This0.fresh(like:This0.#from(builder:(
  capsule This1.S.SBuilder b=This0.#builder()
  Void unused=b.#F()
  Void unused0=b.#r()
  Void unused1=b.#e()
  Void unused2=b.#s()
  Void unused3=b.#h()
  b
  )))
method 
This1.S name(This1.Size that) This0.PlgPath.name(that:this, index:that)
method 
This1.Size nameSize() this.size()
refine read method 
This1.S toS() This0.PlgPath.toS(that:this)
method 
This0 #plusplus(This0 that) This0.PlgPath.concat(that:this, and:that)
method 
This1.Bool isUnique() This0.PlgPath.isUnique(that:this)
class method 
This0 fresh(This0 like) This0.PlgPath.fresh(that:like)
method 
This1.Size size() This1.Size.#from(binaryRepr:(
  Library res=use This0 check size(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: java.util.List\u000amethod name: size()\u000ajava method: java.util.List.size(_this)\u000a
*/})
  res
  ))
refine class method 
read This0 cast(read This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This1.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This1.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Any parseError(This1.S that) (
  This0.ParseFail.Continue rcv49=(
    This0.ParseFail rcv50=This0.ParseFail.#from(builder:(
      capsule This1.S.SBuilder b=This0.ParseFail.#builder()
      Void unused=b.#T()
      Void unused0=b.#h()
      Void unused1=b.#e()
      Void unused2=b.#space()
      Void unused3=b.#p()
      Void unused4=b.#r()
      Void unused5=b.#o()
      Void unused6=b.#v()
      Void unused7=b.#i()
      Void unused8=b.#d()
      Void unused9=b.#e()
      Void unused10=b.#d()
      Void unused11=b.#space()
      Void unused12=b.#s()
      Void unused13=b.#t()
      Void unused14=b.#r()
      Void unused15=b.#i()
      Void unused16=b.#n()
      Void unused17=b.#g()
      Void unused18=b.#space()
      Void unused19=b.#i()
      Void unused20=b.#s()
      Void unused21=b.#space()
      Void unused22=b.#n()
      Void unused23=b.#o()
      Void unused24=b.#t()
      Void unused25=b.#space()
      Void unused26=b.#a()
      Void unused27=b.#space()
      Void unused28=b.#v()
      Void unused29=b.#a()
      Void unused30=b.#l()
      Void unused31=b.#i()
      Void unused32=b.#d()
      Void unused33=b.#space()
      Void unused34=b.#p()
      Void unused35=b.#a()
      Void unused36=b.#t()
      Void unused37=b.#h()
      Void unused38=b.#colon()
      Void unused39=b.#space()
      b
      ))
    rcv50.#from(seqBuilder:(
      capsule This1.S.SConcat b0=rcv50.#seqBuilder()
      Void unused40=b0.#add(that:that)
      b0
      ))
    )
  rcv49.#from(builder:(
    capsule This1.S.SBuilder b1=rcv49.#builder()
    b1
    ))
  )
class method 
Any parseError(This1.S that, This1.Message cause) (
  This0.ParseFail rcv51=(
    This0.ParseFail.Continue rcv52=(
      This0.ParseFail rcv53=This0.ParseFail.#from(builder:(
        capsule This1.S.SBuilder b=This0.ParseFail.#builder()
        Void unused=b.#T()
        Void unused0=b.#h()
        Void unused1=b.#e()
        Void unused2=b.#space()
        Void unused3=b.#p()
        Void unused4=b.#r()
        Void unused5=b.#o()
        Void unused6=b.#v()
        Void unused7=b.#i()
        Void unused8=b.#d()
        Void unused9=b.#e()
        Void unused10=b.#d()
        Void unused11=b.#space()
        Void unused12=b.#s()
        Void unused13=b.#t()
        Void unused14=b.#r()
        Void unused15=b.#i()
        Void unused16=b.#n()
        Void unused17=b.#g()
        Void unused18=b.#space()
        Void unused19=b.#i()
        Void unused20=b.#s()
        Void unused21=b.#space()
        Void unused22=b.#n()
        Void unused23=b.#o()
        Void unused24=b.#t()
        Void unused25=b.#space()
        Void unused26=b.#a()
        Void unused27=b.#space()
        Void unused28=b.#v()
        Void unused29=b.#a()
        Void unused30=b.#l()
        Void unused31=b.#i()
        Void unused32=b.#d()
        Void unused33=b.#space()
        Void unused34=b.#i()
        Void unused35=b.#n()
        Void unused36=b.#t()
        Void unused37=b.#e()
        Void unused38=b.#r()
        Void unused39=b.#n()
        Void unused40=b.#a()
        Void unused41=b.#l()
        Void unused42=b.#i()
        Void unused43=b.#z()
        Void unused44=b.#e()
        Void unused45=b.#d()
        Void unused46=b.#space()
        Void unused47=b.#p()
        Void unused48=b.#a()
        Void unused49=b.#t()
        Void unused50=b.#h()
        Void unused51=b.#colon()
        Void unused52=b.#space()
        b
        ))
      rcv53.#from(seqBuilder:(
        capsule This1.S.SConcat b0=rcv53.#seqBuilder()
        Void unused53=b0.#add(that:that)
        b0
        ))
      )
    rcv52.#from(builder:(
      capsule This1.S.SBuilder b1=rcv52.#builder()
      b1
      ))
    )
  rcv51.#apply(that:cause)
  )
PlgPath: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.refactor.PathAdapter
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
class method 
This2.S name(This1 that, This2.Size index) This2.S.#from(binaryRepr:(
  Library res=use This0 check name(_1_java%util%List:that.#binaryRepr(), _2_int:index.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.PathAdapter\u000amethod name: name(that,index)\u000ajava method: is.L42.connected.withSafeOperators.refactor.PathAdapter.name(_1_java%util%List,_2_int)\u000a
*/})
  res
  ))
class method 
This1 concat(This1 that, This1 and) This1.#from(binaryRepr:(
  Library res=use This0 check concat(_1_java%util%List:that.#binaryRepr(), _2_java%util%List:and.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.PathAdapter\u000amethod name: concat(that,and)\u000ajava method: is.L42.connected.withSafeOperators.refactor.PathAdapter.concat(_1_java%util%List,_2_java%util%List)\u000a
*/})
  res
  ))
class method 
This2.Bool isUnique(This1 that) This2.Bool.#from(binaryRepr:(
  Library res=use This0 check isUnique(_1_java%util%List:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.PathAdapter\u000amethod name: isUnique(that)\u000ajava method: is.L42.connected.withSafeOperators.refactor.PathAdapter.isUnique(_1_java%util%List)\u000a
*/})
  res
  ))
class method 
This1 fresh(This1 that) This1.#from(binaryRepr:(
  Library res=use This0 check fresh(_1_java%util%List:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.PathAdapter\u000amethod name: fresh(that)\u000ajava method: is.L42.connected.withSafeOperators.refactor.PathAdapter.fresh(_1_java%util%List)\u000a
*/})
  res
  ))
class method 
This1 rawFromS(This2.S that) This1.#from(binaryRepr:(
  Library res=use This0 check rawFromS(_1_java%lang%String:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.PathAdapter\u000amethod name: rawFromS(that)\u000ajava method: is.L42.connected.withSafeOperators.refactor.PathAdapter.rawFromS(_1_java%lang%String)\u000a
*/})
  res
  ))
class method 
This2.S toS(read This1 that) This2.S.#from(binaryRepr:(
  Library res=use This0 check toS(_1_java%util%List:that.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.refactor.PathAdapter\u000amethod name: toS(that)\u000ajava method: is.L42.connected.withSafeOperators.refactor.PathAdapter.toS(_1_java%util%List)\u000a
*/})
  res
  ))}
ParseFail: {implements This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/, This2.Guard.ParseFail, This2.Guard, This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
class method 
This2.S #1kind0_$_31() this.readableName()
read method 
This2.S #1text0_$_32() this._text()
read method 
This2.Message.Opt #1responseOf0_$_33() this.cause()
method 
This0 #1#apply4_$_34(This2.Message that) This0.#apply(text:this.text(), cause:that)
read method 
This2.S #1toS0_$_35() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))
        
        res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #1equals0_$_36(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #1#apply5_$_37(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #1#apply6_$_38(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #1#builder1_$_39() This2.S.SBuilder.empty()
class method 
This0 #1#from2_$_40(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #1#from3_$_41(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #1#seqBuilder0_$_42() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
read method 
class This0 #1class0_$_43() This0
class method 
read This0 #1cast0_$_44(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #1#cast0_$_45(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This2.S #1readableName0_$_46() This2.GetMyName.#apply(that:This0)
class method 
This2.Bool #1is0_$_47(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #1#equalequal0_$_48(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
method 
mut This3.S.SBuilder #1#builder2_$_49() This3.S.SBuilder.empty()
method 
This1 #1#from4_$_50(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
X: {
class method 
This0.AssertionFail #from(This1.S.SBuilder builder) This0.AssertionFail.#from(builder:builder)
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0.Tests #seqBuilder() This0.Tests.empty()
class method 
Void #from(This0.Tests seqBuilder) (
  This1.S res=seqBuilder.collapse()
  (
    This1.Bool cond=res.isEmpty().#bang()
    (
      Void unused=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (error (
        This0.AssertionFail.Continue rcv54=(
          This0.AssertionFail rcv55=This0.#from(builder:(
            capsule This1.S.SBuilder b=This0.#builder()
            Void unused0=b.#O()
            Void unused1=b.#b()
            Void unused2=b.#s()
            Void unused3=b.#e()
            Void unused4=b.#r()
            Void unused5=b.#v()
            Void unused6=b.#e()
            Void unused7=b.#d()
            Void unused8=b.#space()
            Void unused9=b.#b()
            Void unused10=b.#u()
            Void unused11=b.#g()
            Void unused12=b.#colon()
            Void unused13=b.#space()
            b
            ))
          rcv55.#from(seqBuilder:(
            capsule This1.S.SConcat b0=rcv55.#seqBuilder()
            Void unused14=b0.#add(that:res)
            b0
            ))
          )
        rcv54.#from(builder:(
          capsule This1.S.SBuilder b1=rcv54.#builder()
          b1
          ))
        ))
      )
    )
  )
NotImplementedYet: {implements This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
AssertionFail: {implements This2.Message, This2.Concept.Base, This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals/*class method This from(Base base)
*/
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) 
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    var This2.S res=This0.kind()
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        capsule This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        (res := res.#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          capsule This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=res.#from(seqBuilder:(
        capsule This2.S.SConcat b3=res.#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        capsule This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool equals(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (/*next part could become a trait on its own (but S must keep its version)
*/This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  capsule This2.S.SBuilder b=This2.S.#builder()
  b
  )))
refine read method 
class This0 class() This0
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool #equalequal(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.equals(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Continue: {
mut method 
This3.S #that() 
read method 
This3.S that() 
class method 
This0 #apply(This3.S that) 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Pre: {
class method 
mut This1.Tests #seqBuilder() This1.Tests.empty()
class method 
Void #from(This1.Tests seqBuilder) (
  This2.S res=seqBuilder.collapse()
  (
    This2.Bool cond=res.isEmpty().#bang()
    (
      Void unused=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (error (
        This1.AssertionFail.Continue rcv56=(
          This1.AssertionFail rcv57=This1.#from(builder:(
            capsule This2.S.SBuilder b=This1.#builder()
            Void unused0=b.#P()
            Void unused1=b.#r()
            Void unused2=b.#e()
            Void unused3=b.#c()
            Void unused4=b.#o()
            Void unused5=b.#n()
            Void unused6=b.#d()
            Void unused7=b.#i()
            Void unused8=b.#t()
            Void unused9=b.#i()
            Void unused10=b.#o()
            Void unused11=b.#n()
            Void unused12=b.#space()
            Void unused13=b.#v()
            Void unused14=b.#i()
            Void unused15=b.#o()
            Void unused16=b.#l()
            Void unused17=b.#a()
            Void unused18=b.#t()
            Void unused19=b.#i()
            Void unused20=b.#o()
            Void unused21=b.#n()
            Void unused22=b.#colon()
            Void unused23=b.#space()
            b
            ))
          rcv57.#from(seqBuilder:(
            capsule This2.S.SConcat b0=rcv57.#seqBuilder()
            Void unused24=b0.#add(that:res)
            b0
            ))
          )
        rcv56.#from(builder:(
          capsule This2.S.SBuilder b1=rcv56.#builder()
          b1
          ))
        ))
      )
    )
  )}
Test: {
mut method 
This2.Bool #that() 
read method 
This2.Bool that() 
mut method 
This2.S #msg() 
read method 
This2.S msg() 
class method 
This0 #apply(This2.Bool that, This2.S msg) }
Tests: {implements This2.Concept.ToS, This2.Concept.Classable
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This2.Collections.MutListAny inner) 
class method 
This0 #immK(This2.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add0_$_3(This1.Test that) this.add(right:that)
read method 
mut This0 reverse() (
  capsule This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.Test val(This2.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
read method 
class This2.Size #default#val(Void that) This2.Size
read method 
This1.Test left() This0.Cast.#apply(that:this.inner().val(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Test right() (/*#################MUT METHODS
*/This0.Cast.#apply(that:(
  read This2.Collections.MutListAny rcv46=this.inner()
  rcv46.val(that:rcv46.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.Test val) (
  mut This2.Collections.MutListAny rcv47=this.#inner()
  rcv47.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Test that) (
  mut This2.Collections.MutListAny rcv48=this.#inner()
  rcv48.#apply(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Test that) (
  mut This2.Collections.MutListAny rcv49=this.#inner()
  rcv49.#apply(that:rcv49.size().#less(that:This2.Size.#from(builder:(
    capsule This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.Test val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Test right) (
  mut This2.Collections.MutListAny rcv50=this.#inner()
  rcv50.add(that:rcv50.size(), val:right)
  )
mut method 
Void add(This1.Test left) this.#inner().add(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (/*#################OPERATORS
*/this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Test that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (/*#################Withs
*/(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.Test val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Test that) this.with(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Test that) (/*insertion
*/this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.Test val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Test that) this.withAlso(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Test that) (/*skipping/filtering
*/this.withAlso(that:this.size(), val:that))
method 
This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (/*################# Iterators
*/this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.Test filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.Test filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.Test filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Test filled) this.vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  capsule This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
read This0 cast(read This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return read This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
mut This0 #cast(mut This2.Concept.Classable that) (
  Void unused=(
    Void unused0=(
      mut This0 that0=(
        Void unused2=return that
        
        catch return mut This0 casted casted
        
        catch return mut Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.GetMyName.classCastError(that:that, classObj:This0)
    void
    )
  
  catch return mut This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void #add(This2.Bool that, This2.Concept.ToS msg) this.add(right:This1.Test.#apply(that:that, msg:(
  This2.S.Continue rcv58=(
    This2.S rcv59=(
      This2.S.Continue rcv60=(
        This2.S rcv61=This2.S.#from(builder:(
          capsule This2.S.SBuilder b=This2.S.#builder()
          b
          ))
        rcv61.#from(seqBuilder:(
          capsule This2.S.SConcat b0=rcv61.#seqBuilder()
          Void unused=b0.#add(that:msg)
          Void unused0=b0.#add(that:This2.S.nl())
          b0
          ))
        )
      rcv60.#from(builder:(
        capsule This2.S.SBuilder b1=rcv60.#builder()
        Void unused1=b1.#n()
        Void unused2=b1.#u()
        Void unused3=b1.#m()
        Void unused4=b1.#b()
        Void unused5=b1.#e()
        Void unused6=b1.#r()
        Void unused7=b1.#colon()
        b1
        ))
      )
    rcv59.#from(seqBuilder:(
      capsule This2.S.SConcat b2=rcv59.#seqBuilder()
      Void unused8=b2.#add(that:this.size())
      b2
      ))
    )
  rcv58.#from(builder:(
    capsule This2.S.SBuilder b3=rcv58.#builder()
    Void unused9=b3.#space()
    Void unused10=b3.#f()
    Void unused11=b3.#a()
    Void unused12=b3.#i()
    Void unused13=b3.#l()
    Void unused14=b3.#e()
    Void unused15=b3.#d()
    b3
    ))
  )))
mut method 
Void #add(This2.Bool that) this.add(right:This1.Test.#apply(that:that, msg:(
  This2.S.Continue rcv62=(
    This2.S rcv63=This2.S.#from(builder:(
      capsule This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#C()
      Void unused0=b.#o()
      Void unused1=b.#n()
      Void unused2=b.#d()
      Void unused3=b.#i()
      Void unused4=b.#t()
      Void unused5=b.#i()
      Void unused6=b.#o()
      Void unused7=b.#n()
      Void unused8=b.#space()
      Void unused9=b.#n()
      Void unused10=b.#u()
      Void unused11=b.#m()
      Void unused12=b.#b()
      Void unused13=b.#e()
      Void unused14=b.#r()
      Void unused15=b.#space()
      b
      ))
    rcv63.#from(seqBuilder:(
      capsule This2.S.SConcat b0=rcv63.#seqBuilder()
      Void unused16=b0.#add(that:this.size())
      b0
      ))
    )
  rcv62.#from(builder:(
    capsule This2.S.SBuilder b1=rcv62.#builder()
    Void unused17=b1.#space()
    Void unused18=b1.#f()
    Void unused19=b1.#a()
    Void unused20=b1.#i()
    Void unused21=b1.#l()
    Void unused22=b1.#e()
    Void unused23=b1.#d()
    b1
    ))
  )))
read method 
This2.S collapse() (
  This2.S.Continue rcv64=(
    This2.S rcv65=This2.S.#from(builder:(
      capsule This2.S.SBuilder b0=This2.S.#builder()
      b0
      ))
    rcv65.#from(seqBuilder:(
      capsule This2.S.SConcat b=rcv65.#seqBuilder()
      Void unused=(
        lent This0.IteratorVal a=this.vals()
        (
          Void unused0=loop (
            Void unused1=a.#next()
            
            catch exception Void catched2 (
              Void unused2=(
                Void unused3=a.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              exception void
              )
            
            (
              This2.Bool cond=a.#inner().that().#bang()
              (
                Void unused4=cond.#checkTrue()
                
                catch exception Void catched6 void
                
                (
                  Void unused5=b.#add(that:a.#inner().msg(), sep:This2.S.nl())
                  void
                  )
                )
              )
            )
          
          catch exception Void catched8 void
          
          void
          )
        )
      b
      ))
    )
  rcv64.#from(builder:(
    capsule This2.S.SBuilder b1=rcv64.#builder()
    b1
    ))
  )
Cast: {
class method 
This2.Test #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2.Test that0=(
        Void unused2=return that
        
        catch return This2.Test casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2.Test result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.Test filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    capsule This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      capsule This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Test #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Test result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Test #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Test result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Test filled() error This2.#from(builder:(
  capsule This3.S.SBuilder b=This2.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Test #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Test result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This3.Collections.MutListAny #_that() 
read method 
read This3.Collections.MutListAny _that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
mut method 
This2.Test #filled() 
read method 
This2.Test filled() 
read method 
read This3.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This3.Collections.MutListAny _that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Test filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Test filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This3.Bool isFill() This3.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    capsule This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      capsule This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Test #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Test result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This3.Collections.MutListAny #that() 
read method 
read This3.Collections.MutListAny that() 
mut method 
Void from(This3.Size that) 
mut method 
This3.Size #from() 
read method 
This3.Size from() 
mut method 
This3.Size #maxTo() 
read method 
This3.Size maxTo() 
mut method 
This3.Size #minTo() 
read method 
This3.Size minTo() 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
mut method 
Void inner(This2.Test that) (
  mut This3.Collections.MutListAny rcv51=this.#that()
  rcv51.#apply(that:this.from(), val:that)
  )
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Test filled() error This2.#from(builder:(
  capsule This3.S.SBuilder b=This2.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}}}