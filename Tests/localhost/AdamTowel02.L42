{'--layer-- Bool N S -     and first layer of unsafe operators

DeployTowel:{
type method 
Outer0 #apply(Library fileName) 
mut method 
Library #fileName() 
read method 
Library fileName() 
type method 
type Outer0 #begin() Outer0
type method 
Outer0 #add(Library fileName) Outer0.#apply(fileName:fileName)
method 
Outer0 #end() this
type method 
Library binaryReprFrom(Library lib) (
  Library norm=using Outer0::SafeOperatorsAccess_$%$%38_1_$%$%$%20_1_$%$%$%$%136_1_$%$%$%$%$%253_1_$%$%$%$%$%$%371_1_$%$%$%$%$%$%$%490_1_$%$%$%$%$%$%$%$%610_1__731_1 check privateNormalize(that:lib) error Outer0.#stringParser(that:{'@stringU
  'privateNormalize
  })
  Library record=using Outer0::SafeOperatorsAccess_$%$%38_1_$%$%$%20_1_$%$%$%$%136_1_$%$%$%$%$%253_1_$%$%$%$%$%$%371_1_$%$%$%$%$%$%$%490_1_$%$%$%$%$%$%$%$%610_1__731_1 check introspectLibraryReport(that:norm, path:Outer0.#stringParser(that:{'@stringU
  'Outer0
  })) error Outer0.#stringParser(that:{'@stringU
  'introspectLibraryReport
  })
  using Outer0::SafeOperatorsAccess_$%$%38_1_$%$%$%20_1_$%$%$%$%136_1_$%$%$%$%$%253_1_$%$%$%$%$%$%371_1_$%$%$%$%$%$%$%490_1_$%$%$%$%$%$%$%$%610_1__731_1 check introspectLibraryDocAsString(that:record, path:Outer0.#stringParser(that:{'@stringU
  'AllAsString
  }), annotationN:Outer0.#numberParser(that:{'@stringU
  '0
  })) error Outer0.#stringParser(that:{'@stringU
  'introspectLibraryDocAsString
  })
  )
method 
Library #leftleft(Library that) (
  Void unused=using Outer0::Alu check fileDebug(fileName:this.fileName(), content:Outer0.binaryReprFrom(lib:that)) error Outer0.#stringParser(that:{'@stringU
  'fileDebug
  })
  Outer1::ExitCode.normal()
  )
SafeOperatorsAccess_$%$%38_1_$%$%$%20_1_$%$%$%$%136_1_$%$%$%$%$%253_1_$%$%$%$%$%$%371_1_$%$%$%$%$%$%$%490_1_$%$%$%$%$%$%$%$%610_1__731_1:'@private
{'@plugin
'L42.is/connected/withSafeOperators
}
Alu:'  toPutAs private
{'@plugin
'L42.is/connected/withAlu
}
type method 
Library #stringParser(Library that) that
type method 
Library #numberParser(Library that) using Outer0::Alu check stringToInt32(that:that) error Outer0.#stringParser(that:{'@stringU
'stringToInt32
})}
Alu:{'@plugin
'L42.is/connected/withAlu
}
ExitCode:{
type method 
Library normal() {'@exitStatus
'0
}
type method 
Library failure() {'@exitStatus
'42000
}}
Bool:{<:Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Named
type method '@private
Outer0 #apply_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1(Library binaryRepr_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1) 
mut method '@private
Library #binaryRepr_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1() 
read method '@private
Library binaryRepr_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1() 
method myName() Outer1::GetMyName.#apply(that:Outer0)
method 
Void #checkTrue() exception Void using Outer1::Alu check ifInt32EqualDo(n1:this.binaryRepr_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1(), n2:Outer1::N.#numberParser(that:{'@stringU
'0
}).binaryRepr()) exception void
type method 
Outer0 true() Outer0.#apply_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1(binaryRepr_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1:Outer1::N.#numberParser(that:{'@stringU
'1
}).binaryRepr())
type method 
Outer0 false() Outer0.#apply_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1(binaryRepr_$%$%18_1_$%$%$%0_1_$%$%$%$%115_1_$%$%$%$%$%231_1_$%$%$%$%$%$%348_1_$%$%$%$%$%$%$%466_1_$%$%$%$%$%$%$%$%585_1__705_1:Outer1::N.#numberParser(that:{'@stringU
'0
}).binaryRepr())
method 
Outer0 #and(Outer0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return that
      )
    Void unused1=return this
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #or(Outer0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return this
      )
    Void unused1=return that
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #bang() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return Outer0.false()
      )
    Void unused1=return Outer0.true()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method toS() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return Outer1::S.#stringParser(that:{'@stringU
      'true
      })
      )
    Void unused1=return Outer1::S.#stringParser(that:{'@stringU
    'false
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 fromS(read Outer1::Concept::ToS that) (
  Void unused=(
    Void unused0=(
      Outer1::Concept::ToS::toS() ::#equalequal(that ) cond=that.toS().#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      'true
      }))
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.true()
        )
      )
    Void unused1=(
      Outer1::Concept::ToS::toS() ::#equalequal(that ) cond0=that.toS().#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      'false
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return Outer0.false()
        )
      )
    Void unused2=error Outer0.parseError(that:that.toS())
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return that
      )
    Void unused1=return that.#bang()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer0.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Any parseError(Outer1::S that) Outer0::ParseFail.#apply(text:Outer1::S.#stringParser(that:{'@stringU
'The provided string is not a valid bool: 
}).#begin().#add(that:that).#end().#stringParser(that:{'@stringU
'
}))
type method '@private
Any #1parseError_$%$%$%$%$%232_1_$%$%$%$%$%$%349_1_$%$%$%$%$%$%$%467_1_$%$%$%$%$%$%$%$%586_1__706_1(Outer1::S that) Outer1::S.#stringParser(that:{'@stringU
'UnsatisfactoryErrorToAvoidCycle, replace in AdamT2
})
ParseFail:{<:Outer2::Guard::ParseFail, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%111_1_$%$%$%$%137_1_$%$%$%$%$%254_1_$%$%$%$%$%$%372_1_$%$%$%$%$%$%$%491_1_$%$%$%$%$%$%$%$%611_1__732_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer1.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%111_1_$%$%$%$%137_1_$%$%$%$%$%254_1_$%$%$%$%$%$%372_1_$%$%$%$%$%$%$%491_1_$%$%$%$%$%$%$%$%611_1__732_1 varres=Outer0::Varres_$%$%41_1_$%$%$%111_1_$%$%$%$%137_1_$%$%$%$%$%254_1_$%$%$%$%$%$%372_1_$%$%$%$%$%$%$%491_1_$%$%$%$%$%$%$%$%611_1__732_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1 #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer1 #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}}
N:{<:Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Named
type method '@private
Outer0 #apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(Library _binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1) 
mut method '@private
Library #_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1() 
read method '@private
Library _binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1() 
method myName() Outer1::GetMyName.#apply(that:Outer0)
type method 
Outer0 fromS(Outer1::Concept::ToS that) Outer0.#numberParser(that:that.toS().binaryRepr())
method 
Library binaryRepr() this._binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1()
type method 
Outer0 #numberParser(Library that) Outer0.#apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1:using Outer1::Alu check stringToInt32(that:that) error Outer0.parseError(that:Outer1::S.#stringParser(that:that)))
type method 
Any parseError(Outer1::S that) Outer0::ParseFail.#apply(text:Outer1::S.#stringParser(that:{'@stringU
'The provided string is not a valid Int32: 
}).#begin().#add(that:that).#end().#stringParser(that:{'@stringU
'
}))
method toS() Outer1::S.#stringParser(that:using Outer1::Alu check int32ToString(that:this.binaryRepr()) error void)
method 
Outer0 #plus(Outer0 that) Outer0.#apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1:using Outer1::Alu check sumInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
Outer0 #less(Outer0 that) Outer0.#apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1:using Outer1::Alu check subInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
Outer0 #times(Outer0 that) Outer0.#apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1:using Outer1::Alu check mulInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
Outer0 #divide(Outer0 that) Outer0.#apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1:using Outer1::Alu check divInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
Outer1::Bool #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=using Outer1::Alu check ifInt32EqualDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return Outer1::Bool.true()
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Bool #left(Outer0 that) (
  Void unused=(
    Void unused0=using Outer1::Alu check ifInt32GrtDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return Outer1::Bool.true()
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Bool #leftequal(Outer0 that) (
  Void unused=(
    Void unused0=using Outer1::Alu check ifInt32GEqDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return Outer1::Bool.true()
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer1::Bool #right(Outer0 that) this.#leftequal(that:that).#bang()
method 
Outer1::Bool #rightequal(Outer0 that) this.#left(that:that).#bang()
method 
mut Outer0::Iterator vals() Outer0::Iterator.#apply(start:this, end:Outer0.#numberParser(that:{'@stringU
'-1
}))
method 
mut Outer0::Iterator vals(Outer0 upTo) Outer0::Iterator.#apply(start:this, end:upTo)
Iterator:{
type method 
mut Outer0 #apply(Outer1 start, Outer1 end) 
mut method 
Void start(Outer1 that) 
mut method 
Outer1 #start() 
read method 
Outer1 start() 
mut method 
Outer1 #end() 
read method 
Outer1 end() 
mut method 
Void #next() exception Void (
  Outer0::end() ::#left(that ) ::#or(that ) cond=this.end().#left(that:Outer1.#numberParser(that:{'@stringU
  '0
  })).#or(that:this.start().#left(that:this.end()))
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void exception void
      )
    this.start(that:this.start().#plus(that:Outer1.#numberParser(that:{'@stringU
    '1
    })))
    )
  )
read method 
Void #checkEnd() void
read method 
Outer1 #inner() this.start()
read method 
Void #close() void}
type method '@private
Any #1parseError_$%$%$%$%$%$%351_1_$%$%$%$%$%$%$%469_1_$%$%$%$%$%$%$%$%588_1__708_1(Outer1::S that) Outer1::S.#stringParser(that:{'@stringU
'UnsatisfactoryErrorToAvoidCycle, replace in AdamT2
})
ParseFail:{<:Outer2::Guard::ParseFail, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%112_1_$%$%$%$%138_1_$%$%$%$%$%255_1_$%$%$%$%$%$%373_1_$%$%$%$%$%$%$%492_1_$%$%$%$%$%$%$%$%612_1__733_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%112_1_$%$%$%$%138_1_$%$%$%$%$%255_1_$%$%$%$%$%$%373_1_$%$%$%$%$%$%$%492_1_$%$%$%$%$%$%$%$%612_1__733_1 varres=Outer0::Varres_$%$%41_1_$%$%$%112_1_$%$%$%$%138_1_$%$%$%$%$%255_1_$%$%$%$%$%$%373_1_$%$%$%$%$%$%$%492_1_$%$%$%$%$%$%$%$%612_1__733_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}}
S:{<:Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Named
Varcurrent_$%$%39_1_$%$%$%21_1_$%$%$%$%139_1_$%$%$%$%$%256_1_$%$%$%$%$%$%374_1_$%$%$%$%$%$%$%493_1_$%$%$%$%$%$%$%$%613_1__734_1:'@private
{
type method 
mut Outer0 #apply(Outer2::N::#numberParser(that ) inner) 
mut method 
Void inner(Outer2::N::#numberParser(that ) that) 
mut method 
Outer2::N::#numberParser(that ) #inner() }
type method '@private
Outer0 _private_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1(Library _binaryRepr_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1) 
mut method '@private
Library #_binaryRepr_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1() 
read method '@private
Library _binaryRepr_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1() 
method myName() Outer1::GetMyName.#apply(that:Outer0)
type method 
Outer0 #stringParser(Library that) Outer0._private_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1(_binaryRepr_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1:that)
method 
Library binaryRepr() this._binaryRepr_$%$%20_1_$%$%$%2_1_$%$%$%$%117_1_$%$%$%$%$%234_1_$%$%$%$%$%$%352_1_$%$%$%$%$%$%$%470_1_$%$%$%$%$%$%$%$%589_1__709_1()
method toS() this
method 
Outer0 #plusplus(Outer0 that) Outer0.#stringParser(that:using Outer1::Alu check stringConcat(s1:this.binaryRepr(), s2:that.toS().binaryRepr()) error void)
method 
Outer1::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer1::Bool #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=using Outer1::Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return Outer1::Bool.true()
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #apply(Outer1::N start, Outer1::N end) Outer0.#stringParser(that:using Outer1::Alu check stringSubstring(that:this.binaryRepr(), start:start.binaryRepr(), end:end.binaryRepr()) error void)
method 
Outer0 #apply(Outer1::N that) this.#apply(start:that, end:that.#plus(that:Outer1::N.#numberParser(that:{'@stringU
'1
})))
method 
Outer0 #apply(Outer1::N start) this.#apply(start:start, end:this.size())
method 
Outer0 #apply(Outer1::N end) this.#apply(start:Outer1::N.#numberParser(that:{'@stringU
'0
}), end:end)
method 
Outer1::Bool beginsWith(Outer0 that) this.#apply(end:that.size()).#equalequal(that:that)
method '@private
Outer1::N auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(Outer0 that) (
  Void unused=('TODO: discuss if should be exception
  
    Outer1::N::#numberParser(that ) current=Outer1::N.#numberParser(that:{'@stringU
    '0
    })
    mut Outer0::Varcurrent_$%$%39_1_$%$%$%21_1_$%$%$%$%139_1_$%$%$%$%$%256_1_$%$%$%$%$%$%374_1_$%$%$%$%$%$%$%493_1_$%$%$%$%$%$%$%$%613_1__734_1 varcurrent=Outer0::Varcurrent_$%$%39_1_$%$%$%21_1_$%$%$%$%139_1_$%$%$%$%$%256_1_$%$%$%$%$%$%374_1_$%$%$%$%$%$%$%493_1_$%$%$%$%$%$%$%$%613_1__734_1.#apply(inner:current)
    Void unused0=(
      Void unused3=loop (
        Void unused4=varcurrent.#inner().#left(that:this.size()).#checkTrue()
        (
          Void unused5=(
            Outer0::#apply(start ) ::beginsWith(that ) cond=this.#apply(start:varcurrent.#inner()).beginsWith(that:that)
            (
              Void unused6=cond.#checkTrue()
              catch exception unused7 (
                on Void void
                )
              return varcurrent.#inner()
              )
            )
          varcurrent.inner(that:varcurrent.#inner().#plus(that:Outer1::N.#numberParser(that:{'@stringU
          '1
          })))
          )
        )
      catch exception unused8 (
        on Void void
        )
      void
      )
    Void unused1=return Outer1::N.#numberParser(that:{'@stringU
    '0
    }).#less(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    }))
    Void unused2=error Outer0::SubstringNotPresent.#apply(string:this, subString:that)
    void
    )
  catch return result (
    on Outer1::N result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::N firstIndexOf(Outer0 that) (
  Void unused=('TODO: discuss if should be exception
  
    Outer0::auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(that ) res=this.auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(that:that)
    Void unused0=(
      Outer0::auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(that ) ::#rightequal(that ) cond=res.#rightequal(that:Outer1::N.#numberParser(that:{'@stringU
      '0
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return res
        )
      )
    Void unused1=error Outer0::SubstringNotPresent.#apply(string:this, subString:that)
    void
    )
  catch return result (
    on Outer1::N result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
SubstringNotPresent:{
type method 
Outer0 #apply(Outer1 string, Outer1 subString) 
mut method 
Outer1 #string() 
read method 
Outer1 string() 
mut method 
Outer1 #subString() 
read method 
Outer1 subString() }
method 
Outer1::Bool contains(Outer0 that) (
  Void unused=(
    Outer0::auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(that ) res=this.auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(that:that)
    Void unused0=(
      Outer0::auxFirstIndexOf_$%$%21_1_$%$%$%3_1_$%$%$%$%118_1_$%$%$%$%$%235_1_$%$%$%$%$%$%353_1_$%$%$%$%$%$%$%471_1_$%$%$%$%$%$%$%$%590_1__710_1(that ) ::#rightequal(that ) cond=res.#rightequal(that:Outer1::N.#numberParser(that:{'@stringU
      '0
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer1::Bool.true()
        )
      )
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Bool isASCIILowerCase(Outer1::N that) Outer0.#stringParser(that:{'@stringU
'qwertyuiopasdfghjklzxcvbnm
}).contains(that:this.#apply(that:that))
method 
Outer1::Bool isASCIIUpperCase(Outer1::N that) Outer0.#stringParser(that:{'@stringU
'QWERTYUIOPASDFGHJKLZXCVBNM
}).contains(that:this.#apply(that:that))
method 
Outer1::N size() Outer1::N.#apply_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1(_binaryRepr_$%$%19_1_$%$%$%1_1_$%$%$%$%116_1_$%$%$%$%$%233_1_$%$%$%$%$%$%350_1_$%$%$%$%$%$%$%468_1_$%$%$%$%$%$%$%$%587_1__707_1:using Outer1::Alu check stringSize(that:this.binaryRepr()) error void)
type method 
Outer0 doubleQuote() Outer0.#stringParser(that:{'@stringU
'"\u000a
}).#apply(that:Outer1::N.#numberParser(that:{'@stringU
'0
}))
type method 
Outer0 nl() Outer0.#stringParser(that:{'@stringU
'\u000a
})
method 
Outer0 replace(Outer0 that, Outer0 into) Outer0.#stringParser(that:using Outer1::Alu check stringReplace(that:this.binaryRepr(), src:that.binaryRepr(), dest:into.binaryRepr()) error void)
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this)
SConcat:{
type method 
Outer0 #apply(Outer1 accumulator) 
mut method 
Outer1 #accumulator() 
read method 
Outer1 accumulator() 
method 
Outer0 #add(Outer2::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) this.accumulator().#plusplus(that:Outer1.#stringParser(that:that))}}
Debug:{
type method 
Void #apply(Outer1::Concept::ToS that) using Outer1::Alu check stringDebug(that:that.toS().binaryRepr()) void
type method 
Void #apply(Library lib) using Outer1::Alu check stringDebug(that:Outer1::DeployTowel.binaryReprFrom(lib:lib)) void
type method 
Void #apply(Outer1::Concept::ToS fileName, Outer1::Concept::ToS content) using Outer1::Alu check fileDebug(fileName:fileName.toS().binaryRepr(), content:content.toS().binaryRepr()) void}
Count:{
type method '@private
Outer0 #apply_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1(Outer1::N counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1) 
mut method '@private
Outer1::N #counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1() 
read method '@private
Outer1::N counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1() 
type method 
Outer0 #begin() Outer0.#apply_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1(counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1:Outer1::N.#numberParser(that:{'@stringU
'0
}))
method 
Outer1::N #end() this.counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1()
method 
Outer0 #add(Outer1::Bool that) (
  Void unused=(
    Void unused0=(
      Outer1::Bool::#bang() cond=that.#bang()
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return this
        )
      )
    Void unused1=return Outer0.#apply_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1(counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1:this.counter_$%$%22_1_$%$%$%4_1_$%$%$%$%119_1_$%$%$%$%$%236_1_$%$%$%$%$%$%354_1_$%$%$%$%$%$%$%472_1_$%$%$%$%$%$%$%$%591_1__711_1().#plus(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    })))
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1:'@private
{'@plugin
'L42.is/connected/withSafeOperators

type method 
Library compose(Library left, Library right) using Outer0 check compose(left:left, right:right) error Outer1::S.#stringParser(that:{'@stringU
'SafeOperatorsAccess.compose
})
type method 
Library redirect(Library that, Library srcBinaryRepr, type Any dest) using Outer0 check redirect(that:that, src:srcBinaryRepr, dest:dest) error Outer1::S.#stringParser(that:{'@stringU
'SafeOperatorsAccess.redirect
})}
Concept:{
ToS:{interface 
read method 
Outer2::S toS() }
Classable:{interface 
read method 
type Any classAny() }
Named:{interface 
type method 
Outer2::S myName() }
Wrapper:{interface 
read method 
Any inner() }
TypeWrapper:{interface 
read method 
type Any inner() }
ReadWrapper:{interface 
read method 
read Any inner() }
MutWrapper:{interface <:Outer1::ReadWrapper
mut method 
mut Any #inner() }
LentWrapper:{interface <:Outer1::ReadWrapper
mut method 
lent Any #inner() }
Equals:{interface 
read method 
Outer2::Bool equals(read Any that) }
Comparable:{interface 
read method 
Outer2::Bool greater(read Any that) }
Boollable:{interface 
read method 
Void #checkTrue() exception Void }
Decorator:{interface 'method Library>>(Library that) exception MetaGuard(specific)
'method Library decorate(Library that) exception MetaGuard I can link metaguard for circularity
}
Contains:{interface 'read method Bool >>(read Elem that)

read method 
Outer2::Bool contains(read Any that) }
Parsable:{interface 'type method capsule Outer0 fromS(S that) exception Guard::Parameter(specific) invalid string
'''type method capsule Outer0 #fromS(S that) exception Guard::Parameter
}
Invariant:{interface 
read method ' can throw error or return false, as more opportune
Outer2::Bool invariant() }
RandomAccess:{interface 'read method read Elem (N that)
'mut method mut Elem #(N that)

read method 
read Any get(Outer2::N that) 
mut method 
mut Any #get(Outer2::N that) }
Sizable:{interface 
read method 
Outer2::N size() 
read method 
Outer2::Bool isEmpty() }
Iterator:{interface 
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
Void #close() }}
GetMyName:{
type method 
Outer1::S #apply(type Any that) Outer1::Introspection.#apply(clazz:that).externalTypeToS()
type method '@private
Outer1::S #1#apply_$%$%$%$%120_1_$%$%$%$%$%237_1_$%$%$%$%$%$%355_1_$%$%$%$%$%$%$%473_1_$%$%$%$%$%$%$%$%592_1__712_1(type Any that) Outer1::S.#stringParser(that:{'@stringU
'--NameStillToFix--
})}
Message:{interface <:Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Classable, Outer1::Concept::Named
type method 
Outer1::S kind() 
method 
Outer1::S text() 
method 
Outer0::Opt responseOf() 
read method 
type Outer0 clazz() 
Opt:{
type method 
Outer0 #new(Outer0::TOpt that) 
mut method 
Outer0::TOpt #that() 
read method 
Outer0::TOpt that() 
TOpt:{interface 
method 
Outer2 get() }
TEmpty:{<:Outer1::TOpt
type method 
Outer0 #apply() 
method get() error Outer3::S.#stringParser(that:{'@stringU
'UnsatisfactoryErrorToAvoidCycle, replace in Adam2-3
})}
TOf:{<:Outer1::TOpt
type method 
Outer0 #apply(Outer2 that) 
mut method 
Outer2 #that() 
read method 
Outer2 that() 
method get() this.that()}
method 
Outer1 #tilde() this.that().get()
method 
Outer2::Bool isPresent() (
  Void unused0=(
    Outer0::#tilde() unused=this.#tilde()
    Void unused1=return Outer2::Bool.true()
    catch error unused2 (
      on Any return Outer2::Bool.false()
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #apply() Outer0.#new(that:Outer0::TEmpty.#apply())
type method 
Outer0 #apply(Outer1 that) Outer0.#new(that:Outer0::TOf.#apply(that:that))}
EqualMessages:{
type method 
Outer2::Bool #apply(Outer1 that, Outer1 other) (
  Void unused=('assuming they have the same type
  
    Outer1::clazz() ::kind() ::#equalequal(that ) ::#and(that ) ::#and(that ) res=that.clazz().kind().#equalequal(that:other.clazz().kind()).#and(that:that.text().#equalequal(that:other.text())).#and(that:that.responseOf().isPresent().#equalequal(that:other.responseOf().isPresent()))
    Void unused0=(
      Outer1::clazz() ::kind() ::#equalequal(that ) ::#and(that ) ::#and(that ) ::#bang() cond=res.#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer2::Bool.false()
        )
      )
    Void unused1=(
      Outer1::responseOf() ::isPresent() ::#bang() cond0=that.responseOf().isPresent().#bang()
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return Outer2::Bool.true()
        )
      )
    Void unused2=return that.responseOf().#tilde().equals(that:other.responseOf().#tilde())
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
$:{
type method 
Outer0 #apply() 
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #end() this
method 
Library #leftleft(Library that) Outer2::SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1.compose(left:that, right:Outer0.messageTrait())
type method 
Library messageTrait() {<:Outer2, Outer3::Concept::ToS, Outer3::Concept::Equals, Outer3::Concept::Classable, Outer3::Concept::Named
Varres_$%$%41_1_$%$%$%23_1_$%$%$%$%141_1_$%$%$%$%$%258_1_$%$%$%$%$%$%376_1_$%$%$%$%$%$%$%495_1_$%$%$%$%$%$%$%$%615_1__736_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer3::S _text, Outer2::Opt cause) 
mut method 
Outer3::S #_text() 
read method 
Outer3::S _text() 
mut method 
Outer2::Opt #cause() 
read method 
Outer2::Opt cause() 
method myName() Outer3::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer3::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer3::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2 that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer3::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer3::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%23_1_$%$%$%$%141_1_$%$%$%$%$%258_1_$%$%$%$%$%$%376_1_$%$%$%$%$%$%$%495_1_$%$%$%$%$%$%$%$%615_1__736_1 varres=Outer0::Varres_$%$%41_1_$%$%$%23_1_$%$%$%$%141_1_$%$%$%$%$%258_1_$%$%$%$%$%$%376_1_$%$%$%$%$%$%$%495_1_$%$%$%$%$%$%$%$%615_1__736_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer3::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer3::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer3::S.doubleQuote().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer3::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer3::Bool #equalequal(Outer0 that) Outer2::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer3::S text) Outer0.#apply(_text:text, cause:Outer2::Opt.#apply())
type method 
Outer0 #apply(Outer3::S text, Outer2 cause) Outer0.#apply(_text:text, cause:Outer2::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer4::S accumulator) 
mut method 
Outer4::S #accumulator() 
read method 
Outer4::S accumulator() 
method 
Outer0 #add(Outer4::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer4::S.#stringParser(that:that)))}}}}
Guard:{' exception as Guard bureocracy, error as Guard detection
'-is a check guarenteed to be performed, program logic can rely on this being enforced.
'  as exceptions, Guards objects are a way to report/guard complex operations,
' where checking the shape of the input can be unconvenient.
'as errors, they represent precondition violations. 
'Turning an exception Gard into an error Gard
' is equivalent of declaring that such misuse should not happen (blame on the caller),
' still, there is no bug in the program at this stage. Is legit for the caller to try and be blamed
interface <:Outer1::Message, Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Classable, Outer1::Concept::Named'all other guards should implement this one

Operation:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%0_0_$%$%42_1_$%$%$%24_1_$%$%$%$%142_1_$%$%$%$%$%259_1_$%$%$%$%$%$%377_1_$%$%$%$%$%$%$%496_1_$%$%$%$%$%$%$%$%616_1__737_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%0_0_$%$%42_1_$%$%$%24_1_$%$%$%$%142_1_$%$%$%$%$%259_1_$%$%$%$%$%$%377_1_$%$%$%$%$%$%$%496_1_$%$%$%$%$%$%$%$%616_1__737_1 varres=Outer0::Varres_$%0_0_$%$%42_1_$%$%$%24_1_$%$%$%$%142_1_$%$%$%$%$%259_1_$%$%$%$%$%$%377_1_$%$%$%$%$%$%$%496_1_$%$%$%$%$%$%$%$%616_1__737_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
Parameter:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%1_0_$%$%43_1_$%$%$%25_1_$%$%$%$%143_1_$%$%$%$%$%260_1_$%$%$%$%$%$%378_1_$%$%$%$%$%$%$%497_1_$%$%$%$%$%$%$%$%617_1__738_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%1_0_$%$%43_1_$%$%$%25_1_$%$%$%$%143_1_$%$%$%$%$%260_1_$%$%$%$%$%$%378_1_$%$%$%$%$%$%$%497_1_$%$%$%$%$%$%$%$%617_1__738_1 varres=Outer0::Varres_$%1_0_$%$%43_1_$%$%$%25_1_$%$%$%$%143_1_$%$%$%$%$%260_1_$%$%$%$%$%$%378_1_$%$%$%$%$%$%$%497_1_$%$%$%$%$%$%$%$%617_1__738_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
Precondition:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%2_0_$%$%44_1_$%$%$%26_1_$%$%$%$%144_1_$%$%$%$%$%261_1_$%$%$%$%$%$%379_1_$%$%$%$%$%$%$%498_1_$%$%$%$%$%$%$%$%618_1__739_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%2_0_$%$%44_1_$%$%$%26_1_$%$%$%$%144_1_$%$%$%$%$%261_1_$%$%$%$%$%$%379_1_$%$%$%$%$%$%$%498_1_$%$%$%$%$%$%$%$%618_1__739_1 varres=Outer0::Varres_$%2_0_$%$%44_1_$%$%$%26_1_$%$%$%$%144_1_$%$%$%$%$%261_1_$%$%$%$%$%$%379_1_$%$%$%$%$%$%$%498_1_$%$%$%$%$%$%$%$%618_1__739_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
ParseFail:{interface <:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named}}
System:{
Guard:{'<:Outer::Guard soon (remove "interface" for a bad translation bug: Outer1_System_Guard is not abstract and does not override abstract method MtoS()
interface <:Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
PluginFailure:{<:Outer1, Outer3::Guard, Outer3::Message, Outer3::Concept::ToS, Outer3::Concept::Equals, Outer3::Concept::Classable, Outer3::Concept::Named
Varres_$%3_0_$%$%45_1_$%$%$%27_1_$%$%$%$%145_1_$%$%$%$%$%262_1_$%$%$%$%$%$%380_1_$%$%$%$%$%$%$%499_1_$%$%$%$%$%$%$%$%619_1__740_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer3::S _text, Outer3::Message::Opt cause) 
mut method 
Outer3::S #_text() 
read method 
Outer3::S _text() 
mut method 
Outer3::Message::Opt #cause() 
read method 
Outer3::Message::Opt cause() 
method myName() Outer3::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer3::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer3::S.#stringParser(that:that))
method 
Outer0 #apply(Outer3::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer3::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer3::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%3_0_$%$%45_1_$%$%$%27_1_$%$%$%$%145_1_$%$%$%$%$%262_1_$%$%$%$%$%$%380_1_$%$%$%$%$%$%$%499_1_$%$%$%$%$%$%$%$%619_1__740_1 varres=Outer0::Varres_$%3_0_$%$%45_1_$%$%$%27_1_$%$%$%$%145_1_$%$%$%$%$%262_1_$%$%$%$%$%$%380_1_$%$%$%$%$%$%$%499_1_$%$%$%$%$%$%$%$%619_1__740_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer3::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer3::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer3::S.doubleQuote().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer3::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer3::Bool #equalequal(Outer0 that) Outer3::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer3::S text) Outer0.#apply(_text:text, cause:Outer3::Message::Opt.#apply())
type method 
Outer0 #apply(Outer3::S text, Outer3::Message cause) Outer0.#apply(_text:text, cause:Outer3::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer4::S accumulator) 
mut method 
Outer4::S #accumulator() 
read method 
Outer4::S accumulator() 
method 
Outer0 #add(Outer4::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer4::S.#stringParser(that:that)))}}}}
Assert:{interface <:Outer1::Message, Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Classable, Outer1::Concept::Named
NotImplementedYet:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%4_0_$%$%46_1_$%$%$%28_1_$%$%$%$%146_1_$%$%$%$%$%263_1_$%$%$%$%$%$%381_1_$%$%$%$%$%$%$%500_1_$%$%$%$%$%$%$%$%620_1__741_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%4_0_$%$%46_1_$%$%$%28_1_$%$%$%$%146_1_$%$%$%$%$%263_1_$%$%$%$%$%$%381_1_$%$%$%$%$%$%$%500_1_$%$%$%$%$%$%$%$%620_1__741_1 varres=Outer0::Varres_$%4_0_$%$%46_1_$%$%$%28_1_$%$%$%$%146_1_$%$%$%$%$%263_1_$%$%$%$%$%$%381_1_$%$%$%$%$%$%$%500_1_$%$%$%$%$%$%$%$%620_1__741_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
ObservedBug:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%5_0_$%$%47_1_$%$%$%29_1_$%$%$%$%147_1_$%$%$%$%$%264_1_$%$%$%$%$%$%382_1_$%$%$%$%$%$%$%501_1_$%$%$%$%$%$%$%$%621_1__742_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%5_0_$%$%47_1_$%$%$%29_1_$%$%$%$%147_1_$%$%$%$%$%264_1_$%$%$%$%$%$%382_1_$%$%$%$%$%$%$%501_1_$%$%$%$%$%$%$%$%621_1__742_1 varres=Outer0::Varres_$%5_0_$%$%47_1_$%$%$%29_1_$%$%$%$%147_1_$%$%$%$%$%264_1_$%$%$%$%$%$%382_1_$%$%$%$%$%$%$%501_1_$%$%$%$%$%$%$%$%621_1__742_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
CodeNotReachable:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%6_0_$%$%48_1_$%$%$%30_1_$%$%$%$%148_1_$%$%$%$%$%265_1_$%$%$%$%$%$%383_1_$%$%$%$%$%$%$%502_1_$%$%$%$%$%$%$%$%622_1__743_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%6_0_$%$%48_1_$%$%$%30_1_$%$%$%$%148_1_$%$%$%$%$%265_1_$%$%$%$%$%$%383_1_$%$%$%$%$%$%$%502_1_$%$%$%$%$%$%$%$%622_1__743_1 varres=Outer0::Varres_$%6_0_$%$%48_1_$%$%$%30_1_$%$%$%$%148_1_$%$%$%$%$%265_1_$%$%$%$%$%$%383_1_$%$%$%$%$%$%$%502_1_$%$%$%$%$%$%$%$%622_1__743_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
$:{
type method 
Outer0 #apply(Outer2::N that) 
mut method 
Outer2::N #that() 
read method 
Outer2::N that() 
type method 
Outer0 #begin() Outer0.#apply(that:Outer2::N.#numberParser(that:{'@stringU
'0
}))
method 
Void #end() void
method 
Outer0 #add(Outer2::Bool that) (
  Void unused=(
    Void unused0=(
      Void unused2=that.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return Outer0.#apply(that:this.that().#plus(that:Outer2::N.#numberParser(that:{'@stringU
      '1
      })))
      )
    Void unused1=error Outer1::AssertMessage.#apply(text:Outer2::S.#stringParser(that:{'@stringU
    'Condition number 
    }).#begin().#add(that:this.that()).#end().#stringParser(that:{'@stringU
    ' failed
    }))
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #add(Outer2::Bool that, Outer2::Concept::ToS msg) (
  Void unused=(
    Void unused0=(
      Void unused2=that.#checkTrue()
      catch exception unused3 (
        on Void void
        )
      return Outer0.#apply(that:this.that().#plus(that:Outer2::N.#numberParser(that:{'@stringU
      '1
      })))
      )
    Void unused1=error Outer1::AssertMessage.#apply(text:msg.toS().#begin().#add(that:Outer2::S.nl()).#end().#stringParser(that:{'@stringU
    'number:
    }).#begin().#add(that:this.that()).#end().#stringParser(that:{'@stringU
    ' failed
    }))
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
AssertMessage:{<:Outer1, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%7_0_$%$%49_1_$%$%$%31_1_$%$%$%$%149_1_$%$%$%$%$%266_1_$%$%$%$%$%$%384_1_$%$%$%$%$%$%$%503_1_$%$%$%$%$%$%$%$%623_1__744_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%7_0_$%$%49_1_$%$%$%31_1_$%$%$%$%149_1_$%$%$%$%$%266_1_$%$%$%$%$%$%384_1_$%$%$%$%$%$%$%503_1_$%$%$%$%$%$%$%$%623_1__744_1 varres=Outer0::Varres_$%7_0_$%$%49_1_$%$%$%31_1_$%$%$%$%149_1_$%$%$%$%$%266_1_$%$%$%$%$%$%384_1_$%$%$%$%$%$%$%503_1_$%$%$%$%$%$%$%$%623_1__744_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}}
LinkedList:{
ListCode:{
type method 
Library #apply() {' generic linked list class, elements of type Elem
<:Outer3::Concept::Named
Varres0_$%$%50_1_$%$%$%32_1_$%$%$%$%150_1_$%$%$%$%$%267_1_$%$%$%$%$%$%385_1_$%$%$%$%$%$%$%504_1_$%$%$%$%$%$%$%$%624_1__745_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%51_1_$%$%$%33_1_$%$%$%$%151_1_$%$%$%$%$%268_1_$%$%$%$%$%$%386_1_$%$%$%$%$%$%$%505_1_$%$%$%$%$%$%$%$%625_1__746_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer3::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer3::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer3::Bool.false()
          )
        (
          Void unused3=return Outer3::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer3::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0::Elem top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer3::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer3::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer3::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%50_1_$%$%$%32_1_$%$%$%$%150_1_$%$%$%$%$%267_1_$%$%$%$%$%$%385_1_$%$%$%$%$%$%$%504_1_$%$%$%$%$%$%$%$%624_1__745_1 varres=Outer0::Varres0_$%$%50_1_$%$%$%32_1_$%$%$%$%150_1_$%$%$%$%$%267_1_$%$%$%$%$%$%385_1_$%$%$%$%$%$%$%504_1_$%$%$%$%$%$%$%$%624_1__745_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer0::Elem that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%51_1_$%$%$%33_1_$%$%$%$%151_1_$%$%$%$%$%268_1_$%$%$%$%$%$%386_1_$%$%$%$%$%$%$%505_1_$%$%$%$%$%$%$%$%625_1__746_1 varres=Outer0::Varres1_$%$%51_1_$%$%$%33_1_$%$%$%$%151_1_$%$%$%$%$%268_1_$%$%$%$%$%$%386_1_$%$%$%$%$%$%$%505_1_$%$%$%$%$%$%$%$%625_1__746_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Elem:{}
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer4::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer1::Elem #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer4::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer1::Elem elem, Outer1::Cell nextCell) 
mut method 
Outer1::Elem #elem() 
read method 
Outer1::Elem elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer4::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer4::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer4::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer4::Bool #terminate() 
read method 
Outer4::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer1::Elem #inner() this.that().#inner()
read method 
Void #close() void}}}
type method 
Library list(type Any that) Outer1::SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1.redirect(that:Outer0::ListCode.#apply(), srcBinaryRepr:Outer1::S.#stringParser(that:{'@stringU
'Elem
}).binaryRepr(), dest:that)}
Strings:{' generic linked list class, elements of type Elem
<:Outer1::Concept::Named
Varres0_$%$%52_1_$%$%$%34_1_$%$%$%$%152_1_$%$%$%$%$%269_1_$%$%$%$%$%$%387_1_$%$%$%$%$%$%$%506_1_$%$%$%$%$%$%$%$%626_1__747_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%53_1_$%$%$%35_1_$%$%$%$%153_1_$%$%$%$%$%270_1_$%$%$%$%$%$%388_1_$%$%$%$%$%$%$%507_1_$%$%$%$%$%$%$%$%627_1__748_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer1::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer1::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer1::Bool.false()
          )
        (
          Void unused3=return Outer1::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::S top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer1::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer1::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer1::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%52_1_$%$%$%34_1_$%$%$%$%152_1_$%$%$%$%$%269_1_$%$%$%$%$%$%387_1_$%$%$%$%$%$%$%506_1_$%$%$%$%$%$%$%$%626_1__747_1 varres=Outer0::Varres0_$%$%52_1_$%$%$%34_1_$%$%$%$%152_1_$%$%$%$%$%269_1_$%$%$%$%$%$%387_1_$%$%$%$%$%$%$%506_1_$%$%$%$%$%$%$%$%626_1__747_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::S that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%53_1_$%$%$%35_1_$%$%$%$%153_1_$%$%$%$%$%270_1_$%$%$%$%$%$%388_1_$%$%$%$%$%$%$%507_1_$%$%$%$%$%$%$%$%627_1__748_1 varres=Outer0::Varres1_$%$%53_1_$%$%$%35_1_$%$%$%$%153_1_$%$%$%$%$%270_1_$%$%$%$%$%$%388_1_$%$%$%$%$%$%$%507_1_$%$%$%$%$%$%$%$%627_1__748_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer2::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::S #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer2::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::S elem, Outer1::Cell nextCell) 
mut method 
Outer2::S #elem() 
read method 
Outer2::S elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer2::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer2::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer2::Bool #terminate() 
read method 
Outer2::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::S #inner() this.that().#inner()
read method 
Void #close() void}}
Path:{<:Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Named
Varresult_$%$%54_1_$%$%$%36_1_$%$%$%$%154_1_$%$%$%$%$%271_1_$%$%$%$%$%$%389_1_$%$%$%$%$%$%$%508_1_$%$%$%$%$%$%$%$%628_1__749_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Strings::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Strings::#begin() ::#end() that) 
mut method 
Outer2::Strings::#begin() ::#end() #inner() }
Varstr_$%$%55_1_$%$%$%37_1_$%$%$%$%155_1_$%$%$%$%$%272_1_$%$%$%$%$%$%390_1_$%$%$%$%$%$%$%509_1_$%$%$%$%$%$%$%$%629_1__750_1:'@private
{
type method 
mut Outer0 #apply(Outer1::toS() inner) 
mut method 
Void inner(Outer1::toS() that) 
mut method 
Outer1::toS() #inner() }
Varaccumulator_$%$%56_1_$%$%$%38_1_$%$%$%$%156_1_$%$%$%$%$%273_1_$%$%$%$%$%$%391_1_$%$%$%$%$%$%$%510_1_$%$%$%$%$%$%$%$%630_1__751_1:'@private
{
type method 
mut Outer0 #apply(Outer2::S::#stringParser(that ) ::#begin() inner) 
mut method 
Void inner(Outer2::S::#stringParser(that ) ::#begin() that) 
mut method 
Outer2::S::#stringParser(that ) ::#begin() #inner() }
Varacc_$%$%57_1_$%$%$%39_1_$%$%$%$%157_1_$%$%$%$%$%274_1_$%$%$%$%$%$%392_1_$%$%$%$%$%$%$%511_1_$%$%$%$%$%$%$%$%631_1__752_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
type method '@private
Outer0 _private_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1(Library _binaryRepr_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1) 
mut method '@private
Library #_binaryRepr_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1() 
read method '@private
Library _binaryRepr_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1() 
method myName() Outer1::GetMyName.#apply(that:Outer0)
type method 
Outer0 fromDocInternalizedS(Outer1::S that) (
  Void unused=(
    Void unused0=(
      Outer1::S::#equalequal(that ) cond=that.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      '\u0040::
      }).#plusplus(that:Outer1::S.nl()))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer0.fromS(that:Outer1::S.#stringParser(that:{'@stringU
        'Outer0
        }))
        )
      )
    Void unused1=return Outer0.fromS(that:that.#apply(start:Outer1::N.#numberParser(that:{'@stringU
    '3
    }), end:that.size().#less(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    }))))
    catch error x (
      on Outer1::Message error Outer0.parseError(that:that, cause:x)
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 fromS(Outer1::Concept::ToS that) Outer0.#stringParser(that:that.toS().binaryRepr())
type method 
Outer0 #stringParser(Library that) (
  Void unused=using Outer1::SafeOperators check ifInvalidDo(path:that) error Outer0.parseError(that:Outer1::S.#stringParser(that:that))
  Outer0._private_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1(_binaryRepr_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1:that)
  )
type method 
Any parseError(Outer1::S that) Outer0::ParseFail.#apply(text:Outer1::S.#stringParser(that:{'@stringU
'The provided string is not a valid path: 
}).#begin().#add(that:that).#end().#stringParser(that:{'@stringU
'
}))
type method 
Any parseError(Outer1::S that, Outer1::Message cause) Outer0::ParseFail.#apply(text:Outer1::S.#stringParser(that:{'@stringU
'The provided string is not a valid internalized path: 
}).#begin().#add(that:that).#end().#stringParser(that:{'@stringU
'
}), cause:cause)
method 
Library binaryRepr() this._binaryRepr_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1()
method toS() Outer1::S.#stringParser(that:this._binaryRepr_$%$%23_1_$%$%$%5_1_$%$%$%$%121_1_$%$%$%$%$%238_1_$%$%$%$%$%$%356_1_$%$%$%$%$%$%$%474_1_$%$%$%$%$%$%$%$%593_1__713_1())
method 
Outer1::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer1::Bool #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=using Outer1::Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return Outer1::Bool.true()
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Void unused0=(
      Outer0::#equalequal(that ) cond=this.#equalequal(that:Outer0.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return that
        )
      )
    Void unused1=(
      Outer0::#equalequal(that ) cond0=that.#equalequal(that:Outer0.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return this
        )
      )
    Void unused2=return Outer0.#stringParser(that:this.toS().#begin().#add(that:Outer1::S.#stringParser(that:{'@stringU
    '::
    })).#add(that:that).#end().#stringParser(that:{'@stringU
    '
    }).binaryRepr())
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Strings names() (
  Void unused=(
    Outer0::toS() str=this.toS()
    Void unused0=(
      Outer0::toS() ::#equalequal(that ) cond=str.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return Outer1::Strings.#begin().#end()
        )
      )
    mut Outer0::Varstr_$%$%55_1_$%$%$%37_1_$%$%$%$%155_1_$%$%$%$%$%272_1_$%$%$%$%$%$%390_1_$%$%$%$%$%$%$%509_1_$%$%$%$%$%$%$%$%629_1__750_1 varstr=Outer0::Varstr_$%$%55_1_$%$%$%37_1_$%$%$%$%155_1_$%$%$%$%$%272_1_$%$%$%$%$%$%390_1_$%$%$%$%$%$%$%509_1_$%$%$%$%$%$%$%$%629_1__750_1.#apply(inner:str)
    Void unused1=varstr.inner(that:varstr.#inner().#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
    '::
    })))
    Outer1::Strings::#begin() ::#end() result=Outer1::Strings.#begin().#end()
    mut Outer0::Varresult_$%$%54_1_$%$%$%36_1_$%$%$%$%154_1_$%$%$%$%$%271_1_$%$%$%$%$%$%389_1_$%$%$%$%$%$%$%508_1_$%$%$%$%$%$%$%$%628_1__749_1 varresult=Outer0::Varresult_$%$%54_1_$%$%$%36_1_$%$%$%$%154_1_$%$%$%$%$%271_1_$%$%$%$%$%$%389_1_$%$%$%$%$%$%$%508_1_$%$%$%$%$%$%$%$%628_1__749_1.#apply(inner:result)
    Void unused2=(
      Void unused6=loop (
        Void unused7=varstr.#inner().#bangequal(that:Outer1::S.#stringParser(that:{'@stringU
        '
        })).#checkTrue()
        (
          Outer0::Varstr_$%$%55_1_$%$%$%37_1_$%$%$%$%155_1_$%$%$%$%$%272_1_$%$%$%$%$%$%390_1_$%$%$%$%$%$%$%509_1_$%$%$%$%$%$%$%$%629_1__750_1::#inner() ::firstIndexOf(that ) pos=varstr.#inner().firstIndexOf(that:Outer1::S.#stringParser(that:{'@stringU
          '::
          }))
          Void unused8=varresult.inner(that:varresult.#inner().#add(that:varstr.#inner().#apply(end:pos)))
          varstr.inner(that:varstr.#inner().#apply(start:pos.#plus(that:Outer1::N.#numberParser(that:{'@stringU
          '2
          }))))
          )
        )
      catch exception unused9 (
        on Void void
        )
      void
      )
    Void unused3=return varresult.#inner().#end()
    void
    )
  catch return result0 (
    on Outer1::Strings result0
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 from(Outer1::Strings names) (
  Void unused=(
    Void unused0=(
      Outer1::Strings::isEmpty() cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer0.#stringParser(that:{'@stringU
        'Outer0
        })
        )
      )
    Outer1::S::#stringParser(that ) ::#begin() ::#end() ::#stringParser(that ) s=(
      Outer1::S::#stringParser(that ) ::#begin() accumulator=Outer1::S.#stringParser(that:{'@stringU
      '
      }).#begin()
      mut Outer0::Varaccumulator_$%$%56_1_$%$%$%38_1_$%$%$%$%156_1_$%$%$%$%$%273_1_$%$%$%$%$%$%391_1_$%$%$%$%$%$%$%510_1_$%$%$%$%$%$%$%$%630_1__751_1 varaccumulator=Outer0::Varaccumulator_$%$%56_1_$%$%$%38_1_$%$%$%$%156_1_$%$%$%$%$%273_1_$%$%$%$%$%$%391_1_$%$%$%$%$%$%$%510_1_$%$%$%$%$%$%$%$%630_1__751_1.#apply(inner:accumulator)
      Void unused4=(
        Outer1::Strings::vals() n=names.vals()
        (
          Void unused5=(
            Void unused6=(
              Void unused7=loop (
                Void unused8=n.#next()
                catch exception unused9 (
                  on Void (
                    Void unused10=(
                      Void unused11=n.#checkEnd()
                      catch exception unused12 (
                        on Void void
                        )
                      void
                      )
                    exception void
                    )
                  )
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:n.#inner().#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
                '::
                }))))
                )
              catch exception unused13 (
                on Void void
                )
              void
              )
            catch exception propagated (
              on Any (
                Void unused14=n.#close()
                exception propagated
                )
              )
            void
            )
          catch return propagated0 (
            on Outer0 (
              Void unused15=n.#close()
              return propagated0
              )
            )
          n.#close()
          )
        )
      varaccumulator.#inner().#end()
      ).#stringParser(that:{'@stringU
    '
    })
    Void unused1=return Outer0.fromS(that:s.#apply(end:s.size().#less(that:Outer1::N.#numberParser(that:{'@stringU
    '2
    }))))
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 fresh(Outer1::S name) Outer0.fromS(that:Outer1::SafeOperators.freshName(that:name))
type method 
Outer0 fresh() this.fresh(name:Outer1::S.#stringParser(that:{'@stringU
'Fresh
}))
type method 
Outer0 fresh(Outer0 path) (
  Void unused=(
    Outer0::names() ::#end() names=path.names().#end()
    Void unused0=(
      Outer0::names() ::#end() ::isEmpty() cond=names.isEmpty()
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return this.fresh()
        )
      )
    Outer0 last=this.fresh(name:names.top())
    Outer0 acc=Outer0.#stringParser(that:{'@stringU
    'Outer0
    })
    mut Outer0::Varacc_$%$%57_1_$%$%$%39_1_$%$%$%$%157_1_$%$%$%$%$%274_1_$%$%$%$%$%$%392_1_$%$%$%$%$%$%$%511_1_$%$%$%$%$%$%$%$%631_1__752_1 varacc=Outer0::Varacc_$%$%57_1_$%$%$%39_1_$%$%$%$%157_1_$%$%$%$%$%274_1_$%$%$%$%$%$%392_1_$%$%$%$%$%$%$%511_1_$%$%$%$%$%$%$%$%631_1__752_1.#apply(inner:acc)
    Void unused1=(
      Outer0::names() ::#end() ::pop() ::#end() ::vals() n=names.pop().#end().vals()
      (
        Void unused6=(
          Void unused7=(
            Void unused8=loop (
              Void unused9=n.#next()
              catch exception unused10 (
                on Void (
                  Void unused11=(
                    Void unused12=n.#checkEnd()
                    catch exception unused13 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varacc.inner(that:varacc.#inner().#plusplus(that:Outer0.fromS(that:n.#inner())))
              )
            catch exception unused14 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused15=n.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused16=n.#close()
            return propagated0
            )
          )
        n.#close()
        )
      )
    Void unused2=varacc.inner(that:varacc.#inner().#plusplus(that:last))
    Void unused3=return varacc.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method '@private
Any #1parseError__714_1(Outer1::S that) Outer1::S.#stringParser(that:{'@stringU
'UnsatisfactoryErrorToAvoidCycle, replace in AdamT2
})
type method '@private
Any #1parseError_$%$%$%$%$%$%$%$%594_1__715_1(Outer1::S that, Outer1::Message cause) Outer1::S.#stringParser(that:{'@stringU
'UnsatisfactoryErrorToAvoidCycle, replace in AdamT2
})
ParseFail:{<:Outer2::Guard::ParseFail, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%114_1_$%$%$%$%158_1_$%$%$%$%$%275_1_$%$%$%$%$%$%393_1_$%$%$%$%$%$%$%512_1_$%$%$%$%$%$%$%$%632_1__753_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%114_1_$%$%$%$%158_1_$%$%$%$%$%275_1_$%$%$%$%$%$%393_1_$%$%$%$%$%$%$%512_1_$%$%$%$%$%$%$%$%632_1__753_1 varres=Outer0::Varres_$%$%41_1_$%$%$%114_1_$%$%$%$%158_1_$%$%$%$%$%275_1_$%$%$%$%$%$%393_1_$%$%$%$%$%$%$%512_1_$%$%$%$%$%$%$%$%632_1__753_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}}
Selector:{<:Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Named
Varaccumulator0_$%$%58_1_$%$%$%40_1_$%$%$%$%159_1_$%$%$%$%$%276_1_$%$%$%$%$%$%394_1_$%$%$%$%$%$%$%513_1_$%$%$%$%$%$%$%$%633_1__754_1:'@private
{
type method 
mut Outer0 #apply(Outer2::S::#stringParser(that ) ::#begin() inner) 
mut method 
Void inner(Outer2::S::#stringParser(that ) ::#begin() that) 
mut method 
Outer2::S::#stringParser(that ) ::#begin() #inner() }
Varresult0_$%$%59_1_$%$%$%41_1_$%$%$%$%160_1_$%$%$%$%$%277_1_$%$%$%$%$%$%395_1_$%$%$%$%$%$%$%514_1_$%$%$%$%$%$%$%$%634_1__755_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Strings::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Strings::#begin() ::#end() that) 
mut method 
Outer2::Strings::#begin() ::#end() #inner() }
Varstr0_$%$%60_1_$%$%$%42_1_$%$%$%$%161_1_$%$%$%$%$%278_1_$%$%$%$%$%$%396_1_$%$%$%$%$%$%$%515_1_$%$%$%$%$%$%$%$%635_1__756_1:'@private
{
type method 
mut Outer0 #apply(Outer1::toS() inner) 
mut method 
Void inner(Outer1::toS() that) 
mut method 
Outer1::toS() #inner() }
Vartot_$%$%61_1_$%$%$%43_1_$%$%$%$%162_1_$%$%$%$%$%279_1_$%$%$%$%$%$%397_1_$%$%$%$%$%$%$%516_1_$%$%$%$%$%$%$%$%636_1__757_1:'@private
{
type method 
mut Outer0 #apply(Outer2::SafeOperators::freshName(that ) ::#plusplus(that ) inner) 
mut method 
Void inner(Outer2::SafeOperators::freshName(that ) ::#plusplus(that ) that) 
mut method 
Outer2::SafeOperators::freshName(that ) ::#plusplus(that ) #inner() }
Varname_$%$%62_1_$%$%$%44_1_$%$%$%$%163_1_$%$%$%$%$%280_1_$%$%$%$%$%$%398_1_$%$%$%$%$%$%$%517_1_$%$%$%$%$%$%$%$%637_1__758_1:'@private
{
type method 
mut Outer0 #apply(Outer1::name() inner) 
mut method 
Void inner(Outer1::name() that) 
mut method 
Outer1::name() #inner() }
type method '@private
Outer0 _private_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1(Library _binaryRepr_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1) 
mut method '@private
Library #_binaryRepr_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1() 
read method '@private
Library _binaryRepr_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1() 
method myName() Outer1::GetMyName.#apply(that:Outer0)
type method 
Outer0 fromS(Outer1::Concept::ToS that) Outer0.#stringParser(that:that.toS().binaryRepr())
type method 
Outer0 #stringParser(Library that) (
  Void unused=using Outer1::SafeOperators check ifInvalidDo(selector:that) error Outer0.parseError(that:Outer1::S.#stringParser(that:that))
  Outer0._private_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1(_binaryRepr_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1:that)
  )
type method 
Any parseError(Outer1::S that) Outer0::ParseFail.#apply(text:Outer1::S.#stringParser(that:{'@stringU
'The provided string is not a valid selector: 
}).#begin().#add(that:that).#end().#stringParser(that:{'@stringU
'
}))
type method 
Outer0 from(Outer1::S name, Outer1::Strings names) (
  Void unused=(
    Void unused0=(
      Outer1::Strings::isEmpty() cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer0.fromS(that:name.#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
        '()
        })))
        )
      )
    Outer1::S::#stringParser(that ) ::#begin() ::#end() ::#stringParser(that ) pars=(
      Outer1::S::#stringParser(that ) ::#begin() accumulator=Outer1::S.#stringParser(that:{'@stringU
      '(
      }).#begin()
      mut Outer0::Varaccumulator0_$%$%58_1_$%$%$%40_1_$%$%$%$%159_1_$%$%$%$%$%276_1_$%$%$%$%$%$%394_1_$%$%$%$%$%$%$%513_1_$%$%$%$%$%$%$%$%633_1__754_1 varaccumulator=Outer0::Varaccumulator0_$%$%58_1_$%$%$%40_1_$%$%$%$%159_1_$%$%$%$%$%276_1_$%$%$%$%$%$%394_1_$%$%$%$%$%$%$%513_1_$%$%$%$%$%$%$%$%633_1__754_1.#apply(inner:accumulator)
      Void unused4=(
        Outer1::Strings::vals() n=names.vals()
        (
          Void unused5=(
            Void unused6=(
              Void unused7=loop (
                Void unused8=n.#next()
                catch exception unused9 (
                  on Void (
                    Void unused10=(
                      Void unused11=n.#checkEnd()
                      catch exception unused12 (
                        on Void void
                        )
                      void
                      )
                    exception void
                    )
                  )
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:n.#inner().#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
                ',
                }))))
                )
              catch exception unused13 (
                on Void void
                )
              void
              )
            catch exception propagated (
              on Any (
                Void unused14=n.#close()
                exception propagated
                )
              )
            void
            )
          catch return propagated0 (
            on Outer0 (
              Void unused15=n.#close()
              return propagated0
              )
            )
          n.#close()
          )
        )
      varaccumulator.#inner().#end()
      ).#stringParser(that:{'@stringU
    '
    })
    Void unused1=return Outer0.fromS(that:name.#plusplus(that:pars.#apply(end:pars.size().#less(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    }))).#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
    ')
    }))))
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::S nameAsField() (
  Void unused=(
    Outer0::name() n=this.name()
    Void unused0=(
      Outer0::name() ::#apply(that ) ::#equalequal(that ) cond=n.#apply(that:Outer1::N.#numberParser(that:{'@stringU
      '0
      })).#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      '#
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return n.#apply(start:Outer1::N.#numberParser(that:{'@stringU
        '1
        }))
        )
      )
    Void unused1=return n
    void
    )
  catch return result (
    on Outer1::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::S prefixAsField() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::#apply(that ) ::#equalequal(that ) cond=this.toS().#apply(that:Outer1::N.#numberParser(that:{'@stringU
      '0
      })).#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      '#
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer1::S.#stringParser(that:{'@stringU
        '#
        })
        )
      )
    Void unused1=return Outer1::S.#stringParser(that:{'@stringU
    '
    })
    void
    )
  catch return result (
    on Outer1::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Library binaryRepr() this._binaryRepr_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1()
method toS() Outer1::S.#stringParser(that:this._binaryRepr_$%$%24_1_$%$%$%6_1_$%$%$%$%122_1_$%$%$%$%$%239_1_$%$%$%$%$%$%357_1_$%$%$%$%$%$%$%475_1_$%$%$%$%$%$%$%$%595_1__716_1())
method 
Outer1::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer1::Bool #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=using Outer1::Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return Outer1::Bool.true()
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Bool isOperator() (
  Void unused=(
    Void unused0=(
      Outer0::name() ::size() ::#equalequal(that ) cond=this.name().size().#equalequal(that:Outer1::N.#numberParser(that:{'@stringU
      '0
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer1::Bool.true()
        )
      )
    Void unused1=return this.name().#apply(that:Outer1::N.#numberParser(that:{'@stringU
    '0
    })).#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
    '#
    }))
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::S name() (
  Outer0::toS() str=this.toS()
  str.#apply(end:str.firstIndexOf(that:Outer1::S.#stringParser(that:{'@stringU
  '(
  })))
  )
method 
Outer1::Strings names() (
  Void unused=(
    Outer0::toS() str=this.toS()
    mut Outer0::Varstr0_$%$%60_1_$%$%$%42_1_$%$%$%$%161_1_$%$%$%$%$%278_1_$%$%$%$%$%$%396_1_$%$%$%$%$%$%$%515_1_$%$%$%$%$%$%$%$%635_1__756_1 varstr=Outer0::Varstr0_$%$%60_1_$%$%$%42_1_$%$%$%$%161_1_$%$%$%$%$%278_1_$%$%$%$%$%$%396_1_$%$%$%$%$%$%$%515_1_$%$%$%$%$%$%$%$%635_1__756_1.#apply(inner:str)
    Void unused0=varstr.inner(that:varstr.#inner().#apply(start:varstr.#inner().firstIndexOf(that:Outer1::S.#stringParser(that:{'@stringU
    '(
    })).#plus(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    })), end:varstr.#inner().size().#less(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    }))).#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
    ',
    })))
    Outer1::Strings::#begin() ::#end() result=Outer1::Strings.#begin().#end()
    Void unused1=(
      Outer0::Varstr0_$%$%60_1_$%$%$%42_1_$%$%$%$%161_1_$%$%$%$%$%278_1_$%$%$%$%$%$%396_1_$%$%$%$%$%$%$%515_1_$%$%$%$%$%$%$%$%635_1__756_1::#inner() ::#equalequal(that ) cond=varstr.#inner().#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      ',
      }))
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return result
        )
      )
    mut Outer0::Varresult0_$%$%59_1_$%$%$%41_1_$%$%$%$%160_1_$%$%$%$%$%277_1_$%$%$%$%$%$%395_1_$%$%$%$%$%$%$%514_1_$%$%$%$%$%$%$%$%634_1__755_1 varresult=Outer0::Varresult0_$%$%59_1_$%$%$%41_1_$%$%$%$%160_1_$%$%$%$%$%277_1_$%$%$%$%$%$%395_1_$%$%$%$%$%$%$%514_1_$%$%$%$%$%$%$%$%634_1__755_1.#apply(inner:result)
    Void unused2=(
      Void unused6=loop (
        Void unused7=varstr.#inner().#bangequal(that:Outer1::S.#stringParser(that:{'@stringU
        '
        })).#checkTrue()
        (
          Outer0::Varstr0_$%$%60_1_$%$%$%42_1_$%$%$%$%161_1_$%$%$%$%$%278_1_$%$%$%$%$%$%396_1_$%$%$%$%$%$%$%515_1_$%$%$%$%$%$%$%$%635_1__756_1::#inner() ::firstIndexOf(that ) pos=varstr.#inner().firstIndexOf(that:Outer1::S.#stringParser(that:{'@stringU
          ',
          }))
          Void unused8=varresult.inner(that:varresult.#inner().#add(that:varstr.#inner().#apply(end:pos)))
          varstr.inner(that:varstr.#inner().#apply(start:pos.#plus(that:Outer1::N.#numberParser(that:{'@stringU
          '1
          }))))
          )
        )
      catch exception unused9 (
        on Void void
        )
      void
      )
    Void unused3=return varresult.#inner().#end()
    void
    )
  catch return result0 (
    on Outer1::Strings result0
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 fresh(Outer0 that) (
  Void unused=(
    Outer0::name() name=that.name()
    mut Outer0::Varname_$%$%62_1_$%$%$%44_1_$%$%$%$%163_1_$%$%$%$%$%280_1_$%$%$%$%$%$%398_1_$%$%$%$%$%$%$%517_1_$%$%$%$%$%$%$%$%637_1__758_1 varname=Outer0::Varname_$%$%62_1_$%$%$%44_1_$%$%$%$%163_1_$%$%$%$%$%280_1_$%$%$%$%$%$%398_1_$%$%$%$%$%$%$%517_1_$%$%$%$%$%$%$%$%637_1__758_1.#apply(inner:name)
    Void unused0=(
      Outer0::Varname_$%$%62_1_$%$%$%44_1_$%$%$%$%163_1_$%$%$%$%$%280_1_$%$%$%$%$%$%398_1_$%$%$%$%$%$%$%517_1_$%$%$%$%$%$%$%$%637_1__758_1::#inner() ::#equalequal(that ) cond=varname.#inner().#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        varname.inner(that:Outer1::S.#stringParser(that:{'@stringU
        'fresh
        }))
        )
      )
    Outer1::SafeOperators::freshName(that ) fName=Outer1::SafeOperators.freshName(that:varname.#inner())
    Outer1::SafeOperators::freshName(that ) ::#plusplus(that ) tot=fName.#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
    '(
    }))
    mut Outer0::Vartot_$%$%61_1_$%$%$%43_1_$%$%$%$%162_1_$%$%$%$%$%279_1_$%$%$%$%$%$%397_1_$%$%$%$%$%$%$%516_1_$%$%$%$%$%$%$%$%636_1__757_1 vartot=Outer0::Vartot_$%$%61_1_$%$%$%43_1_$%$%$%$%162_1_$%$%$%$%$%279_1_$%$%$%$%$%$%397_1_$%$%$%$%$%$%$%516_1_$%$%$%$%$%$%$%$%636_1__757_1.#apply(inner:tot)
    Void unused1=(
      Outer0::names() ::vals() n=that.names().vals()
      (
        Void unused6=(
          Void unused7=(
            Void unused8=loop (
              Void unused9=n.#next()
              catch exception unused10 (
                on Void (
                  Void unused11=(
                    Void unused12=n.#checkEnd()
                    catch exception unused13 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              vartot.inner(that:vartot.#inner().#plusplus(that:n.#inner().#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
              ',
              }))))
              )
            catch exception unused14 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused15=n.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused16=n.#close()
            return propagated0
            )
          )
        n.#close()
        )
      )
    Void unused2=vartot.inner(that:vartot.#inner().#apply(start:Outer1::N.#numberParser(that:{'@stringU
    '0
    }), end:vartot.#inner().size().#less(that:Outer1::N.#numberParser(that:{'@stringU
    '1
    }))).#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
    ')
    })))
    Void unused3=return Outer0.fromS(that:vartot.#inner())
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method '@private
Any #1parseError_$%$%$%$%$%$%$%476_1_$%$%$%$%$%$%$%$%596_1__717_1(Outer1::S that) Outer1::S.#stringParser(that:{'@stringU
'UnsatisfactoryErrorToAvoidCycle, replace in AdamT2
})
ParseFail:{<:Outer2::Guard::ParseFail, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%113_1_$%$%$%$%164_1_$%$%$%$%$%281_1_$%$%$%$%$%$%399_1_$%$%$%$%$%$%$%518_1_$%$%$%$%$%$%$%$%638_1__759_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%113_1_$%$%$%$%164_1_$%$%$%$%$%281_1_$%$%$%$%$%$%399_1_$%$%$%$%$%$%$%518_1_$%$%$%$%$%$%$%$%638_1__759_1 varres=Outer0::Varres_$%$%41_1_$%$%$%113_1_$%$%$%$%164_1_$%$%$%$%$%281_1_$%$%$%$%$%$%399_1_$%$%$%$%$%$%$%518_1_$%$%$%$%$%$%$%$%638_1__759_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}}
SafeOperators:{'@plugin
'L42.is/connected/withSafeOperators

type method 
Library compose(Library left, Library right) using Outer0 check compose(left:left, right:right) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.compose
})
type method 
Library renameClass(Library that, Outer1::Path src, Outer1::Path dest) using Outer0 check renameClass(that:that, src:src.binaryRepr(), dest:dest.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.renameClass
})
type method 
Library renameMethod(Library that, Outer1::Path path, Outer1::Selector src, Outer1::Selector dest) using Outer0 check renameMethod(that:that, path:path.binaryRepr(), src:src.binaryRepr(), dest:dest.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.renameMethod
})
type method 
Library sumMethods(Library that, Outer1::Path path, Outer1::Selector src1, Outer1::Selector src2, Outer1::Selector dest) using Outer0 check sumMethods(that:that, path:path.binaryRepr(), src1:src1.binaryRepr(), src2:src2.binaryRepr(), dest:dest.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.renameMethod
})
type method 
Library redirect(Library that, Outer1::Path src, type Any dest) using Outer0 check redirect(that:that, src:src.binaryRepr(), dest:dest) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.redirect
})
type method 
Library removeImplementation(Library that, Outer1::Path path) using Outer0 check removeImplementation(that:that, path:path.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.removeImplementation(path)
})
type method 
Library moveImplementation(Library that, Outer1::Path path, Outer1::Selector src, Outer1::Selector dest) using Outer0 check moveImplementation(that:that, path:path.binaryRepr(), src:src.binaryRepr(), dest:dest.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.moveImplementation
})
type method 
Library removeImplementation(Library that, Outer1::Path path, Outer1::Selector selector) using Outer0 check removeImplementation(that:that, path:path.binaryRepr(), selector:selector.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.removeImplementation(path,selector)
})
type method 
Library addDocumentation(Library that, Outer1::Path path, Outer1::Introspection::Doc doc) using Outer0 check addDocumentation(that:that, path:path.binaryRepr(), doc:doc.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.addDocumentation(path)
})
type method 
Library addDocumentation(Library that, Outer1::Path path, Outer1::Selector selector, Outer1::Introspection::Doc doc) using Outer0 check addDocumentation(that:that, path:path.binaryRepr(), selector:selector.binaryRepr(), doc:doc.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.addDocumentation(path,selector)
})
type method 
Outer1::S freshName(Outer1::S that) Outer1::S.#stringParser(that:using Outer0 check freshName(that:that.binaryRepr()) error Outer1::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.freshName(that)
}))}
MetaGuard:{interface <:Outer1::Guard, Outer1::Message, Outer1::Concept::ToS, Outer1::Concept::Equals, Outer1::Concept::Classable, Outer1::Concept::Named
RecordWrapper_$%$%63_1_$%$%$%45_1_$%$%$%$%165_1_$%$%$%$%$%282_1_$%$%$%$%$%$%400_1_$%$%$%$%$%$%$%519_1_$%$%$%$%$%$%$%$%639_1__760_1:'@private
{
type method 
Library recordWrapperToSTrait() {<:Outer2, Outer3::Guard, Outer3::Message, Outer3::Concept::ToS, Outer3::Concept::Equals, Outer3::Concept::Classable, Outer3::Concept::Named
method toS() Outer0.myName()}
type method 
Library recordWrapperTrait() {<:Outer2, Outer3::Guard, Outer3::Message, Outer3::Concept::ToS, Outer3::Concept::Equals, Outer3::Concept::Classable, Outer3::Concept::Named
method kind() Outer0.myName()
method text() Outer3::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer3::Message::Opt.#apply()
method myName() Outer3::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer3::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer3::Introspection::Record record) 
method 
Outer3::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer3::Bool #equalequal(Outer0 that) Outer3::Message::EqualMessages.#apply(that:this, other:that)}
type method 
Library #leftleft(Library that) (
  Outer2::SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1::compose(left right ) res=Outer2::SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1.compose(left:that, right:Outer0.recordWrapperTrait())
  (
    Void unused=(
      Void unused0=return Outer2::SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1.compose(left:res, right:Outer0.recordWrapperToSTrait())
      catch error unused1 (
        on Library return res
        )
      void
      )
    catch return result (
      on Library result
      )
    error {'@stringU
    'CurlyBlock-Should be unreachable code
    }
    )
  )}
SourceUnfit:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
IncoherentRedirectMapping:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
ClassClash:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
MethodClash:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
InvalidOnTopLevel:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
PrivacyCoupuled:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
ParameterMismatch:{<:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
type method 
Outer0 #apply(Outer2::Introspection::Record record) 
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method toS() Outer0.myName()}
MemberUnavailable:{interface <:Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named}
DispatchMemberUnavailable:{
type method 
Outer1::MemberUnavailable #apply(Library that) (
  Void unused=(
    Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:that)
    Void unused0=(
      Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
      'Kind
      })
      (
        Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
        'MemberUnavailable
        }))
        (
          Void unused2=cond.#checkTrue()
          catch exception unused3 (
            on Void void
            )
          (
            Void unused4=(
              Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::contains(that ) cond0=record.#stringParser(that:{'@stringU
              'InvalidKind
              }).contains(that:Outer2::S.#stringParser(that:{'@stringU
              'Method
              }))
              (
                Void unused5=cond0.#checkTrue()
                catch exception unused6 (
                  on Void void
                  )
                return Outer1::MethodUnavailable.#apply(record:record)
                )
              )
            return Outer1::NestedClassUnavailable.#apply(record:record)
            )
          )
        )
      )
    Void unused1=error Outer2::Assert::ObservedBug.#stringParser(that:{'@stringU
    'error dispatching failing
    })
    void
    )
  catch return result (
    on Outer1::MemberUnavailable result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
NestedClassUnavailable:{<:Outer1::MemberUnavailable, Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
type method 
Outer0 #apply(Outer2::Path path, Outer2::Bool isPrivate) 
mut method 
Outer2::Path #path() 
read method 
Outer2::Path path() 
mut method 
Outer2::Bool #isPrivate() 
read method 
Outer2::Bool isPrivate() 
method toS() Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
'[path:
}).#begin().#add(that:this.path()).#end().#stringParser(that:{'@stringU
',isPrivate:
}).#begin().#add(that:this.isPrivate()).#end().#stringParser(that:{'@stringU
']
}))
type method 
Outer0 #apply(Outer2::Introspection::Record record) Outer0.#apply(path:Outer2::Path.fromDocInternalizedS(that:record.#stringParser(that:{'@stringU
'Path
})), isPrivate:Outer2::Bool.fromS(that:record.#stringParser(that:{'@stringU
'IsPrivate
})))
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)}
MethodUnavailable:{<:Outer1::MemberUnavailable, Outer1, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
type method 
Outer0 #apply(Outer2::Path path, Outer2::Selector selector, Outer2::Bool isPrivate) 
mut method 
Outer2::Path #path() 
read method 
Outer2::Path path() 
mut method 
Outer2::Selector #selector() 
read method 
Outer2::Selector selector() 
mut method 
Outer2::Bool #isPrivate() 
read method 
Outer2::Bool isPrivate() 
method toS() Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
'[path:
}).#begin().#add(that:this.path()).#end().#stringParser(that:{'@stringU
', selector:
}).#begin().#add(that:this.selector()).#end().#stringParser(that:{'@stringU
',isPrivate:
}).#begin().#add(that:this.isPrivate()).#end().#stringParser(that:{'@stringU
']
}))
type method 
Outer0 #apply(Outer2::Introspection::Record record) Outer0.#apply(path:Outer2::Path.fromDocInternalizedS(that:record.#stringParser(that:{'@stringU
'Path
})), selector:Outer2::Selector.fromS(that:record.#stringParser(that:{'@stringU
'Selector
})), isPrivate:Outer2::Bool.fromS(that:record.#stringParser(that:{'@stringU
'IsPrivate
})))
method kind() Outer0.myName()
method text() Outer2::S.#stringParser(that:{'@stringU
'
})
method responseOf() Outer2::Message::Opt.#apply()
method myName() Outer2::GetMyName.#apply(that:Outer0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() Outer0
method classAny() Outer0
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)}}
Introspection:{'findMeIntrospection

type method 
Outer0::NestedClass #apply(Library lib) (
  Outer0::MirrorPr::Lib::#apply(lib ) ::introspectReport(root path ) root=Outer0::MirrorPr::Lib.#apply(lib:lib).introspectReport(root:root, path:Outer1::Path.#stringParser(that:{'@stringU
  'Outer0
  }))
  catch exception x (
    on Outer1::MetaGuard::NestedClassUnavailable error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'Introspection1
    })
    )
  root
  )
type method 
Outer0::NestedClass #apply(Library lib, Outer1::Path path) exception Outer1::MetaGuard::NestedClassUnavailable (
  Outer0::#apply(lib ) root=Outer0.#apply(lib:lib)
  root.mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().introspectReport(root:root, path:path)
  )
type method 
Outer0::NestedClass #apply(type Any clazz) (
  Outer0::MirrorPr::Class::#apply(lib ) ::introspectReport(root path ) root=Outer0::MirrorPr::Class.#apply(lib:clazz).introspectReport(root:root, path:Outer1::Path.#stringParser(that:{'@stringU
  'Outer0
  }))
  catch exception x (
    on Outer1::MetaGuard::NestedClassUnavailable error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'Introspection2
    })
    )
  root
  )
type method 
Outer0::NestedClass #apply(type Any clazz, Outer1::Path path) (
  Outer0::MirrorPr::Class::#apply(lib ) ::introspectReport(root path ) root=Outer0::MirrorPr::Class.#apply(lib:clazz).introspectReport(root:root, path:path)
  catch exception x (
    on Outer1::MetaGuard::NestedClassUnavailable error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'Introspection3
    })
    )
  root
  )
MirrorPr:{interface 
method 
Outer1::NestedClass introspectReport(fwd Outer1::NestedClass root, Outer2::Path path) exception Outer2::MetaGuard::NestedClassUnavailable 
method 
Outer1::Member introspectReportMember(fwd Outer1::NestedClass root, Outer2::Path path, Outer2::N memberN) exception Outer2::MetaGuard::MemberUnavailable, Void 
method 
Outer1::Type introspectReportType(fwd Outer1::NestedClass root, Outer2::Path path, Outer2::N memberN, Outer2::N typeN) exception Outer2::MetaGuard::MemberUnavailable, Void 
method 
Outer2::S introspectDocAsString(Outer2::Path path) exception Outer2::MetaGuard::NestedClassUnavailable 
method 
Outer2::S introspectDocAsString(Outer2::Path path, Outer2::N annotationN) exception Outer2::MetaGuard::NestedClassUnavailable, Void 
method 
type Any introspectDocPath(Outer2::Path path, Outer2::N annotationN) exception Outer2::MetaGuard::NestedClassUnavailable, Void 
Lib:{<:Outer1
type method 
Outer0 #apply(Library lib) 
mut method 
Library #lib() 
read method 
Library lib() 
method introspectReport(root path ) (
  Outer2::NestedClass::#apply_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(_root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 ) result=Outer2::NestedClass.#apply_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(_root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:root, path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:path, mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:this, record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:Outer2::Record.#apply(that:Outer0.#apply(lib:using Outer3::SafeOperators check introspectLibraryReport(that:this.lib(), path:path.binaryRepr()) error Outer3::System::Guard::PluginFailure.#stringParser(that:{'@stringU
  'SafeOperators.introspectLibraryReport
  }))))
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )
method introspectReportMember(root path memberN ) (
  Outer2::Record::dispatch(root path mirror memberN record ) result=Outer2::Record.dispatch(root:root, path:path, mirror:this, memberN:memberN, record:using Outer3::SafeOperators check introspectLibraryReportMember(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr()) exception void)
  catch error x (
    on Library exception Outer3::MetaGuard::DispatchMemberUnavailable.#apply(that:x)
    )
  result
  )
method introspectReportType(root path memberN typeN ) (
  Outer2::Type::#apply_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1(root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 ) result=Outer2::Type.#apply_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1(root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:root, path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:path, memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:memberN, typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:typeN, record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:Outer2::Record.#apply(that:Outer0.#apply(lib:using Outer3::SafeOperators check introspectLibraryReportType(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr(), typeN:typeN.binaryRepr()) exception void)))
  catch error x (
    on Library exception Outer3::MetaGuard::DispatchMemberUnavailable.#apply(that:x)
    )
  result
  )
method introspectDocAsString(path annotationN ) (
  Outer3::S::#stringParser(that ) result=Outer3::S.#stringParser(that:using Outer3::SafeOperators check introspectLibraryDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) exception void)
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )
method introspectDocAsString(path ) (
  Outer3::S::#stringParser(that ) result=Outer3::S.#stringParser(that:using Outer3::SafeOperators check introspectLibraryDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:Outer3::N.#numberParser(that:{'@stringU
  '0
  }).binaryRepr()) error Outer3::System::Guard::PluginFailure.#stringParser(that:{'@stringU
  'SafeOperators.introspectLibraryDocAsString
  }))
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )
method introspectDocPath(path annotationN ) (
  type Any result=using Outer3::SafeOperators check introspectLibraryDocPath(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) error Outer3::System::Guard::PluginFailure.#stringParser(that:{'@stringU
  'SafeOperators.introspectLibraryDocPath
  })
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )}
Class:{<:Outer1
type method 
Outer0 #apply(type Any lib) 
mut method 
type Any #lib() 
read method 
type Any lib() 
method introspectReport(root path ) (
  Outer2::Record::#apply(lib ) record=Outer2::Record.#apply(lib:using Outer3::SafeOperators check introspectTypeReport(that:this.lib(), path:path.binaryRepr()) error Outer3::System::Guard::PluginFailure.#stringParser(that:{'@stringU
  'SafeOperators.introspectTypeReport
  }))
  Outer2::Record::#apply(lib ) ::docOf(path ) ::annotations() ::top() ::referredClass() realRootType=record.docOf(path:Outer3::Path.#stringParser(that:{'@stringU
  'MyClass
  })).annotations().top().referredClass()
  Outer2::NestedClass::#apply_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(_root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1 ) result=Outer2::NestedClass.#apply_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(_root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:result, path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:Outer3::Path.#stringParser(that:{'@stringU
  'Outer0
  }), mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:Outer0.#apply(lib:realRootType), record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:record)
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )
method introspectReportMember(root path memberN ) (
  Outer2::Record::dispatch(root path mirror memberN record ) result=Outer2::Record.dispatch(root:root, path:path, mirror:this, memberN:memberN, record:using Outer3::SafeOperators check introspectTypeReportMember(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr()) exception void)
  catch error x (
    on Library exception Outer3::MetaGuard::DispatchMemberUnavailable.#apply(that:x)
    )
  result
  )
method introspectReportType(root path memberN typeN ) (
  Outer2::Type::#apply_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1(root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1 ) result=Outer2::Type.#apply_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1(root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:root, path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:path, memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:memberN, typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:typeN, record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1:Outer2::Record.#apply(that:Outer1::Lib.#apply(lib:using Outer3::SafeOperators check introspectTypeReportType(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr(), typeN:typeN.binaryRepr()) exception void)))
  catch error x (
    on Library exception Outer3::MetaGuard::DispatchMemberUnavailable.#apply(that:x)
    )
  result
  )
method introspectDocAsString(path annotationN ) (
  Outer3::S::#stringParser(that ) result=Outer3::S.#stringParser(that:using Outer3::SafeOperators check introspectTypeDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) exception void)
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )
method introspectDocAsString(path ) (
  Outer3::S::#stringParser(that ) result=Outer3::S.#stringParser(that:using Outer3::SafeOperators check introspectTypeDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:Outer3::N.#numberParser(that:{'@stringU
  '0
  }).binaryRepr()) error Outer3::System::Guard::PluginFailure.#stringParser(that:{'@stringU
  'SafeOperators.introspectTypeDocAsString
  }))
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )
method introspectDocPath(path annotationN ) (
  type Any result=using Outer3::SafeOperators check introspectTypeDocPath(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) error Outer3::System::Guard::PluginFailure.#stringParser(that:{'@stringU
  'SafeOperators.introspectTypeDocPath
  })
  catch error x (
    on Library exception Outer3::MetaGuard::NestedClassUnavailable.#apply(record:Outer2::Record.#apply(lib:x))
    )
  result
  )}}
Doc:{<:Outer2::Concept::ToS, Outer2::Concept::Named
VaraN_$%$%64_1_$%$%$%46_1_$%$%$%$%166_1_$%$%$%$%$%283_1_$%$%$%$%$%$%401_1_$%$%$%$%$%$%$%520_1_$%$%$%$%$%$%$%$%640_1__761_1:'@private
{
type method 
mut Outer0 #apply(Outer3::N::#numberParser(that ) inner) 
mut method 
Void inner(Outer3::N::#numberParser(that ) that) 
mut method 
Outer3::N::#numberParser(that ) #inner() }
Varresult1_$%$%65_1_$%$%$%47_1_$%$%$%$%167_1_$%$%$%$%$%284_1_$%$%$%$%$%$%402_1_$%$%$%$%$%$%$%521_1_$%$%$%$%$%$%$%$%641_1__762_1:'@private
{
type method 
mut Outer0 #apply(Outer1::Annotations::#begin() ::#end() inner) 
mut method 
Void inner(Outer1::Annotations::#begin() ::#end() that) 
mut method 
Outer1::Annotations::#begin() ::#end() #inner() }
type method '@private
Outer0 _private_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1(Library _binaryRepr_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1, Outer0::Annotations _annotations_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1) 
mut method '@private
Library #_binaryRepr_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1() 
read method '@private
Library _binaryRepr_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1() 
mut method '@private
Outer0::Annotations #_annotations_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1() 
read method '@private
Outer0::Annotations _annotations_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
Annotation:{<:Outer3::Concept::ToS, Outer3::Concept::Named
type method 
Outer0 #apply(Library _binaryRepr, Outer3::S text, Outer3::N index) 
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
mut method 
Outer3::S #text() 
read method 
Outer3::S text() 
mut method 
Outer3::N #index() 
read method 
Outer3::N index() 
method myName() Outer3::GetMyName.#apply(that:Outer0)
method toS() this.text()
method 
type Any referredClass() (
  Void unused=(
    Void unused0=return Outer2::Record.#apply(lib:this._binaryRepr()).that().introspectDocPath(path:Outer3::Path.#stringParser(that:{'@stringU
    'Outer0
    }), annotationN:this.index())
    catch exception x (
      on Outer3::MetaGuard::NestedClassUnavailable error Outer3::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Doc1
      }).#apply(that:x)
      
      on Void error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
      'Plugin introspection bug
      })
      )
    void
    )
  catch return result (
    on type Any result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer3::Bool hasReferredClass() (
  Outer0::text() ::#bangequal(that ) ::#and(that ) res=this.text().#bangequal(that:Outer3::S.#stringParser(that:{'@stringU
  '
  })).#and(that:this.text().isASCIIUpperCase(that:Outer3::N.#numberParser(that:{'@stringU
  '0
  })))
  res
  )}
Annotations:{' generic linked list class, elements of type Elem
<:Outer3::Concept::Named
Varres0_$%$%66_1_$%$%$%48_1_$%$%$%$%168_1_$%$%$%$%$%285_1_$%$%$%$%$%$%403_1_$%$%$%$%$%$%$%522_1_$%$%$%$%$%$%$%$%642_1__763_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%67_1_$%$%$%49_1_$%$%$%$%169_1_$%$%$%$%$%286_1_$%$%$%$%$%$%404_1_$%$%$%$%$%$%$%523_1_$%$%$%$%$%$%$%$%643_1__764_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer3::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer3::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer3::Bool.false()
          )
        (
          Void unused3=return Outer3::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer3::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Annotation top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer3::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer3::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer3::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%66_1_$%$%$%48_1_$%$%$%$%168_1_$%$%$%$%$%285_1_$%$%$%$%$%$%403_1_$%$%$%$%$%$%$%522_1_$%$%$%$%$%$%$%$%642_1__763_1 varres=Outer0::Varres0_$%$%66_1_$%$%$%48_1_$%$%$%$%168_1_$%$%$%$%$%285_1_$%$%$%$%$%$%403_1_$%$%$%$%$%$%$%522_1_$%$%$%$%$%$%$%$%642_1__763_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::Annotation that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%67_1_$%$%$%49_1_$%$%$%$%169_1_$%$%$%$%$%286_1_$%$%$%$%$%$%404_1_$%$%$%$%$%$%$%523_1_$%$%$%$%$%$%$%$%643_1__764_1 varres=Outer0::Varres1_$%$%67_1_$%$%$%49_1_$%$%$%$%169_1_$%$%$%$%$%286_1_$%$%$%$%$%$%404_1_$%$%$%$%$%$%$%523_1_$%$%$%$%$%$%$%$%643_1__764_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer4::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::Annotation #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer4::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::Annotation elem, Outer1::Cell nextCell) 
mut method 
Outer2::Annotation #elem() 
read method 
Outer2::Annotation elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer4::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer4::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer4::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer4::Bool #terminate() 
read method 
Outer4::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::Annotation #inner() this.that().#inner()
read method 
Void #close() void}}
type method 
Outer0 #apply(Library that) (
  Outer0::Annotations::#begin() ::#end() result=Outer0::Annotations.#begin().#end()
  Outer2::N::#numberParser(that ) aN=Outer2::N.#numberParser(that:{'@stringU
  '1
  })
  mut Outer0::Varresult1_$%$%65_1_$%$%$%47_1_$%$%$%$%167_1_$%$%$%$%$%284_1_$%$%$%$%$%$%402_1_$%$%$%$%$%$%$%521_1_$%$%$%$%$%$%$%$%641_1__762_1 varresult=Outer0::Varresult1_$%$%65_1_$%$%$%47_1_$%$%$%$%167_1_$%$%$%$%$%284_1_$%$%$%$%$%$%402_1_$%$%$%$%$%$%$%521_1_$%$%$%$%$%$%$%$%641_1__762_1.#apply(inner:result)
  mut Outer0::VaraN_$%$%64_1_$%$%$%46_1_$%$%$%$%166_1_$%$%$%$%$%283_1_$%$%$%$%$%$%401_1_$%$%$%$%$%$%$%520_1_$%$%$%$%$%$%$%$%640_1__761_1 varaN=Outer0::VaraN_$%$%64_1_$%$%$%46_1_$%$%$%$%166_1_$%$%$%$%$%283_1_$%$%$%$%$%$%401_1_$%$%$%$%$%$%$%520_1_$%$%$%$%$%$%$%$%640_1__761_1.#apply(inner:aN)
  Void unused=(
    Void unused0=loop (
      Void unused1=Outer2::Bool.true().#checkTrue()
      (' to be able to break
      
        Void unused2=varresult.inner(that:varresult.#inner().#add(that:Outer0::Annotation.#apply(_binaryRepr:that, text:Outer1::Record.#apply(lib:that).that().introspectDocAsString(path:Outer2::Path.#stringParser(that:{'@stringU
        'Outer0
        }), annotationN:varaN.#inner()), index:varaN.#inner())))
        varaN.inner(that:varaN.#inner().#plus(that:Outer2::N.#numberParser(that:{'@stringU
        '1
        })))
        )
      )
    catch exception unused3 (
      on Void void
      )
    void
    )
  catch exception x (
    on Outer2::MetaGuard::NestedClassUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'Doc2
    }).#apply(that:x)
    )
  (
    Void unused4=varresult.inner(that:varresult.#inner().#end())
    Outer0._private_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1(_binaryRepr_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1:that, _annotations_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1:varresult.#inner())
    )
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(that:that)
method 
Library binaryRepr() this._binaryRepr_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1()
method toS() (
  Void unused=(
    Void unused0=return Outer1::Record.#apply(lib:this._binaryRepr_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1()).that().introspectDocAsString(path:Outer2::Path.#stringParser(that:{'@stringU
    'Outer0
    }))
    catch exception x (
      on Outer2::MetaGuard::NestedClassUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Doc3
      }).#apply(that:x)
      )
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0::Annotations annotations() this._annotations_$%$%25_1_$%$%$%7_1_$%$%$%$%123_1_$%$%$%$%$%240_1_$%$%$%$%$%$%358_1_$%$%$%$%$%$%$%477_1_$%$%$%$%$%$%$%$%597_1__718_1()}
Record:{
type method 
Outer0 #apply(Outer1::MirrorPr that) 
mut method 
Outer1::MirrorPr #that() 
read method 
Outer1::MirrorPr that() 
type method 
Outer0 #apply(type Any clazz) Outer0.#apply(that:Outer1::MirrorPr::Class.#apply(lib:clazz))
type method 
Outer0 #apply(Library lib) Outer0.#apply(that:Outer1::MirrorPr::Lib.#apply(lib:lib))
method 
Void dbg() (
  Outer0::that() x=this.that()
  (
    Outer1::MirrorPr::Lib x0=(
      Void unused=return x
      catch return casted (
        on Outer1::MirrorPr::Lib casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
      'Sorry, can not print class mirrors
      }))
      )
    (
      Void unused1=Outer2::Debug.#apply(lib:x0.lib())
      void
      )
    )
  )
method 
Outer2::S #stringParser(Library that) (
  Void unused=(
    Outer2::Path::#stringParser(that ) path=Outer2::Path.#stringParser(that:that)
    Void unused0=return this.that().introspectDocAsString(path:path)
    catch exception x (
      on Outer2::MetaGuard::MemberUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Record1
      }).#apply(that:x)
      )
    void
    )
  catch return result (
    on Outer2::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Doc docOf(Outer2::Path path) (
  Void unused=(
    Void unused0=(
      Outer0::that() mirror=this.that()
      (
        Outer1::MirrorPr::Lib mirror0=(
          Void unused2=return mirror
          catch return casted (
            on Outer1::MirrorPr::Lib casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused3 (
          on Void void
          )
        (
          Void unused4=return Outer1::Doc.#apply(that:Outer2::SafeOperators.renameClass(that:mirror0.lib(), src:path, dest:Outer2::Path.#stringParser(that:{'@stringU
          'Outer0
          })))
          void
          )
        )
      )
    Void unused1=error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'Record2
    })
    void
    )
  catch return result (
    on Outer1::Doc result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
RootForMember:' toPutAs private
{interface 
method 
Outer2::Member #apply(fwd Outer2::NestedClass root) }
RootForNested:' toPutAs private
{<:Outer1::RootForMember
type method 
Outer0 #apply(Outer3::Path path, Outer2::MirrorPr mirror, Outer1 _report) 
mut method 
Outer3::Path #path() 
read method 
Outer3::Path path() 
mut method 
Outer2::MirrorPr #mirror() 
read method 
Outer2::MirrorPr mirror() 
mut method 
Outer1 #_report() 
read method 
Outer1 _report() 
method #apply(root ) (
  Outer3::Path::#stringParser(that ) path=Outer3::Path.#stringParser(that:this._report().#stringParser(that:{'@stringU
  'Key
  }).binaryRepr())
  Outer2::NestedClass.#apply_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(_root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:root, path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:path, mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:this.mirror(), record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1:this._report())
  )}
RootForMethod:' toPutAs private
{<:Outer1::RootForMember
type method 
Outer0 #apply(Outer3::Path path, Outer3::N memberN, Outer1 _report) 
mut method 
Outer3::Path #path() 
read method 
Outer3::Path path() 
mut method 
Outer3::N #memberN() 
read method 
Outer3::N memberN() 
mut method 
Outer1 #_report() 
read method 
Outer1 _report() 
method #apply(root ) Outer2::Method.#apply_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1(_root_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1:root, path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1:this.path(), memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1:this.memberN(), record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1:this._report())}
type method 
Outer1::Member dispatch(fwd Outer1::NestedClass root, Outer2::Path path, Outer1::MirrorPr mirror, Outer2::N memberN, Library record) (
  Outer0::#apply(lib ) _report=Outer0.#apply(lib:record)
  Outer0::RootForMember result=(
    Void unused=(
      Void unused0=(
        Outer0::#apply(lib ) ::#stringParser(that ) x=_report.#stringParser(that:{'@stringU
        'MemberKind
        })
        (
          Outer0::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
          'InterfaceImplementedMethod
          }))
          (
            Void unused1=cond.#checkTrue()
            catch exception unused2 (
              on Void (
                Outer0::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                'ImplementedMethod
                }))
                (
                  Void unused3=cond0.#checkTrue()
                  catch exception unused4 (
                    on Void (
                      Outer0::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond1=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                      'AbstractMethod
                      }))
                      (
                        Void unused5=cond1.#checkTrue()
                        catch exception unused6 (
                          on Void (
                            Outer0::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond2=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                            'NestedClass
                            }))
                            (
                              Void unused7=cond2.#checkTrue()
                              catch exception unused8 (
                                on Void error Outer2::Assert::ObservedBug.#apply(text:Outer2::S.#stringParser(that:{'@stringU
                                'invalid member kind 
                                }).#begin().#add(that:x).#end().#stringParser(that:{'@stringU
                                '
                                }))
                                )
                              return Outer0::RootForNested.#apply(path:path, mirror:mirror, _report:_report)
                              )
                            )
                          )
                        return Outer0::RootForMethod.#apply(path:path, memberN:memberN, _report:_report)
                        )
                      )
                    )
                  return Outer0::RootForMethod.#apply(path:path, memberN:memberN, _report:_report)
                  )
                )
              )
            return Outer0::RootForMethod.#apply(path:path, memberN:memberN, _report:_report)
            )
          )
        )
      void
      )
    catch return result0 (
      on Outer0::RootForMember result0
      )
    error {'@stringU
    'CurlyBlock-Should be unreachable code
    }
    )
  result.#apply(root:root)
  )}
Member:{interface <:Outer2::Concept::ToS, Outer2::Concept::Named, Outer2::Concept::Equals}
Members:{' generic linked list class, elements of type Elem
<:Outer2::Concept::Named
Varres0_$%$%68_1_$%$%$%50_1_$%$%$%$%170_1_$%$%$%$%$%287_1_$%$%$%$%$%$%405_1_$%$%$%$%$%$%$%524_1_$%$%$%$%$%$%$%$%644_1__765_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%69_1_$%$%$%51_1_$%$%$%$%171_1_$%$%$%$%$%288_1_$%$%$%$%$%$%406_1_$%$%$%$%$%$%$%525_1_$%$%$%$%$%$%$%$%645_1__766_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer2::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer2::Bool.false()
          )
        (
          Void unused3=return Outer2::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Member top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer2::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer2::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer2::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%68_1_$%$%$%50_1_$%$%$%$%170_1_$%$%$%$%$%287_1_$%$%$%$%$%$%405_1_$%$%$%$%$%$%$%524_1_$%$%$%$%$%$%$%$%644_1__765_1 varres=Outer0::Varres0_$%$%68_1_$%$%$%50_1_$%$%$%$%170_1_$%$%$%$%$%287_1_$%$%$%$%$%$%405_1_$%$%$%$%$%$%$%524_1_$%$%$%$%$%$%$%$%644_1__765_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::Member that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%69_1_$%$%$%51_1_$%$%$%$%171_1_$%$%$%$%$%288_1_$%$%$%$%$%$%406_1_$%$%$%$%$%$%$%525_1_$%$%$%$%$%$%$%$%645_1__766_1 varres=Outer0::Varres1_$%$%69_1_$%$%$%51_1_$%$%$%$%171_1_$%$%$%$%$%288_1_$%$%$%$%$%$%406_1_$%$%$%$%$%$%$%525_1_$%$%$%$%$%$%$%$%645_1__766_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer3::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::Member #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::Member elem, Outer1::Cell nextCell) 
mut method 
Outer2::Member #elem() 
read method 
Outer2::Member elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer3::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer3::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer3::Bool #terminate() 
read method 
Outer3::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::Member #inner() this.that().#inner()
read method 
Void #close() void}}
Method:{<:Outer1::Member, Outer2::Concept::ToS, Outer2::Concept::Named, Outer2::Concept::Equals
VarpN_$%$%70_1_$%$%$%52_1_$%$%$%$%172_1_$%$%$%$%$%289_1_$%$%$%$%$%$%407_1_$%$%$%$%$%$%$%526_1_$%$%$%$%$%$%$%$%646_1__767_1:'@private
{
type method 
mut Outer0 #apply(Outer3::N::#numberParser(that ) inner) 
mut method 
Void inner(Outer3::N::#numberParser(that ) that) 
mut method 
Outer3::N::#numberParser(that ) #inner() }
Varresult2_$%$%71_1_$%$%$%53_1_$%$%$%$%173_1_$%$%$%$%$%290_1_$%$%$%$%$%$%408_1_$%$%$%$%$%$%$%527_1_$%$%$%$%$%$%$%$%647_1__768_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Types::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Types::#begin() ::#end() that) 
mut method 
Outer2::Types::#begin() ::#end() #inner() }
type method '@private
Outer0 #apply_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1(fwd Outer1::NestedClass _root_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1, Outer2::Path path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1, Outer2::N memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1, Outer1::Record record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1) 
mut method '@private
Outer1::NestedClass #_root_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
read method '@private
Outer1::NestedClass _root_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
mut method '@private
Outer2::Path #path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
read method '@private
Outer2::Path path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
mut method '@private
Outer2::N #memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
read method '@private
Outer2::N memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
mut method '@private
Outer1::Record #record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
read method '@private
Outer1::Record record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method toS() Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
'[
}).#begin().#add(that:this.allAsString()).#end().#stringParser(that:{'@stringU
']
}))
method 
Outer2::Bool #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=(
      Outer0::path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() ::#bangequal(that ) cond=this.path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().#bangequal(that:that.path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1())
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer2::Bool.false()
        )
      )
    Void unused1=(
      Outer0::memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1() ::#bangequal(that ) cond0=this.memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().#bangequal(that:this.memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1())
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return Outer2::Bool.false()
        )
      )
    Void unused2=return this.root().#equalequal(that:that.root())
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Doc doc() this.record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
'MemberDoc
}))
method 
Outer2::S thisMdf() this.record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().#stringParser(that:{'@stringU
'ThisMdf
})
method ' invariant NestedClass(...).nestedClassFromRoot(path).pathFromRoot()==path
Outer2::Path pathFromRoot() this.path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1()
method 
Outer2::Selector selector() Outer2::Selector.#stringParser(that:this.record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().#stringParser(that:{'@stringU
'Key
}).binaryRepr())
method 
Outer2::S methodKind() this.record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().#stringParser(that:{'@stringU
'MemberKind
})
method 
Outer2::S allAsString() this.record_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1().#stringParser(that:{'@stringU
'AllAsString
})
method 
Outer1::Type returnType() (
  Void unused=(
    Void unused0=return this.root().mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().introspectReportType(root:this.root(), path:this.path_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1(), memberN:this.memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1(), typeN:Outer2::N.#numberParser(that:{'@stringU
    '0
    }))
    catch exception x (
      on Outer2::MetaGuard::MemberUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Method1
      }).#apply(that:x)
      
      on Void error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'void was thrown
      })
      )
    void
    )
  catch return result (
    on Outer1::Type result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Types exceptions() error Outer2::Assert::NotImplementedYet.#stringParser(that:{'@stringU
'
})
method 
Outer1::Types parameterTypes() (
  Void unused=(
    Outer1::Types::#begin() ::#end() result=Outer1::Types.#begin().#end()
    Outer2::N::#numberParser(that ) pN=Outer2::N.#numberParser(that:{'@stringU
    '1
    })
    mut Outer0::Varresult2_$%$%71_1_$%$%$%53_1_$%$%$%$%173_1_$%$%$%$%$%290_1_$%$%$%$%$%$%408_1_$%$%$%$%$%$%$%527_1_$%$%$%$%$%$%$%$%647_1__768_1 varresult=Outer0::Varresult2_$%$%71_1_$%$%$%53_1_$%$%$%$%173_1_$%$%$%$%$%290_1_$%$%$%$%$%$%408_1_$%$%$%$%$%$%$%527_1_$%$%$%$%$%$%$%$%647_1__768_1.#apply(inner:result)
    mut Outer0::VarpN_$%$%70_1_$%$%$%52_1_$%$%$%$%172_1_$%$%$%$%$%289_1_$%$%$%$%$%$%407_1_$%$%$%$%$%$%$%526_1_$%$%$%$%$%$%$%$%646_1__767_1 varpN=Outer0::VarpN_$%$%70_1_$%$%$%52_1_$%$%$%$%172_1_$%$%$%$%$%289_1_$%$%$%$%$%$%407_1_$%$%$%$%$%$%$%526_1_$%$%$%$%$%$%$%$%646_1__767_1.#apply(inner:pN)
    Void unused0=(
      Void unused2=loop (
        Void unused3=Outer2::Bool.true().#checkTrue()
        (' to be able to break
        
          Outer1::Type ti=this.root().mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().introspectReportType(root:this.root(), path:this.pathFromRoot(), memberN:this.memberN_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1(), typeN:varpN.#inner())
          Void unused4=varresult.inner(that:varresult.#inner().#add(that:ti))
          varpN.inner(that:varpN.#inner().#plus(that:Outer2::N.#numberParser(that:{'@stringU
          '1
          })))
          )
        )
      catch exception unused5 (
        on Void void
        )
      void
      )
    Void unused1=return varresult.#inner().#end()
    catch exception err (
      on Outer2::MetaGuard::MemberUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Method2
      }).#apply(that:err)
      )
    void
    )
  catch return result0 (
    on Outer1::Types result0
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool isPrivate() (
  Void unused=(
    Void unused0=(
      Outer0::doc() ::annotations() ::vals() ann=this.doc().annotations().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ann.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=ann.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer0::doc() ::annotations() ::vals() ::#inner() ::toS() ::#equalequal(that ) cond=ann.#inner().toS().#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                'private
                }))
                (
                  Void unused10=cond.#checkTrue()
                  catch exception unused11 (
                    on Void void
                    )
                  return Outer2::Bool.true()
                  )
                )
              )
            catch exception unused12 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused13=ann.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer2::Bool (
            Void unused14=ann.#close()
            return propagated0
            )
          )
        ann.#close()
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::NestedClass root() this._root_$%$%26_1_$%$%$%8_1_$%$%$%$%124_1_$%$%$%$%$%241_1_$%$%$%$%$%$%359_1_$%$%$%$%$%$%$%478_1_$%$%$%$%$%$%$%$%598_1__719_1()}
Methods:{' generic linked list class, elements of type Elem
<:Outer2::Concept::Named
Varres0_$%$%72_1_$%$%$%54_1_$%$%$%$%174_1_$%$%$%$%$%291_1_$%$%$%$%$%$%409_1_$%$%$%$%$%$%$%528_1_$%$%$%$%$%$%$%$%648_1__769_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%73_1_$%$%$%55_1_$%$%$%$%175_1_$%$%$%$%$%292_1_$%$%$%$%$%$%410_1_$%$%$%$%$%$%$%529_1_$%$%$%$%$%$%$%$%649_1__770_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer2::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer2::Bool.false()
          )
        (
          Void unused3=return Outer2::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Method top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer2::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer2::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer2::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%72_1_$%$%$%54_1_$%$%$%$%174_1_$%$%$%$%$%291_1_$%$%$%$%$%$%409_1_$%$%$%$%$%$%$%528_1_$%$%$%$%$%$%$%$%648_1__769_1 varres=Outer0::Varres0_$%$%72_1_$%$%$%54_1_$%$%$%$%174_1_$%$%$%$%$%291_1_$%$%$%$%$%$%409_1_$%$%$%$%$%$%$%528_1_$%$%$%$%$%$%$%$%648_1__769_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::Method that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%73_1_$%$%$%55_1_$%$%$%$%175_1_$%$%$%$%$%292_1_$%$%$%$%$%$%410_1_$%$%$%$%$%$%$%529_1_$%$%$%$%$%$%$%$%649_1__770_1 varres=Outer0::Varres1_$%$%73_1_$%$%$%55_1_$%$%$%$%175_1_$%$%$%$%$%292_1_$%$%$%$%$%$%410_1_$%$%$%$%$%$%$%529_1_$%$%$%$%$%$%$%$%649_1__770_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer3::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::Method #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::Method elem, Outer1::Cell nextCell) 
mut method 
Outer2::Method #elem() 
read method 
Outer2::Method elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer3::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer3::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer3::Bool #terminate() 
read method 
Outer3::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::Method #inner() this.that().#inner()
read method 
Void #close() void}}
NestedClass:{'findMeNestedClass
<:Outer1::Member, Outer2::Concept::ToS, Outer2::Concept::Named, Outer2::Concept::Equals
VarmN_$%$%74_1_$%$%$%56_1_$%$%$%$%176_1_$%$%$%$%$%293_1_$%$%$%$%$%$%411_1_$%$%$%$%$%$%$%530_1_$%$%$%$%$%$%$%$%650_1__771_1:'@private
{
type method 
mut Outer0 #apply(Outer3::N::#numberParser(that ) inner) 
mut method 
Void inner(Outer3::N::#numberParser(that ) that) 
mut method 
Outer3::N::#numberParser(that ) #inner() }
Varresult3_$%$%75_1_$%$%$%57_1_$%$%$%$%177_1_$%$%$%$%$%294_1_$%$%$%$%$%$%412_1_$%$%$%$%$%$%$%531_1_$%$%$%$%$%$%$%$%651_1__772_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Members::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Members::#begin() ::#end() that) 
mut method 
Outer2::Members::#begin() ::#end() #inner() }
Varaccumulator1_$%$%76_1_$%$%$%58_1_$%$%$%$%178_1_$%$%$%$%$%295_1_$%$%$%$%$%$%413_1_$%$%$%$%$%$%$%532_1_$%$%$%$%$%$%$%$%652_1__773_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Methods::#begin() inner) 
mut method 
Void inner(Outer2::Methods::#begin() that) 
mut method 
Outer2::Methods::#begin() #inner() }
Varaccumulator2_$%$%77_1_$%$%$%59_1_$%$%$%$%179_1_$%$%$%$%$%296_1_$%$%$%$%$%$%414_1_$%$%$%$%$%$%$%533_1_$%$%$%$%$%$%$%$%653_1__774_1:'@private
{
type method 
mut Outer0 #apply(Outer2::NestedClasses::#begin() inner) 
mut method 
Void inner(Outer2::NestedClasses::#begin() that) 
mut method 
Outer2::NestedClasses::#begin() #inner() }
Varresult4_$%$%78_1_$%$%$%60_1_$%$%$%$%180_1_$%$%$%$%$%297_1_$%$%$%$%$%$%415_1_$%$%$%$%$%$%$%534_1_$%$%$%$%$%$%$%$%654_1__775_1:'@private
{
type method 
mut Outer0 #apply(Outer2::NestedClasses::#begin() ::#add(that ) ::#end() inner) 
mut method 
Void inner(Outer2::NestedClasses::#begin() ::#add(that ) ::#end() that) 
mut method 
Outer2::NestedClasses::#begin() ::#add(that ) ::#end() #inner() }
VartN_$%$%79_1_$%$%$%61_1_$%$%$%$%181_1_$%$%$%$%$%298_1_$%$%$%$%$%$%416_1_$%$%$%$%$%$%$%535_1_$%$%$%$%$%$%$%$%655_1__776_1:'@private
{
type method 
mut Outer0 #apply(Outer3::N::#numberParser(that ) inner) 
mut method 
Void inner(Outer3::N::#numberParser(that ) that) 
mut method 
Outer3::N::#numberParser(that ) #inner() }
Varresult5_$%$%80_1_$%$%$%62_1_$%$%$%$%182_1_$%$%$%$%$%299_1_$%$%$%$%$%$%417_1_$%$%$%$%$%$%$%536_1_$%$%$%$%$%$%$%$%656_1__777_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Types::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Types::#begin() ::#end() that) 
mut method 
Outer2::Types::#begin() ::#end() #inner() }
Varnew_$%$%81_1_$%$%$%63_1_$%$%$%$%183_1_$%$%$%$%$%300_1_$%$%$%$%$%$%418_1_$%$%$%$%$%$%$%537_1_$%$%$%$%$%$%$%$%657_1__778_1:'@private
{
type method 
mut Outer0 #apply(Outer1::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) inner) 
mut method 
Void inner(Outer1::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) that) 
mut method 
Outer1::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) #inner() }
Varresult6_$%$%82_1_$%$%$%64_1_$%$%$%$%184_1_$%$%$%$%$%301_1_$%$%$%$%$%$%419_1_$%$%$%$%$%$%$%538_1_$%$%$%$%$%$%$%$%658_1__779_1:'@private
{
type method 
mut Outer0 #apply(Outer1::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) inner) 
mut method 
Void inner(Outer1::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) that) 
mut method 
Outer1::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) #inner() }
Varextra_$%$%83_1_$%$%$%65_1_$%$%$%$%185_1_$%$%$%$%$%302_1_$%$%$%$%$%$%420_1_$%$%$%$%$%$%$%539_1_$%$%$%$%$%$%$%$%659_1__780_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Types::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Types::#begin() ::#end() that) 
mut method 
Outer2::Types::#begin() ::#end() #inner() }
Varresult7_$%$%84_1_$%$%$%66_1_$%$%$%$%186_1_$%$%$%$%$%303_1_$%$%$%$%$%$%421_1_$%$%$%$%$%$%$%540_1_$%$%$%$%$%$%$%$%660_1__781_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Types::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Types::#begin() ::#end() that) 
mut method 
Outer2::Types::#begin() ::#end() #inner() }
Varaccumulator3_$%$%85_1_$%$%$%67_1_$%$%$%$%187_1_$%$%$%$%$%304_1_$%$%$%$%$%$%422_1_$%$%$%$%$%$%$%541_1_$%$%$%$%$%$%$%$%661_1__782_1:'@private
{
type method 
mut Outer0 #apply(Outer3::Count::#begin() inner) 
mut method 
Void inner(Outer3::Count::#begin() that) 
mut method 
Outer3::Count::#begin() #inner() }
Varaccumulator4_$%$%86_1_$%$%$%68_1_$%$%$%$%188_1_$%$%$%$%$%305_1_$%$%$%$%$%$%423_1_$%$%$%$%$%$%$%542_1_$%$%$%$%$%$%$%$%662_1__783_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Types::#begin() inner) 
mut method 
Void inner(Outer2::Types::#begin() that) 
mut method 
Outer2::Types::#begin() #inner() }
VarabsMethods_$%$%87_1_$%$%$%69_1_$%$%$%$%189_1_$%$%$%$%$%306_1_$%$%$%$%$%$%424_1_$%$%$%$%$%$%$%543_1_$%$%$%$%$%$%$%$%663_1__784_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Methods::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Methods::#begin() ::#end() that) 
mut method 
Outer2::Methods::#begin() ::#end() #inner() }
VarhavePrivate_$%$%88_1_$%$%$%70_1_$%$%$%$%190_1_$%$%$%$%$%307_1_$%$%$%$%$%$%425_1_$%$%$%$%$%$%$%544_1_$%$%$%$%$%$%$%$%664_1__785_1:'@private
{
type method 
mut Outer0 #apply(Outer3::Bool::false() inner) 
mut method 
Void inner(Outer3::Bool::false() that) 
mut method 
Outer3::Bool::false() #inner() }
Varaccumulator5_$%$%89_1_$%$%$%71_1_$%$%$%$%191_1_$%$%$%$%$%308_1_$%$%$%$%$%$%426_1_$%$%$%$%$%$%$%545_1_$%$%$%$%$%$%$%$%665_1__786_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Methods::#begin() inner) 
mut method 
Void inner(Outer2::Methods::#begin() that) 
mut method 
Outer2::Methods::#begin() #inner() }
Varaccumulator6_$%$%90_1_$%$%$%72_1_$%$%$%$%192_1_$%$%$%$%$%309_1_$%$%$%$%$%$%427_1_$%$%$%$%$%$%$%546_1_$%$%$%$%$%$%$%$%666_1__787_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Methods::#begin() inner) 
mut method 
Void inner(Outer2::Methods::#begin() that) 
mut method 
Outer2::Methods::#begin() #inner() }
Varresult8_$%$%91_1_$%$%$%73_1_$%$%$%$%193_1_$%$%$%$%$%310_1_$%$%$%$%$%$%428_1_$%$%$%$%$%$%$%547_1_$%$%$%$%$%$%$%$%667_1__788_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Methods::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::Methods::#begin() ::#end() that) 
mut method 
Outer2::Methods::#begin() ::#end() #inner() }
Varaccumulator7_$%$%92_1_$%$%$%74_1_$%$%$%$%194_1_$%$%$%$%$%311_1_$%$%$%$%$%$%429_1_$%$%$%$%$%$%$%548_1_$%$%$%$%$%$%$%$%668_1__789_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Methods::#begin() inner) 
mut method 
Void inner(Outer2::Methods::#begin() that) 
mut method 
Outer2::Methods::#begin() #inner() }
type method '@private
Outer0 #apply_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(fwd Outer0 _root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1, Outer2::Path path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1, Outer1::MirrorPr mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1, Outer1::Record record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1) 
mut method '@private
Outer0 #_root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
read method '@private
Outer0 _root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
mut method '@private
Outer2::Path #path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
read method '@private
Outer2::Path path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
mut method '@private
Outer1::MirrorPr #mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
read method '@private
Outer1::MirrorPr mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
mut method '@private
Outer1::Record #record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
read method '@private
Outer1::Record record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method toS() Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
'[
}).#begin().#add(that:this.allAsString()).#end().#stringParser(that:{'@stringU
']
}))
method 
Outer2::Bool #equalequal(Outer0 that) (
  Void unused=(
    Void unused0=(
      Outer0::path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::#bangequal(that ) cond=this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#bangequal(that:that.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1())
      (
        Void unused5=cond.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return Outer2::Bool.false()
        )
      )
    Void unused1=(
      Outer0::path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::#bangequal(that ) cond0=this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#bangequal(that:Outer2::Path.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused7=cond0.#checkTrue()
        catch exception unused8 (
          on Void void
          )
        return this.root().#equalequal(that:that.root())
        )
      )
    Outer0::hasExternalType() ext=this.hasExternalType()
    Void unused2=(
      Outer0::hasExternalType() ::#bangequal(that ) cond1=ext.#bangequal(that:that.hasExternalType())
      (
        Void unused9=cond1.#checkTrue()
        catch exception unused10 (
          on Void void
          )
        return Outer2::Bool.false()
        )
      )
    Void unused3=(
      Void unused11=ext.#checkTrue()
      catch exception unused12 (
        on Void void
        )
      return this.externalTypeToS().#equalequal(that:that.externalTypeToS())
      )
    Void unused4=return this.allAsString().#equalequal(that:that.allAsString())
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 root() this._root_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1()
method 'error for Outer0
Outer1::Doc nestedDoc() (
  Void unused=(
    Outer0::path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::#equalequal(that ) cond=this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#equalequal(that:Outer2::Path.#stringParser(that:{'@stringU
    'Outer0
    }))
    (
      Void unused0=cond.#checkTrue()
      catch exception unused1 (
        on Void void
        )
      error Outer2::Guard::Operation.#stringParser(that:{'@stringU
      'NestedClass.nestedDoc()  The NestedClass Object refers to Outer0
      })
      )
    )
  this.record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
  'MemberDoc
  }))
  )
method 'of the library literal
Outer1::Doc doc() this.record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
'Doc
}))
method 
Outer2::Path pathFromRoot() this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1()
method 
Outer2::Bool hasExternalType() (
  Void unused=(
    Void unused0=(
      Outer0::path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::#bangequal(that ) cond=this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#bangequal(that:Outer2::Path.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer2::Bool.false()
        )
      )
    Void unused1=(
      Outer0::mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() mirror=this.mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1()
      (
        Outer1::MirrorPr::Class mirror0=(
          Void unused5=return mirror
          catch return casted (
            on Outer1::MirrorPr::Class casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused6 (
          on Void void
          )
        (
          Void unused7=return Outer2::Bool.true()
          void
          )
        )
      )
    Void unused2=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
type Any externalType() (
  Void unused=(
    Void unused0=(
      Outer0::path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::#bangequal(that ) cond=this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#bangequal(that:Outer2::Path.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        error Outer2::Guard::Operation.#apply(text:Outer2::S.#stringParser(that:{'@stringU
        'NestedClass.externalType() The NestedClass Object refers to 
        }).#begin().#add(that:this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1()).#end().#stringParser(that:{'@stringU
        '
        }))
        )
      )
    Void unused1=(
      Outer0::mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() mirror=this.mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1()
      (
        Outer1::MirrorPr::Class mirror1=(
          Void unused4=return mirror
          catch return casted0 (
            on Outer1::MirrorPr::Class casted0
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused5 (
          on Void (
            Outer1::MirrorPr::Lib mirror0=(
              Void unused6=return mirror
              catch return casted (
                on Outer1::MirrorPr::Lib casted
                
                on Any exception void
                )
              error {'@stringU
              'CastT-Should be unreachable code
              }
              )
            catch exception unused7 (
              on Void error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
              'NestedClass1
              })
              )
            (
              Void unused8=error Outer2::Guard::Operation.#stringParser(that:{'@stringU
              'NestedClass.externalType() The NestedClass Object is unbound
              })
              void
              )
            )
          )
        (
          Void unused9=return mirror1.lib()
          void
          )
        )
      )
    void
    )
  catch return result (
    on type Any result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::S externalTypeToS() (
  Void unused=(
    Void unused0=(
      Outer0::path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::#bangequal(that ) cond=this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#bangequal(that:Outer2::Path.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        error Outer2::Guard::Operation.#apply(text:Outer2::S.#stringParser(that:{'@stringU
        'NestedClass.externalTypeToS() The NestedClass Object refers to 
        }).#begin().#add(that:this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1()).#end().#stringParser(that:{'@stringU
        '
        }))
        )
      )
    Outer0::record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::docOf(path ) doc=this.record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
    'MyClass
    }))
    Outer0::record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::docOf(path ) ::annotations() ::top() ::toS() nameAndPrefix=doc.annotations().top().toS()
    Outer0::record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::docOf(path ) ::annotations() ::top() ::toS() ::firstIndexOf(that ) sep=nameAndPrefix.firstIndexOf(that:Outer2::S.#stringParser(that:{'@stringU
    '::
    }))
    Outer0::record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::docOf(path ) ::annotations() ::top() ::toS() ::#apply(start ) name=nameAndPrefix.#apply(start:sep.#plus(that:Outer2::N.#numberParser(that:{'@stringU
    '2
    })))
    Outer2::N::fromS(that ) prefix=Outer2::N.fromS(that:nameAndPrefix.#apply(start:Outer2::N.#numberParser(that:{'@stringU
    '5
    }), end:sep))
    Void unused1=Outer2::Assert::$.#begin().#add(that:prefix.#right(that:Outer2::N.#numberParser(that:{'@stringU
    '0
    }))).#end()
    Void unused2=return Outer2::S.#stringParser(that:{'@stringU
    'Outer
    }).#begin().#add(that:prefix.#less(that:Outer2::N.#numberParser(that:{'@stringU
    '1
    }))).#end().#stringParser(that:{'@stringU
    '::
    }).#plusplus(that:name)
    void
    )
  catch return result (
    on Outer2::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::S classKind() this.record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#stringParser(that:{'@stringU
'ClassKind
})
method 
Outer2::S allAsString() this.record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().#stringParser(that:{'@stringU
'AllAsString
})
method 
Outer1::Members members() (
  Outer1::Members::#begin() ::#end() result=Outer1::Members.#begin().#end()
  Outer2::N::#numberParser(that ) mN=Outer2::N.#numberParser(that:{'@stringU
  '1
  })
  mut Outer0::Varresult3_$%$%75_1_$%$%$%57_1_$%$%$%$%177_1_$%$%$%$%$%294_1_$%$%$%$%$%$%412_1_$%$%$%$%$%$%$%531_1_$%$%$%$%$%$%$%$%651_1__772_1 varresult=Outer0::Varresult3_$%$%75_1_$%$%$%57_1_$%$%$%$%177_1_$%$%$%$%$%294_1_$%$%$%$%$%$%412_1_$%$%$%$%$%$%$%531_1_$%$%$%$%$%$%$%$%651_1__772_1.#apply(inner:result)
  mut Outer0::VarmN_$%$%74_1_$%$%$%56_1_$%$%$%$%176_1_$%$%$%$%$%293_1_$%$%$%$%$%$%411_1_$%$%$%$%$%$%$%530_1_$%$%$%$%$%$%$%$%650_1__771_1 varmN=Outer0::VarmN_$%$%74_1_$%$%$%56_1_$%$%$%$%176_1_$%$%$%$%$%293_1_$%$%$%$%$%$%411_1_$%$%$%$%$%$%$%530_1_$%$%$%$%$%$%$%$%650_1__771_1.#apply(inner:mN)
  Void unused=(
    Void unused0=loop (
      Void unused1=Outer2::Bool.true().#checkTrue()
      (' to be able to break
      'Debug(S"Iteration "[mN]"")
      
        Void unused2=varresult.inner(that:varresult.#inner().#add(that:this.mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().introspectReportMember(root:this, path:this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(), memberN:varmN.#inner())))
        catch exception x (
          on Outer2::MetaGuard::MemberUnavailable exception void
          )
        varmN.inner(that:varmN.#inner().#plus(that:Outer2::N.#numberParser(that:{'@stringU
        '1
        })))
        )
      )
    catch exception unused3 (
      on Void void
      )
    void
    )
  varresult.#inner()
  )
method 
Outer1::Methods methods() (
  Outer1::Methods::#begin() accumulator=Outer1::Methods.#begin()
  mut Outer0::Varaccumulator1_$%$%76_1_$%$%$%58_1_$%$%$%$%178_1_$%$%$%$%$%295_1_$%$%$%$%$%$%413_1_$%$%$%$%$%$%$%532_1_$%$%$%$%$%$%$%$%652_1__773_1 varaccumulator=Outer0::Varaccumulator1_$%$%76_1_$%$%$%58_1_$%$%$%$%178_1_$%$%$%$%$%295_1_$%$%$%$%$%$%413_1_$%$%$%$%$%$%$%532_1_$%$%$%$%$%$%$%$%652_1__773_1.#apply(inner:accumulator)
  Void unused=(
    Outer0::members() ::vals() m=this.members().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=m.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=m.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            (
              Outer1::Method m0=(
                Void unused8=return m.#inner()
                catch return casted (
                  on Outer1::Method casted
                  
                  on Any exception void
                  )
                error {'@stringU
                'CastT-Should be unreachable code
                }
                )
              catch exception unused9 (
                on Void void
                )
              (
                Void unused10=varaccumulator.inner(that:varaccumulator.#inner().#add(that:m0))
                void
                )
              )
            )
          catch exception unused11 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused12=m.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused13=m.#close()
          return propagated0
          )
        )
      m.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
method 
Outer1::NestedClasses nestedClasses() (
  Outer1::NestedClasses::#begin() accumulator=Outer1::NestedClasses.#begin()
  mut Outer0::Varaccumulator2_$%$%77_1_$%$%$%59_1_$%$%$%$%179_1_$%$%$%$%$%296_1_$%$%$%$%$%$%414_1_$%$%$%$%$%$%$%533_1_$%$%$%$%$%$%$%$%653_1__774_1 varaccumulator=Outer0::Varaccumulator2_$%$%77_1_$%$%$%59_1_$%$%$%$%179_1_$%$%$%$%$%296_1_$%$%$%$%$%$%414_1_$%$%$%$%$%$%$%533_1_$%$%$%$%$%$%$%$%653_1__774_1.#apply(inner:accumulator)
  Void unused=(
    Outer0::members() ::vals() m=this.members().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=m.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=m.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            (
              Outer0 m0=(
                Void unused8=return m.#inner()
                catch return casted (
                  on Outer0 casted
                  
                  on Any exception void
                  )
                error {'@stringU
                'CastT-Should be unreachable code
                }
                )
              catch exception unused9 (
                on Void void
                )
              (
                Void unused10=varaccumulator.inner(that:varaccumulator.#inner().#add(that:m0))
                void
                )
              )
            )
          catch exception unused11 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused12=m.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused13=m.#close()
          return propagated0
          )
        )
      m.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
method 
Outer1::NestedClasses transitivelyNestedClasses() (
  Outer1::NestedClasses::#begin() ::#add(that ) ::#end() result=Outer1::NestedClasses.#begin().#add(that:this).#end()
  mut Outer0::Varresult4_$%$%78_1_$%$%$%60_1_$%$%$%$%180_1_$%$%$%$%$%297_1_$%$%$%$%$%$%415_1_$%$%$%$%$%$%$%534_1_$%$%$%$%$%$%$%$%654_1__775_1 varresult=Outer0::Varresult4_$%$%78_1_$%$%$%60_1_$%$%$%$%180_1_$%$%$%$%$%297_1_$%$%$%$%$%$%415_1_$%$%$%$%$%$%$%534_1_$%$%$%$%$%$%$%$%654_1__775_1.#apply(inner:result)
  Void unused=(
    Outer0::nestedClasses() ::vals() nc=this.nestedClasses().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=nc.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=nc.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varresult.inner(that:varresult.#inner().#plusplus(that:nc.#inner().transitivelyNestedClasses()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=nc.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=nc.#close()
          return propagated0
          )
        )
      nc.#close()
      )
    )
  varresult.#inner()
  )
method 
Outer1::Types implementedInterfaces() (
  Outer1::Types::#begin() ::#end() result=Outer1::Types.#begin().#end()
  Outer2::N::#numberParser(that ) tN=Outer2::N.#numberParser(that:{'@stringU
  '1
  })
  mut Outer0::Varresult5_$%$%80_1_$%$%$%62_1_$%$%$%$%182_1_$%$%$%$%$%299_1_$%$%$%$%$%$%417_1_$%$%$%$%$%$%$%536_1_$%$%$%$%$%$%$%$%656_1__777_1 varresult=Outer0::Varresult5_$%$%80_1_$%$%$%62_1_$%$%$%$%182_1_$%$%$%$%$%299_1_$%$%$%$%$%$%417_1_$%$%$%$%$%$%$%536_1_$%$%$%$%$%$%$%$%656_1__777_1.#apply(inner:result)
  mut Outer0::VartN_$%$%79_1_$%$%$%61_1_$%$%$%$%181_1_$%$%$%$%$%298_1_$%$%$%$%$%$%416_1_$%$%$%$%$%$%$%535_1_$%$%$%$%$%$%$%$%655_1__776_1 vartN=Outer0::VartN_$%$%79_1_$%$%$%61_1_$%$%$%$%181_1_$%$%$%$%$%298_1_$%$%$%$%$%$%416_1_$%$%$%$%$%$%$%535_1_$%$%$%$%$%$%$%$%655_1__776_1.#apply(inner:tN)
  Void unused=(
    Void unused0=loop (
      Void unused1=Outer2::Bool.true().#checkTrue()
      (' to be able to break
      
        Void unused2=varresult.inner(that:varresult.#inner().#add(that:this.mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().introspectReportType(root:this, path:this.path_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1(), memberN:Outer2::N.#numberParser(that:{'@stringU
        '0
        }), typeN:vartN.#inner())))
        vartN.inner(that:vartN.#inner().#plus(that:Outer2::N.#numberParser(that:{'@stringU
        '1
        })))
        )
      )
    catch exception unused3 (
      on Void void
      )
    void
    )
  catch exception x (
    on Outer2::MetaGuard::MemberUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'NestedClass3
    }).#apply(that:x)
    )
  varresult.#inner()
  )
method 
Outer1::Types transitivelyImplementedInterfaces() (
  Void unused=(
    Outer0::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) result=this.removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that:this.implementedInterfaces())
    Outer0::removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(that ) new=result
    mut Outer0::Varresult6_$%$%82_1_$%$%$%64_1_$%$%$%$%184_1_$%$%$%$%$%301_1_$%$%$%$%$%$%419_1_$%$%$%$%$%$%$%538_1_$%$%$%$%$%$%$%$%658_1__779_1 varresult=Outer0::Varresult6_$%$%82_1_$%$%$%64_1_$%$%$%$%184_1_$%$%$%$%$%301_1_$%$%$%$%$%$%419_1_$%$%$%$%$%$%$%538_1_$%$%$%$%$%$%$%$%658_1__779_1.#apply(inner:result)
    mut Outer0::Varnew_$%$%81_1_$%$%$%63_1_$%$%$%$%183_1_$%$%$%$%$%300_1_$%$%$%$%$%$%418_1_$%$%$%$%$%$%$%537_1_$%$%$%$%$%$%$%$%657_1__778_1 varnew=Outer0::Varnew_$%$%81_1_$%$%$%63_1_$%$%$%$%183_1_$%$%$%$%$%300_1_$%$%$%$%$%$%418_1_$%$%$%$%$%$%$%537_1_$%$%$%$%$%$%$%$%657_1__778_1.#apply(inner:new)
    Void unused0=loop (
      Outer1::Types::#begin() ::#end() extra=Outer1::Types.#begin().#end()
      mut Outer0::Varextra_$%$%83_1_$%$%$%65_1_$%$%$%$%185_1_$%$%$%$%$%302_1_$%$%$%$%$%$%420_1_$%$%$%$%$%$%$%539_1_$%$%$%$%$%$%$%$%659_1__780_1 varextra=Outer0::Varextra_$%$%83_1_$%$%$%65_1_$%$%$%$%185_1_$%$%$%$%$%302_1_$%$%$%$%$%$%420_1_$%$%$%$%$%$%$%539_1_$%$%$%$%$%$%$%$%659_1__780_1.#apply(inner:extra)
      Void unused1=(
        Outer0::Varnew_$%$%81_1_$%$%$%63_1_$%$%$%$%183_1_$%$%$%$%$%300_1_$%$%$%$%$%$%418_1_$%$%$%$%$%$%$%537_1_$%$%$%$%$%$%$%$%657_1__778_1::#inner() ::vals() t=varnew.#inner().vals()
        (
          Void unused4=(
            Void unused5=(
              Void unused6=loop (
                Void unused7=t.#next()
                catch exception unused8 (
                  on Void (
                    Void unused9=(
                      Void unused10=t.#checkEnd()
                      catch exception unused11 (
                        on Void void
                        )
                      void
                      )
                    exception void
                    )
                  )
                (
                  Outer0::Varnew_$%$%81_1_$%$%$%63_1_$%$%$%$%183_1_$%$%$%$%$%300_1_$%$%$%$%$%$%418_1_$%$%$%$%$%$%$%537_1_$%$%$%$%$%$%$%$%657_1__778_1::#inner() ::vals() ::#inner() ::referencedPath() ::implementedInterfaces() impl=t.#inner().referencedPath().implementedInterfaces()
                  varextra.inner(that:varextra.#inner().#plusplus(that:this.remove_$%$%30_1_$%$%$%12_1_$%$%$%$%128_1_$%$%$%$%$%245_1_$%$%$%$%$%$%363_1_$%$%$%$%$%$%$%482_1_$%$%$%$%$%$%$%$%602_1__723_1(that:impl, from:varresult.#inner())))
                  )
                )
              catch exception unused12 (
                on Void void
                )
              void
              )
            catch exception propagated (
              on Any (
                Void unused13=t.#close()
                exception propagated
                )
              )
            void
            )
          catch return propagated0 (
            on Outer1::Types (
              Void unused14=t.#close()
              return propagated0
              )
            )
          t.#close()
          )
        )
      Void unused2=(
        Outer0::Varextra_$%$%83_1_$%$%$%65_1_$%$%$%$%185_1_$%$%$%$%$%302_1_$%$%$%$%$%$%420_1_$%$%$%$%$%$%$%539_1_$%$%$%$%$%$%$%$%659_1__780_1::#inner() ::isEmpty() cond=varextra.#inner().isEmpty()
        (
          Void unused15=cond.#checkTrue()
          catch exception unused16 (
            on Void void
            )
          return varresult.#inner()
          )
        )
      Void unused3=varnew.inner(that:varextra.#inner())
      varresult.inner(that:varresult.#inner().#plusplus(that:varextra.#inner()))
      )
    void
    )
  catch return result0 (
    on Outer1::Types result0
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method '@private
Outer1::Types removeDup_$%$%28_1_$%$%$%10_1_$%$%$%$%126_1_$%$%$%$%$%243_1_$%$%$%$%$%$%361_1_$%$%$%$%$%$%$%480_1_$%$%$%$%$%$%$%$%600_1__721_1(Outer1::Types that) (
  Outer1::Types::#begin() ::#end() result=Outer1::Types.#begin().#end()
  mut Outer0::Varresult7_$%$%84_1_$%$%$%66_1_$%$%$%$%186_1_$%$%$%$%$%303_1_$%$%$%$%$%$%421_1_$%$%$%$%$%$%$%540_1_$%$%$%$%$%$%$%$%660_1__781_1 varresult=Outer0::Varresult7_$%$%84_1_$%$%$%66_1_$%$%$%$%186_1_$%$%$%$%$%303_1_$%$%$%$%$%$%421_1_$%$%$%$%$%$%$%540_1_$%$%$%$%$%$%$%$%660_1__781_1.#apply(inner:result)
  Void unused=(
    Outer1::Types::vals() t=that.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=t.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=t.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            (
              Outer0::select_$%$%29_1_$%$%$%11_1_$%$%$%$%127_1_$%$%$%$%$%244_1_$%$%$%$%$%$%362_1_$%$%$%$%$%$%$%481_1_$%$%$%$%$%$%$%$%601_1__722_1(that from ) cond=this.select_$%$%29_1_$%$%$%11_1_$%$%$%$%127_1_$%$%$%$%$%244_1_$%$%$%$%$%$%362_1_$%$%$%$%$%$%$%481_1_$%$%$%$%$%$%$%$%601_1__722_1(that:t.#inner(), from:varresult.#inner())
              (
                Void unused8=cond.#checkTrue()
                catch exception unused9 (
                  on Void void
                  )
                varresult.inner(that:varresult.#inner().#add(that:t.#inner()))
                )
              )
            )
          catch exception unused10 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused11=t.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused12=t.#close()
          return propagated0
          )
        )
      t.#close()
      )
    )
  varresult.#inner()
  )
method '@private
Outer2::Bool select_$%$%29_1_$%$%$%11_1_$%$%$%$%127_1_$%$%$%$%$%244_1_$%$%$%$%$%$%362_1_$%$%$%$%$%$%$%481_1_$%$%$%$%$%$%$%$%601_1__722_1(Outer1::Type that, Outer1::Types from) (
  Outer1::Type::referencedPath() rp=that.referencedPath()
  (
    Outer2::Count::#begin() accumulator=Outer2::Count.#begin()
    mut Outer0::Varaccumulator3_$%$%85_1_$%$%$%67_1_$%$%$%$%187_1_$%$%$%$%$%304_1_$%$%$%$%$%$%422_1_$%$%$%$%$%$%$%541_1_$%$%$%$%$%$%$%$%661_1__782_1 varaccumulator=Outer0::Varaccumulator3_$%$%85_1_$%$%$%67_1_$%$%$%$%187_1_$%$%$%$%$%304_1_$%$%$%$%$%$%422_1_$%$%$%$%$%$%$%541_1_$%$%$%$%$%$%$%$%661_1__782_1.#apply(inner:accumulator)
    Void unused=(
      Outer1::Types::vals() t=from.vals()
      (
        Void unused0=(
          Void unused1=(
            Void unused2=loop (
              Void unused3=t.#next()
              catch exception unused4 (
                on Void (
                  Void unused5=(
                    Void unused6=t.#checkEnd()
                    catch exception unused7 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varaccumulator.inner(that:varaccumulator.#inner().#add(that:t.#inner().referencedPath().#equalequal(that:rp)))
              )
            catch exception unused8 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused9=t.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Any (
            Void unused10=t.#close()
            return propagated0
            )
          )
        t.#close()
        )
      )
    varaccumulator.#inner().#end()
    ).#equalequal(that:Outer2::N.#numberParser(that:{'@stringU
  '0
  }))
  )
method '@private
Outer1::Types remove_$%$%30_1_$%$%$%12_1_$%$%$%$%128_1_$%$%$%$%$%245_1_$%$%$%$%$%$%363_1_$%$%$%$%$%$%$%482_1_$%$%$%$%$%$%$%$%602_1__723_1(Outer1::Types that, Outer1::Types from) (
  Outer1::Types::#begin() accumulator=Outer1::Types.#begin()
  mut Outer0::Varaccumulator4_$%$%86_1_$%$%$%68_1_$%$%$%$%188_1_$%$%$%$%$%305_1_$%$%$%$%$%$%423_1_$%$%$%$%$%$%$%542_1_$%$%$%$%$%$%$%$%662_1__783_1 varaccumulator=Outer0::Varaccumulator4_$%$%86_1_$%$%$%68_1_$%$%$%$%188_1_$%$%$%$%$%305_1_$%$%$%$%$%$%423_1_$%$%$%$%$%$%$%542_1_$%$%$%$%$%$%$%$%662_1__783_1.#apply(inner:accumulator)
  Void unused=(
    Outer1::Types::vals() t=that.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=t.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=t.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            (
              Outer0::select_$%$%29_1_$%$%$%11_1_$%$%$%$%127_1_$%$%$%$%$%244_1_$%$%$%$%$%$%362_1_$%$%$%$%$%$%$%481_1_$%$%$%$%$%$%$%$%601_1__722_1(that from ) cond=this.select_$%$%29_1_$%$%$%11_1_$%$%$%$%127_1_$%$%$%$%$%244_1_$%$%$%$%$%$%362_1_$%$%$%$%$%$%$%481_1_$%$%$%$%$%$%$%$%601_1__722_1(that:t.#inner(), from:from)
              (
                Void unused8=cond.#checkTrue()
                catch exception unused9 (
                  on Void void
                  )
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:t.#inner()))
                )
              )
            )
          catch exception unused10 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused11=t.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused12=t.#close()
          return propagated0
          )
        )
      t.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
method 
Outer1::Methods stateCandidate() (
  Outer2::Bool::false() havePrivate=Outer2::Bool.false()
  mut Outer0::VarhavePrivate_$%$%88_1_$%$%$%70_1_$%$%$%$%190_1_$%$%$%$%$%307_1_$%$%$%$%$%$%425_1_$%$%$%$%$%$%$%544_1_$%$%$%$%$%$%$%$%664_1__785_1 varhavePrivate=Outer0::VarhavePrivate_$%$%88_1_$%$%$%70_1_$%$%$%$%190_1_$%$%$%$%$%307_1_$%$%$%$%$%$%425_1_$%$%$%$%$%$%$%544_1_$%$%$%$%$%$%$%$%664_1__785_1.#apply(inner:havePrivate)
  Outer1::Methods::#begin() ::#end() absMethods=(
    Outer1::Methods::#begin() accumulator=Outer1::Methods.#begin()
    mut Outer0::Varaccumulator5_$%$%89_1_$%$%$%71_1_$%$%$%$%191_1_$%$%$%$%$%308_1_$%$%$%$%$%$%426_1_$%$%$%$%$%$%$%545_1_$%$%$%$%$%$%$%$%665_1__786_1 varaccumulator=Outer0::Varaccumulator5_$%$%89_1_$%$%$%71_1_$%$%$%$%191_1_$%$%$%$%$%308_1_$%$%$%$%$%$%426_1_$%$%$%$%$%$%$%545_1_$%$%$%$%$%$%$%$%665_1__786_1.#apply(inner:accumulator)
    Void unused0=(
      Outer0::methods() ::vals() m=this.methods().vals()
      (
        Void unused1=(
          Void unused2=(
            Void unused3=loop (
              Void unused4=m.#next()
              catch exception unused5 (
                on Void (
                  Void unused6=(
                    Void unused7=m.#checkEnd()
                    catch exception unused8 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer0::methods() ::vals() ::#inner() ::methodKind() ::#equalequal(that ) cond=m.#inner().methodKind().#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                'AbstractMethod
                }))
                (
                  Void unused9=cond.#checkTrue()
                  catch exception unused10 (
                    on Void void
                    )
                  varaccumulator.inner(that:varaccumulator.#inner().#add(that:(
                    Void unused11=varhavePrivate.inner(that:varhavePrivate.#inner().#or(that:m.#inner().isPrivate()))
                    m.#inner()
                    )))
                  )
                )
              )
            catch exception unused12 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused13=m.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Any (
            Void unused14=m.#close()
            return propagated0
            )
          )
        m.#close()
        )
      )
    varaccumulator.#inner().#end()
    )
  mut Outer0::VarabsMethods_$%$%87_1_$%$%$%69_1_$%$%$%$%189_1_$%$%$%$%$%306_1_$%$%$%$%$%$%424_1_$%$%$%$%$%$%$%543_1_$%$%$%$%$%$%$%$%663_1__784_1 varabsMethods=Outer0::VarabsMethods_$%$%87_1_$%$%$%69_1_$%$%$%$%189_1_$%$%$%$%$%306_1_$%$%$%$%$%$%424_1_$%$%$%$%$%$%$%543_1_$%$%$%$%$%$%$%$%663_1__784_1.#apply(inner:absMethods)
  Void unused=(
    Outer0::VarhavePrivate_$%$%88_1_$%$%$%70_1_$%$%$%$%190_1_$%$%$%$%$%307_1_$%$%$%$%$%$%425_1_$%$%$%$%$%$%$%544_1_$%$%$%$%$%$%$%$%664_1__785_1::#inner() cond0=varhavePrivate.#inner()
    (
      Void unused15=cond0.#checkTrue()
      catch exception unused16 (
        on Void void
        )
      varabsMethods.inner(that:(
        Outer1::Methods::#begin() accumulator0=Outer1::Methods.#begin()
        mut Outer0::Varaccumulator6_$%$%90_1_$%$%$%72_1_$%$%$%$%192_1_$%$%$%$%$%309_1_$%$%$%$%$%$%427_1_$%$%$%$%$%$%$%546_1_$%$%$%$%$%$%$%$%666_1__787_1 varaccumulator0=Outer0::Varaccumulator6_$%$%90_1_$%$%$%72_1_$%$%$%$%192_1_$%$%$%$%$%309_1_$%$%$%$%$%$%427_1_$%$%$%$%$%$%$%546_1_$%$%$%$%$%$%$%$%666_1__787_1.#apply(inner:accumulator0)
        Void unused17=(
          Outer0::VarabsMethods_$%$%87_1_$%$%$%69_1_$%$%$%$%189_1_$%$%$%$%$%306_1_$%$%$%$%$%$%424_1_$%$%$%$%$%$%$%543_1_$%$%$%$%$%$%$%$%663_1__784_1::#inner() ::vals() a=varabsMethods.#inner().vals()
          (
            Void unused18=(
              Void unused19=(
                Void unused20=loop (
                  Void unused21=a.#next()
                  catch exception unused22 (
                    on Void (
                      Void unused23=(
                        Void unused24=a.#checkEnd()
                        catch exception unused25 (
                          on Void void
                          )
                        void
                        )
                      exception void
                      )
                    )
                  (
                    Outer0::VarabsMethods_$%$%87_1_$%$%$%69_1_$%$%$%$%189_1_$%$%$%$%$%306_1_$%$%$%$%$%$%424_1_$%$%$%$%$%$%$%543_1_$%$%$%$%$%$%$%$%663_1__784_1::#inner() ::vals() ::#inner() ::isPrivate() cond1=a.#inner().isPrivate()
                    (
                      Void unused26=cond1.#checkTrue()
                      catch exception unused27 (
                        on Void void
                        )
                      varaccumulator0.inner(that:varaccumulator0.#inner().#add(that:a.#inner()))
                      )
                    )
                  )
                catch exception unused28 (
                  on Void void
                  )
                void
                )
              catch exception propagated1 (
                on Any (
                  Void unused29=a.#close()
                  exception propagated1
                  )
                )
              void
              )
            catch return propagated2 (
              on Any (
                Void unused30=a.#close()
                return propagated2
                )
              )
            a.#close()
            )
          )
        varaccumulator0.#inner().#end()
        ))
      )
    )
  varabsMethods.#inner()
  )
method 
Outer1::Methods state() (
  Void unused=(
    Outer1::Methods::#begin() ::#end() result=Outer1::Methods.#begin().#end()
    Outer0::stateCandidate() stateCandidate=this.stateCandidate()
    Outer1::Methods::#begin() ::#end() ::top() constr=(
      Outer1::Methods::#begin() ::#end() classMethods=(
        Outer1::Methods::#begin() accumulator=Outer1::Methods.#begin()
        mut Outer0::Varaccumulator7_$%$%92_1_$%$%$%74_1_$%$%$%$%194_1_$%$%$%$%$%311_1_$%$%$%$%$%$%429_1_$%$%$%$%$%$%$%548_1_$%$%$%$%$%$%$%$%668_1__789_1 varaccumulator=Outer0::Varaccumulator7_$%$%92_1_$%$%$%74_1_$%$%$%$%194_1_$%$%$%$%$%311_1_$%$%$%$%$%$%429_1_$%$%$%$%$%$%$%548_1_$%$%$%$%$%$%$%$%668_1__789_1.#apply(inner:accumulator)
        Void unused5=(
          Outer0::stateCandidate() ::vals() m=stateCandidate.vals()
          (
            Void unused6=(
              Void unused7=(
                Void unused8=loop (
                  Void unused9=m.#next()
                  catch exception unused10 (
                    on Void (
                      Void unused11=(
                        Void unused12=m.#checkEnd()
                        catch exception unused13 (
                          on Void void
                          )
                        void
                        )
                      exception void
                      )
                    )
                  (
                    Outer0::stateCandidate() ::vals() ::#inner() ::thisMdf() ::#equalequal(that ) cond=m.#inner().thisMdf().#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                    'type
                    }))
                    (
                      Void unused14=cond.#checkTrue()
                      catch exception unused15 (
                        on Void void
                        )
                      varaccumulator.inner(that:varaccumulator.#inner().#add(that:m.#inner()))
                      )
                    )
                  )
                catch exception unused16 (
                  on Void void
                  )
                void
                )
              catch exception propagated (
                on Any (
                  Void unused17=m.#close()
                  exception propagated
                  )
                )
              void
              )
            catch return propagated0 (
              on Outer1::Methods (
                Void unused18=m.#close()
                return propagated0
                )
              )
            m.#close()
            )
          )
        varaccumulator.#inner().#end()
        )
      Void unused3=(
        Outer1::Methods::#begin() ::#end() ::isEmpty() cond0=classMethods.isEmpty()
        (
          Void unused19=cond0.#checkTrue()
          catch exception unused20 (
            on Void void
            )
          return result
          )
        )
      Void unused4=(
        Outer1::Methods::#begin() ::#end() ::pop() ::isEmpty() ::#bang() cond1=classMethods.pop().isEmpty().#bang()
        (
          Void unused21=cond1.#checkTrue()
          catch exception unused22 (
            on Void void
            )
          return result
          )
        )
      classMethods.top()
      )
    mut Outer0::Varresult8_$%$%91_1_$%$%$%73_1_$%$%$%$%193_1_$%$%$%$%$%310_1_$%$%$%$%$%$%428_1_$%$%$%$%$%$%$%547_1_$%$%$%$%$%$%$%$%667_1__788_1 varresult=Outer0::Varresult8_$%$%91_1_$%$%$%73_1_$%$%$%$%193_1_$%$%$%$%$%310_1_$%$%$%$%$%$%428_1_$%$%$%$%$%$%$%547_1_$%$%$%$%$%$%$%$%667_1__788_1.#apply(inner:result)
    Void unused0=varresult.inner(that:varresult.#inner().#add(that:constr))
    Outer1::Methods::#begin() ::#end() ::top() ::selector() ::names() names=constr.selector().names()
    Void unused1=(
      Outer1::Methods::#begin() ::#end() ::top() ::selector() ::names() ::vals() name=names.vals()
      (
        Void unused23=(
          Void unused24=(
            Void unused25=loop (
              Void unused26=name.#next()
              catch exception unused27 (
                on Void (
                  Void unused28=(
                    Void unused29=name.#checkEnd()
                    catch exception unused30 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer2::Selector::fromS(that ) getter=Outer2::Selector.fromS(that:name.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
                '()
                })))
                Outer2::Selector::fromS(that ) exposer=Outer2::Selector.fromS(that:Outer2::S.#stringParser(that:{'@stringU
                '#
                }).#plusplus(that:name.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
                '()
                }))))
                Outer2::Selector::fromS(that ) setter=Outer2::Selector.fromS(that:name.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
                '(that)
                })))
                (
                  Outer0::stateCandidate() ::vals() f=stateCandidate.vals()
                  (
                    Void unused31=(
                      Void unused32=(
                        Void unused33=loop (
                          Void unused34=f.#next()
                          catch exception unused35 (
                            on Void (
                              Void unused36=(
                                Void unused37=f.#checkEnd()
                                catch exception unused38 (
                                  on Void void
                                  )
                                void
                                )
                              exception void
                              )
                            )
                          (
                            Outer0::stateCandidate() ::vals() ::#inner() ::selector() ::#equalequal(that ) ::#or(that ) ::#or(that ) cond2=f.#inner().selector().#equalequal(that:getter).#or(that:f.#inner().selector().#equalequal(that:exposer)).#or(that:f.#inner().selector().#equalequal(that:setter))
                            (
                              Void unused39=cond2.#checkTrue()
                              catch exception unused40 (
                                on Void void
                                )
                              varresult.inner(that:varresult.#inner().#add(that:f.#inner()))
                              )
                            )
                          )
                        catch exception unused41 (
                          on Void void
                          )
                        void
                        )
                      catch exception propagated1 (
                        on Any (
                          Void unused42=f.#close()
                          exception propagated1
                          )
                        )
                      void
                      )
                    catch return propagated2 (
                      on Outer1::Methods (
                        Void unused43=f.#close()
                        return propagated2
                        )
                      )
                    f.#close()
                    )
                  )
                )
              )
            catch exception unused44 (
              on Void void
              )
            void
            )
          catch exception propagated3 (
            on Any (
              Void unused45=name.#close()
              exception propagated3
              )
            )
          void
          )
        catch return propagated4 (
          on Outer1::Methods (
            Void unused46=name.#close()
            return propagated4
            )
          )
        name.#close()
        )
      )
    Void unused2=return varresult.#inner().#end()
    void
    )
  catch return result0 (
    on Outer1::Methods result0
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Method methodFromSelector(Outer2::Selector that) exception Outer2::MetaGuard::MethodUnavailable (
  Void unused=(
    Void unused0=(
      Outer0::methods() ::vals() meth=this.methods().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=meth.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=meth.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer0::methods() ::vals() ::#inner() ::selector() ::#equalequal(that ) cond=meth.#inner().selector().#equalequal(that:that)
                (
                  Void unused10=cond.#checkTrue()
                  catch exception unused11 (
                    on Void void
                    )
                  return meth.#inner()
                  )
                )
              )
            catch exception unused12 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused13=meth.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer1::Method (
            Void unused14=meth.#close()
            return propagated0
            )
          )
        meth.#close()
        )
      )
    Void unused1=exception Outer2::MetaGuard::MethodUnavailable.#apply(path:this.pathFromRoot(), selector:that, isPrivate:Outer2::Bool.false())
    void
    )
  catch return result (
    on Outer1::Method result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool has(Outer2::Selector selector) (
  Void unused0=(
    Outer0::methodFromSelector(that ) unused=this.methodFromSelector(that:selector)
    catch exception unused1 (
      on Outer2::MetaGuard::MemberUnavailable return Outer2::Bool.false()
      )
    (
      Void unused2=return Outer2::Bool.true()
      void
      )
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 nestedClassFromRoot(Outer2::Path that) exception Outer2::MetaGuard::NestedClassUnavailable (
  Void unused=(
    Void unused0=(
      Outer2::Path::#equalequal(that ) cond=that.#equalequal(that:Outer2::Path.#stringParser(that:{'@stringU
      'Outer0
      }))
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return this.root()
        )
      )
    Outer0::record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::docOf(path ) ::annotations() ::top() myClass=this.record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
    'MyClass
    })).annotations().top()
    Void unused1=(
      Outer0::record_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1() ::docOf(path ) ::annotations() ::top() ::hasReferredClass() ::#bang() cond0=myClass.hasReferredClass().#bang()
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return this.mirror_$%$%27_1_$%$%$%9_1_$%$%$%$%125_1_$%$%$%$%$%242_1_$%$%$%$%$%$%360_1_$%$%$%$%$%$%$%479_1_$%$%$%$%$%$%$%$%599_1__720_1().introspectReport(root:this.root(), path:that)
        )
      )
    Void unused2=return Outer1.#apply(clazz:myClass.referredClass(), path:that)
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool has(Outer2::Path fromRoot) (
  Outer0::nestedClassFromRoot(that ) unused=this.nestedClassFromRoot(that:fromRoot)
  catch exception unused0 (
    on Outer2::MetaGuard::MemberUnavailable Outer2::Bool.false()
    )
  Outer2::Bool.true()
  )
method 
Outer2::Bool isPrivate() (
  Void unused=(
    Void unused0=(
      Outer0::nestedDoc() ::annotations() ::vals() ann=this.nestedDoc().annotations().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ann.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=ann.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer0::nestedDoc() ::annotations() ::vals() ::#inner() ::toS() ::#equalequal(that ) cond=ann.#inner().toS().#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                'private
                }))
                (
                  Void unused10=cond.#checkTrue()
                  catch exception unused11 (
                    on Void void
                    )
                  return Outer2::Bool.true()
                  )
                )
              )
            catch exception unused12 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused13=ann.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer2::Bool (
            Void unused14=ann.#close()
            return propagated0
            )
          )
        ann.#close()
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
NestedClasses:{' generic linked list class, elements of type Elem
<:Outer2::Concept::Named
Varres0_$%$%93_1_$%$%$%75_1_$%$%$%$%195_1_$%$%$%$%$%312_1_$%$%$%$%$%$%430_1_$%$%$%$%$%$%$%549_1_$%$%$%$%$%$%$%$%669_1__790_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%94_1_$%$%$%76_1_$%$%$%$%196_1_$%$%$%$%$%313_1_$%$%$%$%$%$%431_1_$%$%$%$%$%$%$%550_1_$%$%$%$%$%$%$%$%670_1__791_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer2::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer2::Bool.false()
          )
        (
          Void unused3=return Outer2::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::NestedClass top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer2::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer2::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer2::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%93_1_$%$%$%75_1_$%$%$%$%195_1_$%$%$%$%$%312_1_$%$%$%$%$%$%430_1_$%$%$%$%$%$%$%549_1_$%$%$%$%$%$%$%$%669_1__790_1 varres=Outer0::Varres0_$%$%93_1_$%$%$%75_1_$%$%$%$%195_1_$%$%$%$%$%312_1_$%$%$%$%$%$%430_1_$%$%$%$%$%$%$%549_1_$%$%$%$%$%$%$%$%669_1__790_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::NestedClass that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%94_1_$%$%$%76_1_$%$%$%$%196_1_$%$%$%$%$%313_1_$%$%$%$%$%$%431_1_$%$%$%$%$%$%$%550_1_$%$%$%$%$%$%$%$%670_1__791_1 varres=Outer0::Varres1_$%$%94_1_$%$%$%76_1_$%$%$%$%196_1_$%$%$%$%$%313_1_$%$%$%$%$%$%431_1_$%$%$%$%$%$%$%550_1_$%$%$%$%$%$%$%$%670_1__791_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer3::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::NestedClass #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::NestedClass elem, Outer1::Cell nextCell) 
mut method 
Outer2::NestedClass #elem() 
read method 
Outer2::NestedClass elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer3::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer3::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer3::Bool #terminate() 
read method 
Outer3::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::NestedClass #inner() this.that().#inner()
read method 
Void #close() void}}
Type:{<:Outer2::Concept::ToS, Outer2::Concept::Named
type method '@private
Outer0 #apply_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1(fwd Outer1::NestedClass root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1, Outer2::Path path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1, Outer2::N memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1, Outer2::N typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1, Outer1::Record record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1) 
mut method '@private
Outer1::NestedClass #root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
read method '@private
Outer1::NestedClass root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
mut method '@private
Outer2::Path #path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
read method '@private
Outer2::Path path_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
mut method '@private
Outer2::N #memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
read method '@private
Outer2::N memberN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
mut method '@private
Outer2::N #typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
read method '@private
Outer2::N typeN_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
mut method '@private
Outer1::Record #record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
read method '@private
Outer1::Record record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method toS() Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
'[
}).#begin().#add(that:this.allAsString()).#end().#stringParser(that:{'@stringU
']
}))
method 
Outer2::S allAsString() this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().#stringParser(that:{'@stringU
'AllAsString
})
method 
Outer2::S typeKind() this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().#stringParser(that:{'@stringU
'TypeKind
})
method 
Outer2::S mdf() (
  Void unused=('error on AliasUnresolvable
  
    Void unused0=(
      Outer0::typeKind() ::#bangequal(that ) cond=this.typeKind().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      'AliasUnresolvable
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().#stringParser(that:{'@stringU
        'Mdf
        })
        )
      )
    Void unused1=error Outer2::Guard::Operation.#stringParser(that:{'@stringU
    'AliasUnresolvable type, mdf unknown
    })
    void
    )
  catch return result (
    on Outer2::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method '@private
Outer1::NestedClass referencedPath_$%$%32_1_$%$%$%14_1_$%$%$%$%130_1_$%$%$%$%$%247_1_$%$%$%$%$%$%365_1_$%$%$%$%$%$%$%484_1_$%$%$%$%$%$%$%$%604_1__725_1(Outer1::Doc::Annotation ann) (
  Void unused=(
    Void unused0=(
      Outer1::Doc::Annotation::hasReferredClass() cond=ann.hasReferredClass()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer1.#apply(clazz:ann.referredClass())
        )
      )
    Outer2::S sPath=ann.toS().#apply(start:Outer2::N.#numberParser(that:{'@stringU
    '2
    }))
    Void unused1=(
      Outer2::S::#equalequal(that ) cond0=sPath.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void void
          )
        return this.root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1()
        )
      )
    Outer2::Path path=Outer2::Path.fromS(that:sPath)
    Void unused2=return this.root_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().nestedClassFromRoot(that:path)
    catch exception x (
      on Outer2::MetaGuard::NestedClassUnavailable error Outer2::Assert::ObservedBug.#stringParser(that:{'@stringU
      'Type refers to unexistent path
      })
      )
    void
    )
  catch return result (
    on Outer1::NestedClass result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::NestedClass referencedPath() this.referencedPath_$%$%32_1_$%$%$%14_1_$%$%$%$%130_1_$%$%$%$%$%247_1_$%$%$%$%$%$%365_1_$%$%$%$%$%$%$%484_1_$%$%$%$%$%$%$%$%604_1__725_1(ann:this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
'Path
})).annotations().top())
method 
Outer1::NestedClass resolvedReferencedPath() (
  Void unused=('error on AliasUnresolvable
  
    Void unused0=(
      Outer0::typeKind() ::#bangequal(that ) cond=this.typeKind().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      'AliasUnresolvable
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return this.referencedPath_$%$%32_1_$%$%$%14_1_$%$%$%$%130_1_$%$%$%$%$%247_1_$%$%$%$%$%$%365_1_$%$%$%$%$%$%$%484_1_$%$%$%$%$%$%$%$%604_1__725_1(ann:this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
        'ResolvedPath
        })).annotations().top())
        )
      )
    Void unused1=error Outer2::Guard::Operation.#stringParser(that:{'@stringU
    'AliasUnresolvable type, mdf unknown
    })
    void
    )
  catch return result (
    on Outer1::NestedClass result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool partial() this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().#stringParser(that:{'@stringU
'Ph
}).#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
'true
}))
method 
Outer2::Bool resolvedPartial() this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().#stringParser(that:{'@stringU
'ResolvedPh
}).#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
'true
}))
method 
Outer2::S suffix() (
  Void unused=('error on Normal
  
    Void unused0=(
      Outer0::typeKind() ::#equalequal(that ) cond=this.typeKind().#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
      'Normal
      }))
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        error Outer2::Guard::Operation.#stringParser(that:{'@stringU
        'Normal types have no suffix
        })
        )
      )
    Void unused1=return this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().#stringParser(that:{'@stringU
    'Ph
    })
    void
    )
  catch return result (
    on Outer2::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Doc doc() this.record_$%$%31_1_$%$%$%13_1_$%$%$%$%129_1_$%$%$%$%$%246_1_$%$%$%$%$%$%364_1_$%$%$%$%$%$%$%483_1_$%$%$%$%$%$%$%$%603_1__724_1().docOf(path:Outer2::Path.#stringParser(that:{'@stringU
'Doc
}))}
Types:{' generic linked list class, elements of type Elem
<:Outer2::Concept::Named
Varres0_$%$%95_1_$%$%$%77_1_$%$%$%$%197_1_$%$%$%$%$%314_1_$%$%$%$%$%$%432_1_$%$%$%$%$%$%$%551_1_$%$%$%$%$%$%$%$%671_1__792_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%96_1_$%$%$%78_1_$%$%$%$%198_1_$%$%$%$%$%315_1_$%$%$%$%$%$%433_1_$%$%$%$%$%$%$%552_1_$%$%$%$%$%$%$%$%672_1__793_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer2::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer2::Bool.false()
          )
        (
          Void unused3=return Outer2::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::Type top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer2::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer2::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer2::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%95_1_$%$%$%77_1_$%$%$%$%197_1_$%$%$%$%$%314_1_$%$%$%$%$%$%432_1_$%$%$%$%$%$%$%551_1_$%$%$%$%$%$%$%$%671_1__792_1 varres=Outer0::Varres0_$%$%95_1_$%$%$%77_1_$%$%$%$%197_1_$%$%$%$%$%314_1_$%$%$%$%$%$%432_1_$%$%$%$%$%$%$%551_1_$%$%$%$%$%$%$%$%671_1__792_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::Type that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%96_1_$%$%$%78_1_$%$%$%$%198_1_$%$%$%$%$%315_1_$%$%$%$%$%$%433_1_$%$%$%$%$%$%$%552_1_$%$%$%$%$%$%$%$%672_1__793_1 varres=Outer0::Varres1_$%$%96_1_$%$%$%78_1_$%$%$%$%198_1_$%$%$%$%$%315_1_$%$%$%$%$%$%433_1_$%$%$%$%$%$%$%552_1_$%$%$%$%$%$%$%$%672_1__793_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer3::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::Type #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::Type elem, Outer1::Cell nextCell) 
mut method 
Outer2::Type #elem() 
read method 
Outer2::Type elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer3::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer3::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer3::Bool #terminate() 
read method 
Outer3::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::Type #inner() this.that().#inner()
read method 
Void #close() void}}}
Refactor:{
type method 
Library compose(Library left, Library right) exception Outer1::MetaGuard::ClassClash, Outer1::MetaGuard::MethodClash (
  Void unused=(
    Void unused0=return Outer1::SafeOperators.compose(left:left, right:right)
    catch error err (
      on Library (
        Outer1::Introspection::Record::#apply(lib ) record=Outer1::Introspection::Record.#apply(lib:err)
        (
          Outer1::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer1::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
            'ClassClash
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer1::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                  'MethodClash
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void error err
                      )
                    exception Outer1::MetaGuard::MethodClash.#apply(record:record)
                    )
                  )
                )
              exception Outer1::MetaGuard::ClassClash.#apply(record:record)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Void checkTargetExists(Library that, Outer1::Path path) exception Outer1::MetaGuard::NestedClassUnavailable (
  Outer0::AddDocumentationPath::#begin() ::#add(that doc ) ::#end() ::#leftleft(that ) unused=Outer0::AddDocumentationPath.#begin().#add(that:path, doc:Outer1::Introspection::Doc.#stringParser(that:{'@stringU
  'JustToSeeIfItIsThere
  })).#end().#leftleft(that:that)
  catch exception x (
    on Outer1::MetaGuard::InvalidOnTopLevel error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'Refactor4
    })
    )
  void
  )
Squares:'  toPutAs private
{'findMeSquares

type method 
Library #leftleft(Library that) Outer2::SafeOperatorsAccess_$%$%40_1_$%$%$%22_1_$%$%$%$%140_1_$%$%$%$%$%257_1_$%$%$%$%$%$%375_1_$%$%$%$%$%$%$%494_1_$%$%$%$%$%$%$%$%614_1__735_1.compose(left:that, right:{
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this})}
Redirect:{
type method 
Outer0 #add(Outer2::Path that, type Any to) 
mut method 
Outer2::Path #that() 
read method 
Outer2::Path that() 
mut method 
type Any #to() 
read method 
type Any to() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::NestedClassUnavailable, Outer2::MetaGuard::InvalidOnTopLevel, Outer2::MetaGuard::SourceUnfit, Outer2::MetaGuard::MethodClash, Outer2::MetaGuard::IncoherentRedirectMapping (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.redirect(that:that, src:this.that(), dest:this.to())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'InvalidOnTopLevel
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void (
                        Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond1=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                        'MethodClash
                        }))
                        (
                          Void unused5=cond1.#checkTrue()
                          catch exception unused6 (
                            on Void (
                              Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond2=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                              'SourceUnfit
                              }))
                              (
                                Void unused7=cond2.#checkTrue()
                                catch exception unused8 (
                                  on Void (
                                    Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond3=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                                    'IncoherentRedirectMapping
                                    }))
                                    (
                                      Void unused9=cond3.#checkTrue()
                                      catch exception unused10 (
                                        on Void error err
                                        )
                                      exception Outer2::MetaGuard::IncoherentRedirectMapping.#apply(record:record)
                                      )
                                    )
                                  )
                                exception Outer2::MetaGuard::SourceUnfit.#apply(record:record)
                                )
                              )
                            )
                          exception Outer2::MetaGuard::MethodClash.#apply(record:record)
                          )
                        )
                      )
                    exception Outer2::MetaGuard::InvalidOnTopLevel.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::NestedClassUnavailable.#apply(record:record)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
RenameSelector:{
type method 
Outer0 #add(Outer2::Selector that, Outer2::Path of, Outer2::Selector to) 
mut method 
Outer2::Selector #that() 
read method 
Outer2::Selector that() 
mut method 
Outer2::Path #of() 
read method 
Outer2::Path of() 
mut method 
Outer2::Selector #to() 
read method 
Outer2::Selector to() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable, Outer2::MetaGuard::MethodClash (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.renameMethod(that:that, path:this.of(), src:this.that(), dest:this.to())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'MethodClash
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void error err
                      )
                    exception Outer2::MetaGuard::MethodClash.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::DispatchMemberUnavailable.#apply(that:err)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
RenamePath:{
type method 
Outer0 #add(Outer2::Path that, Outer2::Path to) 
mut method 
Outer2::Path #that() 
read method 
Outer2::Path that() 
mut method 
Outer2::Path #to() 
read method 
Outer2::Path to() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::NestedClassUnavailable, Outer2::MetaGuard::MethodClash, Outer2::MetaGuard::ClassClash (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.renameClass(that:that, src:this.that(), dest:this.to())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'MethodClash
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void (
                        Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond1=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                        'ClassClash
                        }))
                        (
                          Void unused5=cond1.#checkTrue()
                          catch exception unused6 (
                            on Void (
                              Void unused7=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
                              'critical failure in capturing plugin primitive error
                              }))
                              Void unused8=Outer2::Debug.#apply(that:x)
                              error err
                              )
                            )
                          exception Outer2::MetaGuard::ClassClash.#apply(record:record)
                          )
                        )
                      )
                    exception Outer2::MetaGuard::MethodClash.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::NestedClassUnavailable.#apply(record:record)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
RemoveImplementationSelector:{
type method 
Outer0 #add(Outer2::Selector that, Outer2::Path of) 
mut method 
Outer2::Selector #that() 
read method 
Outer2::Selector that() 
mut method 
Outer2::Path #of() 
read method 
Outer2::Path of() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.removeImplementation(that:that, path:this.of(), selector:this.that())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void error err
                )
              exception Outer2::MetaGuard::DispatchMemberUnavailable.#apply(that:err)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
MoveImplementationSelector:{
type method 
Outer0 #add(Outer2::Selector that, Outer2::Path of, Outer2::Selector to) 
mut method 
Outer2::Selector #that() 
read method 
Outer2::Selector that() 
mut method 
Outer2::Path #of() 
read method 
Outer2::Path of() 
mut method 
Outer2::Selector #to() 
read method 
Outer2::Selector to() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable, Outer2::MetaGuard::MethodClash (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.moveImplementation(that:that, path:this.of(), src:this.that(), dest:this.to())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'MethodClash
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void error err
                      )
                    exception Outer2::MetaGuard::MethodClash.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::DispatchMemberUnavailable.#apply(that:err)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
RemoveImplementationPath:{
type method 
Outer0 #add(Outer2::Path that) 
mut method 
Outer2::Path #that() 
read method 
Outer2::Path that() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::NestedClassUnavailable, Outer2::MetaGuard::PrivacyCoupuled (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.removeImplementation(that:that, path:this.that())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'PrivacyCoupuled
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void error err
                      )
                    exception Outer2::MetaGuard::PrivacyCoupuled.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::NestedClassUnavailable.#apply(record:record)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
AddDocumentationSelector:{
type method 
Outer0 #add(Outer2::Selector that, Outer2::Path of, Outer2::Introspection::Doc doc) 
mut method 
Outer2::Selector #that() 
read method 
Outer2::Selector that() 
mut method 
Outer2::Path #of() 
read method 
Outer2::Path of() 
mut method 
Outer2::Introspection::Doc #doc() 
read method 
Outer2::Introspection::Doc doc() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.addDocumentation(that:that, path:this.of(), selector:this.that(), doc:this.doc())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void error err
                )
              exception Outer2::MetaGuard::DispatchMemberUnavailable.#apply(that:err)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
AddDocumentationPath:{
type method 
Outer0 #add(Outer2::Path that, Outer2::Introspection::Doc doc) 
mut method 
Outer2::Path #that() 
read method 
Outer2::Path that() 
mut method 
Outer2::Introspection::Doc #doc() 
read method 
Outer2::Introspection::Doc doc() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::NestedClassUnavailable, Outer2::MetaGuard::InvalidOnTopLevel (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.addDocumentation(that:that, path:this.that(), doc:this.doc())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'InvalidOnTopLevel
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void error err
                      )
                    exception Outer2::MetaGuard::InvalidOnTopLevel.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::NestedClassUnavailable.#apply(record:record)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
MakePrivatePath:{
type method 
Outer0 #add(Outer2::Path that) 
mut method 
Outer2::Path #that() 
read method 
Outer2::Path that() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable, Outer2::MetaGuard::InvalidOnTopLevel Outer1::AddDocumentationPath.#begin().#add(that:this.that(), doc:Outer2::Introspection::Doc.#stringParser(that:{'@private
})).#end().#leftleft(that:that)
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
MakePrivateSelector:{
type method 
Outer0 #add(Outer2::Selector that, Outer2::Path of) 
mut method 
Outer2::Selector #that() 
read method 
Outer2::Selector that() 
mut method 
Outer2::Path #of() 
read method 
Outer2::Path of() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable Outer1::AddDocumentationSelector.#begin().#add(that:this.that(), of:this.of(), doc:Outer2::Introspection::Doc.#stringParser(that:{'@private
})).#end().#leftleft(that:that)
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
SumMethods:{
type method 
Outer0 #add(Outer2::Selector that, Outer2::Selector and, Outer2::Path of, Outer2::Selector to) 
mut method 
Outer2::Selector #that() 
read method 
Outer2::Selector that() 
mut method 
Outer2::Selector #and() 
read method 
Outer2::Selector and() 
mut method 
Outer2::Path #of() 
read method 
Outer2::Path of() 
mut method 
Outer2::Selector #to() 
read method 
Outer2::Selector to() 
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::MemberUnavailable, Outer2::MetaGuard::MethodClash, Outer2::MetaGuard::ParameterMismatch (
  Void unused=(
    Void unused0=return Outer2::SafeOperators.sumMethods(that:that, path:this.of(), src1:this.that(), src2:this.and(), dest:this.to())
    catch error err (
      on Library (
        Outer2::Introspection::Record::#apply(lib ) record=Outer2::Introspection::Record.#apply(lib:err)
        (
          Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) x=record.#stringParser(that:{'@stringU
          'Kind
          })
          (
            Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
            'MemberUnavailable
            }))
            (
              Void unused1=cond.#checkTrue()
              catch exception unused2 (
                on Void (
                  Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond0=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                  'MethodClash
                  }))
                  (
                    Void unused3=cond0.#checkTrue()
                    catch exception unused4 (
                      on Void (
                        Outer2::Introspection::Record::#apply(lib ) ::#stringParser(that ) ::#equalequal(that ) cond1=x.#equalequal(that:Outer2::S.#stringParser(that:{'@stringU
                        'ParameterMismatch
                        }))
                        (
                          Void unused5=cond1.#checkTrue()
                          catch exception unused6 (
                            on Void error err
                            )
                          exception Outer2::MetaGuard::ParameterMismatch.#apply(record:record)
                          )
                        )
                      )
                    exception Outer2::MetaGuard::MethodClash.#apply(record:record)
                    )
                  )
                )
              exception Outer2::MetaGuard::DispatchMemberUnavailable.#apply(that:err)
              )
            )
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this}
Tools:{
type method 
Outer2::S getToSOrName(read Any that) (
  Void unused=(
    Void unused0=(
      Outer2::Concept::ToS that1=(
        Void unused1=return that
        catch return casted0 (
          on Outer2::Concept::ToS casted0
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused2 (
        on Void (
          Outer2::Concept::Classable that0=(
            Void unused3=return that
            catch return casted (
              on Outer2::Concept::Classable casted
              
              on Any exception void
              )
            error {'@stringU
            'CastT-Should be unreachable code
            }
            )
          catch exception unused4 (
            on Void return Outer2::S.#stringParser(that:{'@stringU
            'instance not ToS or Classable
            })
            )
          (
            Void unused5=return Outer2::GetMyName.#apply(that:that0.classAny()).#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
            ' instance
            }))
            void
            )
          )
        )
      (
        Void unused6=return that1.toS()
        void
        )
      )
    void
    )
  catch return result (
    on Outer2::S result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}
Opt:{
type method 
Library #apply(type Any that) Outer1::SafeOperators.redirect(that:{
type method 
Outer0 #new(Outer0::TOpt that) 
mut method 
Outer0::TOpt #that() 
read method 
Outer0::TOpt that() 
T:{}
TOpt:{interface 
method 
Outer1::T get() }
TEmpty:{<:Outer1::TOpt
type method 
Outer0 #apply() 
method get() error Outer3::Guard::Operation.#stringParser(that:{'@stringU
'TEmpty.get() Value not present in Optional
})}
TOf:{<:Outer1::TOpt
type method 
Outer0 #apply(Outer1::T that) 
mut method 
Outer1::T #that() 
read method 
Outer1::T that() 
method get() this.that()}
method 
Outer0::T #tilde() this.that().get()
method 
Outer2::Bool isPresent() (
  Void unused=(
    Outer0::#tilde() aux=this.#tilde()
    Void unused0=return Outer2::Bool.true()
    catch error unused1 (
      on Any return Outer2::Bool.false()
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #apply() Outer0.#new(that:Outer0::TEmpty.#apply())
type method 
Outer0 #apply(Outer0::T that) Outer0.#new(that:Outer0::TOf.#apply(that:that))}, src:Outer1::Path.#stringParser(that:{'@stringU
'T
}), dest:that)}
PreferentialComposition:{'members of PreferentialComposition

Varacc0_$%$%97_1_$%$%$%79_1_$%$%$%$%199_1_$%$%$%$%$%316_1_$%$%$%$%$%$%434_1_$%$%$%$%$%$%$%553_1_$%$%$%$%$%$%$%$%673_1__794_1:'@private
{
type method 
mut Outer0 #apply(Outer1::SrcDests::#begin() ::#end() inner) 
mut method 
Void inner(Outer1::SrcDests::#begin() ::#end() that) 
mut method 
Outer1::SrcDests::#begin() ::#end() #inner() }
Varaccumulator8_$%$%98_1_$%$%$%80_1_$%$%$%$%200_1_$%$%$%$%$%317_1_$%$%$%$%$%$%435_1_$%$%$%$%$%$%$%554_1_$%$%$%$%$%$%$%$%674_1__795_1:'@private
{
type method 
mut Outer0 #apply(Outer1::SrcDests::#begin() inner) 
mut method 
Void inner(Outer1::SrcDests::#begin() that) 
mut method 
Outer1::SrcDests::#begin() #inner() }
$:{interface 
method 
Library solveConflict(Library that, Outer1::SrcDest location) exception Outer2::MetaGuard }
SrcDest:{
type method 
Outer0 #apply(Outer2::Path path, Outer2::Selector src, Outer2::Selector dest) 
mut method 
Outer2::Path #path() 
read method 
Outer2::Path path() 
mut method 
Outer2::Selector #src() 
read method 
Outer2::Selector src() 
mut method 
Outer2::Selector #dest() 
read method 
Outer2::Selector dest() }
SrcDests:{' generic linked list class, elements of type Elem
<:Outer2::Concept::Named
Varres0_$%$%99_1_$%$%$%81_1_$%$%$%$%201_1_$%$%$%$%$%318_1_$%$%$%$%$%$%436_1_$%$%$%$%$%$%$%555_1_$%$%$%$%$%$%$%$%675_1__796_1:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1_$%$%100_1_$%$%$%82_1_$%$%$%$%202_1_$%$%$%$%$%319_1_$%$%$%$%$%$%437_1_$%$%$%$%$%$%$%556_1_$%$%$%$%$%$%$%$%676_1__797_1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer2::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer2::Bool.false()
          )
        (
          Void unused3=return Outer2::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer1::SrcDest top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer2::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer2::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer2::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0_$%$%99_1_$%$%$%81_1_$%$%$%$%201_1_$%$%$%$%$%318_1_$%$%$%$%$%$%436_1_$%$%$%$%$%$%$%555_1_$%$%$%$%$%$%$%$%675_1__796_1 varres=Outer0::Varres0_$%$%99_1_$%$%$%81_1_$%$%$%$%201_1_$%$%$%$%$%318_1_$%$%$%$%$%$%436_1_$%$%$%$%$%$%$%555_1_$%$%$%$%$%$%$%$%675_1__796_1.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Outer1::SrcDest that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1_$%$%100_1_$%$%$%82_1_$%$%$%$%202_1_$%$%$%$%$%319_1_$%$%$%$%$%$%437_1_$%$%$%$%$%$%$%556_1_$%$%$%$%$%$%$%$%676_1__797_1 varres=Outer0::Varres1_$%$%100_1_$%$%$%82_1_$%$%$%$%202_1_$%$%$%$%$%319_1_$%$%$%$%$%$%437_1_$%$%$%$%$%$%$%556_1_$%$%$%$%$%$%$%$%676_1__797_1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer3::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Outer2::SrcDest #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Outer2::SrcDest elem, Outer1::Cell nextCell) 
mut method 
Outer2::SrcDest #elem() 
read method 
Outer2::SrcDest elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer3::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer3::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer3::Bool #terminate() 
read method 
Outer3::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Outer2::SrcDest #inner() this.that().#inner()
read method 
Void #close() void}}
Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1:'@private
{' generic linked list class, elements of type Elem
<:Outer2::Concept::Named
Varres0:'@private
{
type method 
mut Outer0 #apply(Outer1 inner) 
mut method 
Void inner(Outer1 that) 
mut method 
Outer1 #inner() 
read method 
Outer1 inner() }
Varres1:'@private
{
type method 
mut Outer0 #apply(Outer1::#apply() inner) 
mut method 
Void inner(Outer1::#apply() that) 
mut method 
Outer1::#apply() #inner() }
type method 
Outer0 _new(Outer0::Cell head) 
mut method 
Outer0::Cell #head() 
read method 
Outer0::Cell head() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
type method 
Outer0 #apply() Outer0._new(head:Outer0::CellEnd.#apply())
method 
Outer2::Bool isEmpty() (
  Void unused=(
    Void unused0=(
      Outer0::head() x=this.head()
      (
        Outer0::CellEnd x0=(
          Void unused1=return x
          catch return casted (
            on Outer0::CellEnd casted
            
            on Any exception void
            )
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        catch exception unused2 (
          on Void return Outer2::Bool.false()
          )
        (
          Void unused3=return Outer2::Bool.true()
          void
          )
        )
      )
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Library top() this.head().#inner()
method 
mut Outer0::Iterator vals() this.head().vals(terminate:Outer2::Bool.true())
method 
mut Outer0::Iterator valsCut() this.head().vals(terminate:Outer2::Bool.false())
method 
Outer0 pop() (
  Void unused=(
    Void unused0=return Outer0._new(head:this.head().#next())
    catch exception unused1 (
      on Void error Outer2::Guard::Operation.#apply(text:Outer0.myName().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
      ':PopOnEmpyList
      })))
      )
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) (
  Void unused=(
    Outer0 res=this
    mut Outer0::Varres0 varres=Outer0::Varres0.#apply(inner:res)
    Void unused0=(
      Outer0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=e.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=e.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0 (
            Void unused12=e.#close()
            return propagated0
            )
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #add(Library that) Outer0._new(head:Outer0::CellNext.#apply(elem:that, nextCell:this.head()))
method 
Outer0 #end() (
  Outer0::#apply() res=Outer0.#apply()
  mut Outer0::Varres1 varres=Outer0::Varres1.#apply(inner:res)
  Void unused=(
    Outer0::vals() elem=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=elem.#next()
            catch exception unused4 (
              on Void (
                Void unused5=(
                  Void unused6=elem.#checkEnd()
                  catch exception unused7 (
                    on Void void
                    )
                  void
                  )
                exception void
                )
              )
            varres.inner(that:varres.#inner().#add(that:elem.#inner()))
            )
          catch exception unused8 (
            on Void void
            )
          void
          )
        catch exception propagated (
          on Any (
            Void unused9=elem.#close()
            exception propagated
            )
          )
        void
        )
      catch return propagated0 (
        on Any (
          Void unused10=elem.#close()
          return propagated0
          )
        )
      elem.#close()
      )
    )
  varres.#inner()
  )
Cell:{interface 
method 
mut Outer1::Iterator vals(Outer3::Bool terminate) 
method 
Outer0 #next() exception Void 
method 
Library #inner() 
method 
Void #checkEnd() }
CellEnd:{<:Outer1::Cell
type method 
Outer0 #apply() 
method vals(terminate ) Outer1::Iterator.#apply(that:this, terminate:terminate)
method #next() exception void
method #inner() error Outer3::Assert::ObservedBug.#stringParser(that:{'@stringU
'InnerOnCellEnd
})
method #checkEnd() void}
CellNext:{<:Outer1::Cell
type method 
Outer0 #apply(Library elem, Outer1::Cell nextCell) 
mut method 
Library #elem() 
read method 
Library elem() 
mut method 
Outer1::Cell #nextCell() 
read method 
Outer1::Cell nextCell() 
method vals(terminate ) (
  Void unused=(
    Outer0::#apply(elem nextCell ) startPoint=Outer0.#apply(elem:this.elem(), nextCell:this)
    Void unused0=return Outer1::Iterator.#apply(that:startPoint, terminate:terminate)
    void
    )
  catch return result (
    on Outer0::vals(terminate ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method #next() this.nextCell()
method #inner() this.elem()
method #checkEnd() (
  Outer0::#checkEnd() ::this::nextCell() cell=this.nextCell()
  (
    Outer0 cell0=(
      Void unused=return cell
      catch return casted (
        on Outer0 casted
        
        on Any exception void
        )
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    catch exception unused0 (
      on Void void
      )
    (
      Void unused1=error Outer3::Assert::ObservedBug.#apply(text:Outer1.myName().#plusplus(that:Outer3::S.#stringParser(that:{'@stringU
      ':IterationNotComplete,\u000a  use valsCut() to allows incomplete iterations\u000a
      })))
      void
      )
    )
  )}
Iterator:{
type method 
mut Outer0 #apply(Outer1::Cell that, Outer3::Bool terminate) 
mut method 
Void that(Outer1::Cell that) 
mut method 
Outer1::Cell #that() 
read method 
Outer1::Cell that() 
mut method 
Outer3::Bool #terminate() 
read method 
Outer3::Bool terminate() 
mut method 
Void #next() exception Void (
  Void unused=(
    Outer0::that() ::#next() x=this.that().#next()
    Void unused0=(
      Outer1::CellEnd x0=(
        Void unused2=return x
        catch return casted (
          on Outer1::CellEnd casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=exception void
        void
        )
      )
    Void unused1=return this.that(that:x)
    void
    )
  catch return result (
    on Void result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Void #checkEnd() (
  Outer0::terminate() cond=this.terminate()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    this.that().#checkEnd()
    )
  )
read method 
Library #inner() this.that().#inner()
read method 
Void #close() void}}
type method '@private
Outer0::SrcDests renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(Library that, Outer1::S prefix, Outer1::Introspection::NestedClasses intros) (
  Void unused=(
    Outer0::SrcDests::#begin() ::#end() acc=Outer0::SrcDests.#begin().#end()
    mut Outer0::Varacc0_$%$%97_1_$%$%$%79_1_$%$%$%$%199_1_$%$%$%$%$%316_1_$%$%$%$%$%$%434_1_$%$%$%$%$%$%$%553_1_$%$%$%$%$%$%$%$%673_1__794_1 varacc=Outer0::Varacc0_$%$%97_1_$%$%$%79_1_$%$%$%$%199_1_$%$%$%$%$%316_1_$%$%$%$%$%$%434_1_$%$%$%$%$%$%$%553_1_$%$%$%$%$%$%$%$%673_1__794_1.#apply(inner:acc)
    Void unused0=(
      Outer1::Introspection::NestedClasses::vals() intro=intros.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=intro.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=intro.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varacc.inner(that:varacc.#inner().#plusplus(that:this.renameMap(that:that, prefix:prefix, path:intro.#inner().pathFromRoot(), ms:intro.#inner().methods())))
              )
            catch exception unused10 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused11=intro.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer0::SrcDests (
            Void unused12=intro.#close()
            return propagated0
            )
          )
        intro.#close()
        )
      )
    Void unused1=return varacc.#inner()
    void
    )
  catch return result (
    on Outer0::SrcDests result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0::SrcDests renameMap(Library that, Outer1::S prefix, Outer1::Path path, Outer1::Introspection::Methods ms) (
  Void unused=(
    Outer1::Introspection::#apply(lib path ) thatI=Outer1::Introspection.#apply(lib:that, path:path)
    catch exception unused0 (
      on Outer1::MetaGuard::MemberUnavailable return Outer0::SrcDests.#begin().#end()
      )
    (
      Void unused1=return (
        Outer0::SrcDests::#begin() accumulator=Outer0::SrcDests.#begin()
        mut Outer0::Varaccumulator8_$%$%98_1_$%$%$%80_1_$%$%$%$%200_1_$%$%$%$%$%317_1_$%$%$%$%$%$%435_1_$%$%$%$%$%$%$%554_1_$%$%$%$%$%$%$%$%674_1__795_1 varaccumulator=Outer0::Varaccumulator8_$%$%98_1_$%$%$%80_1_$%$%$%$%200_1_$%$%$%$%$%317_1_$%$%$%$%$%$%435_1_$%$%$%$%$%$%$%554_1_$%$%$%$%$%$%$%$%674_1__795_1.#apply(inner:accumulator)
        Void unused2=(
          Outer1::Introspection::Methods::vals() meth=ms.vals()
          (
            Void unused3=(
              Void unused4=(
                Void unused5=loop (
                  Void unused6=meth.#next()
                  catch exception unused7 (
                    on Void (
                      Void unused8=(
                        Void unused9=meth.#checkEnd()
                        catch exception unused10 (
                          on Void void
                          )
                        void
                        )
                      exception void
                      )
                    )
                  (
                    Outer0::needRename(that meth ) cond=this.needRename(that:thatI, meth:meth.#inner())
                    (
                      Void unused11=cond.#checkTrue()
                      catch exception unused12 (
                        on Void void
                        )
                      varaccumulator.inner(that:varaccumulator.#inner().#add(that:(
                        Outer1::Selector::fromS(that ) destSel=Outer1::Selector.fromS(that:prefix.#plusplus(that:meth.#inner().selector().toS()))
                        Outer0::SrcDest.#apply(path:path, src:meth.#inner().selector(), dest:destSel)
                        )))
                      )
                    )
                  )
                catch exception unused13 (
                  on Void void
                  )
                void
                )
              catch exception propagated (
                on Any (
                  Void unused14=meth.#close()
                  exception propagated
                  )
                )
              void
              )
            catch return propagated0 (
              on Outer0::SrcDests (
                Void unused15=meth.#close()
                return propagated0
                )
              )
            meth.#close()
            )
          )
        varaccumulator.#inner().#end()
        )
      void
      )
    )
  catch return result (
    on Outer0::SrcDests result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer1::Bool needRename(Outer1::Introspection::NestedClass that, Outer1::Introspection::Method meth) (
  Void unused=(
    Void unused0=(
      Outer1::Introspection::Method::isPrivate() cond=meth.isPrivate()
      (
        Void unused2=cond.#checkTrue()
        catch exception unused3 (
          on Void void
          )
        return Outer1::Bool.false()
        )
      )
    Void unused1=(
      Outer1::Introspection::Method::methodKind() ::#equalequal(that ) cond0=meth.methodKind().#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
      'AbstractMethod
      }))
      (
        Void unused4=cond0.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return Outer1::Bool.false()
        )
      )
    Outer1::Introspection::NestedClass::methodFromSelector(that ) meth2=that.methodFromSelector(that:meth.selector())
    catch exception unused6 (
      on Outer1::MetaGuard::MemberUnavailable return Outer1::Bool.false()
      )
    (
      Void unused7=(
        Outer1::Introspection::NestedClass::methodFromSelector(that ) ::isPrivate() cond1=meth2.isPrivate()
        (
          Void unused10=cond1.#checkTrue()
          catch exception unused11 (
            on Void void
            )
          return Outer1::Bool.false()
          )
        )
      Void unused8=(
        Outer1::Introspection::NestedClass::methodFromSelector(that ) ::methodKind() ::#equalequal(that ) cond2=meth2.methodKind().#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
        'AbstractMethod
        }))
        (
          Void unused12=cond2.#checkTrue()
          catch exception unused13 (
            on Void void
            )
          return Outer1::Bool.false()
          )
        )
      Void unused9=return Outer1::Bool.true()
      void
      )
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Library #leftleft(Library that) exception Outer1::MetaGuard::ClassClash, Outer1::MetaGuard::MethodClash Outer1::Refactor.compose(left:that, right:{'members of each produced class
<:Outer1::$
Varacc1_$%$%104_1_$%$%$%86_1_$%$%$%$%206_1_$%$%$%$%$%323_1_$%$%$%$%$%$%441_1_$%$%$%$%$%$%$%560_1_$%$%$%$%$%$%$%$%680_1__801_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap_$%$%105_1_$%$%$%87_1_$%$%$%$%207_1_$%$%$%$%$%324_1_$%$%$%$%$%$%442_1_$%$%$%$%$%$%$%561_1_$%$%$%$%$%$%$%$%681_1__802_1:'@private
{
type method 
mut Outer0 #apply(Outer2::SrcDests::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::SrcDests::#begin() ::#end() that) 
mut method 
Outer2::SrcDests::#begin() ::#end() #inner() }
Varlibi_$%$%106_1_$%$%$%88_1_$%$%$%$%208_1_$%$%$%$%$%325_1_$%$%$%$%$%$%443_1_$%$%$%$%$%$%$%562_1_$%$%$%$%$%$%$%$%682_1__803_1:'@private
{
type method 
mut Outer0 #apply(Outer1::myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() ::vals() ::#inner() inner) 
mut method 
Void inner(Outer1::myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() ::vals() ::#inner() that) 
mut method 
Outer1::myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() ::vals() ::#inner() #inner() }
type method '@private
Outer0 #apply_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1(Outer1::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1) 
mut method '@private
Outer1::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 #myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() 
read method '@private
Outer1::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() 
method 
Outer0 #add(Library that) Outer0.#apply_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1(myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1:this.myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1().#add(that:that))
type method 
Outer0 #begin() Outer0.#apply_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1(myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1:Outer1::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1.#begin().#end())
method 
Outer0 #end() Outer0.#apply_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1(myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1:this.myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1().#end())
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::ClassClash, Outer2::MetaGuard::MethodClash (
  Void unused=(
    Outer2::Introspection::#apply(lib ) i=Outer2::Introspection.#apply(lib:that)
    Outer1::SrcDests::#begin() ::#end() map=Outer1::SrcDests.#begin().#end()
    Library acc={}
    mut Outer0::Varmap_$%$%105_1_$%$%$%87_1_$%$%$%$%207_1_$%$%$%$%$%324_1_$%$%$%$%$%$%442_1_$%$%$%$%$%$%$%561_1_$%$%$%$%$%$%$%$%681_1__802_1 varmap=Outer0::Varmap_$%$%105_1_$%$%$%87_1_$%$%$%$%207_1_$%$%$%$%$%324_1_$%$%$%$%$%$%442_1_$%$%$%$%$%$%$%561_1_$%$%$%$%$%$%$%$%681_1__802_1.#apply(inner:map)
    mut Outer0::Varacc1_$%$%104_1_$%$%$%86_1_$%$%$%$%206_1_$%$%$%$%$%323_1_$%$%$%$%$%$%441_1_$%$%$%$%$%$%$%560_1_$%$%$%$%$%$%$%$%680_1__801_1 varacc=Outer0::Varacc1_$%$%104_1_$%$%$%86_1_$%$%$%$%206_1_$%$%$%$%$%323_1_$%$%$%$%$%$%441_1_$%$%$%$%$%$%$%560_1_$%$%$%$%$%$%$%$%680_1__801_1.#apply(inner:acc)
    Void unused0=(
      Outer0::myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() ::vals() lib=this.myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1().vals()
      (
        Void unused4=(
          Void unused5=(
            Outer2::N::#numberParser(that ) ::vals() index=Outer2::N.#numberParser(that:{'@stringU
            '0
            }).vals()
            (
              Void unused6=(
                Void unused7=(
                  Void unused8=loop (
                    Void unused9=lib.#next()
                    catch exception unused10 (
                      on Void (
                        Void unused11=(
                          Void unused14=index.#next()
                          catch exception unused15 (
                            on Void void
                            )
                          void
                          )
                        Void unused12=(
                          Void unused16=lib.#checkEnd()
                          catch exception unused17 (
                            on Void void
                            )
                          void
                          )
                        Void unused13=(
                          Void unused18=index.#checkEnd()
                          catch exception unused19 (
                            on Void void
                            )
                          void
                          )
                        exception void
                        )
                      )
                    (
                      Void unused20=index.#next()
                      catch exception unused21 (
                        on Void (
                          Void unused22=(
                            Void unused24=lib.#checkEnd()
                            catch exception unused25 (
                              on Void void
                              )
                            void
                            )
                          Void unused23=(
                            Void unused26=index.#checkEnd()
                            catch exception unused27 (
                              on Void void
                              )
                            void
                            )
                          exception void
                          )
                        )
                      (
                        Outer0::myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1() ::vals() ::#inner() libi=lib.#inner()
                        Outer1::renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that prefix intros ) rens=Outer1.renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that:lib.#inner(), prefix:Outer2::S.#stringParser(that:{'@stringU
                        '#
                        }).#begin().#add(that:index.#inner()).#end().#stringParser(that:{'@stringU
                        '
                        }), intros:i.transitivelyNestedClasses())
                        mut Outer0::Varlibi_$%$%106_1_$%$%$%88_1_$%$%$%$%208_1_$%$%$%$%$%325_1_$%$%$%$%$%$%443_1_$%$%$%$%$%$%$%562_1_$%$%$%$%$%$%$%$%682_1__803_1 varlibi=Outer0::Varlibi_$%$%106_1_$%$%$%88_1_$%$%$%$%208_1_$%$%$%$%$%325_1_$%$%$%$%$%$%443_1_$%$%$%$%$%$%$%562_1_$%$%$%$%$%$%$%$%682_1__803_1.#apply(inner:libi)
                        Void unused28=(
                          Outer1::renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that prefix intros ) ::vals() ren=rens.vals()
                          (
                            Void unused29=(
                              Void unused30=(
                                Void unused31=loop (
                                  Void unused32=ren.#next()
                                  catch exception unused33 (
                                    on Void (
                                      Void unused34=(
                                        Void unused35=ren.#checkEnd()
                                        catch exception unused36 (
                                          on Void void
                                          )
                                        void
                                        )
                                      exception void
                                      )
                                    )
                                  (
                                    Void unused37=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                                    Void unused38=varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    catch exception unused39 (
                                      on Outer2::MetaGuard error Outer2::Assert::ObservedBug.#apply(text:(
                                        Void unused40=(
                                          Void unused41=return Outer2::S.#stringParser(that:{'@stringU
                                          'solveConflict does not follow the specification: it throws exceptions
                                          })
                                          void
                                          )
                                        catch return result0 (
                                          on Outer2::Assert::ObservedBug::#apply(text ) ::text result0
                                          )
                                        error {'@stringU
                                        'CurlyBlock-Should be unreachable code
                                        }
                                        ))
                                      )
                                    void
                                    )
                                  )
                                catch exception unused42 (
                                  on Void void
                                  )
                                void
                                )
                              catch exception propagated (
                                on Any (
                                  Void unused43=ren.#close()
                                  exception propagated
                                  )
                                )
                              void
                              )
                            catch return propagated0 (
                              on Library (
                                Void unused44=ren.#close()
                                return propagated0
                                )
                              )
                            ren.#close()
                            )
                          )
                        varacc.inner(that:Outer2::Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  catch exception unused45 (
                    on Void void
                    )
                  void
                  )
                catch exception propagated1 (
                  on Any (
                    Void unused46=index.#close()
                    exception propagated1
                    )
                  )
                void
                )
              catch return propagated2 (
                on Library (
                  Void unused47=index.#close()
                  return propagated2
                  )
                )
              index.#close()
              )
            )
          catch exception propagated3 (
            on Any (
              Void unused48=lib.#close()
              exception propagated3
              )
            )
          void
          )
        catch return propagated4 (
          on Library (
            Void unused49=lib.#close()
            return propagated4
            )
          )
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:Outer2::Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      Outer0::Varmap_$%$%105_1_$%$%$%87_1_$%$%$%$%207_1_$%$%$%$%$%324_1_$%$%$%$%$%$%442_1_$%$%$%$%$%$%$%561_1_$%$%$%$%$%$%$%$%681_1__802_1::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused50=(
          Void unused51=(
            Void unused52=loop (
              Void unused53=mapi.#next()
              catch exception unused54 (
                on Void (
                  Void unused55=(
                    Void unused56=mapi.#checkEnd()
                    catch exception unused57 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varacc.inner(that:Outer2::Refactor::MakePrivateSelector.#begin().#add(that:mapi.#inner().dest(), of:mapi.#inner().path()).#end().#leftleft(that:varacc.#inner()))
              )
            catch exception unused58 (
              on Void void
              )
            void
            )
          catch exception propagated5 (
            on Any (
              Void unused59=mapi.#close()
              exception propagated5
              )
            )
          void
          )
        catch return propagated6 (
          on Library (
            Void unused60=mapi.#close()
            return propagated6
            )
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    catch exception unused61 (
      on Outer2::MetaGuard::MemberUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'PreferentialComposition1
      })
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) Outer0.#apply_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1(myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1:this.myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1().#plusplus(that:that.myLibs_$%$%34_1_$%$%$%16_1_$%$%$%$%132_1_$%$%$%$%$%249_1_$%$%$%$%$%$%367_1_$%$%$%$%$%$%$%486_1_$%$%$%$%$%$%$%$%606_1__727_1()))})}
Extends:{'members of each produced class
<:Outer1::PreferentialComposition::$
method solveConflict(that location ) Outer1::Refactor::MoveImplementationSelector.#begin().#add(that:location.src(), of:location.path(), to:location.dest()).#end().#leftleft(that:that)
Varacc1_$%9_0_$%$%107_1_$%$%$%89_1_$%$%$%$%209_1_$%$%$%$%$%326_1_$%$%$%$%$%$%444_1_$%$%$%$%$%$%$%563_1_$%$%$%$%$%$%$%$%683_1__804_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap_$%10_0_$%$%108_1_$%$%$%90_1_$%$%$%$%210_1_$%$%$%$%$%327_1_$%$%$%$%$%$%445_1_$%$%$%$%$%$%$%564_1_$%$%$%$%$%$%$%$%684_1__805_1:'@private
{
type method 
mut Outer0 #apply(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() that) 
mut method 
Outer2::PreferentialComposition::SrcDests::#begin() ::#end() #inner() }
Varlibi_$%11_0_$%$%109_1_$%$%$%91_1_$%$%$%$%211_1_$%$%$%$%$%328_1_$%$%$%$%$%$%446_1_$%$%$%$%$%$%$%565_1_$%$%$%$%$%$%$%$%685_1__806_1:'@private
{
type method 
mut Outer0 #apply(Outer1::myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() ::vals() ::#inner() inner) 
mut method 
Void inner(Outer1::myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() ::vals() ::#inner() that) 
mut method 
Outer1::myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() ::vals() ::#inner() #inner() }
type method '@private
Outer0 #apply_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1(Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1) 
mut method '@private
Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 #myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() 
read method '@private
Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() 
method 
Outer0 #add(Library that) Outer0.#apply_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1(myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1:this.myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1().#add(that:that))
type method 
Outer0 #begin() Outer0.#apply_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1(myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1:Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1.#begin().#end())
method 
Outer0 #end() Outer0.#apply_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1(myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1:this.myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1().#end())
method 
Library #leftleft(Library that) exception Outer1::MetaGuard::ClassClash, Outer1::MetaGuard::MethodClash (
  Void unused=(
    Outer1::Introspection::#apply(lib ) i=Outer1::Introspection.#apply(lib:that)
    Outer1::PreferentialComposition::SrcDests::#begin() ::#end() map=Outer1::PreferentialComposition::SrcDests.#begin().#end()
    Library acc={}
    mut Outer0::Varmap_$%10_0_$%$%108_1_$%$%$%90_1_$%$%$%$%210_1_$%$%$%$%$%327_1_$%$%$%$%$%$%445_1_$%$%$%$%$%$%$%564_1_$%$%$%$%$%$%$%$%684_1__805_1 varmap=Outer0::Varmap_$%10_0_$%$%108_1_$%$%$%90_1_$%$%$%$%210_1_$%$%$%$%$%327_1_$%$%$%$%$%$%445_1_$%$%$%$%$%$%$%564_1_$%$%$%$%$%$%$%$%684_1__805_1.#apply(inner:map)
    mut Outer0::Varacc1_$%9_0_$%$%107_1_$%$%$%89_1_$%$%$%$%209_1_$%$%$%$%$%326_1_$%$%$%$%$%$%444_1_$%$%$%$%$%$%$%563_1_$%$%$%$%$%$%$%$%683_1__804_1 varacc=Outer0::Varacc1_$%9_0_$%$%107_1_$%$%$%89_1_$%$%$%$%209_1_$%$%$%$%$%326_1_$%$%$%$%$%$%444_1_$%$%$%$%$%$%$%563_1_$%$%$%$%$%$%$%$%683_1__804_1.#apply(inner:acc)
    Void unused0=(
      Outer0::myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() ::vals() lib=this.myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1().vals()
      (
        Void unused4=(
          Void unused5=(
            Outer1::N::#numberParser(that ) ::vals() index=Outer1::N.#numberParser(that:{'@stringU
            '0
            }).vals()
            (
              Void unused6=(
                Void unused7=(
                  Void unused8=loop (
                    Void unused9=lib.#next()
                    catch exception unused10 (
                      on Void (
                        Void unused11=(
                          Void unused14=index.#next()
                          catch exception unused15 (
                            on Void void
                            )
                          void
                          )
                        Void unused12=(
                          Void unused16=lib.#checkEnd()
                          catch exception unused17 (
                            on Void void
                            )
                          void
                          )
                        Void unused13=(
                          Void unused18=index.#checkEnd()
                          catch exception unused19 (
                            on Void void
                            )
                          void
                          )
                        exception void
                        )
                      )
                    (
                      Void unused20=index.#next()
                      catch exception unused21 (
                        on Void (
                          Void unused22=(
                            Void unused24=lib.#checkEnd()
                            catch exception unused25 (
                              on Void void
                              )
                            void
                            )
                          Void unused23=(
                            Void unused26=index.#checkEnd()
                            catch exception unused27 (
                              on Void void
                              )
                            void
                            )
                          exception void
                          )
                        )
                      (
                        Outer0::myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1() ::vals() ::#inner() libi=lib.#inner()
                        Outer1::PreferentialComposition::renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that prefix intros ) rens=Outer1::PreferentialComposition.renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that:lib.#inner(), prefix:Outer1::S.#stringParser(that:{'@stringU
                        '#
                        }).#begin().#add(that:index.#inner()).#end().#stringParser(that:{'@stringU
                        '
                        }), intros:i.transitivelyNestedClasses())
                        mut Outer0::Varlibi_$%11_0_$%$%109_1_$%$%$%91_1_$%$%$%$%211_1_$%$%$%$%$%328_1_$%$%$%$%$%$%446_1_$%$%$%$%$%$%$%565_1_$%$%$%$%$%$%$%$%685_1__806_1 varlibi=Outer0::Varlibi_$%11_0_$%$%109_1_$%$%$%91_1_$%$%$%$%211_1_$%$%$%$%$%328_1_$%$%$%$%$%$%446_1_$%$%$%$%$%$%$%565_1_$%$%$%$%$%$%$%$%685_1__806_1.#apply(inner:libi)
                        Void unused28=(
                          Outer1::PreferentialComposition::renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that prefix intros ) ::vals() ren=rens.vals()
                          (
                            Void unused29=(
                              Void unused30=(
                                Void unused31=loop (
                                  Void unused32=ren.#next()
                                  catch exception unused33 (
                                    on Void (
                                      Void unused34=(
                                        Void unused35=ren.#checkEnd()
                                        catch exception unused36 (
                                          on Void void
                                          )
                                        void
                                        )
                                      exception void
                                      )
                                    )
                                  (
                                    Void unused37=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                                    Void unused38=varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    catch exception unused39 (
                                      on Outer1::MetaGuard error Outer1::Assert::ObservedBug.#apply(text:(
                                        Void unused40=(
                                          Void unused41=return Outer1::S.#stringParser(that:{'@stringU
                                          'solveConflict does not follow the specification: it throws exceptions
                                          })
                                          void
                                          )
                                        catch return result0 (
                                          on Outer1::Assert::ObservedBug::#apply(text ) ::text result0
                                          )
                                        error {'@stringU
                                        'CurlyBlock-Should be unreachable code
                                        }
                                        ))
                                      )
                                    void
                                    )
                                  )
                                catch exception unused42 (
                                  on Void void
                                  )
                                void
                                )
                              catch exception propagated (
                                on Any (
                                  Void unused43=ren.#close()
                                  exception propagated
                                  )
                                )
                              void
                              )
                            catch return propagated0 (
                              on Library (
                                Void unused44=ren.#close()
                                return propagated0
                                )
                              )
                            ren.#close()
                            )
                          )
                        varacc.inner(that:Outer1::Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  catch exception unused45 (
                    on Void void
                    )
                  void
                  )
                catch exception propagated1 (
                  on Any (
                    Void unused46=index.#close()
                    exception propagated1
                    )
                  )
                void
                )
              catch return propagated2 (
                on Library (
                  Void unused47=index.#close()
                  return propagated2
                  )
                )
              index.#close()
              )
            )
          catch exception propagated3 (
            on Any (
              Void unused48=lib.#close()
              exception propagated3
              )
            )
          void
          )
        catch return propagated4 (
          on Library (
            Void unused49=lib.#close()
            return propagated4
            )
          )
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:Outer1::Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      Outer0::Varmap_$%10_0_$%$%108_1_$%$%$%90_1_$%$%$%$%210_1_$%$%$%$%$%327_1_$%$%$%$%$%$%445_1_$%$%$%$%$%$%$%564_1_$%$%$%$%$%$%$%$%684_1__805_1::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused50=(
          Void unused51=(
            Void unused52=loop (
              Void unused53=mapi.#next()
              catch exception unused54 (
                on Void (
                  Void unused55=(
                    Void unused56=mapi.#checkEnd()
                    catch exception unused57 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varacc.inner(that:Outer1::Refactor::MakePrivateSelector.#begin().#add(that:mapi.#inner().dest(), of:mapi.#inner().path()).#end().#leftleft(that:varacc.#inner()))
              )
            catch exception unused58 (
              on Void void
              )
            void
            )
          catch exception propagated5 (
            on Any (
              Void unused59=mapi.#close()
              exception propagated5
              )
            )
          void
          )
        catch return propagated6 (
          on Library (
            Void unused60=mapi.#close()
            return propagated6
            )
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    catch exception unused61 (
      on Outer1::MetaGuard::MemberUnavailable error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'PreferentialComposition1
      })
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) Outer0.#apply_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1(myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1:this.myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1().#plusplus(that:that.myLibs_$%8_0_$%$%35_1_$%$%$%17_1_$%$%$%$%133_1_$%$%$%$%$%250_1_$%$%$%$%$%$%368_1_$%$%$%$%$%$%$%487_1_$%$%$%$%$%$%$%$%607_1__728_1()))}
Use:{'members of each produced class
<:Outer1::PreferentialComposition::$
method solveConflict(that location ) Outer1::Refactor::RenameSelector.#begin().#add(that:location.src(), of:location.path(), to:location.dest()).#end().#leftleft(that:that)
Varacc1_$%13_0_$%$%110_1_$%$%$%92_1_$%$%$%$%212_1_$%$%$%$%$%329_1_$%$%$%$%$%$%447_1_$%$%$%$%$%$%$%566_1_$%$%$%$%$%$%$%$%686_1__807_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap_$%14_0_$%$%111_1_$%$%$%93_1_$%$%$%$%213_1_$%$%$%$%$%330_1_$%$%$%$%$%$%448_1_$%$%$%$%$%$%$%567_1_$%$%$%$%$%$%$%$%687_1__808_1:'@private
{
type method 
mut Outer0 #apply(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() that) 
mut method 
Outer2::PreferentialComposition::SrcDests::#begin() ::#end() #inner() }
Varlibi_$%15_0_$%$%112_1_$%$%$%94_1_$%$%$%$%214_1_$%$%$%$%$%331_1_$%$%$%$%$%$%449_1_$%$%$%$%$%$%$%568_1_$%$%$%$%$%$%$%$%688_1__809_1:'@private
{
type method 
mut Outer0 #apply(Outer1::myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() ::vals() ::#inner() inner) 
mut method 
Void inner(Outer1::myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() ::vals() ::#inner() that) 
mut method 
Outer1::myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() ::vals() ::#inner() #inner() }
type method '@private
Outer0 #apply_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1(Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1) 
mut method '@private
Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 #myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() 
read method '@private
Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1 myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() 
method 
Outer0 #add(Library that) Outer0.#apply_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1(myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1:this.myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1().#add(that:that))
type method 
Outer0 #begin() Outer0.#apply_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1(myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1:Outer1::PreferentialComposition::Libs_$%$%101_1_$%$%$%83_1_$%$%$%$%203_1_$%$%$%$%$%320_1_$%$%$%$%$%$%438_1_$%$%$%$%$%$%$%557_1_$%$%$%$%$%$%$%$%677_1__798_1.#begin().#end())
method 
Outer0 #end() Outer0.#apply_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1(myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1:this.myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1().#end())
method 
Library #leftleft(Library that) exception Outer1::MetaGuard::ClassClash, Outer1::MetaGuard::MethodClash (
  Void unused=(
    Outer1::Introspection::#apply(lib ) i=Outer1::Introspection.#apply(lib:that)
    Outer1::PreferentialComposition::SrcDests::#begin() ::#end() map=Outer1::PreferentialComposition::SrcDests.#begin().#end()
    Library acc={}
    mut Outer0::Varmap_$%14_0_$%$%111_1_$%$%$%93_1_$%$%$%$%213_1_$%$%$%$%$%330_1_$%$%$%$%$%$%448_1_$%$%$%$%$%$%$%567_1_$%$%$%$%$%$%$%$%687_1__808_1 varmap=Outer0::Varmap_$%14_0_$%$%111_1_$%$%$%93_1_$%$%$%$%213_1_$%$%$%$%$%330_1_$%$%$%$%$%$%448_1_$%$%$%$%$%$%$%567_1_$%$%$%$%$%$%$%$%687_1__808_1.#apply(inner:map)
    mut Outer0::Varacc1_$%13_0_$%$%110_1_$%$%$%92_1_$%$%$%$%212_1_$%$%$%$%$%329_1_$%$%$%$%$%$%447_1_$%$%$%$%$%$%$%566_1_$%$%$%$%$%$%$%$%686_1__807_1 varacc=Outer0::Varacc1_$%13_0_$%$%110_1_$%$%$%92_1_$%$%$%$%212_1_$%$%$%$%$%329_1_$%$%$%$%$%$%447_1_$%$%$%$%$%$%$%566_1_$%$%$%$%$%$%$%$%686_1__807_1.#apply(inner:acc)
    Void unused0=(
      Outer0::myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() ::vals() lib=this.myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1().vals()
      (
        Void unused4=(
          Void unused5=(
            Outer1::N::#numberParser(that ) ::vals() index=Outer1::N.#numberParser(that:{'@stringU
            '0
            }).vals()
            (
              Void unused6=(
                Void unused7=(
                  Void unused8=loop (
                    Void unused9=lib.#next()
                    catch exception unused10 (
                      on Void (
                        Void unused11=(
                          Void unused14=index.#next()
                          catch exception unused15 (
                            on Void void
                            )
                          void
                          )
                        Void unused12=(
                          Void unused16=lib.#checkEnd()
                          catch exception unused17 (
                            on Void void
                            )
                          void
                          )
                        Void unused13=(
                          Void unused18=index.#checkEnd()
                          catch exception unused19 (
                            on Void void
                            )
                          void
                          )
                        exception void
                        )
                      )
                    (
                      Void unused20=index.#next()
                      catch exception unused21 (
                        on Void (
                          Void unused22=(
                            Void unused24=lib.#checkEnd()
                            catch exception unused25 (
                              on Void void
                              )
                            void
                            )
                          Void unused23=(
                            Void unused26=index.#checkEnd()
                            catch exception unused27 (
                              on Void void
                              )
                            void
                            )
                          exception void
                          )
                        )
                      (
                        Outer0::myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1() ::vals() ::#inner() libi=lib.#inner()
                        Outer1::PreferentialComposition::renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that prefix intros ) rens=Outer1::PreferentialComposition.renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that:lib.#inner(), prefix:Outer1::S.#stringParser(that:{'@stringU
                        '#
                        }).#begin().#add(that:index.#inner()).#end().#stringParser(that:{'@stringU
                        '
                        }), intros:i.transitivelyNestedClasses())
                        mut Outer0::Varlibi_$%15_0_$%$%112_1_$%$%$%94_1_$%$%$%$%214_1_$%$%$%$%$%331_1_$%$%$%$%$%$%449_1_$%$%$%$%$%$%$%568_1_$%$%$%$%$%$%$%$%688_1__809_1 varlibi=Outer0::Varlibi_$%15_0_$%$%112_1_$%$%$%94_1_$%$%$%$%214_1_$%$%$%$%$%331_1_$%$%$%$%$%$%449_1_$%$%$%$%$%$%$%568_1_$%$%$%$%$%$%$%$%688_1__809_1.#apply(inner:libi)
                        Void unused28=(
                          Outer1::PreferentialComposition::renameMap_$%$%33_1_$%$%$%15_1_$%$%$%$%131_1_$%$%$%$%$%248_1_$%$%$%$%$%$%366_1_$%$%$%$%$%$%$%485_1_$%$%$%$%$%$%$%$%605_1__726_1(that prefix intros ) ::vals() ren=rens.vals()
                          (
                            Void unused29=(
                              Void unused30=(
                                Void unused31=loop (
                                  Void unused32=ren.#next()
                                  catch exception unused33 (
                                    on Void (
                                      Void unused34=(
                                        Void unused35=ren.#checkEnd()
                                        catch exception unused36 (
                                          on Void void
                                          )
                                        void
                                        )
                                      exception void
                                      )
                                    )
                                  (
                                    Void unused37=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                                    Void unused38=varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    catch exception unused39 (
                                      on Outer1::MetaGuard error Outer1::Assert::ObservedBug.#apply(text:(
                                        Void unused40=(
                                          Void unused41=return Outer1::S.#stringParser(that:{'@stringU
                                          'solveConflict does not follow the specification: it throws exceptions
                                          })
                                          void
                                          )
                                        catch return result0 (
                                          on Outer1::Assert::ObservedBug::#apply(text ) ::text result0
                                          )
                                        error {'@stringU
                                        'CurlyBlock-Should be unreachable code
                                        }
                                        ))
                                      )
                                    void
                                    )
                                  )
                                catch exception unused42 (
                                  on Void void
                                  )
                                void
                                )
                              catch exception propagated (
                                on Any (
                                  Void unused43=ren.#close()
                                  exception propagated
                                  )
                                )
                              void
                              )
                            catch return propagated0 (
                              on Library (
                                Void unused44=ren.#close()
                                return propagated0
                                )
                              )
                            ren.#close()
                            )
                          )
                        varacc.inner(that:Outer1::Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  catch exception unused45 (
                    on Void void
                    )
                  void
                  )
                catch exception propagated1 (
                  on Any (
                    Void unused46=index.#close()
                    exception propagated1
                    )
                  )
                void
                )
              catch return propagated2 (
                on Library (
                  Void unused47=index.#close()
                  return propagated2
                  )
                )
              index.#close()
              )
            )
          catch exception propagated3 (
            on Any (
              Void unused48=lib.#close()
              exception propagated3
              )
            )
          void
          )
        catch return propagated4 (
          on Library (
            Void unused49=lib.#close()
            return propagated4
            )
          )
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:Outer1::Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      Outer0::Varmap_$%14_0_$%$%111_1_$%$%$%93_1_$%$%$%$%213_1_$%$%$%$%$%330_1_$%$%$%$%$%$%448_1_$%$%$%$%$%$%$%567_1_$%$%$%$%$%$%$%$%687_1__808_1::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused50=(
          Void unused51=(
            Void unused52=loop (
              Void unused53=mapi.#next()
              catch exception unused54 (
                on Void (
                  Void unused55=(
                    Void unused56=mapi.#checkEnd()
                    catch exception unused57 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varacc.inner(that:Outer1::Refactor::MakePrivateSelector.#begin().#add(that:mapi.#inner().dest(), of:mapi.#inner().path()).#end().#leftleft(that:varacc.#inner()))
              )
            catch exception unused58 (
              on Void void
              )
            void
            )
          catch exception propagated5 (
            on Any (
              Void unused59=mapi.#close()
              exception propagated5
              )
            )
          void
          )
        catch return propagated6 (
          on Library (
            Void unused60=mapi.#close()
            return propagated6
            )
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    catch exception unused61 (
      on Outer1::MetaGuard::MemberUnavailable error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'PreferentialComposition1
      })
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer0 #plusplus(Outer0 that) Outer0.#apply_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1(myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1:this.myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1().#plusplus(that:that.myLibs_$%12_0_$%$%36_1_$%$%$%18_1_$%$%$%$%134_1_$%$%$%$%$%251_1_$%$%$%$%$%$%369_1_$%$%$%$%$%$%$%488_1_$%$%$%$%$%$%$%$%608_1__729_1()))}
Patch:{
Varacc2_$%$%113_1_$%$%$%95_1_$%$%$%$%215_1_$%$%$%$%$%332_1_$%$%$%$%$%$%450_1_$%$%$%$%$%$%$%569_1_$%$%$%$%$%$%$%$%689_1__810_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap0_$%$%114_1_$%$%$%96_1_$%$%$%$%216_1_$%$%$%$%$%333_1_$%$%$%$%$%$%451_1_$%$%$%$%$%$%$%570_1_$%$%$%$%$%$%$%$%690_1__811_1:'@private
{
type method 
mut Outer0 #apply(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() that) 
mut method 
Outer2::PreferentialComposition::SrcDests::#begin() ::#end() #inner() }
Varacc3_$%$%115_1_$%$%$%97_1_$%$%$%$%217_1_$%$%$%$%$%334_1_$%$%$%$%$%$%452_1_$%$%$%$%$%$%$%571_1_$%$%$%$%$%$%$%$%691_1__812_1:'@private
{
type method 
mut Outer0 #apply(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() inner) 
mut method 
Void inner(Outer2::PreferentialComposition::SrcDests::#begin() ::#end() that) 
mut method 
Outer2::PreferentialComposition::SrcDests::#begin() ::#end() #inner() }
type method 
Outer0 #apply(Outer1::Path that) 
mut method 
Outer1::Path #that() 
read method 
Outer1::Path that() 
method 
Library #leftleft(Library that) exception Outer1::MetaGuard::ClassClash, Outer1::MetaGuard::MethodClash (
  Void unused=(
    Outer1::Introspection::#apply(lib path ) ip=Outer1::Introspection.#apply(lib:that, path:this.that())
    Outer1::Introspection::#apply(lib path ) ::transitivelyNestedClasses() itr=ip.transitivelyNestedClasses()
    Outer0::renameMap_$%$%37_1_$%$%$%19_1_$%$%$%$%135_1_$%$%$%$%$%252_1_$%$%$%$%$%$%370_1_$%$%$%$%$%$%$%489_1_$%$%$%$%$%$%$%$%609_1__730_1(that prefix intros ) rens=Outer0.renameMap_$%$%37_1_$%$%$%19_1_$%$%$%$%135_1_$%$%$%$%$%252_1_$%$%$%$%$%$%370_1_$%$%$%$%$%$%$%489_1_$%$%$%$%$%$%$%$%609_1__730_1(that:that, prefix:Outer1::S.#stringParser(that:{'@stringU
    '#1
    }), intros:itr)
    Outer1::PreferentialComposition::SrcDests::#begin() ::#end() map=Outer1::PreferentialComposition::SrcDests.#begin().#end()
    Library acc=that
    mut Outer0::Varmap0_$%$%114_1_$%$%$%96_1_$%$%$%$%216_1_$%$%$%$%$%333_1_$%$%$%$%$%$%451_1_$%$%$%$%$%$%$%570_1_$%$%$%$%$%$%$%$%690_1__811_1 varmap=Outer0::Varmap0_$%$%114_1_$%$%$%96_1_$%$%$%$%216_1_$%$%$%$%$%333_1_$%$%$%$%$%$%451_1_$%$%$%$%$%$%$%570_1_$%$%$%$%$%$%$%$%690_1__811_1.#apply(inner:map)
    mut Outer0::Varacc2_$%$%113_1_$%$%$%95_1_$%$%$%$%215_1_$%$%$%$%$%332_1_$%$%$%$%$%$%450_1_$%$%$%$%$%$%$%569_1_$%$%$%$%$%$%$%$%689_1__810_1 varacc=Outer0::Varacc2_$%$%113_1_$%$%$%95_1_$%$%$%$%215_1_$%$%$%$%$%332_1_$%$%$%$%$%$%450_1_$%$%$%$%$%$%$%569_1_$%$%$%$%$%$%$%$%689_1__810_1.#apply(inner:acc)
    Void unused0=(
      Outer0::renameMap_$%$%37_1_$%$%$%19_1_$%$%$%$%135_1_$%$%$%$%$%252_1_$%$%$%$%$%$%370_1_$%$%$%$%$%$%$%489_1_$%$%$%$%$%$%$%$%609_1__730_1(that prefix intros ) ::vals() ren=rens.vals()
      (
        Void unused4=(
          Void unused5=(
            Void unused6=loop (
              Void unused7=ren.#next()
              catch exception unused8 (
                on Void (
                  Void unused9=(
                    Void unused10=ren.#checkEnd()
                    catch exception unused11 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Void unused12=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                Void unused13=varacc.inner(that:Outer1::Refactor::MoveImplementationSelector.#begin().#add(that:ren.#inner().src(), of:ren.#inner().path(), to:ren.#inner().dest()).#end().#leftleft(that:varacc.#inner()))
                catch exception err (
                  on Outer1::MetaGuard error Outer1::Assert::ObservedBug.#stringParser(that:{'@stringU
                  'Path.#lessless(that)
                  }).#apply(that:err)
                  )
                void
                )
              )
            catch exception unused14 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused15=ren.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Library (
            Void unused16=ren.#close()
            return propagated0
            )
          )
        ren.#close()
        )
      )
    Void unused1=varacc.inner(that:Outer1::Refactor::RenamePath.#begin().#add(that:this.that(), to:Outer1::Path.#stringParser(that:{'@stringU
    'Outer0
    })).#end().#leftleft(that:varacc.#inner()))
    Void unused2=(
      Outer0::Varmap0_$%$%114_1_$%$%$%96_1_$%$%$%$%216_1_$%$%$%$%$%333_1_$%$%$%$%$%$%451_1_$%$%$%$%$%$%$%570_1_$%$%$%$%$%$%$%$%690_1__811_1::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused17=(
          Void unused18=(
            Void unused19=loop (
              Void unused20=mapi.#next()
              catch exception unused21 (
                on Void (
                  Void unused22=(
                    Void unused23=mapi.#checkEnd()
                    catch exception unused24 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              varacc.inner(that:Outer1::Refactor::MakePrivateSelector.#begin().#add(that:mapi.#inner().dest(), of:mapi.#inner().path()).#end().#leftleft(that:varacc.#inner()))
              )
            catch exception unused25 (
              on Void void
              )
            void
            )
          catch exception propagated1 (
            on Any (
              Void unused26=mapi.#close()
              exception propagated1
              )
            )
          void
          )
        catch return propagated2 (
          on Library (
            Void unused27=mapi.#close()
            return propagated2
            )
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    catch exception err2 (
      on Outer1::MetaGuard::MemberUnavailable error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Path2
      }).#apply(that:err2)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method '@private
Outer1::PreferentialComposition::SrcDests renameMap_$%$%37_1_$%$%$%19_1_$%$%$%$%135_1_$%$%$%$%$%252_1_$%$%$%$%$%$%370_1_$%$%$%$%$%$%$%489_1_$%$%$%$%$%$%$%$%609_1__730_1(Library that, Outer1::S prefix, Outer1::Introspection::NestedClasses intros) (
  Void unused=(
    Outer1::PreferentialComposition::SrcDests::#begin() ::#end() acc=Outer1::PreferentialComposition::SrcDests.#begin().#end()
    mut Outer0::Varacc3_$%$%115_1_$%$%$%97_1_$%$%$%$%217_1_$%$%$%$%$%334_1_$%$%$%$%$%$%452_1_$%$%$%$%$%$%$%571_1_$%$%$%$%$%$%$%$%691_1__812_1 varacc=Outer0::Varacc3_$%$%115_1_$%$%$%97_1_$%$%$%$%217_1_$%$%$%$%$%334_1_$%$%$%$%$%$%452_1_$%$%$%$%$%$%$%571_1_$%$%$%$%$%$%$%$%691_1__812_1.#apply(inner:acc)
    Void unused0=(
      Outer1::Introspection::NestedClasses::vals() intro=intros.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=intro.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=intro.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer1::Introspection::NestedClasses::vals() ::#inner() ::pathFromRoot() ::names() ns=intro.#inner().pathFromRoot().names()
                Void unused10=Outer1::Assert::$.#begin().#add(that:ns.isEmpty().#bang()).#end()
                varacc.inner(that:varacc.#inner().#plusplus(that:Outer1::PreferentialComposition.renameMap(that:that, prefix:prefix, path:Outer1::Path.from(names:ns.pop()), ms:intro.#inner().methods())))
                )
              )
            catch exception unused11 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused12=intro.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer1::PreferentialComposition::SrcDests (
            Void unused13=intro.#close()
            return propagated0
            )
          )
        intro.#close()
        )
      )
    Void unused1=return varacc.#inner()
    void
    )
  catch return result (
    on Outer1::PreferentialComposition::SrcDests result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Default:{
DecorationUnfeasable:{<:Outer2::MetaGuard, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%16_0_$%$%116_1_$%$%$%98_1_$%$%$%$%218_1_$%$%$%$%$%335_1_$%$%$%$%$%$%453_1_$%$%$%$%$%$%$%572_1_$%$%$%$%$%$%$%$%692_1__813_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%16_0_$%$%116_1_$%$%$%98_1_$%$%$%$%218_1_$%$%$%$%$%335_1_$%$%$%$%$%$%453_1_$%$%$%$%$%$%$%572_1_$%$%$%$%$%$%$%$%692_1__813_1 varres=Outer0::Varres_$%16_0_$%$%116_1_$%$%$%98_1_$%$%$%$%218_1_$%$%$%$%$%335_1_$%$%$%$%$%$%453_1_$%$%$%$%$%$%$%572_1_$%$%$%$%$%$%$%$%692_1__813_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
Parsable:{
type method 
Library #leftleft(Library that) exception Outer1::DecorationUnfeasable (
  Void unused=(
    Void unused0=return Outer2::Extends.#begin().#add(that:{'ParseFailure:Message:S[]<<{<:Guard} no need, related to invariant?
    
    type method ' if you do not implement it, it is a constructor?
    Outer0 fromS(read Outer3::Concept::ToS that) 
    type method 
    Outer0 #stringParser(Library that) Outer0.fromS(that:Outer3::S.#stringParser(that:that))}).#end().#leftleft(that:that)
    catch exception mg (
      on Outer2::MetaGuard exception Outer1::DecorationUnfeasable.#stringParser(that:{'@stringU
      'Parsable
      }).#apply(that:mg)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
SealState:{' how to specify which factory to keep out? what getters

type method 
Library #leftleft(Library that) (
  Void unused=(
    Outer2::Introspection::#apply(lib ) i=Outer2::Introspection.#apply(lib:that)
    Void unused0=return that
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Invariant:{
type method 
Outer2::Bool isInvariant(Outer2::Introspection::NestedClass that) (
  Void unused=(
    Outer2::Introspection::NestedClass::transitivelyImplementedInterfaces() interf=that.transitivelyImplementedInterfaces()
    Void unused0=(
      Outer2::Introspection::NestedClass::transitivelyImplementedInterfaces() ::vals() ti=interf.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ti.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=ti.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Void unused10=(
                  Outer2::Introspection::NestedClass::transitivelyImplementedInterfaces() ::vals() ::#inner() ::referencedPath() ::externalType() tAny=ti.#inner().referencedPath().externalType()
                  (
                    type Outer2::Concept::Invariant tAny0=(
                      Void unused11=return tAny
                      catch return casted (
                        on type Outer2::Concept::Invariant casted
                        
                        on type Any exception void
                        )
                      error {'@stringU
                      'CastT-Should be unreachable code
                      }
                      )
                    catch exception unused12 (
                      on Void void
                      )
                    (
                      Void unused13=return Outer2::Bool.true()
                      void
                      )
                    )
                  )
                catch error unused14 (
                  on Outer2::Guard::Operation void
                  )
                void
                )
              )
            catch exception unused15 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused16=ti.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer2::Bool (
            Void unused17=ti.#close()
            return propagated0
            )
          )
        ti.#close()
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer2::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Library #leftleft(Library that) exception Outer1::DecorationUnfeasable (
  Void unused=(
    Outer2::Introspection::#apply(lib ) i=Outer2::Introspection.#apply(lib:that)
    Outer0::isInvariant(that ) isInv=this.isInvariant(that:i)
    Void unused0=(
      Outer0::isInvariant(that ) ::#bang() cond=isInv.#bang()
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return that
        )
      )
    Outer2::Introspection::#apply(lib ) ::state() state=i.state()
    Void unused1=(
      Outer2::Introspection::#apply(lib ) ::state() ::isEmpty() cond0=state.isEmpty()
      (
        Void unused6=cond0.#checkTrue()
        catch exception unused7 (
          on Void void
          )
        exception Outer1::DecorationUnfeasable.#stringParser(that:{'@stringU
        'State is empty
        })
        )
      )
    Outer2::Introspection::#apply(lib ) ::state() ::top() k=state.top()
    Void unused2=(
      Outer2::Introspection::#apply(lib ) ::state() ::top() ::isPrivate() cond1=k.isPrivate()
      (
        Void unused8=cond1.#checkTrue()
        catch exception unused9 (
          on Void void
          )
        exception Outer1::DecorationUnfeasable.#stringParser(that:{'@stringU
        'State is private
        })
        )
      )
    Void unused3=return that
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
DataFromToS:{' in the future we can add also hashCode and > =>

type method 
Library #leftleft(Library that) exception Outer1::DecorationUnfeasable (
  Void unused=(
    Void unused0=return Outer2::Extends.#begin().#add(that:{<:Outer3::Concept::ToS
    method 
    Outer3::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
    read method 
    Outer3::Bool #equalequal(read Outer0 that) this.toS().#equalequal(that:that.toS())}).#end().#leftleft(that:Outer1::Equals.#leftleft(that:that))
    catch exception mg (
      on Outer1::DecorationUnfeasable exception mg
      
      on Outer2::MetaGuard exception Outer1::DecorationUnfeasable.#stringParser(that:{'@stringU
      '
      }).#apply(that:mg)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Equals:{
type method 
Library #leftleft(Library that) exception Outer1::DecorationUnfeasable (
  Void unused=(
    Void unused0=return Outer2::Extends.#begin().#add(that:{<:Outer3::Concept::Equals
    method equals(that ) (
      Void unused=(
        Void unused0=(
          Outer0 that0=(
            Void unused2=return that
            catch return casted (
              on Outer0 casted
              
              on Any exception void
              )
            error {'@stringU
            'CastT-Should be unreachable code
            }
            )
          catch exception unused3 (
            on Void void
            )
          (
            Void unused4=return this.#equalequal(that:that0)
            void
            )
          )
        Void unused1=return Outer3::Bool.false()
        void
        )
      catch return result (
        on Outer0::equals(that ) result
        )
      error {'@stringU
      'CurlyBlock-Should be unreachable code
      }
      )
    read method 
    Outer3::Bool #equalequal(read Outer0 that) }).#end().#leftleft(that:that)
    catch exception x (
      on Outer2::MetaGuard exception Outer1::DecorationUnfeasable.#stringParser(that:{'@stringU
      'Equals
      }).#apply(that:x)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Named:{
type method 
Library #leftleft(Library that) exception Outer1::DecorationUnfeasable (
  Void unused=(
    Void unused0=return Outer2::Extends.#begin().#add(that:{<:Outer3::Concept::Named
    method myName() Outer3::Introspection.#apply(clazz:Outer0).externalTypeToS()}).#end().#leftleft(that:that)
    catch exception x (
      on Outer2::MetaGuard exception Outer1::DecorationUnfeasable.#stringParser(that:{'@stringU
      'Named
      }).#apply(that:x)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}
PostAction:{
Varacc_$%$%$%99_1_$%$%$%$%219_1_$%$%$%$%$%336_1_$%$%$%$%$%$%454_1_$%$%$%$%$%$%$%573_1_$%$%$%$%$%$%$%$%693_1__814_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
type method 
Outer0 #apply(Outer1::Selector that, Outer1::Path of, Library action, Outer1::Selector deprecated) 
mut method 
Outer1::Selector #that() 
read method 
Outer1::Selector that() 
mut method 
Outer1::Path #of() 
read method 
Outer1::Path of() 
mut method 
Library #action() 
read method 
Library action() 
mut method 
Outer1::Selector #deprecated() 
read method 
Outer1::Selector deprecated() 
InvalidAction:{<:Outer2::MetaGuard, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%100_1_$%$%$%$%220_1_$%$%$%$%$%337_1_$%$%$%$%$%$%455_1_$%$%$%$%$%$%$%574_1_$%$%$%$%$%$%$%$%694_1__815_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%100_1_$%$%$%$%220_1_$%$%$%$%$%337_1_$%$%$%$%$%$%455_1_$%$%$%$%$%$%$%574_1_$%$%$%$%$%$%$%$%694_1__815_1 varres=Outer0::Varres_$%$%41_1_$%$%$%100_1_$%$%$%$%220_1_$%$%$%$%$%337_1_$%$%$%$%$%$%455_1_$%$%$%$%$%$%$%574_1_$%$%$%$%$%$%$%$%694_1__815_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
method 
Library #leftleft(Library that) exception Outer0::InvalidAction (
  Void unused=('no throw
  
    Outer0::that() origin=this.that()
    Outer0::deprecated() dest=this.deprecated()
    Outer0::of() p=this.of()
    Outer0::Action::#apply(path proposedAction ) a=Outer0::Action.#apply(path:p, proposedAction:this.action())
    Library acc=that
    mut Outer0::Varacc_$%$%$%99_1_$%$%$%$%219_1_$%$%$%$%$%336_1_$%$%$%$%$%$%454_1_$%$%$%$%$%$%$%573_1_$%$%$%$%$%$%$%$%693_1__814_1 varacc=Outer0::Varacc_$%$%$%99_1_$%$%$%$%219_1_$%$%$%$%$%336_1_$%$%$%$%$%$%454_1_$%$%$%$%$%$%$%573_1_$%$%$%$%$%$%$%$%693_1__814_1.#apply(inner:acc)
    Void unused0=varacc.inner(that:Outer1::Refactor::MoveImplementationSelector.#begin().#add(that:origin, of:p, to:dest).#end().#leftleft(that:varacc.#inner()))
    Void unused1=varacc.inner(that:Outer1::Refactor.compose(left:varacc.#inner(), right:a.action()))
    Void unused2=('throws ParameterMismatch
    
      Void unused5=varacc.inner(that:Outer1::Refactor::SumMethods.#begin().#add(that:dest, and:a.fresh(), of:p, to:origin).#end().#leftleft(that:varacc.#inner()))
      catch exception parm (
        on Outer1::MetaGuard::ParameterMismatch error Outer0::InvalidAction.#stringParser(that:{'@stringU
        'Action type signature do not fit with.. PostAct::Action0
        }).#apply(that:parm)
        )
      void
      )
    Void unused3=varacc.inner(that:Outer1::Refactor::MakePrivateSelector.#begin().#add(that:a.fresh(), of:p).#end().#leftleft(that:varacc.#inner()))
    Void unused4=return varacc.#inner()
    catch exception cnr (
      on Outer1::MetaGuard error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'PostAct::Action1
      }).#apply(that:cnr)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
Action:{
type method 
Outer0 #apply(Outer2::Selector fresh, Library action) 
mut method 
Outer2::Selector #fresh() 
read method 
Outer2::Selector fresh() 
mut method 
Library #action() 
read method 
Library action() 
type method 
Outer0 #apply(Outer2::Path path, Library proposedAction) exception Outer1::InvalidAction (
  Void unused=(
    Outer2::Selector::#stringParser(that ) defS=Outer2::Selector.#stringParser(that:{'@stringU
    '#apply(that)
    })
    Outer2::Selector::fresh(that ) fresh=Outer2::Selector.fresh(that:defS)
    Outer2::Introspection::#apply(lib path ) ::methodFromSelector(that ) defM=Outer2::Introspection.#apply(lib:proposedAction, path:path).methodFromSelector(that:defS)
    catch exception err (
      on Outer2::MetaGuard exception Outer1::InvalidAction.#stringParser(that:{'@stringU
      'action method not present
      }).#apply(that:err)
      )
    (
      Outer2::Introspection::#apply(lib path ) ::methodFromSelector(that ) ::parameterTypes() ::top() pt=defM.parameterTypes().top()
      Outer2::Introspection::#apply(lib path ) ::methodFromSelector(that ) ::returnType() rt=defM.returnType()
      Void unused0=(
        Outer2::Introspection::#apply(lib path ) ::methodFromSelector(that ) ::parameterTypes() ::top() ::toS() ::#bangequal(that ) cond=pt.toS().#bangequal(that:rt.toS())
        (
          Void unused1=cond.#checkTrue()
          catch exception unused2 (
            on Void void
            )
          exception Outer1::InvalidAction.#stringParser(that:{'@stringU
          'action return type need to be equal to parameter type
          })
          )
        )
      Outer2::Refactor::RenameSelector::#begin() ::#add(that of to ) ::#end() ::#leftleft(that ) action=Outer2::Refactor::RenameSelector.#begin().#add(that:defS, of:path, to:fresh).#end().#leftleft(that:proposedAction)
      catch exception cnr (
        on Outer2::MetaGuard error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
        'PostAct::Action2
        }).#apply(that:cnr)
        )
      (
        Void unused3=return Outer0.#apply(fresh:fresh, action:action)
        void
        )
      )
    )
  catch return result (
    on Outer0 result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}
Invariant:{' error handling

Varacc0_$%$%$%101_1_$%$%$%$%221_1_$%$%$%$%$%338_1_$%$%$%$%$%$%456_1_$%$%$%$%$%$%$%575_1_$%$%$%$%$%$%$%$%695_1__816_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varaccumulator_$%$%$%102_1_$%$%$%$%222_1_$%$%$%$%$%339_1_$%$%$%$%$%$%457_1_$%$%$%$%$%$%$%576_1_$%$%$%$%$%$%$%$%696_1__817_1:'@private
{
type method 
mut Outer0 #apply(Outer2::Strings::#begin() inner) 
mut method 
Void inner(Outer2::Strings::#begin() that) 
mut method 
Outer2::Strings::#begin() #inner() }
Varaccumulator0_$%$%$%103_1_$%$%$%$%223_1_$%$%$%$%$%340_1_$%$%$%$%$%$%458_1_$%$%$%$%$%$%$%577_1_$%$%$%$%$%$%$%$%697_1__818_1:'@private
{
type method 
mut Outer0 #apply(Outer2::S::#stringParser(that ) ::#begin() ::#add(that ) ::#end() ::#stringParser(that ) ::#begin() inner) 
mut method 
Void inner(Outer2::S::#stringParser(that ) ::#begin() ::#add(that ) ::#end() ::#stringParser(that ) ::#begin() that) 
mut method 
Outer2::S::#stringParser(that ) ::#begin() ::#add(that ) ::#end() ::#stringParser(that ) ::#begin() #inner() }
InvariantFailure:{<:Outer2::MetaGuard, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%104_1_$%$%$%$%224_1_$%$%$%$%$%341_1_$%$%$%$%$%$%459_1_$%$%$%$%$%$%$%578_1_$%$%$%$%$%$%$%$%698_1__819_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%104_1_$%$%$%$%224_1_$%$%$%$%$%341_1_$%$%$%$%$%$%459_1_$%$%$%$%$%$%$%578_1_$%$%$%$%$%$%$%$%698_1__819_1 varres=Outer0::Varres_$%$%41_1_$%$%$%104_1_$%$%$%$%224_1_$%$%$%$%$%341_1_$%$%$%$%$%$%459_1_$%$%$%$%$%$%$%578_1_$%$%$%$%$%$%$%$%698_1__819_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
type method 
Outer1::Bool isInvariant(Outer1::Introspection::NestedClass that) (
  Void unused=(
    Outer1::Introspection::NestedClass::transitivelyImplementedInterfaces() interf=that.transitivelyImplementedInterfaces()
    Void unused0=(
      Outer1::Introspection::NestedClass::transitivelyImplementedInterfaces() ::vals() ti=interf.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ti.#next()
              catch exception unused6 (
                on Void (
                  Void unused7=(
                    Void unused8=ti.#checkEnd()
                    catch exception unused9 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Void unused10=(
                  Outer1::Introspection::NestedClass::transitivelyImplementedInterfaces() ::vals() ::#inner() ::referencedPath() ::externalType() tAny=ti.#inner().referencedPath().externalType()
                  (
                    type Outer1::Concept::Invariant tAny0=(
                      Void unused11=return tAny
                      catch return casted (
                        on type Outer1::Concept::Invariant casted
                        
                        on type Any exception void
                        )
                      error {'@stringU
                      'CastT-Should be unreachable code
                      }
                      )
                    catch exception unused12 (
                      on Void void
                      )
                    (
                      Void unused13=return Outer1::Bool.true()
                      void
                      )
                    )
                  )
                catch error unused14 (
                  on Outer1::Guard::Operation void
                  )
                void
                )
              )
            catch exception unused15 (
              on Void void
              )
            void
            )
          catch exception propagated (
            on Any (
              Void unused16=ti.#close()
              exception propagated
              )
            )
          void
          )
        catch return propagated0 (
          on Outer1::Bool (
            Void unused17=ti.#close()
            return propagated0
            )
          )
        ti.#close()
        )
      )
    Void unused1=return Outer1::Bool.false()
    void
    )
  catch return result (
    on Outer1::Bool result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer1::Introspection::Methods extractOkState(Library that) exception Outer1::Default::DecorationUnfeasable (
  Void unused=(
    Outer1::Introspection::#apply(lib ) i=Outer1::Introspection.#apply(lib:that)
    Outer0::isInvariant(that ) isInv=this.isInvariant(that:i)
    Void unused0=(
      Outer0::isInvariant(that ) ::#bang() cond=isInv.#bang()
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return Outer1::Introspection::Methods.#begin().#end()
        )
      )
    Outer1::Introspection::#apply(lib ) ::state() state=i.state()
    Void unused1=(
      Outer1::Introspection::#apply(lib ) ::state() ::isEmpty() cond0=state.isEmpty()
      (
        Void unused6=cond0.#checkTrue()
        catch exception unused7 (
          on Void void
          )
        exception Outer1::Default::DecorationUnfeasable.#stringParser(that:{'@stringU
        'State is empty
        })
        )
      )
    Outer1::Introspection::#apply(lib ) ::state() ::top() k=state.top()
    Void unused2=(
      Outer1::Introspection::#apply(lib ) ::state() ::top() ::isPrivate() cond1=k.isPrivate()
      (
        Void unused8=cond1.#checkTrue()
        catch exception unused9 (
          on Void void
          )
        exception Outer1::Default::DecorationUnfeasable.#stringParser(that:{'@stringU
        'State is private
        })
        )
      )
    Void unused3=return state
    void
    )
  catch return result (
    on Outer1::Introspection::Methods result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Void checkInvariant(read Outer1::Concept::Invariant that) (
  Outer1::Concept::Invariant::invariant() ::#bang() cond=that.invariant().#bang()
  (
    Void unused=cond.#checkTrue()
    catch exception unused0 (
      on Void void
      )
    error Outer0::InvariantFailure.#apply(text:Outer1::S.#stringParser(that:{'@stringU
    'invalid object detected 
    }).#plusplus(that:Outer1::Refactor::Tools.getToSOrName(that:that)))
    )
  )
type method 
Library constructorAction(Outer1::Introspection::Type that) (
  Void unused=(
    Library immA={<:Outer2::Concept::Invariant
    type method 
    Outer0 #apply(Outer0 that) (
      Void unused=Outer1.checkInvariant(that:that)
      that
      )}
    Library mutA={<:Outer2::Concept::Invariant
    type method 
    mut Outer0 #apply(mut Outer0 that) (
      Void unused=Outer1.checkInvariant(that:that)
      that
      )}
    Library lentA={<:Outer2::Concept::Invariant
    type method 
    mut Outer0 #apply(mut Outer0 that) (
      Void unused=Outer1.checkInvariant(that:that)
      that
      )}
    Library readA={<:Outer2::Concept::Invariant
    type method 
    mut Outer0 #apply(mut Outer0 that) (
      Void unused=Outer1.checkInvariant(that:that)
      that
      )}
    Library capsuleA={<:Outer2::Concept::Invariant
    type method 
    capsule Outer0 #apply(capsule Outer0 that) (
      mut Outer0 open=that
      Void unused=Outer1.checkInvariant(that:open)
      open
      )}
    Void unused0=(
      Outer1::Introspection::Type::mdf() mdf=that.mdf()
      (
        Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
        '
        }))
        (
          Void unused1=cond.#checkTrue()
          catch exception unused2 (
            on Void (
              Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond0=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
              'mut
              }))
              (
                Void unused3=cond0.#checkTrue()
                catch exception unused4 (
                  on Void (
                    Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond1=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                    'lent
                    }))
                    (
                      Void unused5=cond1.#checkTrue()
                      catch exception unused6 (
                        on Void (
                          Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond2=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                          'read
                          }))
                          (
                            Void unused7=cond2.#checkTrue()
                            catch exception unused8 (
                              on Void (
                                Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond3=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                                'capsule
                                }))
                                (
                                  Void unused9=cond3.#checkTrue()
                                  catch exception unused10 (
                                    on Void error Outer1::Default::DecorationUnfeasable.#apply(text:Outer1::S.#stringParser(that:{'@stringU
                                    'unidentified mdf:
                                    }).#begin().#add(that:mdf).#end().#stringParser(that:{'@stringU
                                    '!
                                    }))
                                    )
                                  return capsuleA
                                  )
                                )
                              )
                            return readA
                            )
                          )
                        )
                      return lentA
                      )
                    )
                  )
                return mutA
                )
              )
            )
          return immA
          )
        )
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Library setterAction() {<:Outer2::Concept::Invariant
mut method 
Void #apply(Void that) (
  Void unused=Outer1.checkInvariant(that:this)
  that
  )}
type method 
Library idAction(Outer1::Introspection::Type that) (
  Void unused=(
    Library classA={
    type method 
    type Outer0::T #apply(type Outer0::T that) that
    T:{}}
    Library immA={
    type method 
    Outer0::T #apply(Outer0::T that) that
    T:{}}
    Library mutA={
    type method 
    mut Outer0::T #apply(mut Outer0::T that) that
    T:{}}
    Library lentA={
    type method 
    lent Outer0::T #apply(lent Outer0::T that) that
    T:{}}
    Library readA={
    type method 
    read Outer0::T #apply(read Outer0::T that) that
    T:{}}
    Library mdfA=(
      Void unused2=(
        Void unused3=(
          Outer1::Introspection::Type::mdf() mdf=that.mdf()
          (
            Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
            'type
            }))
            (
              Void unused4=cond.#checkTrue()
              catch exception unused5 (
                on Void (
                  Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond0=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                  '
                  }))
                  (
                    Void unused6=cond0.#checkTrue()
                    catch exception unused7 (
                      on Void (
                        Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond1=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                        'mut
                        }))
                        (
                          Void unused8=cond1.#checkTrue()
                          catch exception unused9 (
                            on Void (
                              Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond2=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                              'lent
                              }))
                              (
                                Void unused10=cond2.#checkTrue()
                                catch exception unused11 (
                                  on Void (
                                    Outer1::Introspection::Type::mdf() ::#equalequal(that ) cond3=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                                    'read
                                    }))
                                    (
                                      Void unused12=cond3.#checkTrue()
                                      catch exception unused13 (
                                        on Void error Outer1::Default::DecorationUnfeasable.#apply(text:Outer1::S.#stringParser(that:{'@stringU
                                        'unidentified mdf:
                                        }).#begin().#add(that:mdf).#end().#stringParser(that:{'@stringU
                                        '!
                                        }))
                                        )
                                      return readA
                                      )
                                    )
                                  )
                                return lentA
                                )
                              )
                            )
                          return mutA
                          )
                        )
                      )
                    return immA
                    )
                  )
                )
              return classA
              )
            )
          )
        void
        )
      catch return result0 (
        on Library result0
        )
      error {'@stringU
      'CurlyBlock-Should be unreachable code
      }
      )
    Outer1::Introspection::Type::referencedPath() nc=that.referencedPath()
    Void unused0=(
      Outer1::Introspection::Type::referencedPath() ::hasExternalType() cond4=nc.hasExternalType()
      (
        Void unused14=cond4.#checkTrue()
        catch exception unused15 (
          on Void void
          )
        return Outer1::Refactor::Redirect.#begin().#add(that:Outer1::Path.#stringParser(that:{'@stringU
        'T
        }), to:nc.externalType()).#end().#leftleft(that:mdfA)
        )
      )
    Void unused1=return Outer1::Refactor::RenamePath.#begin().#add(that:Outer1::Path.#stringParser(that:{'@stringU
    'T
    }), to:nc.pathFromRoot()).#end().#leftleft(that:mdfA)
    catch exception cnr (
      on Outer1::MetaGuard error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'idAction
      }).#apply(that:cnr)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Library #leftleft(Library that) exception Outer1::Default::DecorationUnfeasable this.stateDecoration(that:that, state:this.extractOkState(that:that))
type method 
Library stateDecoration(Library that, Outer1::Introspection::Methods state) (
  Void unused=(
    Void unused0=(
      Outer1::Introspection::Methods::isEmpty() cond=state.isEmpty()
      (
        Void unused4=cond.#checkTrue()
        catch exception unused5 (
          on Void void
          )
        return that
        )
      )
    Outer1::Path::#stringParser(that ) p=Outer1::Path.#stringParser(that:{'@stringU
    'Outer0
    })
    Outer1::Introspection::Methods::top() ::selector() kSel=state.top().selector()
    Outer1::Introspection::Methods::top() ::selector() ::name() kName=kSel.name()
    Outer1::Introspection::Methods::top() ::selector() ::names() kNames=kSel.names()
    Outer1::SafeOperators::freshName(that ) kNameF=Outer1::SafeOperators.freshName(that:kName)
    Outer1::Strings::#begin() ::#end() kNamesF=(
      Outer1::Strings::#begin() accumulator=Outer1::Strings.#begin()
      mut Outer0::Varaccumulator_$%$%$%102_1_$%$%$%$%222_1_$%$%$%$%$%339_1_$%$%$%$%$%$%457_1_$%$%$%$%$%$%$%576_1_$%$%$%$%$%$%$%$%696_1__817_1 varaccumulator=Outer0::Varaccumulator_$%$%$%102_1_$%$%$%$%222_1_$%$%$%$%$%339_1_$%$%$%$%$%$%457_1_$%$%$%$%$%$%$%576_1_$%$%$%$%$%$%$%$%696_1__817_1.#apply(inner:accumulator)
      Void unused6=(
        Outer1::Introspection::Methods::top() ::selector() ::names() ::vals() n=kNames.vals()
        (
          Void unused7=(
            Void unused8=(
              Void unused9=loop (
                Void unused10=n.#next()
                catch exception unused11 (
                  on Void (
                    Void unused12=(
                      Void unused13=n.#checkEnd()
                      catch exception unused14 (
                        on Void void
                        )
                      void
                      )
                    exception void
                    )
                  )
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:Outer1::SafeOperators.freshName(that:n.#inner())))
                )
              catch exception unused15 (
                on Void void
                )
              void
              )
            catch exception propagated (
              on Any (
                Void unused16=n.#close()
                exception propagated
                )
              )
            void
            )
          catch return propagated0 (
            on Library (
              Void unused17=n.#close()
              return propagated0
              )
            )
          n.#close()
          )
        )
      varaccumulator.#inner().#end()
      )
    Outer1::Selector::from(name names ) kSelF=Outer1::Selector.from(name:kNameF, names:kNamesF)
    Library acc=that
    mut Outer0::Varacc0_$%$%$%101_1_$%$%$%$%221_1_$%$%$%$%$%338_1_$%$%$%$%$%$%456_1_$%$%$%$%$%$%$%575_1_$%$%$%$%$%$%$%$%695_1__816_1 varacc=Outer0::Varacc0_$%$%$%101_1_$%$%$%$%221_1_$%$%$%$%$%338_1_$%$%$%$%$%$%456_1_$%$%$%$%$%$%$%575_1_$%$%$%$%$%$%$%$%695_1__816_1.#apply(inner:acc)
    Void unused1=(
      Outer1::Introspection::Methods::vals() m=state.vals()
      (
        Void unused18=(
          Void unused19=(
            Void unused20=loop (
              Void unused21=m.#next()
              catch exception unused22 (
                on Void (
                  Void unused23=(
                    Void unused24=m.#checkEnd()
                    catch exception unused25 (
                      on Void void
                      )
                    void
                    )
                  exception void
                  )
                )
              (
                Outer1::Introspection::Methods::vals() ::#inner() ::selector() s=m.#inner().selector()
                Outer1::Introspection::Methods::vals() ::#inner() ::thisMdf() mdf=m.#inner().thisMdf()
                Outer1::Introspection::Methods::vals() ::#inner() ::selector() ::names() ::isEmpty() zeroArgs=s.names().isEmpty()
                (
                  Outer1::Introspection::Methods::vals() ::#inner() ::thisMdf() ::#equalequal(that ) cond0=mdf.#equalequal(that:Outer1::S.#stringParser(that:{'@stringU
                  'type
                  }))
                  (
                    Void unused26=cond0.#checkTrue()
                    catch exception unused27 (
                      on Void (
                        Outer0::stateFName(that old fresh ) newSel=Outer0.stateFName(that:s, old:kNames, fresh:kNamesF)
                        (
                          Void unused28=zeroArgs.#checkTrue()
                          catch exception unused29 (
                            on Void varacc.inner(that:Outer1::PostAction.#apply(that:s, of:p, action:this.setterAction(), deprecated:newSel).#leftleft(that:varacc.#inner()))
                            )
                          varacc.inner(that:Outer1::PostAction.#apply(that:s, of:p, action:this.idAction(that:m.#inner().returnType()), deprecated:newSel).#leftleft(that:varacc.#inner()))
                          )
                        )
                      )
                    varacc.inner(that:Outer1::PostAction.#apply(that:s, of:p, action:this.constructorAction(that:m.#inner().returnType()), deprecated:kSelF).#leftleft(that:varacc.#inner()))
                    )
                  )
                )
              )
            catch exception unused30 (
              on Void void
              )
            void
            )
          catch exception propagated1 (
            on Any (
              Void unused31=m.#close()
              exception propagated1
              )
            )
          void
          )
        catch return propagated2 (
          on Library (
            Void unused32=m.#close()
            return propagated2
            )
          )
        m.#close()
        )
      )
    Void unused2=varacc.inner(that:Outer1::Refactor::MakePrivateSelector.#begin().#add(that:kSelF, of:p).#end().#leftleft(that:varacc.#inner()))
    Void unused3=return varacc.#inner()
    catch exception cnr (
      on Outer1::MetaGuard error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Invariant
      }).#apply(that:cnr)
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer1::Selector stateFName(Outer1::Selector that, Outer1::Strings old, Outer1::Strings fresh) (
  Void unused=(
    Outer1::Selector::nameAsField() name=that.nameAsField()
    Outer1::Selector::prefixAsField() prefix=that.prefixAsField()
    Outer1::Selector::names() names=that.names()
    Void unused0=(
      Outer1::Strings::vals() o=old.vals()
      (
        Void unused2=(
          Void unused3=(
            Outer1::Strings::vals() f=fresh.vals()
            (
              Void unused4=(
                Void unused5=(
                  Void unused6=loop (
                    Void unused7=o.#next()
                    catch exception unused8 (
                      on Void (
                        Void unused9=(
                          Void unused12=f.#next()
                          catch exception unused13 (
                            on Void void
                            )
                          void
                          )
                        Void unused10=(
                          Void unused14=o.#checkEnd()
                          catch exception unused15 (
                            on Void void
                            )
                          void
                          )
                        Void unused11=(
                          Void unused16=f.#checkEnd()
                          catch exception unused17 (
                            on Void void
                            )
                          void
                          )
                        exception void
                        )
                      )
                    (
                      Void unused18=f.#next()
                      catch exception unused19 (
                        on Void (
                          Void unused20=(
                            Void unused22=o.#checkEnd()
                            catch exception unused23 (
                              on Void void
                              )
                            void
                            )
                          Void unused21=(
                            Void unused24=f.#checkEnd()
                            catch exception unused25 (
                              on Void void
                              )
                            void
                            )
                          exception void
                          )
                        )
                      (
                        Outer1::Selector::nameAsField() ::#equalequal(that ) cond=name.#equalequal(that:o.#inner())
                        (
                          Void unused26=cond.#checkTrue()
                          catch exception unused27 (
                            on Void void
                            )
                          return Outer1::Selector.from(name:prefix.#plusplus(that:f.#inner()), names:names)
                          )
                        )
                      )
                    )
                  catch exception unused28 (
                    on Void void
                    )
                  void
                  )
                catch exception propagated (
                  on Any (
                    Void unused29=f.#close()
                    exception propagated
                    )
                  )
                void
                )
              catch return propagated0 (
                on Outer1::Selector (
                  Void unused30=f.#close()
                  return propagated0
                  )
                )
              f.#close()
              )
            )
          catch exception propagated1 (
            on Any (
              Void unused31=o.#close()
              exception propagated1
              )
            )
          void
          )
        catch return propagated2 (
          on Outer1::Selector (
            Void unused32=o.#close()
            return propagated2
            )
          )
        o.#close()
        )
      )
    Void unused1=error Outer1::Assert::CodeNotReachable.#apply(text:(
      Outer1::S::#stringParser(that ) ::#begin() ::#add(that ) ::#end() ::#stringParser(that ) ::#begin() accumulator=Outer1::S.#stringParser(that:{'@stringU
      'stateFName [
      }).#begin().#add(that:name).#end().#stringParser(that:{'@stringU
      ']
      }).#begin()
      mut Outer0::Varaccumulator0_$%$%$%103_1_$%$%$%$%223_1_$%$%$%$%$%340_1_$%$%$%$%$%$%458_1_$%$%$%$%$%$%$%577_1_$%$%$%$%$%$%$%$%697_1__818_1 varaccumulator=Outer0::Varaccumulator0_$%$%$%103_1_$%$%$%$%223_1_$%$%$%$%$%340_1_$%$%$%$%$%$%458_1_$%$%$%$%$%$%$%577_1_$%$%$%$%$%$%$%$%697_1__818_1.#apply(inner:accumulator)
      Void unused33=(
        Outer1::Strings::vals() o1=old.vals()
        (
          Void unused34=(
            Void unused35=(
              Outer1::Strings::vals() f1=fresh.vals()
              (
                Void unused36=(
                  Void unused37=(
                    Void unused38=loop (
                      Void unused39=o1.#next()
                      catch exception unused40 (
                        on Void (
                          Void unused41=(
                            Void unused44=f1.#next()
                            catch exception unused45 (
                              on Void void
                              )
                            void
                            )
                          Void unused42=(
                            Void unused46=o1.#checkEnd()
                            catch exception unused47 (
                              on Void void
                              )
                            void
                            )
                          Void unused43=(
                            Void unused48=f1.#checkEnd()
                            catch exception unused49 (
                              on Void void
                              )
                            void
                            )
                          exception void
                          )
                        )
                      (
                        Void unused50=f1.#next()
                        catch exception unused51 (
                          on Void (
                            Void unused52=(
                              Void unused54=o1.#checkEnd()
                              catch exception unused55 (
                                on Void void
                                )
                              void
                              )
                            Void unused53=(
                              Void unused56=f1.#checkEnd()
                              catch exception unused57 (
                                on Void void
                                )
                              void
                              )
                            exception void
                            )
                          )
                        varaccumulator.inner(that:varaccumulator.#inner().#add(that:o1.#inner().#plusplus(that:Outer1::S.#stringParser(that:{'@stringU
                        '!
                        }).#plusplus(that:f1.#inner()))))
                        )
                      )
                    catch exception unused58 (
                      on Void void
                      )
                    void
                    )
                  catch exception propagated3 (
                    on Any (
                      Void unused59=f1.#close()
                      exception propagated3
                      )
                    )
                  void
                  )
                catch return propagated4 (
                  on Outer1::Selector (
                    Void unused60=f1.#close()
                    return propagated4
                    )
                  )
                f1.#close()
                )
              )
            catch exception propagated5 (
              on Any (
                Void unused61=o1.#close()
                exception propagated5
                )
              )
            void
            )
          catch return propagated6 (
            on Outer1::Selector (
              Void unused62=o1.#close()
              return propagated6
              )
            )
          o1.#close()
          )
        )
      varaccumulator.#inner().#end()
      ).#stringParser(that:{'@stringU
    '
    }))
    void
    )
  catch return result (
    on Outer1::Selector result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Url:{'ParseFailure:Message:S[]<<{<:Guard} no need, related to invariant?
<:Outer1::Concept::ToS
type method ' if you do not implement it, it is a constructor?
Outer0 fromS(read Outer1::Concept::ToS that) Outer0.#apply(inner:that.toS())
type method 
Outer0 #stringParser(Library that) Outer0.fromS(that:Outer1::S.#stringParser(that:that))
type method 
Outer0 #apply(Outer1::S inner) 
mut method 
Outer1::S #inner() 
read method 
Outer1::S inner() 
method toS() this.inner()
method 
Library binaryRepr() this.inner().binaryRepr()}
Optimize:{
RemoveUnreachableCode:{
type method 
Outer0 #apply() 
type method 
Outer0 #begin() Outer0.#apply()
method 
Outer0 #end() this
method 
Library #leftleft(Library that) using Outer2::SafeOperators check removeUnreachableCode(that:that) error Outer2::System::Guard::PluginFailure.#stringParser(that:{'@stringU
'SafeOperators.removeUnreachableCode
})}}
Ontology:{
type method 
Library ontologicMap() {interface 
method 
Outer2::Alu _Alu() 
method 
Outer2::ExitCode _ExitCode() 
method 
Outer2::Bool _Bool() 
method 
Outer2::N _N() 
method 
Outer2::S _S() 
method 
Outer2::Concept _Concept() 
method 
Outer2::Message _Message() 
method 
Outer2::Guard _Guard() 
method 
Outer2::System _System() 
method 
Outer2::Assert _Assert() 
method 
Outer2::Strings _Strings() 
method 
Outer2::Debug _Debug() 
method 
Outer0 _ConceptMap() 
method 
Outer2::Url _Url() 
method 
Outer2::Path _Path() 
method 
Outer2::Selector _Selector() 
method 
Outer2::MetaGuard _MetaGuard() 
method 
Outer2::Introspection _Introspection() 
method 
Outer2::Refactor _Refactor() 
method 
Outer2::Optimize _Optimize() 
method 
Outer2::Opt _Opt() 
method 
Outer2::Extends _Extends() 
method 
Outer2::Use _Use() 
method 
Outer2::Default _Default() 
method 
Outer2::LinkedList _LinkedList() 
method 
Outer2::DeployTowel _DeployTowel() 
method 
Outer2::PreferentialComposition _PreferentialComposition() }}
ConceptMap:{interface 
method 
Outer1::Alu _Alu() 
method 
Outer1::ExitCode _ExitCode() 
method 
Outer1::Bool _Bool() 
method 
Outer1::N _N() 
method 
Outer1::S _S() 
method 
Outer1::Concept _Concept() 
method 
Outer1::Message _Message() 
method 
Outer1::Guard _Guard() 
method 
Outer1::System _System() 
method 
Outer1::Assert _Assert() 
method 
Outer1::Strings _Strings() 
method 
Outer1::Debug _Debug() 
method 
Outer0 _ConceptMap() 
method 
Outer1::Url _Url() 
method 
Outer1::Path _Path() 
method 
Outer1::Selector _Selector() 
method 
Outer1::MetaGuard _MetaGuard() 
method 
Outer1::Introspection _Introspection() 
method 
Outer1::Refactor _Refactor() 
method 
Outer1::Optimize _Optimize() 
method 
Outer1::Opt _Opt() 
method 
Outer1::Extends _Extends() 
method 
Outer1::Use _Use() 
method 
Outer1::Default _Default() 
method 
Outer1::LinkedList _LinkedList() 
method 
Outer1::DeployTowel _DeployTowel() 
method 
Outer1::PreferentialComposition _PreferentialComposition() 
method 
Outer1::Load _Load() }
Load:{'shape of a loadable library:
' Outer0 contains actual library, but
' Abstract:{} contains abstract classes, and 
' Abstract::ConceptMap mapps concepts names to abstract classes

Varaccumulator1_$%$%$%105_1_$%$%$%$%225_1_$%$%$%$%$%342_1_$%$%$%$%$%$%460_1_$%$%$%$%$%$%$%579_1_$%$%$%$%$%$%$%$%699_1__820_1:'@private
{
type method 
mut Outer0 #apply(Outer2::S::#stringParser(that ) ::#begin() inner) 
mut method 
Void inner(Outer2::S::#stringParser(that ) ::#begin() that) 
mut method 
Outer2::S::#stringParser(that ) ::#begin() #inner() }
type method 
Outer0 #begin() 
method 
Outer0 #end() this
ConceptMapMismatch:{<:Outer2::MetaGuard, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%106_1_$%$%$%$%226_1_$%$%$%$%$%343_1_$%$%$%$%$%$%461_1_$%$%$%$%$%$%$%580_1_$%$%$%$%$%$%$%$%700_1__821_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%106_1_$%$%$%$%226_1_$%$%$%$%$%343_1_$%$%$%$%$%$%461_1_$%$%$%$%$%$%$%580_1_$%$%$%$%$%$%$%$%700_1__821_1 varres=Outer0::Varres_$%$%41_1_$%$%$%106_1_$%$%$%$%226_1_$%$%$%$%$%343_1_$%$%$%$%$%$%461_1_$%$%$%$%$%$%$%580_1_$%$%$%$%$%$%$%$%700_1__821_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
ConceptMapUnavailable:{<:Outer2::MetaGuard, Outer2::Guard, Outer2::Message, Outer2::Concept::ToS, Outer2::Concept::Equals, Outer2::Concept::Classable, Outer2::Concept::Named
Varres_$%$%41_1_$%$%$%107_1_$%$%$%$%227_1_$%$%$%$%$%344_1_$%$%$%$%$%$%462_1_$%$%$%$%$%$%$%581_1_$%$%$%$%$%$%$%$%701_1__822_1:'@private
{
type method 
mut Outer0 #apply(Outer1::kind() inner) 
mut method 
Void inner(Outer1::kind() that) 
mut method 
Outer1::kind() #inner() }
type method 
Outer0 #apply(Outer2::S _text, Outer2::Message::Opt cause) 
mut method 
Outer2::S #_text() 
read method 
Outer2::S _text() 
mut method 
Outer2::Message::Opt #cause() 
read method 
Outer2::Message::Opt cause() 
method myName() Outer2::GetMyName.#apply(that:Outer0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      Outer0 that0=(
        Void unused2=return that
        catch return casted (
          on Outer0 casted
          
          on Any exception void
          )
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      catch exception unused3 (
        on Void void
        )
      (
        Void unused4=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return Outer2::Bool.false()
    void
    )
  catch return result (
    on Outer0::equals(that ) result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Outer0 #stringParser(Library that) Outer0.#apply(text:Outer2::S.#stringParser(that:that))
method 
Outer0 #apply(Outer2::Message that) Outer0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      Outer0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        catch exception unused4 (
          on Void void
          )
        return Outer0.kind().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote())))
        )
      )
    Outer0::kind() res=Outer0.kind()
    mut Outer0::Varres_$%$%41_1_$%$%$%107_1_$%$%$%$%227_1_$%$%$%$%$%344_1_$%$%$%$%$%$%462_1_$%$%$%$%$%$%$%581_1_$%$%$%$%$%$%$%$%701_1__822_1 varres=Outer0::Varres_$%$%41_1_$%$%$%107_1_$%$%$%$%227_1_$%$%$%$%$%344_1_$%$%$%$%$%$%462_1_$%$%$%$%$%$%$%581_1_$%$%$%$%$%$%$%$%701_1__822_1.#apply(inner:res)
    Void unused1=(
      Outer0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:Outer2::S.#stringParser(that:{'@stringU
      '
      }))
      (
        Void unused5=cond0.#checkTrue()
        catch exception unused6 (
          on Void varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
          '[
          })))
          )
        varres.inner(that:varres.#inner().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        '[text:
        })).#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:this.text().#plusplus(that:Outer2::S.doubleQuote().#plusplus(that:Outer2::S.#stringParser(that:{'@stringU
        ', cause:
        }))))))
        )
      )
    Void unused2=return varres.#inner().#begin().#add(that:this.cause().#tilde()).#end().#stringParser(that:{'@stringU
    ']
    })
    void
    )
  catch return result (
    on Outer0::toS() result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Outer2::Bool #bangequal(Outer0 that) this.#equalequal(that:that).#bang()
method 
Outer2::Bool #equalequal(Outer0 that) Outer2::Message::EqualMessages.#apply(that:this, other:that)
method classAny() Outer0
method clazz() Outer0
type method 
Outer0 #apply(Outer2::S text) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply())
type method 
Outer0 #apply(Outer2::S text, Outer2::Message cause) Outer0.#apply(_text:text, cause:Outer2::Message::Opt.#apply(that:cause))
method 
Outer0::SConcat #begin() Outer0::SConcat.#apply(accumulator:this.text())
SConcat:{
type method 
Outer0 #apply(Outer3::S accumulator) 
mut method 
Outer3::S #accumulator() 
read method 
Outer3::S accumulator() 
method 
Outer0 #add(Outer3::Concept::ToS that) Outer0.#apply(accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
Outer0 #end() this
method 
Outer1 #stringParser(Library that) Outer1.#apply(text:this.accumulator().#plusplus(that:Outer3::S.#stringParser(that:that)))}}
method 
Library #leftleft(Library that) exception Outer0::ConceptMapMismatch, Outer0::ConceptMapUnavailable (
  Void unused=(
    Void unused0=return Outer1::Refactor::Redirect.#begin().#add(that:Outer1::Path.#stringParser(that:{'@stringU
    'Abstract::ConceptMap
    }), to:Outer1::ConceptMap).#end().#leftleft(that:that)
    catch exception err (
      on Outer1::MetaGuard::NestedClassUnavailable (
        Outer1::Introspection::#apply(lib ) ::transitivelyNestedClasses() available=Outer1::Introspection.#apply(lib:that).transitivelyNestedClasses()
        Outer1::S::#stringParser(that ) ::#begin() ::#end() ::#stringParser(that ) sAvailable=(
          Outer1::S::#stringParser(that ) ::#begin() accumulator=Outer1::S.#stringParser(that:{'@stringU
          '
          }).#begin()
          mut Outer0::Varaccumulator1_$%$%$%105_1_$%$%$%$%225_1_$%$%$%$%$%342_1_$%$%$%$%$%$%460_1_$%$%$%$%$%$%$%579_1_$%$%$%$%$%$%$%$%699_1__820_1 varaccumulator=Outer0::Varaccumulator1_$%$%$%105_1_$%$%$%$%225_1_$%$%$%$%$%342_1_$%$%$%$%$%$%460_1_$%$%$%$%$%$%$%579_1_$%$%$%$%$%$%$%$%699_1__820_1.#apply(inner:accumulator)
          Void unused1=(
            Outer1::Introspection::#apply(lib ) ::transitivelyNestedClasses() ::vals() av=available.vals()
            (
              Void unused2=(
                Void unused3=(
                  Void unused4=loop (
                    Void unused5=av.#next()
                    catch exception unused6 (
                      on Void (
                        Void unused7=(
                          Void unused8=av.#checkEnd()
                          catch exception unused9 (
                            on Void void
                            )
                          void
                          )
                        exception void
                        )
                      )
                    varaccumulator.inner(that:varaccumulator.#inner().#add(that:Outer1::S.nl().#plusplus(that:av.#inner().pathFromRoot().toS())))
                    )
                  catch exception unused10 (
                    on Void void
                    )
                  void
                  )
                catch exception propagated (
                  on Any (
                    Void unused11=av.#close()
                    exception propagated
                    )
                  )
                void
                )
              catch return propagated0 (
                on Library (
                  Void unused12=av.#close()
                  return propagated0
                  )
                )
              av.#close()
              )
            )
          varaccumulator.#inner().#end()
          ).#stringParser(that:{'@stringU
        '
        })
        exception Outer0::ConceptMapUnavailable.#apply(text:Outer1::S.#stringParser(that:{'@stringU
        'provided library do not offers Abstract::ConceptMap or 
        }).#begin().#add(that:err.path()).#end().#stringParser(that:{'@stringU
        ' avaible paths are 
        }).#plusplus(that:sAvailable))
        )
      
      on Outer1::MetaGuard::SourceUnfit exception Outer0::ConceptMapMismatch.#stringParser(that:{'@stringU
      '
      }).#apply(that:err)
      
      on Outer1::MetaGuard::MethodClash exception Outer0::ConceptMapMismatch.#stringParser(that:{'@stringU
      '
      }).#apply(that:err)
      
      on Outer1::MetaGuard::IncoherentRedirectMapping exception Outer0::ConceptMapMismatch.#stringParser(that:{'@stringU
      '
      }).#apply(that:err)
      
      on Outer1::MetaGuard::InvalidOnTopLevel error Outer1::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'Load1
      })
      )
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
DeployLibrary:{
Varres_$%$%$%108_1_$%$%$%$%228_1_$%$%$%$%$%345_1_$%$%$%$%$%$%463_1_$%$%$%$%$%$%$%582_1_$%$%$%$%$%$%$%$%702_1__823_1:'@private
{
type method 
mut Outer0 #apply(Library inner) 
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varaccumulator2_$%$%$%109_1_$%$%$%$%229_1_$%$%$%$%$%346_1_$%$%$%$%$%$%464_1_$%$%$%$%$%$%$%583_1_$%$%$%$%$%$%$%$%703_1__824_1:'@private
{
type method 
mut Outer0 #apply(Outer3::S::#stringParser(that ) ::#begin() inner) 
mut method 
Void inner(Outer3::S::#stringParser(that ) ::#begin() that) 
mut method 
Outer3::S::#stringParser(that ) ::#begin() #inner() }
Varres2_$%$%$%110_1_$%$%$%$%230_1_$%$%$%$%$%347_1_$%$%$%$%$%$%465_1_$%$%$%$%$%$%$%584_1_$%$%$%$%$%$%$%$%704_1__825_1:'@private
{
type method 
mut Outer0 #apply(Outer1::exposeAsLibrary(that path ) inner) 
mut method 
Void inner(Outer1::exposeAsLibrary(that path ) that) 
mut method 
Outer1::exposeAsLibrary(that path ) #inner() }
type method 
Outer0 #apply(Outer2::Path path, Outer2::Url url) 
mut method 
Outer2::Path #path() 
read method 
Outer2::Path path() 
mut method 
Outer2::Url #url() 
read method 
Outer2::Url url() 
type method 
Library exposeAsLibrary(Library that, Outer2::Path path) exception Outer2::MetaGuard::NestedClassUnavailable, Outer2::MetaGuard::PrivacyCoupuled (
  Void unused=(
    Void unused0=Outer2::Assert::$.#begin().#add(that:path.#bangequal(that:Outer2::Path.#stringParser(that:{'@stringU
    'Outer0
    }))).#end()
    Void unused1=this.checkTargetExists(that:that, path:path)
    Library res=that
    Void unused2=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
    '1.1
    }))
    mut Outer0::Varres_$%$%$%108_1_$%$%$%$%228_1_$%$%$%$%$%345_1_$%$%$%$%$%$%463_1_$%$%$%$%$%$%$%582_1_$%$%$%$%$%$%$%$%702_1__823_1 varres=Outer0::Varres_$%$%$%108_1_$%$%$%$%228_1_$%$%$%$%$%345_1_$%$%$%$%$%$%463_1_$%$%$%$%$%$%$%582_1_$%$%$%$%$%$%$%$%702_1__823_1.#apply(inner:res)
    Void unused3=varres.inner(that:Outer2::Refactor::RenamePath.#begin().#add(that:Outer2::Path.#stringParser(that:{'@stringU
    'Outer0
    }), to:Outer2::Path.#stringParser(that:{'@stringU
    'PrImpl
    })).#end().#leftleft(that:varres.#inner()))
    catch exception unreachable (
      on Outer2::MetaGuard error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
      'DeployLibrary1
      }).#apply(that:unreachable)
      )
    (
      Void unused4=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
      '1.2
      }))
      Void unused5=(
        Outer2::Introspection::#apply(lib path ) ::methods() ::vals() m=Outer2::Introspection.#apply(lib:that, path:Outer2::Path.#stringParser(that:{'@stringU
        'ConceptMap
        })).methods().vals()
        (
          Void unused9=(
            Void unused10=(
              Void unused11=loop (
                Void unused12=m.#next()
                catch exception unused13 (
                  on Void (
                    Void unused14=(
                      Void unused15=m.#checkEnd()
                      catch exception unused16 (
                        on Void void
                        )
                      void
                      )
                    exception void
                    )
                  )
                (
                  Void unused17=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
                  '1.2a
                  }))
                  Outer2::Introspection::#apply(lib path ) ::methods() ::vals() ::#inner() ::returnType() ::referencedPath() ::pathFromRoot() p=m.#inner().returnType().referencedPath().pathFromRoot()
                  (
                    Void unused18=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
                    '1.2b 
                    }).#begin().#add(that:p).#end().#stringParser(that:{'@stringU
                    ' renamed
                    }))
                    Void unused19=varres.inner(that:Outer2::Refactor::RenamePath.#begin().#add(that:Outer2::Path.#stringParser(that:{'@stringU
                    'PrImpl
                    }).#plusplus(that:p), to:Outer2::Path.#stringParser(that:{'@stringU
                    'Abstract
                    }).#plusplus(that:p)).#end().#leftleft(that:varres.#inner()))
                    catch exception notFound (
                      on Outer2::MetaGuard::MemberUnavailable (
                        Outer2::Introspection::#apply(lib path ) ::nestedClasses() available=Outer2::Introspection.#apply(lib:varres.#inner(), path:Outer2::Path.#stringParser(that:{'@stringU
                        'PrImpl
                        })).nestedClasses()
                        Outer2::S::#stringParser(that ) ::#begin() ::#end() ::#stringParser(that ) sAvailable=(
                          Outer2::S::#stringParser(that ) ::#begin() accumulator=Outer2::S.#stringParser(that:{'@stringU
                          '
                          }).#begin()
                          mut Outer0::Varaccumulator2_$%$%$%109_1_$%$%$%$%229_1_$%$%$%$%$%346_1_$%$%$%$%$%$%464_1_$%$%$%$%$%$%$%583_1_$%$%$%$%$%$%$%$%703_1__824_1 varaccumulator=Outer0::Varaccumulator2_$%$%$%109_1_$%$%$%$%229_1_$%$%$%$%$%346_1_$%$%$%$%$%$%464_1_$%$%$%$%$%$%$%583_1_$%$%$%$%$%$%$%$%703_1__824_1.#apply(inner:accumulator)
                          Void unused20=(
                            Outer2::Introspection::#apply(lib path ) ::nestedClasses() ::vals() av=available.vals()
                            (
                              Void unused21=(
                                Void unused22=(
                                  Void unused23=loop (
                                    Void unused24=av.#next()
                                    catch exception unused25 (
                                      on Void (
                                        Void unused26=(
                                          Void unused27=av.#checkEnd()
                                          catch exception unused28 (
                                            on Void void
                                            )
                                          void
                                          )
                                        exception void
                                        )
                                      )
                                    varaccumulator.inner(that:varaccumulator.#inner().#add(that:Outer2::S.nl().#plusplus(that:av.#inner().pathFromRoot().toS().#apply(start:Outer2::N.#numberParser(that:{'@stringU
                                    '8
                                    })))))
                                    )
                                  catch exception unused29 (
                                    on Void void
                                    )
                                  void
                                  )
                                catch exception propagated (
                                  on Any (
                                    Void unused30=av.#close()
                                    exception propagated
                                    )
                                  )
                                void
                                )
                              catch return propagated0 (
                                on Library (
                                  Void unused31=av.#close()
                                  return propagated0
                                  )
                                )
                              av.#close()
                              )
                            )
                          varaccumulator.#inner().#end()
                          ).#stringParser(that:{'@stringU
                        '
                        })
                        error Outer2::Assert::ObservedBug.#apply(text:Outer2::S.#stringParser(that:{'@stringU
                        'map and library mismatch on 
                        }).#begin().#add(that:p).#end().#stringParser(that:{'@stringU
                        ' available paths are 
                        }).#plusplus(that:sAvailable), cause:notFound)
                        )
                      
                      on Outer2::MetaGuard error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
                      'DeployLibrary2
                      }).#apply(that:notFound)
                      )
                    void
                    )
                  )
                )
              catch exception unused32 (
                on Void void
                )
              void
              )
            catch exception propagated1 (
              on Any (
                Void unused33=m.#close()
                exception propagated1
                )
              )
            void
            )
          catch return propagated2 (
            on Library (
              Void unused34=m.#close()
              return propagated2
              )
            )
          m.#close()
          )
        )
      Void unused6=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
      '1.3
      }))
      Void unused7=varres.inner(that:Outer2::Refactor::RemoveImplementationPath.#begin().#add(that:Outer2::Path.#stringParser(that:{'@stringU
      'Abstract
      })).#end().#leftleft(that:varres.#inner()))
      Void unused8=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
      '1.4
      }))
      catch exception unused35 (
        on Outer2::MetaGuard::MemberUnavailable error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
        'DeployLibrary3
        })
        )
      (
        Void unused36=varres.inner(that:Outer2::Refactor::RenamePath.#begin().#add(that:Outer2::Path.#stringParser(that:{'@stringU
        'PrImpl
        }).#plusplus(that:path), to:Outer2::Path.#stringParser(that:{'@stringU
        'Outer0
        })).#end().#leftleft(that:varres.#inner()))
        Void unused37=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
        '1.5
        }))
        Void unused38=varres.inner(that:Outer2::Refactor::MakePrivatePath.#begin().#add(that:Outer2::Path.#stringParser(that:{'@stringU
        'PrImpl
        })).#end().#leftleft(that:varres.#inner()))
        Void unused39=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
        '1.6
        }))
        catch exception unused40 (
          on Outer2::MetaGuard error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
          'DeployLibrary4
          })
          )
        (
          Void unused41=return varres.#inner()
          void
          )
        )
      )
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
type method 
Void checkTargetExists(Library that, Outer2::Path path) exception Outer2::MetaGuard::NestedClassUnavailable (
  Outer2::Refactor::AddDocumentationPath::#begin() ::#add(that doc ) ::#end() ::#leftleft(that ) unused=Outer2::Refactor::AddDocumentationPath.#begin().#add(that:path, doc:Outer2::Introspection::Doc.#stringParser(that:{'@stringU
  'JustToSeeIfItIsThere
  })).#end().#leftleft(that:that)
  catch exception x (
    on Outer2::MetaGuard::InvalidOnTopLevel error Outer2::Assert::CodeNotReachable.#stringParser(that:{'@stringU
    'DeployLibrary5
    })
    )
  void
  )
type method 
type Outer0 #begin() Outer0
method 
Outer0 #end() this
type method 
Outer0 #add(Outer2::Path that, Outer2::Url url) Outer0.#apply(path:that, url:url)
method 
Library #leftleft(Library that) exception Outer2::MetaGuard::NestedClassUnavailable, Outer2::MetaGuard::PrivacyCoupuled (
  Void unused=(
    Void unused0=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
    '1
    }))
    Outer0::exposeAsLibrary(that path ) res=Outer0.exposeAsLibrary(that:that, path:this.path())
    Void unused1=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
    '2
    }))
    mut Outer0::Varres2_$%$%$%110_1_$%$%$%$%230_1_$%$%$%$%$%347_1_$%$%$%$%$%$%465_1_$%$%$%$%$%$%$%584_1_$%$%$%$%$%$%$%$%704_1__825_1 varres=Outer0::Varres2_$%$%$%110_1_$%$%$%$%230_1_$%$%$%$%$%347_1_$%$%$%$%$%$%465_1_$%$%$%$%$%$%$%584_1_$%$%$%$%$%$%$%$%704_1__825_1.#apply(inner:res)
    Void unused2=varres.inner(that:Outer2::Optimize::RemoveUnreachableCode.#begin().#end().#leftleft(that:varres.#inner()))
    Void unused3=Outer2::Debug.#apply(that:Outer2::S.#stringParser(that:{'@stringU
    '3
    }))
    Void unused4=return Outer2::DeployTowel.#begin().#add(fileName:this.url().binaryRepr()).#end().#leftleft(that:varres.#inner())
    void
    )
  catch return result (
    on Library result
    )
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}}