{/*--layer-- Bool N S -     and first layer of unsafe operators
*/
Alu:{/*@plugin
L42.is/connected/withAlu
*/}
ExitCode:{
class method 
Library normal() {/*@exitStatus
0
*/}
class method 
Library failure() {/*@exitStatus
42000
*/}}
Bool:{implements This1.Concept.Equals, This1.Concept.ToS, This1.Concept.Classable
class method /*@private
*/mut This0 #mutK__13_0(Library binaryRepr__13_0) 
class method /*@private
*/This0 #apply__14_0(Library binaryRepr) This0.#mutK__13_0(binaryRepr__13_0:binaryRepr)
mut method /*@private
*/Library #binaryRepr__13_0() 
read method /*@private
*/Library binaryRepr__13_0() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This1.Concept.Classable classAny() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine read method 
This1.S toS() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      )
    Void unused1=return This1.S.#from(builder:(
      mut This1.S.SBuilder b0=This1.S.#builder()
      Void unused7=b0.#f()
      Void unused8=b0.#a()
      Void unused9=b0.#l()
      Void unused10=b0.#s()
      Void unused11=b0.#e()
      b0
      ))
    void
    )
  
  catch return This1.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
Void #checkTrue() exception Void use This1.Alu check ifInt32EqualDo(n1:this.binaryRepr__13_0(), n2:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).binaryRepr()) exception void
class method 
This0 true() This0.#apply__14_0(binaryRepr:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  )).binaryRepr())
class method 
This0 false() This0.#apply__14_0(binaryRepr:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).binaryRepr())
method 
This0 #and(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that)
      )
    Void unused1=return this
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #or(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return this)
      )
    Void unused1=return that
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #bang() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This0.false())
      )
    Void unused1=return This0.true()
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that)
      )
    Void unused1=return that.#bang()
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
class method 
This0 fromS(read This1.Concept.ToS that) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=that.toS().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.true())
        )
      )
    Void unused1=(
      This1.Bool cond0=that.toS().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused8=b0.#f()
        Void unused9=b0.#a()
        Void unused10=b0.#l()
        Void unused11=b0.#s()
        Void unused12=b0.#e()
        b0
        )))
      (
        Void unused13=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This0.false())
        )
      )
    Void unused2=error This0.parseError(that:that.toS())
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#B()
  Void unused0=b.#o()
  Void unused1=b.#o()
  Void unused2=b.#l()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))}
N:{implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method /*@private
*/mut This0 #mutK__15_0(Library _binaryRepr__15_0) 
class method /*@private
*/This0 #apply__16_0(Library _binaryRepr) This0.#mutK__15_0(_binaryRepr__15_0:_binaryRepr)
mut method /*@private
*/Library #_binaryRepr__15_0() 
read method /*@private
*/Library _binaryRepr__15_0() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This1.Concept.Classable classAny() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) (
  This1.S s=that.toS()
  This1.N.#apply__16_0(_binaryRepr:use This1.Alu check stringToInt32(that:s.binaryRepr()) error This0.parseError(that:s))
  )
class method 
This0 #from(Library binaryRepr) This1.N.#apply__16_0(_binaryRepr:binaryRepr)
method 
Library binaryRepr() this._binaryRepr__15_0()
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This1.N #from(This1.S.SBuilder builder) This1.N.#apply__16_0(_binaryRepr:use This1.Alu check stringToInt32(that:builder.binaryRepr()) error This0.parseError(that:This1.S.#from(builder:builder)))
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#N()
  Void unused0=b.#dot()
  Void unused1=b.#U()
  Void unused2=b.#n()
  Void unused3=b.#s()
  Void unused4=b.#a()
  Void unused5=b.#t()
  Void unused6=b.#i()
  Void unused7=b.#s()
  Void unused8=b.#f()
  Void unused9=b.#a()
  Void unused10=b.#c()
  Void unused11=b.#t()
  Void unused12=b.#o()
  Void unused13=b.#r()
  Void unused14=b.#y()
  Void unused15=b.#E()
  Void unused16=b.#r()
  Void unused17=b.#r()
  Void unused18=b.#o()
  Void unused19=b.#r()
  Void unused20=b.#T()
  Void unused21=b.#o()
  Void unused22=b.#A()
  Void unused23=b.#v()
  Void unused24=b.#o()
  Void unused25=b.#i()
  Void unused26=b.#d()
  Void unused27=b.#C()
  Void unused28=b.#y()
  Void unused29=b.#c()
  Void unused30=b.#l()
  Void unused31=b.#e()
  Void unused32=b.#comma()
  Void unused33=b.#space()
  Void unused34=b.#r()
  Void unused35=b.#e()
  Void unused36=b.#p()
  Void unused37=b.#l()
  Void unused38=b.#a()
  Void unused39=b.#c()
  Void unused40=b.#e()
  Void unused41=b.#space()
  Void unused42=b.#i()
  Void unused43=b.#n()
  Void unused44=b.#space()
  Void unused45=b.#A()
  Void unused46=b.#d()
  Void unused47=b.#a()
  Void unused48=b.#m()
  Void unused49=b.#T()
  Void unused50=b.#2()
  b
  ))
refine read method 
This1.S toS() This1.S.#from(binaryRepr:use This1.Alu check int32ToString(that:this.binaryRepr()) error void)
method 
This1.N #plus(This1.N that) This1.N.#apply__16_0(_binaryRepr:use This1.Alu check sumInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.N #less(This1.N that) This1.N.#apply__16_0(_binaryRepr:use This1.Alu check subInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.N #times(This1.N that) This1.N.#apply__16_0(_binaryRepr:use This1.Alu check mulInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.N #divide(This1.N that) This1.N.#apply__16_0(_binaryRepr:use This1.Alu check divInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32EqualDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #left(This1.N that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GrtDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #leftequal(This1.N that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GEqDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This1.Bool #right(This1.N that) (this.#leftequal(that:that)).#bang()
method 
This1.Bool #rightequal(This1.N that) (this.#left(that:that)).#bang()
method 
mut This0.Iterator vals() This0.Iterator.#apply(start:this, end:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
method 
mut This0.Iterator vals(This1.N upTo) This0.Iterator.#apply(start:this, end:upTo)
class method 
This0 #0() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#0()
  b
  ))
class method 
This0 #1() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  b
  ))
class method 
This0 #2() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  b
  ))
class method 
This0 #3() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  b
  ))
class method 
This0 #4() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  b
  ))
class method 
This0 #5() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  b
  ))
class method 
This0 #6() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  b
  ))
class method 
This0 #7() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#7()
  b
  ))
class method 
This0 #8() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#8()
  b
  ))
class method 
This0 #9() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#9()
  b
  ))
class method 
This0 #10() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #11() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #12() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #13() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #14() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #15() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #16() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #17() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #18() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #19() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #20() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #21() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #22() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #23() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #24() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #25() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #26() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #27() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #28() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #29() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #30() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #31() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #32() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #33() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #34() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #35() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #36() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #37() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #38() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #39() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #40() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #41() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #42() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #43() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #44() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #45() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #46() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #47() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #48() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #49() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #50() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #51() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #52() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #53() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #54() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #55() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #56() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #57() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #58() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #59() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #60() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #61() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #62() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #63() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#3()
  b
  ))
Iterator:{
class method 
mut This0 #mutK(This1 start, This1 end) 
class method 
mut This0 #apply(This1 start, This1 end) This0.#mutK(start:start, end:end)
mut method 
Void start(This1 that) 
mut method 
This1 #start() 
read method 
This1 start() 
mut method 
This1 #end() 
read method 
This1 end() 
mut method 
Void #next() exception Void ((
  This2.Bool cond=this.end().#left(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused=b.#0()
    b
    ))).#or(that:this.start().#left(that:this.end()))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched1 exception void
    
    (this.start(that:this.start().#plus(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b0=This2.N.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This1 #inner() this.start().#less(that:This2.N.#from(builder:(
  mut This2.S.SBuilder b=This2.N.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
S:{implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
class method /*needed until we do (also refine) normalization
#####Implemented
*/mut This0 #mutK(Library _binaryRepr) 
class method /*needed until we do (also refine) normalization
#####Implemented
*/This0 _private(Library _binaryRepr) This0.#mutK(_binaryRepr:_binaryRepr)
mut method /*needed until we do (also refine) normalization
#####Implemented
*/Library #_binaryRepr() 
read method /*needed until we do (also refine) normalization
#####Implemented
*/Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This1.Concept.Classable classAny() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 #from(Library binaryRepr) This0._private(_binaryRepr:binaryRepr)
method 
Library binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() this
refine read method 
This1.Bool equals(read Any that) (//#####operators
(
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This1.S #plusplus(This1.S that) This1.S.#from(binaryRepr:use This1.Alu check stringConcat(s1:this.binaryRepr(), s2:that.binaryRepr()) error void)
method 
This1.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This0 that) this.withoutAll(val:that)
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:this.size().#right(that:that.size()))
method 
This1.Bool #rightrightequal(This0 that) this.contains(that:that)
method 
This1.Bool #right(This0 that) (//#####other sequence like methods
this.contains(that:that))
method 
This1.N indexOfLeft(This1.S val) this.indexOfLeft(val:val, start:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This1.N indexOfLeft(This1.S val, This1.N start) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    This1.N current=start
    mut This0.Varcurrent__21_0 varcurrent=This0.Varcurrent__21_0.#apply(inner:current)
    Void unused0=(
      Void unused2=loop (
        Void unused3=varcurrent.#inner().#left(that:this.size()).#checkTrue()
        (
          Void unused4=(
            This1.Bool cond=this.subStrEq(that:val, start:varcurrent.#inner())
            (
              Void unused5=cond.#checkTrue()
              
              catch exception Void catched1 void
              
              (return varcurrent.#inner())
              )
            )
          varcurrent.inner(that:varcurrent.#inner().#plus(that:This1.N.#from(builder:(
            mut This1.S.SBuilder b=This1.N.#builder()
            Void unused6=b.#1()
            b
            ))))
          )
        )
      
      catch exception Void catched4 void
      
      void
      )
    Void unused1=return This1.N.#from(builder:(
      mut This1.S.SBuilder b0=This1.N.#builder()
      Void unused7=b0.#less()
      Void unused8=b0.#1()
      b0
      ))
    void
    )
  
  catch return This1.N result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.N indexOfRight(This0 val) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    This1.N current=this.size().#less(that:val.size())
    mut This0.Varcurrent0__22_0 varcurrent0=This0.Varcurrent0__22_0.#apply(inner:current)
    Void unused0=(
      Void unused2=loop (
        Void unused3=varcurrent0.#inner().#rightequal(that:This1.N.#from(builder:(
          mut This1.S.SBuilder b=This1.N.#builder()
          Void unused4=b.#0()
          b
          ))).#checkTrue()
        (
          Void unused5=(
            This1.Bool cond=this.#apply(start:varcurrent0.#inner()).beginsWith(that:val)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return varcurrent0.#inner())
              )
            )
          varcurrent0.inner(that:varcurrent0.#inner().#less(that:This1.N.#from(builder:(
            mut This1.S.SBuilder b0=This1.N.#builder()
            Void unused7=b0.#1()
            b0
            ))))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.N.#from(builder:(
      mut This1.S.SBuilder b1=This1.N.#builder()
      Void unused8=b1.#less()
      Void unused9=b1.#1()
      b1
      ))
    void
    )
  
  catch return This1.N result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This0 val) (
  Void unused=(
    This1.N pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=pos.#left(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0 val) (
  Void unused=(
    This1.N pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=pos.#left(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0 val) this.replace(that:val, into:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 val(This1.N that) this.#apply(that:that)
method 
This0 left() this.val(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 right() (//#################Withs
this.val(that:this.size().#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 with(This1.N that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that.#plus(that:val.size()))))
method 
This0 withLeft(This0 that) (//TODO: should be with(left)??
this.with(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:that))
method 
This0 withRight(This0 that) (//insertion
this.with(that:this.size().#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.N that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that)))
method 
This0 withAlsoLeft(This0 that) this.withAlso(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This1.N index) this.#apply(end:index).#plusplus(that:this.#apply(start:index.#plus(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 without(This1.N index, This1.N skipNum) this.#apply(end:index).#plusplus(that:this.#apply(start:skipNum.#plus(that:index)))
method 
This0 withoutLeft() this.without(index:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.Bool contains(This1.S that) (
  Void unused=(
    This1.N res=(//Debug(S"S.contains(this:"[this]" that:"[that]")="[res]"")
this.indexOfLeft(val:that))
    Void unused0=(
      This1.Bool cond=res.#rightequal(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Bool.true())
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S #apply(This1.N start, This1.N end) This1.S.#from(binaryRepr:use This1.Alu check stringSubstring(that:this.binaryRepr(), start:start.binaryRepr(), end:end.binaryRepr()) error void)
method 
This1.S #apply(This1.N that) this.#apply(start:that, end:that.#plus(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.S #apply(This1.N start) this.#apply(start:start, end:this.size())
method 
This1.S #apply(This1.N end) this.#apply(start:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), end:end)
method 
This1.N size() (//##### string special
This1.N.#apply__16_0(_binaryRepr:use This1.Alu check stringSize(that:this.binaryRepr()) error void))
method 
This1.Bool subStrEq(This1.S that, This1.N start) this.#apply(start:start, end:that.size().#plus(that:start)).#equalequal(that:(//optimizing this one may help many methods
that))
method 
This1.Bool beginsWith(This1.S that) this.subStrEq(that:that, start:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.S aSCIILowerCase() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#q()
  Void unused0=b.#w()
  Void unused1=b.#e()
  Void unused2=b.#r()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#u()
  Void unused6=b.#i()
  Void unused7=b.#o()
  Void unused8=b.#p()
  Void unused9=b.#a()
  Void unused10=b.#s()
  Void unused11=b.#d()
  Void unused12=b.#f()
  Void unused13=b.#g()
  Void unused14=b.#h()
  Void unused15=b.#j()
  Void unused16=b.#k()
  Void unused17=b.#l()
  Void unused18=b.#z()
  Void unused19=b.#x()
  Void unused20=b.#c()
  Void unused21=b.#v()
  Void unused22=b.#b()
  Void unused23=b.#n()
  Void unused24=b.#m()
  b
  ))
class method 
This1.S aSCIIUpperCase() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#Q()
  Void unused0=b.#W()
  Void unused1=b.#E()
  Void unused2=b.#R()
  Void unused3=b.#T()
  Void unused4=b.#Y()
  Void unused5=b.#U()
  Void unused6=b.#I()
  Void unused7=b.#O()
  Void unused8=b.#P()
  Void unused9=b.#A()
  Void unused10=b.#S()
  Void unused11=b.#D()
  Void unused12=b.#F()
  Void unused13=b.#G()
  Void unused14=b.#H()
  Void unused15=b.#J()
  Void unused16=b.#K()
  Void unused17=b.#L()
  Void unused18=b.#Z()
  Void unused19=b.#X()
  Void unused20=b.#C()
  Void unused21=b.#V()
  Void unused22=b.#B()
  Void unused23=b.#N()
  Void unused24=b.#M()
  b
  ))
method 
This1.Bool isASCIILowerCase(This1.N that) This1.S.aSCIILowerCase().contains(that:this.#apply(that:that))
method 
This1.Bool isASCIIUpperCase(This1.N that) (/*Debug(S"S.isASCIIUpperCase(this:"[this]" that:"[that]")")
*/This1.S.aSCIIUpperCase().contains(that:this.#apply(that:that)))
class method 
This1.S doubleQuote() (
  This1.S rcv=This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#dQuote()
    Void unused0=b.#newline()
    b
    ))
  rcv.#apply(that:This1.N.#from(builder:(
    mut This1.S.SBuilder b0=This1.N.#builder()
    Void unused1=b0.#0()
    b0
    )))
  )
class method 
This1.S nl() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#newline()
  b
  ))
method 
This1.S replace(This1.S that, This1.S into) This1.S.#from(binaryRepr:use This1.Alu check stringReplace(that:this.binaryRepr(), src:that.binaryRepr(), dest:into.binaryRepr()) error void)
method 
This0.Continue #from(This1.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This0.SConcat #seqBuilder() This1.S.SConcat.#apply(old:this, accumulator:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
class method 
This0 #from(This1.S.SBuilder builder) This0._private(_binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
Varcurrent__21_0:/*@private*/{
class method 
mut This0 #mutK(This2.N inner) 
class method 
mut This0 #apply(This2.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.N that) 
mut method 
This2.N #inner() 
read method 
This2.N inner() }
Varcurrent0__22_0:/*@private*/{
class method 
mut This0 #mutK(This2.N inner) 
class method 
mut This0 #apply(This2.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.N that) 
mut method 
This2.N #inner() 
read method 
This2.N inner() }
Continue:{
class method 
mut This0 #mutK(This2.S that) 
class method 
This0 #apply(This2.S that) This0.#mutK(that:that)
mut method 
This2.S #that() 
read method 
This2.S that() 
method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
method 
This1 #from(This2.S.SBuilder builder) this.that().#plusplus(that:This2.S.#from(builder:builder))}
SConcat:{
class method 
mut This0 #mutK(This2.S old, This2.S accumulator) 
class method 
mut This0 #apply(This2.S old, This2.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This2.S #old() 
read method 
This2.S old() 
mut method 
Void accumulator(This2.S that) 
mut method 
This2.S #accumulator() 
read method 
This2.S accumulator() 
mut method 
Void #add(read This2.Concept.ToS that) this.accumulator(that:this.accumulator().#plusplus(that:that.toS()))
mut method 
Void #add(read This2.Concept.ToS that, This2.Concept.ToS sep) (
  This2.S newAcc=that.toS()
  mut This0.VarnewAcc__23_0 varnewAcc=This0.VarnewAcc__23_0.#apply(inner:newAcc)
  Void unused=(
    This2.Bool cond=this.accumulator().#bangequal(that:This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (varnewAcc.inner(that:this.accumulator().#plusplus(that:sep.toS().#plusplus(that:varnewAcc.#inner()))))
      )
    )
  this.accumulator(that:varnewAcc.#inner())
  )
VarnewAcc__23_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }}
SBuilder:{
class method /*@private
*/mut This0 #mutK__17_0(Library _binaryRepr__17_0) 
class method /*@private
*/mut This0 _private__18_0(Library _binaryRepr) This0.#mutK__17_0(_binaryRepr__17_0:_binaryRepr)
mut method /*@private
*/Void _binaryRepr__17_0(Library that) 
mut method /*@private
*/Library #_binaryRepr__17_0() 
read method /*@private
*/Library _binaryRepr__17_0() 
read method 
Library binaryRepr() this._binaryRepr__17_0()
mut method 
Void acc(Library that) this._binaryRepr__17_0(that:use This2.Alu check stringConcat(s1:this.binaryRepr(), s2:that) error void)
class method 
mut This0 empty() (//NUMBERS:
This0._private__18_0(_binaryRepr:{/*@stringU

*/}))
mut method 
Void #0() this.acc(that:{/*@stringU
0
*/})
mut method 
Void #1() this.acc(that:{/*@stringU
1
*/})
mut method 
Void #2() this.acc(that:{/*@stringU
2
*/})
mut method 
Void #3() this.acc(that:{/*@stringU
3
*/})
mut method 
Void #4() this.acc(that:{/*@stringU
4
*/})
mut method 
Void #5() this.acc(that:{/*@stringU
5
*/})
mut method 
Void #6() this.acc(that:{/*@stringU
6
*/})
mut method 
Void #7() this.acc(that:{/*@stringU
7
*/})
mut method 
Void #8() this.acc(that:{/*@stringU
8
*/})
mut method 
Void #9() (//LOWERCASE:
this.acc(that:{/*@stringU
9
*/}))
mut method 
Void #q() this.acc(that:{/*@stringU
q
*/})
mut method 
Void #w() this.acc(that:{/*@stringU
w
*/})
mut method 
Void #e() this.acc(that:{/*@stringU
e
*/})
mut method 
Void #r() this.acc(that:{/*@stringU
r
*/})
mut method 
Void #t() this.acc(that:{/*@stringU
t
*/})
mut method 
Void #y() this.acc(that:{/*@stringU
y
*/})
mut method 
Void #u() this.acc(that:{/*@stringU
u
*/})
mut method 
Void #i() this.acc(that:{/*@stringU
i
*/})
mut method 
Void #o() this.acc(that:{/*@stringU
o
*/})
mut method 
Void #p() this.acc(that:{/*@stringU
p
*/})
mut method 
Void #a() this.acc(that:{/*@stringU
a
*/})
mut method 
Void #s() this.acc(that:{/*@stringU
s
*/})
mut method 
Void #d() this.acc(that:{/*@stringU
d
*/})
mut method 
Void #f() this.acc(that:{/*@stringU
f
*/})
mut method 
Void #g() this.acc(that:{/*@stringU
g
*/})
mut method 
Void #h() this.acc(that:{/*@stringU
h
*/})
mut method 
Void #j() this.acc(that:{/*@stringU
j
*/})
mut method 
Void #k() this.acc(that:{/*@stringU
k
*/})
mut method 
Void #l() this.acc(that:{/*@stringU
l
*/})
mut method 
Void #z() this.acc(that:{/*@stringU
z
*/})
mut method 
Void #x() this.acc(that:{/*@stringU
x
*/})
mut method 
Void #c() this.acc(that:{/*@stringU
c
*/})
mut method 
Void #v() this.acc(that:{/*@stringU
v
*/})
mut method 
Void #b() this.acc(that:{/*@stringU
b
*/})
mut method 
Void #n() this.acc(that:{/*@stringU
n
*/})
mut method 
Void #m() (//UPPERCASE:
this.acc(that:{/*@stringU
m
*/}))
mut method 
Void #Q() this.acc(that:{/*@stringU
Q
*/})
mut method 
Void #W() this.acc(that:{/*@stringU
W
*/})
mut method 
Void #E() this.acc(that:{/*@stringU
E
*/})
mut method 
Void #R() this.acc(that:{/*@stringU
R
*/})
mut method 
Void #T() this.acc(that:{/*@stringU
T
*/})
mut method 
Void #Y() this.acc(that:{/*@stringU
Y
*/})
mut method 
Void #U() this.acc(that:{/*@stringU
U
*/})
mut method 
Void #I() this.acc(that:{/*@stringU
I
*/})
mut method 
Void #O() this.acc(that:{/*@stringU
O
*/})
mut method 
Void #P() this.acc(that:{/*@stringU
P
*/})
mut method 
Void #A() this.acc(that:{/*@stringU
A
*/})
mut method 
Void #S() this.acc(that:{/*@stringU
S
*/})
mut method 
Void #D() this.acc(that:{/*@stringU
D
*/})
mut method 
Void #F() this.acc(that:{/*@stringU
F
*/})
mut method 
Void #G() this.acc(that:{/*@stringU
G
*/})
mut method 
Void #H() this.acc(that:{/*@stringU
H
*/})
mut method 
Void #J() this.acc(that:{/*@stringU
J
*/})
mut method 
Void #K() this.acc(that:{/*@stringU
K
*/})
mut method 
Void #L() this.acc(that:{/*@stringU
L
*/})
mut method 
Void #Z() this.acc(that:{/*@stringU
Z
*/})
mut method 
Void #X() this.acc(that:{/*@stringU
X
*/})
mut method 
Void #C() this.acc(that:{/*@stringU
C
*/})
mut method 
Void #V() this.acc(that:{/*@stringU
V
*/})
mut method 
Void #B() this.acc(that:{/*@stringU
B
*/})
mut method 
Void #N() this.acc(that:{/*@stringU
N
*/})
mut method 
Void #M() this.acc(that:{/*@stringU
M
*/})
mut method 
Void #%() this.acc(that:{/*@stringU
%
*/})
mut method 
Void #$() (//OPERATORS:
this.acc(that:{/*@stringU
$
*/}))
mut method 
Void #left() this.acc(that:{/*@stringU
<
*/})
mut method 
Void #right() this.acc(that:{/*@stringU
>
*/})
mut method 
Void #bang() this.acc(that:{/*@stringU
!
*/})
mut method 
Void #tilde() this.acc(that:{/*@stringU
~
*/})
mut method 
Void #plus() this.acc(that:{/*@stringU
+
*/})
mut method 
Void #times() this.acc(that:{/*@stringU
*
*/})
mut method 
Void #divide() this.acc(that:{/*@stringU
/
*/})
mut method 
Void #less() this.acc(that:{/*@stringU
-
*/})
mut method 
Void #and() this.acc(that:{/*@stringU
&
*/})
mut method 
Void #or() (//SYMBOLS- Parenthesis:
this.acc(that:{/*@stringU
|
*/}))
mut method 
Void #oRound() this.acc(that:{/*@stringU
(
*/})
mut method 
Void #cRound() this.acc(that:{/*@stringU
)
*/})
mut method 
Void #oSquare() this.acc(that:{/*@stringU
[
*/})
mut method 
Void #cSquare() this.acc(that:{/*@stringU
]
*/})
mut method 
Void #oCurly() this.acc(that:{/*@stringU
{
*/})
mut method 
Void #cCurly() this.acc(that:{/*@stringU
}
*/})
mut method 
Void #dQuote() this.acc(that:{/*@stringU
"
*/})
mut method 
Void #sQuote() this.acc(that:{/*@stringU
'
*/})
mut method 
Void #hQuote() (//SYMBOLS- Unused operators:
this.acc(that:{/*@stringU
`
*/}))
mut method 
Void #equal() this.acc(that:{/*@stringU
=
*/})
mut method 
Void #qMark() this.acc(that:{/*@stringU
?
*/})
mut method 
Void #hat() this.acc(that:{/*@stringU
^
*/})
mut method 
Void #comma() this.acc(that:{/*@stringU
,
*/})
mut method 
Void #semicolon() this.acc(that:{/*@stringU
;
*/})
mut method 
Void #colon() this.acc(that:{/*@stringU
:
*/})
mut method 
Void #dot() this.acc(that:{/*@stringU
.
*/})
mut method 
Void #underscore() this.acc(that:{/*@stringU
_
*/})
mut method 
Void #hash() this.acc(that:{/*@stringU
#
*/})
mut method 
Void #at() this.acc(that:{/*@stringU
\u0040
*/})
mut method 
Void #backslash() this.acc(that:{/*@stringU
\u005C
*/})
mut method 
Void #space() this.acc(that:{/*@stringU
 
*/})
mut method 
Void #newline() this.acc(that:{/*@stringU


*/})}}
Range:{
class method 
mut This0.Iterator #apply(This1.N that) This0.Iterator.#apply(start:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), end:that)
class method 
mut This0.Iterator #apply(This1.N start, This1.N stop) This0.Iterator.#apply(start:start, end:stop)
class method 
mut This0.Iterator #apply(This1.N start) This0.Iterator.#apply(start:start, end:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
class method 
class This1.N #default##apply(Void that) This1.N
class method 
class This1.N #default##apply(Void stop) This1.N
class method 
class This1.N #default##apply(Void start) This1.N
Iterator:{
class method 
mut This0 #mutK(This2.N start, This2.N end) 
class method 
mut This0 #apply(This2.N start, This2.N end) This0.#mutK(start:start, end:end)
mut method 
Void start(This2.N that) 
mut method 
This2.N #start() 
read method 
This2.N start() 
mut method 
This2.N #end() 
read method 
This2.N end() 
mut method 
Void #next() exception Void ((
  This2.Bool cond=this.end().#left(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused=b.#0()
    b
    ))).#or(that:this.start().#left(that:this.end()))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched1 exception void
    
    (this.start(that:this.start().#plus(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b0=This2.N.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This2.N #inner() this.start().#less(that:This2.N.#from(builder:(
  mut This2.S.SBuilder b=This2.N.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
Debug:{
class method 
Void #apply(read This1.Concept.ToS that) use This1.Alu check stringDebug(that:that.toS().binaryRepr()) void
class method 
Void #apply(Library lib) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#t()
  Void unused0=b.#o()
  Void unused1=b.#space()
  Void unused2=b.#f()
  Void unused3=b.#i()
  Void unused4=b.#x()
  Void unused5=b.#space()
  Void unused6=b.#i()
  Void unused7=b.#n()
  Void unused8=b.#space()
  Void unused9=b.#A()
  Void unused10=b.#d()
  Void unused11=b.#a()
  Void unused12=b.#m()
  Void unused13=b.#T()
  Void unused14=b.#o()
  Void unused15=b.#w()
  Void unused16=b.#e()
  Void unused17=b.#l()
  Void unused18=b.#2()
  b
  ))
class method 
Void #apply(This1.Concept.ToS fileName, This1.Concept.ToS content) use This1.Alu check fileDebug(fileName:fileName.toS().binaryRepr(), content:content.toS().binaryRepr()) void
class method 
This1.S readFile(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check fileReadDebug(fileName:fileName.toS().binaryRepr()) error (
  This1.S.Continue rcv0=(
    This1.S rcv1=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv1.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv1.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv0.#from(builder:(
    mut This1.S.SBuilder b1=rcv0.#builder()
    b1
    ))
  ))
class method 
This1.S localToAbsolute(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check localToAbsolute(fileName:fileName.toS().binaryRepr()) error (
  This1.S.Continue rcv2=(
    This1.S rcv3=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv3.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv3.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv2.#from(builder:(
    mut This1.S.SBuilder b1=rcv2.#builder()
    b1
    ))
  ))
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected, This1.S message) (
  This1.S sExpected=expected.toS()
  This1.S given=that.toS()
  (
    This1.Bool cond=sExpected.#bangequal(that:given)
    (
      Void unused=cond.#checkTrue()
      
      catch exception Void catched1 (/* message = given
*/This1.Debug.#apply(that:(
        This1.S.Continue rcv10=(
          This1.S rcv11=(
            This1.S.Continue rcv12=(
              This1.S rcv13=This1.S.#from(builder:(
                mut This1.S.SBuilder b=This1.S.#builder()
                Void unused0=b.#oSquare()
                Void unused1=b.#P()
                Void unused2=b.#A()
                Void unused3=b.#S()
                Void unused4=b.#S()
                Void unused5=b.#cSquare()
                Void unused6=b.#space()
                b
                ))
              rcv13.#from(seqBuilder:(
                mut This1.S.SConcat b0=rcv13.#seqBuilder()
                Void unused7=b0.#add(that:message)
                b0
                ))
              )
            rcv12.#from(builder:(
              mut This1.S.SBuilder b1=rcv12.#builder()
              Void unused8=b1.#colon()
              Void unused9=b1.#space()
              b1
              ))
            )
          rcv11.#from(seqBuilder:(
            mut This1.S.SConcat b2=rcv11.#seqBuilder()
            Void unused10=b2.#add(that:given)
            b2
            ))
          )
        rcv10.#from(builder:(
          mut This1.S.SBuilder b3=rcv10.#builder()
          b3
          ))
        )))
      
      (This1.Debug.#apply(that:(
        This1.S.Continue rcv4=(
          This1.S rcv5=(
            This1.S.Continue rcv6=(
              This1.S rcv7=(
                This1.S.Continue rcv8=(
                  This1.S rcv9=This1.S.#from(builder:(
                    mut This1.S.SBuilder b4=This1.S.#builder()
                    Void unused11=b4.#oSquare()
                    Void unused12=b4.#F()
                    Void unused13=b4.#A()
                    Void unused14=b4.#I()
                    Void unused15=b4.#L()
                    Void unused16=b4.#cSquare()
                    Void unused17=b4.#space()
                    b4
                    ))
                  rcv9.#from(seqBuilder:(
                    mut This1.S.SConcat b5=rcv9.#seqBuilder()
                    Void unused18=b5.#add(that:message)
                    b5
                    ))
                  )
                rcv8.#from(builder:(
                  mut This1.S.SBuilder b6=rcv8.#builder()
                  Void unused19=b6.#colon()
                  Void unused20=b6.#space()
                  b6
                  ))
                )
              rcv7.#from(seqBuilder:(
                mut This1.S.SConcat b7=rcv7.#seqBuilder()
                Void unused21=b7.#add(that:given)
                b7
                ))
              )
            rcv6.#from(builder:(
              mut This1.S.SBuilder b8=rcv6.#builder()
              Void unused22=b8.#space()
              Void unused23=b8.#bang()
              Void unused24=b8.#equal()
              Void unused25=b8.#space()
              b8
              ))
            )
          rcv5.#from(seqBuilder:(
            mut This1.S.SConcat b9=rcv5.#seqBuilder()
            Void unused26=b9.#add(that:expected)
            b9
            ))
          )
        rcv4.#from(builder:(
          mut This1.S.SBuilder b10=rcv4.#builder()
          b10
          ))
        )))
      )
    )
  )
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected) This1.Debug.test(that:that, expected:expected, message:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
Test:{/* Builder to look like a list and run a series of debug.test calls.
 Does not actually make an instance or store the list of calls anywhere :-)
*/
class method 
class This0 #seqBuilder() This0
class method 
Void #from(class This0 seqBuilder) void
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected) This2.Debug.test(that:that, expected:expected, message:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected, This2.S message) This2.Debug.test(that:that, expected:expected, message:message)}}
Count:{
class method /*@private
*/mut This0 #mutK__19_0(This1.N counter__19_0) 
class method /*@private
*/mut This0 #apply__20_0(This1.N counter) This0.#mutK__19_0(counter__19_0:counter)
mut method /*@private
*/Void counter__19_0(This1.N that) 
mut method /*@private
*/This1.N #counter__19_0() 
read method /*@private
*/This1.N counter__19_0() 
class method 
mut This0 #seqBuilder() This0.#apply__20_0(counter:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.N #from(mut This0 seqBuilder) seqBuilder.counter__19_0()
mut method 
Void #add(This1.Bool that) (
  Void unused=that.#checkTrue()
  
  catch exception Void catched void
  
  (this.counter__19_0(that:this.counter__19_0().#plus(that:This1.N.#from(builder:(
    mut This1.S.SBuilder b=This1.N.#builder()
    Void unused0=b.#1()
    b
    )))))
  )}
SafeOperatorsAccess:{/*@plugin
L42.is/connected/withSafeOperators
*/
class method 
Library compose(Library left, Library right) use This0 check compose(left:left, right:right) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#c()
  Void unused20=b.#o()
  Void unused21=b.#m()
  Void unused22=b.#p()
  Void unused23=b.#o()
  Void unused24=b.#s()
  Void unused25=b.#e()
  b
  ))
class method 
Library redirect(Library that, Library srcBinaryRepr, class Any dest) use This1.SafeOperatorsAccess check redirect(that:that, src:srcBinaryRepr, dest:dest) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#r()
  Void unused20=b.#e()
  Void unused21=b.#d()
  Void unused22=b.#i()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#c()
  Void unused26=b.#t()
  b
  ))
class method 
Library renameClass(Library that, This1.S src, This1.S dest) use This1.SafeOperatorsAccess check renameClass(that:that, src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#r()
  Void unused20=b.#e()
  Void unused21=b.#n()
  Void unused22=b.#a()
  Void unused23=b.#m()
  Void unused24=b.#e()
  Void unused25=b.#C()
  Void unused26=b.#l()
  Void unused27=b.#a()
  Void unused28=b.#s()
  Void unused29=b.#s()
  b
  ))}
Concept:{
ToS:{interface 
read method 
This2.S toS() }
Classable:{interface 
read method 
class This1.Classable classAny() 
class method 
This2.S readableName() 
class method 
This2.Bool is(class Any subtype) }
Base:{interface implements This1.ToS, This1.Classable, This1.Equals/*class method This from(Base base)
*/
refine read method 
This2.S toS() 
refine read method 
class This1.Classable classAny() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool equals(read Any that) }
Wrapper:{interface 
read method 
Any inner() }
ClassWrapper:{interface 
read method 
class Any inner() }
MutWrapper:{interface /*implements ReadWrapper
*/
read method 
read Any inner() 
mut method 
mut Any #inner() }
Equals:{interface 
read method 
This2.Bool equals(read Any that) }
Comparable:{interface 
read method 
This2.Bool greater(read Any that) }
Boollable:{interface 
read method 
Void #checkTrue() exception Void }
Decorator:{interface /*method Library>>(Library that) exception MetaGuard(specific)
method Library decorate(Library that) exception MetaGuard I can link metaguard for circularity
*/}
Contains:{interface /*read method Bool >>(read Elem that)
*/
read method 
This2.Bool contains(read Any that) }
Parsable:{interface /*class method capsule This fromS(S that) exception Guard.Parameter(specific) invalid string
////class method capsule This #fromS(S that) exception Guard.Parameter
*/}
Invariant:{interface 
read method /* can throw error or return false, as more opportune
*/This2.Bool invariant() }
RandomAccess:{interface /*read method read Elem (N that)
mut method mut Elem #(N that)
*/
read method 
read Any get(This2.N that) 
mut method 
mut Any #get(This2.N that) }
Sizable:{interface 
read method 
This2.N size() 
read method 
This2.Bool isEmpty() }
Iterator:{interface 
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
Void #close() }}
GetMyName:{
class method 
This1.S #apply(class Any that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#less()
  Void unused0=b.#less()
  Void unused1=b.#N()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#S()
  Void unused6=b.#t()
  Void unused7=b.#i()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#T()
  Void unused11=b.#o()
  Void unused12=b.#F()
  Void unused13=b.#i()
  Void unused14=b.#x()
  Void unused15=b.#less()
  Void unused16=b.#less()
  b
  ))}
Message:{interface implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
This1.S kind() 
method 
This1.S text() 
method 
This0.Opt responseOf() 
read method 
class This0 class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine read method 
class This1.Concept.Classable classAny() 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
Opt:{
class method 
mut This0 #mutK(This0.TOpt that) 
class method 
This0 #new(This0.TOpt that) This0.#mutK(that:that)
mut method 
This0.TOpt #that() 
read method 
This0.TOpt that() 
method 
This1 #get() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    Void unused0=(
      This0.TOpt cell=this.that()
      (
        This0.TOf cell0=(
          Void unused2=return cell
          
          catch return This0.TOf casted casted
          
          catch return Any casted exception void
          
          error {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This2.Bool.true()
          void
          )
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This1 that) This0.#new(that:This0.TOf.#apply(that:that))
TOpt:{interface 
method 
This2 get() }
TEmpty:{implements This1.TOpt
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
This2 get() error (//error Guard.Operation"TEmpty.get() Value not present in Optional"
This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#U()
  Void unused0=b.#n()
  Void unused1=b.#s()
  Void unused2=b.#a()
  Void unused3=b.#t()
  Void unused4=b.#i()
  Void unused5=b.#s()
  Void unused6=b.#f()
  Void unused7=b.#a()
  Void unused8=b.#c()
  Void unused9=b.#t()
  Void unused10=b.#o()
  Void unused11=b.#r()
  Void unused12=b.#y()
  Void unused13=b.#E()
  Void unused14=b.#r()
  Void unused15=b.#r()
  Void unused16=b.#o()
  Void unused17=b.#r()
  Void unused18=b.#T()
  Void unused19=b.#o()
  Void unused20=b.#A()
  Void unused21=b.#v()
  Void unused22=b.#o()
  Void unused23=b.#i()
  Void unused24=b.#d()
  Void unused25=b.#C()
  Void unused26=b.#y()
  Void unused27=b.#c()
  Void unused28=b.#l()
  Void unused29=b.#e()
  Void unused30=b.#comma()
  Void unused31=b.#space()
  Void unused32=b.#r()
  Void unused33=b.#e()
  Void unused34=b.#p()
  Void unused35=b.#l()
  Void unused36=b.#a()
  Void unused37=b.#c()
  Void unused38=b.#e()
  Void unused39=b.#space()
  Void unused40=b.#i()
  Void unused41=b.#n()
  Void unused42=b.#space()
  Void unused43=b.#A()
  Void unused44=b.#d()
  Void unused45=b.#a()
  Void unused46=b.#m()
  Void unused47=b.#2()
  b
  )))}
TOf:{implements This1.TOpt
class method 
mut This0 #mutK(This2 that) 
class method 
This0 #apply(This2 that) This0.#mutK(that:that)
mut method 
This2 #that() 
read method 
This2 that() 
refine method 
This2 get() this.that()}}
EqualMessages:{
class method 
This2.Bool #apply(This2.Message that, This2.Message other) (
  Void unused=(/*assuming they have the same class
*/
    This2.Bool res=that.class().kind().#equalequal(that:other.class().kind()).#and(that:that.text().#equalequal(that:other.text())).#and(that:that.responseOf().isPresent().#equalequal(that:other.responseOf().isPresent()))
    Void unused0=(
      This2.Bool cond=res.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(//i know both are present
(
      This2.Bool cond0=that.responseOf().isPresent().#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return This2.Bool.true())
        )
      ))
    Void unused2=return (// this calls  equals in message,
//that check for equal class and then call EqualMessages
that.responseOf().#get().equals(that:other.responseOf().#get()))
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
$:{
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
class method 
Library #leftleft(Library that) This2.SafeOperatorsAccess.compose(left:that, right:This0.messageTrait())
class method 
Library messageTrait() {implements This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres__24_0 varres=This0.Varres__24_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#bangequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This3.Concept.Classable classAny() This0
refine read method 
class This3.Message class() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres__24_0:/*@private*/{
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue:{
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
Guard:{/* exception as Guard bureocracy, error as Guard detection
-is a check guarenteed to be performed, program logic can rely on this being enforced.
  as exceptions, Guards objects are a way to report/guard complex operations,
 where checking the shape of the input can be unconvenient.
as errors, they represent precondition violations.
Turning an exception Guard into an error Guard
 is equivalent of declaring that such misuse should not happen (blame on the caller),
 still, there is no bug in the program at this stage. Is legit for the caller to try and be blamed
*/interface implements This1.Message, This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable/*all other guards should implement this one
*/
refine class method 
This1.S kind() 
refine method 
This1.S text() 
refine method 
This1.Message.Opt responseOf() 
refine read method 
class This1.Message class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine read method 
class This1.Concept.Classable classAny() 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
Operation:{implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%0_0__25_0 varres=This0.Varres_$%0_0__25_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%0_0__25_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Parameter:{implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%1_0__26_0 varres=This0.Varres_$%1_0__26_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%1_0__26_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Precondition:{implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%2_0__27_0 varres=This0.Varres_$%2_0__27_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%2_0__27_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
ParseFail:{interface implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine method 
This2.S text() 
refine method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine read method 
class This2.Concept.Classable classAny() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) }}
System:{
Guard:{/* implements Outer.Guard soon (remove "interface" for a bad translation bug: This1_System_Guard is not abstract and does not override abstract method MtoS()
*/interface implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine method 
This2.S text() 
refine method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine read method 
class This2.Concept.Classable classAny() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
PluginFailure:{implements This2.Guard, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%3_0__28_0 varres=This0.Varres_$%3_0__28_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#bangequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This3.Concept.Classable classAny() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%3_0__28_0:/*@private*/{
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue:{
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
Assert:{interface implements This1.Message, This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
refine class method 
This1.S kind() 
refine method 
This1.S text() 
refine method 
This1.Message.Opt responseOf() 
refine read method 
class This1.Message class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine read method 
class This1.Concept.Classable classAny() 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
NotImplementedYet:{implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%4_0__29_0 varres=This0.Varres_$%4_0__29_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%4_0__29_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
ObservedBug:{implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%5_0__30_0 varres=This0.Varres_$%5_0__30_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%5_0__30_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
CodeNotReachable:{implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%6_0__31_0 varres=This0.Varres_$%6_0__31_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%6_0__31_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
AssertMessage:{implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%7_0__32_0 varres=This0.Varres_$%7_0__32_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%7_0__32_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Collections:{
class method 
Library vector(class Any of) (
  Void unused=(
    Void unused0=return this.eq(that:of)
    
    catch error Library catched return this.minimal(that:of)
    
    catch error This1.S catched return this.minimal(that:of)
    
    void
    )
  
  catch return Library result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library minimal(class Any that) This1.SafeOperatorsAccess.redirect(that:This0.VectorTrait.#apply(), srcBinaryRepr:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#E()
  Void unused0=b.#l()
  Void unused1=b.#e()
  Void unused2=b.#m()
  b
  )).binaryRepr(), dest:that)
class method 
Library eq(class Any that) (
  Library lib=This1.SafeOperatorsAccess.compose(left:This0.VectorTrait.#apply(), right:This0.CodeEq.#apply())
  This1.SafeOperatorsAccess.redirect(that:lib, srcBinaryRepr:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )).binaryRepr(), dest:that)
  )
IterationFailure:{implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%8_0__33_0 varres=This0.Varres_$%8_0__33_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Concept.Classable classAny() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #bangequal(This0 that) (this.#equalequal(that:that)).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%8_0__33_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue:{
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
CollectionErrors:{
class method 
Any negBound(This2.N that, This1.MutListAny list) (
  This2.Guard.Parameter.Continue rcv15=(
    This2.Guard.Parameter rcv16=(
      This2.Guard.Parameter.Continue rcv17=(
        This2.Guard.Parameter rcv18=This2.Guard.Parameter.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#n()
          Void unused17=b.#e()
          Void unused18=b.#g()
          Void unused19=b.#a()
          Void unused20=b.#t()
          Void unused21=b.#i()
          Void unused22=b.#v()
          Void unused23=b.#e()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#n()
          Void unused27=b.#d()
          Void unused28=b.#e()
          Void unused29=b.#x()
          Void unused30=b.#space()
          Void unused31=b.#p()
          Void unused32=b.#r()
          Void unused33=b.#o()
          Void unused34=b.#v()
          Void unused35=b.#i()
          Void unused36=b.#d()
          Void unused37=b.#e()
          Void unused38=b.#d()
          Void unused39=b.#semicolon()
          Void unused40=b.#space()
          Void unused41=b.#m()
          Void unused42=b.#a()
          Void unused43=b.#x()
          Void unused44=b.#space()
          Void unused45=b.#i()
          Void unused46=b.#s()
          Void unused47=b.#space()
          b
          ))
        rcv18.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv18.#seqBuilder()
          Void unused48=b0.#add(that:list.size())
          b0
          ))
        )
      rcv17.#from(builder:(
        mut This2.S.SBuilder b1=rcv17.#builder()
        Void unused49=b1.#space()
        Void unused50=b1.#p()
        Void unused51=b1.#r()
        Void unused52=b1.#o()
        Void unused53=b1.#p()
        Void unused54=b1.#o()
        Void unused55=b1.#s()
        Void unused56=b1.#e()
        Void unused57=b1.#d()
        Void unused58=b1.#space()
        Void unused59=b1.#i()
        Void unused60=b1.#s()
        Void unused61=b1.#space()
        b1
        ))
      )
    rcv16.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv16.#seqBuilder()
      Void unused62=b2.#add(that:that)
      b2
      ))
    )
  rcv15.#from(builder:(
    mut This2.S.SBuilder b3=rcv15.#builder()
    b3
    ))
  )
class method 
Any outBound(This2.N that, This1.MutListAny list) (
  This2.Guard.Parameter.Continue rcv19=(
    This2.Guard.Parameter rcv20=(
      This2.Guard.Parameter.Continue rcv21=(
        This2.Guard.Parameter rcv22=This2.Guard.Parameter.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#m()
          Void unused17=b.#a()
          Void unused18=b.#x()
          Void unused19=b.#space()
          Void unused20=b.#i()
          Void unused21=b.#s()
          Void unused22=b.#space()
          b
          ))
        rcv22.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv22.#seqBuilder()
          Void unused23=b0.#add(that:list.size())
          b0
          ))
        )
      rcv21.#from(builder:(
        mut This2.S.SBuilder b1=rcv21.#builder()
        Void unused24=b1.#space()
        Void unused25=b1.#p()
        Void unused26=b1.#r()
        Void unused27=b1.#o()
        Void unused28=b1.#p()
        Void unused29=b1.#o()
        Void unused30=b1.#s()
        Void unused31=b1.#e()
        Void unused32=b1.#d()
        Void unused33=b1.#space()
        Void unused34=b1.#i()
        Void unused35=b1.#s()
        Void unused36=b1.#space()
        b1
        ))
      )
    rcv20.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv20.#seqBuilder()
      Void unused37=b2.#add(that:that)
      b2
      ))
    )
  rcv19.#from(builder:(
    mut This2.S.SBuilder b3=rcv19.#builder()
    b3
    ))
  )
class method 
Any cast() This2.Guard.Operation.#from(builder:(
  mut This2.S.SBuilder b=This2.Guard.Operation.#builder()
  Void unused=b.#c()
  Void unused0=b.#a()
  Void unused1=b.#s()
  Void unused2=b.#t()
  Void unused3=b.#space()
  Void unused4=b.#f()
  Void unused5=b.#a()
  Void unused6=b.#i()
  Void unused7=b.#l()
  Void unused8=b.#u()
  Void unused9=b.#r()
  Void unused10=b.#e()
  b
  ))
class method 
Any iterationTermination(This2.N from, This2.N minTo, This2.N size) (
  This1.IterationFailure.Continue rcv23=(
    This1.IterationFailure rcv24=(
      This1.IterationFailure.Continue rcv25=(
        This1.IterationFailure rcv26=This1.IterationFailure.#from(builder:(
          mut This2.S.SBuilder b=This1.IterationFailure.#builder()
          Void unused=b.#U()
          Void unused0=b.#n()
          Void unused1=b.#e()
          Void unused2=b.#x()
          Void unused3=b.#p()
          Void unused4=b.#e()
          Void unused5=b.#c()
          Void unused6=b.#t()
          Void unused7=b.#e()
          Void unused8=b.#d()
          Void unused9=b.#space()
          Void unused10=b.#t()
          Void unused11=b.#e()
          Void unused12=b.#r()
          Void unused13=b.#m()
          Void unused14=b.#i()
          Void unused15=b.#n()
          Void unused16=b.#a()
          Void unused17=b.#t()
          Void unused18=b.#i()
          Void unused19=b.#o()
          Void unused20=b.#n()
          Void unused21=b.#space()
          Void unused22=b.#o()
          Void unused23=b.#f()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#t()
          Void unused27=b.#e()
          Void unused28=b.#r()
          Void unused29=b.#a()
          Void unused30=b.#t()
          Void unused31=b.#i()
          Void unused32=b.#o()
          Void unused33=b.#n()
          Void unused34=b.#comma()
          Void unused35=b.#space()
          Void unused36=b.#r()
          Void unused37=b.#e()
          Void unused38=b.#a()
          Void unused39=b.#c()
          Void unused40=b.#h()
          Void unused41=b.#e()
          Void unused42=b.#d()
          Void unused43=b.#space()
          b
          ))
        rcv26.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv26.#seqBuilder()
          Void unused44=b0.#add(that:from)
          b0
          ))
        )
      rcv25.#from(builder:(
        mut This2.S.SBuilder b1=rcv25.#builder()
        Void unused45=b1.#space()
        Void unused46=b1.#i()
        Void unused47=b1.#n()
        Void unused48=b1.#s()
        Void unused49=b1.#t()
        Void unused50=b1.#e()
        Void unused51=b1.#a()
        Void unused52=b1.#d()
        Void unused53=b1.#space()
        Void unused54=b1.#o()
        Void unused55=b1.#f()
        Void unused56=b1.#space()
        b1
        ))
      )
    rcv24.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv24.#seqBuilder()
      Void unused57=b2.#add(that:minTo)
      b2
      ))
    )
  rcv23.#from(builder:(
    mut This2.S.SBuilder b3=rcv23.#builder()
    b3
    ))
  )}
MutListAny:{implements This2.Concept.ToS
class method 
mut This0 #mutK(This0.Cell head, This2.N size) 
class method 
mut This0 #apply(This0.Cell head, This2.N size) This0.#mutK(head:head, size:size)
mut method 
Void head(This0.Cell that) 
mut method 
This0.Cell #head() 
read method 
This0.Cell head() 
mut method 
Void size(This2.N that) 
mut method 
This2.N #size() 
read method 
This2.N size() 
class method 
mut This0 empty() This0.#apply(head:This0.CellEnd.#apply(), size:This2.N.#from(builder:(
  mut This2.S.SBuilder b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Any val(This2.N that) (
  Void unused=this.checkBound(that:that)
  this.head().get(that:that)
  )
mut method 
Void #apply(This2.N that, Any val) (
  Void unused=this.checkBound(that:that)
  this.head(that:this.head().set(that:that, val:val, add:This2.Bool.false()))
  )
mut method 
Void add(This2.N that, Any val) (
  Void unused=this.checkBoundAdd(that:that)
  Void unused0=this.head(that:this.head().set(that:that, val:val, add:This2.Bool.true()))
  this.size(that:this.size().#plus(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
mut method 
Void remove(This2.N that) (
  Void unused=this.checkBound(that:that)
  Void unused0=this.head(that:this.head().remove(that:that))
  this.size(that:this.size().#less(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
method 
This0 without(This2.N that) (
  Void unused=this.checkBound(that:that)
  This0.#apply(head:this.head().remove(that:that), size:this.size().#less(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 withAlso(This2.N that, Any val) (
  Void unused=this.checkBoundAdd(that:that)
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.true()), size:this.size().#plus(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 with(This2.N that, Any val) (
  Void unused=this.checkBound(that:that)
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.false()), size:this.size().#plus(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
read method 
Void checkBound(This2.N that) (
  Void unused=(
    This2.Bool cond=that.#left(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b=This2.N.#builder()
      Void unused0=b.#0()
      b
      )))
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (error This1.CollectionErrors.negBound(that:that, list:this))
      )
    )
  (
    This2.Bool cond0=this.size().#leftequal(that:that)
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched4 void
      
      (error This1.CollectionErrors.outBound(that:that, list:this))
      )
    )
  )
read method 
Void checkBoundAdd(This2.N that) (
  Void unused=(
    This2.Bool cond=that.#left(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b=This2.N.#builder()
      Void unused0=b.#0()
      b
      )))
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (error This1.CollectionErrors.negBound(that:that, list:this))
      )
    )
  (
    This2.Bool cond0=this.size().#left(that:that)
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched4 void
      
      (error This1.CollectionErrors.outBound(that:that, list:this))
      )
    )
  )
refine read method 
This2.S toS() (
  Void unused=(
    This2.S ret=This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused1=b.#oSquare()
      b
      ))
    This2.S sep=This2.S.#from(builder:(
      mut This2.S.SBuilder b0=This2.S.#builder()
      b0
      ))
    This0.Cell c=this.head()
    mut This0.Varret__36_0 varret=This0.Varret__36_0.#apply(inner:ret)
    mut This0.Varsep__35_0 varsep=This0.Varsep__35_0.#apply(inner:sep)
    mut This0.Varc__34_0 varc=This0.Varc__34_0.#apply(inner:c)
    Void unused0=loop (/*Debug(S"MutListAny.toS() loop pass with ret='"[ret]"', sep='"[sep]"'")
*/
      Void unused2=(
        This0.CellNext c0=(
          Void unused3=return varc.#inner()
          
          catch return This0.CellNext casted casted
          
          catch return Any casted exception void
          
          error {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched2 return varret.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused4=b1.#cSquare()
          b1
          )))
        
        (
          Void unused5=(
            Void unused6=varret.inner(that:varret.#inner().#plusplus(that:varsep.#inner()))
            Void unused7=(
              Any v=c0.val()
              (
                This2.Concept.ToS v0=(
                  Void unused8=return v
                  
                  catch return This2.Concept.ToS casted0 casted0
                  
                  catch return Any casted0 exception void
                  
                  error {/*@stringU
CastT-Should be unreachable code
*/}
                  )
                
                catch exception Void catched6 varret.inner(that:varret.#inner().#plusplus(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b2=This2.S.#builder()
                  Void unused9=b2.#qMark()
                  b2
                  ))))
                
                (
                  Void unused10=varret.inner(that:varret.#inner().#plusplus(that:v0.toS()))
                  void
                  )
                )
              )
            varc.inner(that:c0.next())
            )
          void
          )
        )
      varsep.inner(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b3=This2.S.#builder()
        Void unused11=b3.#semicolon()
        Void unused12=b3.#space()
        b3
        )))
      )
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varc__34_0:/*@private*/{
class method 
mut This0 #mutK(This1.Cell inner) 
class method 
mut This0 #apply(This1.Cell inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1.Cell that) 
mut method 
This1.Cell #inner() 
read method 
This1.Cell inner() }
Varsep__35_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Varret__36_0:/*@private*/{
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Cell:{interface 
method 
Any get(This3.N that) 
method 
This1.Cell set(This3.N that, Any val, This3.Bool add) 
method 
This1.Cell remove(This3.N that) }
CellNext:{implements This1.Cell
class method 
mut This0 #mutK(Any val, This1.Cell next) 
class method 
This0 #apply(Any val, This1.Cell next) This0.#mutK(val:val, next:next)
mut method 
Any #val() 
read method 
Any val() 
mut method 
This1.Cell #next() 
read method 
This1.Cell next() 
refine method 
Any get(This3.N that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.val())
        )
      )
    Void unused1=return this.next().get(that:that.#less(that:This3.N.#from(builder:(
      mut This3.S.SBuilder b0=This3.N.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return Any result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell set(This3.N that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#bangequal(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused3=b.#0()
        b
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().set(that:that.#less(that:This3.N.#from(builder:(
          mut This3.S.SBuilder b0=This3.N.#builder()
          Void unused5=b0.#1()
          b0
          ))), val:val, add:add)))
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched3 void
      
      (return This0.#apply(val:val, next:this))
      )
    Void unused2=return This0.#apply(val:val, next:this.next())
    void
    )
  
  catch return This1.Cell result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.N that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#bangequal(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().remove(that:that.#less(that:This3.N.#from(builder:(
          mut This3.S.SBuilder b0=This3.N.#builder()
          Void unused4=b0.#1()
          b0
          ))))))
        )
      )
    Void unused1=return this.next()
    void
    )
  
  catch return This1.Cell result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
CellEnd:{implements This1.Cell
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
Any get(This3.N that) error This3.Assert.CodeNotReachable.#from(builder:(
  mut This3.S.SBuilder b=This3.Assert.CodeNotReachable.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#g()
  Void unused8=b.#e()
  Void unused9=b.#t()
  b
  ))
refine method 
This1.Cell set(This3.N that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (error This3.Assert.CodeNotReachable.#from(builder:(
          mut This3.S.SBuilder b=This3.Assert.CodeNotReachable.#builder()
          Void unused4=b.#C()
          Void unused5=b.#e()
          Void unused6=b.#l()
          Void unused7=b.#l()
          Void unused8=b.#E()
          Void unused9=b.#n()
          Void unused10=b.#d()
          Void unused11=b.#dot()
          Void unused12=b.#s()
          Void unused13=b.#e()
          Void unused14=b.#t()
          Void unused15=b.#1()
          b
          )))
        )
      )
    Void unused1=(
      This3.Bool cond0=that.#equalequal(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b0=This3.N.#builder()
        Void unused16=b0.#0()
        b0
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This1.CellNext.#apply(val:val, next:this))
        )
      )
    Void unused2=error This3.Assert.CodeNotReachable.#from(builder:(
      mut This3.S.SBuilder b1=This3.Assert.CodeNotReachable.#builder()
      Void unused18=b1.#C()
      Void unused19=b1.#e()
      Void unused20=b1.#l()
      Void unused21=b1.#l()
      Void unused22=b1.#E()
      Void unused23=b1.#n()
      Void unused24=b1.#d()
      Void unused25=b1.#dot()
      Void unused26=b1.#s()
      Void unused27=b1.#e()
      Void unused28=b1.#t()
      Void unused29=b1.#2()
      b1
      ))
    void
    )
  
  catch return This1.Cell result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.N that) error This3.Assert.CodeNotReachable.#from(builder:(
  mut This3.S.SBuilder b=This3.Assert.CodeNotReachable.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#r()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#o()
  Void unused11=b.#v()
  Void unused12=b.#e()
  b
  ))}}
VectorTrait:{
class method 
Library #apply() {implements This3.Concept.ToS, This3.Concept.Classable
class method 
mut This0 #mutK(mut This2.MutListAny inner) 
class method 
mut This0 #apply(mut This2.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.MutListAny #inner() 
read method 
read This2.MutListAny inner() 
class method 
This0 #immK(This2.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This0.Elem that) this.add(right:that)
class method 
This0.Elem cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This0.Elem that0=(
      Void unused0=return that
      
      catch return This0.Elem casted casted
      
      catch return Any casted exception void
      
      error {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This0.Elem result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.N size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This0.Elem val(This3.N that) This0.cast(that:this.inner().val(that:that))
read method 
This0.Elem left() This0.cast(that:this.inner().val(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This0.Elem right() (//#################MUT METHODS
This0.cast(that:(
  read This2.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.N.#from(builder:(
    mut This3.S.SBuilder b=This3.N.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.N that, This0.Elem val) (
  mut This2.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This0.Elem that) (
  mut This2.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.N.#from(builder:(
    mut This3.S.SBuilder b=This3.N.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This0.Elem that) (
  mut This2.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.N.#from(builder:(
    mut This3.S.SBuilder b=This3.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.N that, This0.Elem val) this.#inner().add(that:that, val:val)
mut method 
Void add(This0.Elem right) (
  mut This2.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This0.Elem left) this.#inner().add(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.N that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This0.Elem that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.N that, This0.Elem val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This0.Elem that) this.with(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This0.Elem that) (//insertion
this.with(that:this.size().#less(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.N that, This0.Elem val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This0.Elem that) this.withAlso(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0.Elem that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.N index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.N from, This3.N maxTo, This3.N minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.N minTo) this.vals(from:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.N.#from(builder:(
  mut This3.S.SBuilder b0=This3.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.N from, This3.N to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.N.#from(builder:(
  mut This3.S.SBuilder b0=This3.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.N from, This3.N maxTo, This3.N minTo, This0.Elem filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.N minTo, This0.Elem filled) this.vals(from:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.N.#from(builder:(
  mut This3.S.SBuilder b0=This3.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.N from, This3.N to, This0.Elem filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This0.Elem filled) this.vals(from:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.N.#from(builder:(
  mut This3.S.SBuilder b0=This3.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.N from, This3.N maxTo, This3.N minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.N minTo) this.#vals(from:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.N.#from(builder:(
  mut This3.S.SBuilder b0=This3.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.N from, This3.N to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.N.#from(builder:(
  mut This3.S.SBuilder b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  mut This3.S.SBuilder b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.N.#from(builder:(
  mut This3.S.SBuilder b1=This3.N.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This3.Concept.Classable classAny() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
Elem:{}
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.MutListAny that() 
read method 
This5.N from() 
mut method 
Void from(This5.N that) 
read method 
This5.N maxTo() 
read method 
This5.N minTo() 
read method 
This5.Bool isFill() 
read method 
This2.Elem filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.N.#from(builder:(
    mut This5.S.SBuilder b=This5.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.N.#from(builder:(
      mut This5.S.SBuilder b0=This5.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This4.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Elem #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Elem result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal:{
read method 
read This3.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N maxTo() 
read method 
This4.N minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.Assert.CodeNotReachable.#from(builder:(
  mut This4.S.SBuilder b=This4.Assert.CodeNotReachable.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    mut This4.S.SBuilder b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.N.#from(builder:(
      mut This4.S.SBuilder b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.MutListAny that, This4.N from, This4.N maxTo, This4.N minTo) 
class method 
lent This0 #apply(read This3.MutListAny that, This4.N from, This4.N maxTo, This4.N minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #maxTo() 
mut method 
This4.N #minTo() }
IteratorValFill:{
read method 
read This3.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N maxTo() 
read method 
This4.N minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This1.Elem filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    mut This4.S.SBuilder b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.N.#from(builder:(
      mut This4.S.SBuilder b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.MutListAny that, This4.N from, This4.N maxTo, This4.N minTo, This1.Elem filled) 
class method 
lent This0 #apply(read This3.MutListAny that, This4.N from, This4.N maxTo, This4.N minTo, This1.Elem filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #maxTo() 
mut method 
This4.N #minTo() 
mut method 
This1.Elem #filled() }
IteratorVar:{
read method 
read This3.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N maxTo() 
read method 
This4.N minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.Assert.CodeNotReachable.#from(builder:(
  mut This4.S.SBuilder b=This4.Assert.CodeNotReachable.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    mut This4.S.SBuilder b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.N.#from(builder:(
      mut This4.S.SBuilder b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.MutListAny that, This4.N from, This4.N maxTo, This4.N minTo) 
class method 
mut This0 #apply(mut This3.MutListAny that, This4.N from, This4.N maxTo, This4.N minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #maxTo() 
mut method 
This4.N #minTo() 
mut method 
Void inner(This1.Elem that) (
  mut This3.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}}}
CodeEq:{
class method 
Library #apply() {implements This3.Concept.Equals
read method 
This3.N size() 
read method 
This0.Elem val(This3.N that) 
class method 
mut This0 #seqBuilder() 
class method 
mut This0 #from(mut This0 seqBuilder) 
mut method 
Void #add(This0.Elem that) 
read method 
lent This0.IteratorVal vals() 
read method 
This3.Bool contains(This0.Elem that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This0.Elem that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:this.size().#right(that:that.size()))
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This0.Elem that) this.contains(that:that)
read method 
This3.Bool #bangequal(read This0 that) (this.#equalequal(that:that)).#bang()
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This2.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.N indexOfLeft(This0.Elem val) (
  Void unused=(
    This3.N size=this.size()
    This3.N pos=This3.N.#from(builder:(
      mut This3.S.SBuilder b=This3.N.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos__37_0 varpos=This0.Varpos__37_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.N.#from(builder:(
            mut This3.S.SBuilder b0=This3.N.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b1=This3.N.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.N result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.N indexOfRight(This0.Elem val) (
  Void unused=(
    This3.N pos=this.size().#less(that:This3.N.#from(builder:(
      mut This3.S.SBuilder b=This3.N.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0__38_0 varpos0=This0.Varpos0__38_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos0.#inner().#leftequal(that:This3.N.#from(builder:(
          mut This3.S.SBuilder b0=This3.N.#builder()
          Void unused5=b0.#0()
          b0
          )))
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched4 void
          
          (return This3.N.#from(builder:(
            mut This3.S.SBuilder b1=This3.N.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b2=This3.N.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.N result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.N index) 
method 
This0 withoutLeft(This0.Elem val) (
  Void unused=(
    This3.N pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=pos.#left(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0.Elem val) (
  Void unused=(
    This3.N pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=pos.#left(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0.Elem val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.N that) 
mut method 
Void removeAll(This0.Elem val) (
  Void unused=(
    This3.N pos=This3.N.#from(builder:(
      mut This3.S.SBuilder b=This3.N.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1__39_0 varpos1=This0.Varpos1__39_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b0=This3.N.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This0.Elem val) (
  Void unused=(
    This3.N pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=pos.#left(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This0.Elem val) (
  Void unused=(
    This3.N pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=pos.#left(that:This3.N.#from(builder:(
        mut This3.S.SBuilder b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varpos__37_0:/*@private*/{
class method 
mut This0 #mutK(This4.N inner) 
class method 
mut This0 #apply(This4.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.N that) 
mut method 
This4.N #inner() 
read method 
This4.N inner() }
Varpos0__38_0:/*@private*/{
class method 
mut This0 #mutK(This4.N inner) 
class method 
mut This0 #apply(This4.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.N that) 
mut method 
This4.N #inner() 
read method 
This4.N inner() }
Varpos1__39_0:/*@private*/{
class method 
mut This0 #mutK(This4.N inner) 
class method 
mut This0 #apply(This4.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.N that) 
mut method 
This4.N #inner() 
read method 
This4.N inner() }
Elem:{implements This4.Concept.Equals
refine read method 
This4.Bool equals(read Any that) }
IteratorVal:{
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
This1.Elem #inner() 
read method 
Void #close() }}}}
Strings:{implements This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
class method 
mut This0 #mutK(mut This1.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This1.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This1.Collections.MutListAny #inner() 
read method 
read This1.Collections.MutListAny inner() 
class method 
This0 #immK(This1.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This1.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.S that) this.add(right:that)
class method 
This1.S cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.S that0=(
      Void unused0=return that
      
      catch return This1.S casted casted
      
      catch return Any casted exception void
      
      error {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This1.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This1.N size() this.inner().size()
read method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.S val(This1.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.S left() This0.cast(that:this.inner().val(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.S right() (//#################MUT METHODS
This0.cast(that:(
  read This1.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This1.N.#from(builder:(
    mut This1.S.SBuilder b=This1.N.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This1.N that, This1.S val) (
  mut This1.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.S that) (
  mut This1.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This1.N.#from(builder:(
    mut This1.S.SBuilder b=This1.N.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.S that) (
  mut This1.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This1.N.#from(builder:(
    mut This1.S.SBuilder b=This1.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This1.N that, This1.S val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.S right) (
  mut This1.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.S left) this.#inner().add(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This1.N that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.S that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This1.N that, This1.S val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.S that) this.with(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.S that) (//insertion
this.with(that:this.size().#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.N that, This1.S val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.S that) this.withAlso(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.S that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This1.N index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This1.N from, This1.N maxTo, This1.N minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.N minTo) this.vals(from:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.N.#from(builder:(
  mut This1.S.SBuilder b0=This1.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.N from, This1.N to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.N.#from(builder:(
  mut This1.S.SBuilder b0=This1.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This1.N from, This1.N maxTo, This1.N minTo, This1.S filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.N minTo, This1.S filled) this.vals(from:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.N.#from(builder:(
  mut This1.S.SBuilder b0=This1.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.N from, This1.N to, This1.S filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.S filled) this.vals(from:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.N.#from(builder:(
  mut This1.S.SBuilder b0=This1.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This1.N from, This1.N maxTo, This1.N minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.N minTo) this.#vals(from:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.N.#from(builder:(
  mut This1.S.SBuilder b0=This1.N.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.N from, This1.N to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This1.N.#from(builder:(
  mut This1.S.SBuilder b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.N.#from(builder:(
  mut This1.S.SBuilder b0=This1.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This1.N.#from(builder:(
  mut This1.S.SBuilder b1=This1.N.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This1.S toS() this.inner().toS()
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This1.Concept.Classable classAny() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
IteratorTrait:{
class method 
Library #apply() {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N maxTo() 
read method 
This3.N minTo() 
read method 
This3.Bool isFill() 
read method 
This3.S filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    mut This3.S.SBuilder b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.N.#from(builder:(
      mut This3.S.SBuilder b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.S #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal:{
read method 
read This2.Collections.MutListAny that() 
read method 
This2.N from() 
mut method 
Void from(This2.N that) 
read method 
This2.N maxTo() 
read method 
This2.N minTo() 
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.Assert.CodeNotReachable.#from(builder:(
  mut This2.S.SBuilder b=This2.Assert.CodeNotReachable.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b0=This2.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This2.Collections.MutListAny that, This2.N from, This2.N maxTo, This2.N minTo) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.N from, This2.N maxTo, This2.N minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This2.Collections.MutListAny #that() 
mut method 
This2.N #from() 
mut method 
This2.N #maxTo() 
mut method 
This2.N #minTo() }
IteratorValFill:{
read method 
read This2.Collections.MutListAny that() 
read method 
This2.N from() 
mut method 
Void from(This2.N that) 
read method 
This2.N maxTo() 
read method 
This2.N minTo() 
read method 
This2.Bool isFill() This2.Bool.true()
read method 
This2.S filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b0=This2.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This2.Collections.MutListAny that, This2.N from, This2.N maxTo, This2.N minTo, This2.S filled) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.N from, This2.N maxTo, This2.N minTo, This2.S filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This2.Collections.MutListAny #that() 
mut method 
This2.N #from() 
mut method 
This2.N #maxTo() 
mut method 
This2.N #minTo() 
mut method 
This2.S #filled() }
IteratorVar:{
read method 
read This2.Collections.MutListAny that() 
read method 
This2.N from() 
mut method 
Void from(This2.N that) 
read method 
This2.N maxTo() 
read method 
This2.N minTo() 
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.Assert.CodeNotReachable.#from(builder:(
  mut This2.S.SBuilder b=This2.Assert.CodeNotReachable.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.N.#from(builder:(
    mut This2.S.SBuilder b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.N.#from(builder:(
      mut This2.S.SBuilder b0=This2.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=this.from().#left(that:this.minTo())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.from().#left(that:this.that().size())
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This2.Collections.MutListAny that, This2.N from, This2.N maxTo, This2.N minTo) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny that, This2.N from, This2.N maxTo, This2.N minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This2.Collections.MutListAny #that() 
mut method 
This2.N #from() 
mut method 
This2.N #maxTo() 
mut method 
This2.N #minTo() 
mut method 
Void inner(This2.S that) (
  mut This2.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
read method 
This1.Bool contains(This1.S that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This1.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This1.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This1.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.S that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:this.size().#right(that:that.size()))
method 
This1.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This1.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This1.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This1.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This1.Bool.true()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This1.S that) this.contains(that:that)
read method 
This1.Bool #bangequal(read This0 that) (this.#equalequal(that:that)).#bang()
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This1.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This1.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This1.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This1.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This1.Collections.IterationFailure catched21 (return This1.Bool.false())
    
    (
      Void unused23=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.N indexOfLeft(This1.S val) (
  Void unused=(
    This1.N size=this.size()
    This1.N pos=This1.N.#from(builder:(
      mut This1.S.SBuilder b=This1.N.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%9_0__40_0 varpos=This0.Varpos_$%9_0__40_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This1.N.#from(builder:(
            mut This1.S.SBuilder b0=This1.N.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b1=This1.N.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This1.N result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.N indexOfRight(This1.S val) (
  Void unused=(
    This1.N pos=this.size().#less(that:This1.N.#from(builder:(
      mut This1.S.SBuilder b=This1.N.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%10_0__41_0 varpos0=This0.Varpos0_$%10_0__41_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos0.#inner().#leftequal(that:This1.N.#from(builder:(
          mut This1.S.SBuilder b0=This1.N.#builder()
          Void unused5=b0.#0()
          b0
          )))
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched4 void
          
          (return This1.N.#from(builder:(
            mut This1.S.SBuilder b1=This1.N.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b2=This1.N.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This1.N result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1.S val) (
  Void unused=(
    This1.N pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=pos.#left(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.S val) (
  Void unused=(
    This1.N pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=pos.#left(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.S val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1.S val) (
  Void unused=(
    This1.N pos=This1.N.#from(builder:(
      mut This1.S.SBuilder b=This1.N.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%11_0__42_0 varpos1=This0.Varpos1_$%11_0__42_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b0=This1.N.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.S val) (
  Void unused=(
    This1.N pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=pos.#left(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.S val) (
  Void unused=(
    This1.N pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=pos.#left(that:This1.N.#from(builder:(
        mut This1.S.SBuilder b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varpos_$%9_0__40_0:/*@private*/{
class method 
mut This0 #mutK(This2.N inner) 
class method 
mut This0 #apply(This2.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.N that) 
mut method 
This2.N #inner() 
read method 
This2.N inner() }
Varpos0_$%10_0__41_0:/*@private*/{
class method 
mut This0 #mutK(This2.N inner) 
class method 
mut This0 #apply(This2.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.N that) 
mut method 
This2.N #inner() 
read method 
This2.N inner() }
Varpos1_$%11_0__42_0:/*@private*/{
class method 
mut This0 #mutK(This2.N inner) 
class method 
mut This0 #apply(This2.N inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.N that) 
mut method 
This2.N #inner() 
read method 
This2.N inner() }}
CTest:{
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()}}