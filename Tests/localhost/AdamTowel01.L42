 {/*--layer-- Bool Size S -     and first layer of unsafe operators
*/
PrW: {/*private wrapper
@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator
*/
class method 
Library #leftrightleft(Library that) use This0 check #main(_1_Library:that) error void}
Alu: {/*@plugin
L42.is/connected/withAlu
*/}
ExitCode: {
class method 
Library normal()  {/*@exitStatus
0
*/}
class method 
Library failure()  {/*@exitStatus
42000
*/}}
Bool: {implements This1.Concept.Equals, This1.Concept.ToS, This1.Concept.Classable
class method 
mut This0 #mutK(Library _binaryRepr) 
class method 
This0 #apply(Library _binaryRepr) This0.#mutK(_binaryRepr:_binaryRepr)
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
read method 
This0 clone() This0.#apply(_binaryRepr:this._binaryRepr())
method 
Library #binaryRepr() this._binaryRepr()
class method 
This0 #from(Library binaryRepr) This0.#apply(_binaryRepr:binaryRepr)
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine read method 
This1.S toS() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      )
    Void unused1=return This1.S.#from(builder:(
      mut This1.S.SBuilder b0=This1.S.#builder()
      Void unused7=b0.#f()
      Void unused8=b0.#a()
      Void unused9=b0.#l()
      Void unused10=b0.#s()
      Void unused11=b0.#e()
      b0
      ))
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #checkTrue() exception Void use This1.Alu check ifFalseBoolDo(that:this._binaryRepr()) exception void
class method 
This0 true() This0.#from(binaryRepr:use This1.Alu check constTrue() error void)
class method 
This0 false() This0.#from(binaryRepr:use This1.Alu check constFalse() error void)
method 
This0 #and(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that)
      )
    Void unused1=return this
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #or(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return this)
      )
    Void unused1=return that
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #bang() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This0.false())
      )
    Void unused1=return This0.true()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that.clone())
      )
    Void unused1=return that.clone().#bang()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 fromS(read This1.Concept.ToS that) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=that.toS().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.true())
        )
      )
    Void unused1=(
      This1.Bool cond0=that.toS().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused8=b0.#f()
        Void unused9=b0.#a()
        Void unused10=b0.#l()
        Void unused11=b0.#s()
        Void unused12=b0.#e()
        b0
        )))
      (
        Void unused13=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This0.false())
        )
      )
    Void unused2=error This0.parseError(that:that.toS())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#B()
  Void unused0=b.#o()
  Void unused1=b.#o()
  Void unused2=b.#l()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))}
Size: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) (
  This1.S s=that.toS()
  This1.Size._private(_binaryRepr:use This1.Alu check stringToInt32(that:s.#binaryRepr()) error This0.parseError(that:s))
  )
class method 
mut This0 #from(Library binaryRepr) This1.Size._private(_binaryRepr:binaryRepr)
read method 
Library #binaryRepr() this._binaryRepr()
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This1.Size #from(This1.S.SBuilder builder) This1.Size._private(_binaryRepr:use This1.Alu check stringToInt32(that:builder.#binaryRepr()) error This0.parseError(that:This1.S.#from(builder:builder)))
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#i()
  Void unused1=b.#z()
  Void unused2=b.#e()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))
refine read method 
This1.S toS() This1.S.#from(binaryRepr:use This1.Alu check int32ToString(that:this.#binaryRepr()) error void)
method 
This1.Size #plus(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check sumInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This1.Size #less(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check subInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This1.Size #times(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check mulInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
method 
This1.Size #divide(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check divInt32(n1:this.#binaryRepr(), n2:that.#binaryRepr()) error void)
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32EqualDo(n1:this.#binaryRepr(), n2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This1.Size that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GrtDo(n1:that.#binaryRepr(), n2:this.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #rightequal(This1.Size that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GEqDo(n1:that.#binaryRepr(), n2:this.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
mut This0.Iterator vals() This0.Iterator.#apply(start:this, end:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
method 
mut This0.Iterator vals(This1.Size upTo) This0.Iterator.#apply(start:this, end:upTo)
class method 
This0 #0() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#0()
  b
  ))
class method 
This0 #1() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  b
  ))
class method 
This0 #2() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  b
  ))
class method 
This0 #3() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  b
  ))
class method 
This0 #4() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  b
  ))
class method 
This0 #5() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  b
  ))
class method 
This0 #6() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  b
  ))
class method 
This0 #7() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#7()
  b
  ))
class method 
This0 #8() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#8()
  b
  ))
class method 
This0 #9() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#9()
  b
  ))
class method 
This0 #10() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #11() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #12() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #13() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #14() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #15() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #16() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #17() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #18() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #19() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #20() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #21() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #22() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #23() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #24() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #25() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #26() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #27() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #28() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #29() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #30() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #31() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #32() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #33() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #34() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #35() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #36() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #37() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #38() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #39() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #40() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #41() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #42() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #43() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #44() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #45() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #46() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #47() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #48() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #49() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #50() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #51() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #52() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #53() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #54() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #55() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #56() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #57() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #58() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #59() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #60() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #61() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #62() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #63() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#3()
  b
  ))
Iterator: {
class method 
mut This0 #mutK(This1 start, This1 end) 
class method 
mut This0 #apply(This1 start, This1 end) This0.#mutK(start:start, end:end)
mut method 
Void start(This1 that) 
mut method 
This1 #start() 
read method 
This1 start() 
mut method 
This1 #end() 
read method 
This1 end() 
mut method 
Void #next() exception Void ((
  This2.Bool cond=(
    This1 opNorm=this.end()
    This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).#right(that:opNorm)
    ).#or(that:(
    This1 opNorm0=this.start()
    this.end().#right(that:opNorm0)
    ))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched3 exception void
    
    (this.start(that:this.start().#plus(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This1 #inner() this.start().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
S: {implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
read method 
This0 clone() (//#####Implemented
This0._private(_binaryRepr:this._binaryRepr()))
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
mut This0 #from(Library binaryRepr) This0._private(_binaryRepr:binaryRepr)
read method 
Library #binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() this.clone()
refine read method 
This1.Bool equals(read Any that) (//#####operators
(
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This1.S #plusplus(This1.S that) This1.S.#from(binaryRepr:use This1.Alu check stringConcat(s1:this.#binaryRepr(), s2:that.#binaryRepr()) error void)
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.#binaryRepr(), s2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This0 that) this.withoutAll(val:that)
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:this.size().#right(that:that.size()))
method 
This1.Bool #rightrightequal(This0 that) this.contains(that:that)
method 
This1.Bool #right(This0 that) (//#####other sequence like methods
this.contains(that:that))
method 
This1.Size indexOfLeft(This1.S val) this.indexOfLeft(val:val, start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This1.Size indexOfLeft(This1.S val, This1.Size start) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    This1.Size current=start
    mut This0.Varcurrent_$_2 varcurrent_$_=This0.Varcurrent_$_2.#apply(inner:current)
    Void unused0=(
      Void unused2=loop (
        Void unused3=(
          This1.Size opNorm=varcurrent_$_.#inner()
          this.size().#right(that:opNorm)
          ).#checkTrue()
        (
          Void unused4=(
            This1.Bool cond=this.subStrEq(that:val, start:varcurrent_$_.#inner())
            (
              Void unused5=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return varcurrent_$_.#inner())
              )
            )
          varcurrent_$_.inner(that:varcurrent_$_.#inner().#plus(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b=This1.Size.#builder()
            Void unused6=b.#1()
            b
            ))))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.Size.#from(builder:(
      mut This1.S.SBuilder b0=This1.Size.#builder()
      Void unused7=b0.#less()
      Void unused8=b0.#1()
      b0
      ))
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Size indexOfRight(This0 val) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    This1.Size current=this.size().#less(that:val.size())
    mut This0.Varcurrent0_$_3 varcurrent0_$_=This0.Varcurrent0_$_3.#apply(inner:current)
    Void unused0=(
      Void unused2=loop (
        Void unused3=varcurrent0_$_.#inner().#rightequal(that:This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused4=b.#0()
          b
          ))).#checkTrue()
        (
          Void unused5=(
            This1.Bool cond=this.#apply(start:varcurrent0_$_.#inner()).beginsWith(that:val)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return varcurrent0_$_.#inner())
              )
            )
          varcurrent0_$_.inner(that:varcurrent0_$_.#inner().#less(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b0=This1.Size.#builder()
            Void unused7=b0.#1()
            b0
            ))))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.Size.#from(builder:(
      mut This1.S.SBuilder b1=This1.Size.#builder()
      Void unused8=b1.#less()
      Void unused9=b1.#1()
      b1
      ))
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This0 val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0 val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0 val) this.replace(that:val, into:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 val(This1.Size that) this.#apply(that:that)
method 
This0 left() this.val(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 right() (//#################Withs
this.val(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 with(This1.Size that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that.#plus(that:val.size()))))
method 
This0 withLeft(This0 that) (//TODO: should be with(left)??
this.with(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that))
method 
This0 withRight(This0 that) (//insertion
this.with(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.Size that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that)))
method 
This0 withAlsoLeft(This0 that) this.withAlso(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This1.Size index) this.#apply(end:index).#plusplus(that:this.#apply(start:index.#plus(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 without(This1.Size index, This1.Size skipNum) this.#apply(end:index).#plusplus(that:this.#apply(start:skipNum.#plus(that:index)))
method 
This0 withoutLeft() this.without(index:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.Bool contains(This1.S that) (
  Void unused=(
    This1.Size res=(//Debug(S"S.contains(this:"[this]" that:"[that]")="[res]"")
this.indexOfLeft(val:that))
    Void unused0=(
      This1.Bool cond=res.#rightequal(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Bool.true())
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S #apply(This1.Size start, This1.Size end) This1.S.#from(binaryRepr:use This1.Alu check stringSubstring(that:this.#binaryRepr(), start:start.#binaryRepr(), end:end.#binaryRepr()) error void)
method 
This1.S #apply(This1.Size that) this.#apply(start:that, end:that.#plus(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.S #apply(This1.Size start) this.#apply(start:start, end:this.size())
method 
This1.S #apply(This1.Size end) this.#apply(start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), end:end)
method 
This1.Size size() (//##### string special
This1.Size.#from(binaryRepr:use This1.Alu check stringSize(that:this.#binaryRepr()) error void))
method 
This1.Bool subStrEq(This1.S that, This1.Size start) this.#apply(start:start, end:that.size().#plus(that:start)).#equalequal(that:(//optimizing this one may help many methods
that))
method 
This1.Bool beginsWith(This1.S that) this.subStrEq(that:that, start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.S aSCIILowerCase() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#q()
  Void unused0=b.#w()
  Void unused1=b.#e()
  Void unused2=b.#r()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#u()
  Void unused6=b.#i()
  Void unused7=b.#o()
  Void unused8=b.#p()
  Void unused9=b.#a()
  Void unused10=b.#s()
  Void unused11=b.#d()
  Void unused12=b.#f()
  Void unused13=b.#g()
  Void unused14=b.#h()
  Void unused15=b.#j()
  Void unused16=b.#k()
  Void unused17=b.#l()
  Void unused18=b.#z()
  Void unused19=b.#x()
  Void unused20=b.#c()
  Void unused21=b.#v()
  Void unused22=b.#b()
  Void unused23=b.#n()
  Void unused24=b.#m()
  b
  ))
class method 
This1.S aSCIIUpperCase() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#Q()
  Void unused0=b.#W()
  Void unused1=b.#E()
  Void unused2=b.#R()
  Void unused3=b.#T()
  Void unused4=b.#Y()
  Void unused5=b.#U()
  Void unused6=b.#I()
  Void unused7=b.#O()
  Void unused8=b.#P()
  Void unused9=b.#A()
  Void unused10=b.#S()
  Void unused11=b.#D()
  Void unused12=b.#F()
  Void unused13=b.#G()
  Void unused14=b.#H()
  Void unused15=b.#J()
  Void unused16=b.#K()
  Void unused17=b.#L()
  Void unused18=b.#Z()
  Void unused19=b.#X()
  Void unused20=b.#C()
  Void unused21=b.#V()
  Void unused22=b.#B()
  Void unused23=b.#N()
  Void unused24=b.#M()
  b
  ))
method 
This1.Bool isASCIILowerCase(This1.Size that) This1.S.aSCIILowerCase().contains(that:this.#apply(that:that))
method 
This1.Bool isASCIIUpperCase(This1.Size that) (/*Debug(S"S.isASCIIUpperCase(this:"[this]" that:"[that]")")
*/This1.S.aSCIIUpperCase().contains(that:this.#apply(that:that)))
class method 
This1.S doubleQuote() (
  This1.S rcv=This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#dQuote()
    Void unused0=b.#newline()
    b
    ))
  rcv.#apply(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b0=This1.Size.#builder()
    Void unused1=b0.#0()
    b0
    )))
  )
class method 
This1.S nl() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#newline()
  b
  ))
method 
This1.S replace(This1.S that, This1.S into) This1.S.#from(binaryRepr:use This1.Alu check stringReplace(that:this.#binaryRepr(), src:that.#binaryRepr(), dest:into.#binaryRepr()) error void)
method 
This1.S as42MultilineString() This1.S.doubleQuote().#plusplus(that:This1.S.nl().#plusplus(that:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#sQuote()
  b
  )).#plusplus(that:this.replace(that:This1.S.nl(), into:This1.S.nl().#plusplus(that:This1.S.#from(builder:(
  mut This1.S.SBuilder b0=This1.S.#builder()
  Void unused0=b0.#sQuote()
  b0
  )))).#plusplus(that:This1.S.nl().#plusplus(that:This1.S.doubleQuote())))))
method 
This0.Continue #from(This1.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This0.SConcat #seqBuilder() This1.S.SConcat.#apply(old:this, accumulator:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
class method 
This0 #from(This1.S.SBuilder builder) This0._private(_binaryRepr:builder.#binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
Varcurrent_$_2: {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Varcurrent0_$_3: {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Continue: {
class method 
mut This0 #mutK(This2.S that) 
class method 
This0 #apply(This2.S that) This0.#mutK(that:that)
mut method 
This2.S #that() 
read method 
This2.S that() 
method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
method 
This1 #from(This2.S.SBuilder builder) this.that().#plusplus(that:This2.S.#from(builder:builder))}
SConcat: {
class method 
mut This0 #mutK(This2.S old, This2.S accumulator) 
class method 
mut This0 #apply(This2.S old, This2.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This2.S #old() 
read method 
This2.S old() 
mut method 
Void accumulator(This2.S that) 
mut method 
This2.S #accumulator() 
read method 
This2.S accumulator() 
mut method 
Void #add(read This2.Concept.ToS that) this.accumulator(that:this.accumulator().#plusplus(that:that.toS()))
mut method 
Void #add(read This2.Concept.ToS that, This2.Concept.ToS sep) (
  This2.S newAcc=that.toS()
  mut This0.VarnewAcc_$_4 varnewAcc_$_=This0.VarnewAcc_$_4.#apply(inner:newAcc)
  Void unused=(
    This2.Bool cond=this.accumulator().#equalequal(that:This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      b
      ))).#bang()
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (varnewAcc_$_.inner(that:this.accumulator().#plusplus(that:sep.toS().#plusplus(that:varnewAcc_$_.#inner()))))
      )
    )
  this.accumulator(that:varnewAcc_$_.#inner())
  )
VarnewAcc_$_4: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }}
SBuilder: {
class method 
mut This0 #mutK(Library _binaryRepr) 
class method 
mut This0 _private(Library _binaryRepr) This0.#mutK(_binaryRepr:_binaryRepr)
mut method 
Void _binaryRepr(Library that) 
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
read method 
Library #binaryRepr() this._binaryRepr()
mut method 
Void acc(Library that) this._binaryRepr(that:use This2.Alu check stringConcat(s1:this.#binaryRepr(), s2:that) error void)
class method 
mut This0 empty() (//NUMBERS:
This0._private(_binaryRepr:use This2.Alu check constStringEmpty() error void))
mut method 
Void #0() this.acc(that: {/*@stringU
0
*/})
mut method 
Void #1() this.acc(that: {/*@stringU
1
*/})
mut method 
Void #2() this.acc(that: {/*@stringU
2
*/})
mut method 
Void #3() this.acc(that: {/*@stringU
3
*/})
mut method 
Void #4() this.acc(that: {/*@stringU
4
*/})
mut method 
Void #5() this.acc(that: {/*@stringU
5
*/})
mut method 
Void #6() this.acc(that: {/*@stringU
6
*/})
mut method 
Void #7() this.acc(that: {/*@stringU
7
*/})
mut method 
Void #8() this.acc(that: {/*@stringU
8
*/})
mut method 
Void #9() (//LOWERCASE:
this.acc(that: {/*@stringU
9
*/}))
mut method 
Void #q() this.acc(that: {/*@stringU
q
*/})
mut method 
Void #w() this.acc(that: {/*@stringU
w
*/})
mut method 
Void #e() this.acc(that: {/*@stringU
e
*/})
mut method 
Void #r() this.acc(that: {/*@stringU
r
*/})
mut method 
Void #t() this.acc(that: {/*@stringU
t
*/})
mut method 
Void #y() this.acc(that: {/*@stringU
y
*/})
mut method 
Void #u() this.acc(that: {/*@stringU
u
*/})
mut method 
Void #i() this.acc(that: {/*@stringU
i
*/})
mut method 
Void #o() this.acc(that: {/*@stringU
o
*/})
mut method 
Void #p() this.acc(that: {/*@stringU
p
*/})
mut method 
Void #a() this.acc(that: {/*@stringU
a
*/})
mut method 
Void #s() this.acc(that: {/*@stringU
s
*/})
mut method 
Void #d() this.acc(that: {/*@stringU
d
*/})
mut method 
Void #f() this.acc(that: {/*@stringU
f
*/})
mut method 
Void #g() this.acc(that: {/*@stringU
g
*/})
mut method 
Void #h() this.acc(that: {/*@stringU
h
*/})
mut method 
Void #j() this.acc(that: {/*@stringU
j
*/})
mut method 
Void #k() this.acc(that: {/*@stringU
k
*/})
mut method 
Void #l() this.acc(that: {/*@stringU
l
*/})
mut method 
Void #z() this.acc(that: {/*@stringU
z
*/})
mut method 
Void #x() this.acc(that: {/*@stringU
x
*/})
mut method 
Void #c() this.acc(that: {/*@stringU
c
*/})
mut method 
Void #v() this.acc(that: {/*@stringU
v
*/})
mut method 
Void #b() this.acc(that: {/*@stringU
b
*/})
mut method 
Void #n() this.acc(that: {/*@stringU
n
*/})
mut method 
Void #m() (//UPPERCASE:
this.acc(that: {/*@stringU
m
*/}))
mut method 
Void #Q() this.acc(that: {/*@stringU
Q
*/})
mut method 
Void #W() this.acc(that: {/*@stringU
W
*/})
mut method 
Void #E() this.acc(that: {/*@stringU
E
*/})
mut method 
Void #R() this.acc(that: {/*@stringU
R
*/})
mut method 
Void #T() this.acc(that: {/*@stringU
T
*/})
mut method 
Void #Y() this.acc(that: {/*@stringU
Y
*/})
mut method 
Void #U() this.acc(that: {/*@stringU
U
*/})
mut method 
Void #I() this.acc(that: {/*@stringU
I
*/})
mut method 
Void #O() this.acc(that: {/*@stringU
O
*/})
mut method 
Void #P() this.acc(that: {/*@stringU
P
*/})
mut method 
Void #A() this.acc(that: {/*@stringU
A
*/})
mut method 
Void #S() this.acc(that: {/*@stringU
S
*/})
mut method 
Void #D() this.acc(that: {/*@stringU
D
*/})
mut method 
Void #F() this.acc(that: {/*@stringU
F
*/})
mut method 
Void #G() this.acc(that: {/*@stringU
G
*/})
mut method 
Void #H() this.acc(that: {/*@stringU
H
*/})
mut method 
Void #J() this.acc(that: {/*@stringU
J
*/})
mut method 
Void #K() this.acc(that: {/*@stringU
K
*/})
mut method 
Void #L() this.acc(that: {/*@stringU
L
*/})
mut method 
Void #Z() this.acc(that: {/*@stringU
Z
*/})
mut method 
Void #X() this.acc(that: {/*@stringU
X
*/})
mut method 
Void #C() this.acc(that: {/*@stringU
C
*/})
mut method 
Void #V() this.acc(that: {/*@stringU
V
*/})
mut method 
Void #B() this.acc(that: {/*@stringU
B
*/})
mut method 
Void #N() this.acc(that: {/*@stringU
N
*/})
mut method 
Void #M() this.acc(that: {/*@stringU
M
*/})
mut method 
Void #%() this.acc(that: {/*@stringU
%
*/})
mut method 
Void #$() (//OPERATORS:
this.acc(that: {/*@stringU
$
*/}))
mut method 
Void #left() this.acc(that: {/*@stringU
<
*/})
mut method 
Void #right() this.acc(that: {/*@stringU
>
*/})
mut method 
Void #bang() this.acc(that: {/*@stringU
!
*/})
mut method 
Void #tilde() this.acc(that: {/*@stringU
~
*/})
mut method 
Void #plus() this.acc(that: {/*@stringU
+
*/})
mut method 
Void #times() this.acc(that: {/*@stringU
*
*/})
mut method 
Void #divide() this.acc(that: {/*@stringU
/
*/})
mut method 
Void #less() this.acc(that: {/*@stringU
-
*/})
mut method 
Void #and() this.acc(that: {/*@stringU
&
*/})
mut method 
Void #or() (//SYMBOLS- Parenthesis:
this.acc(that: {/*@stringU
|
*/}))
mut method 
Void #oRound() this.acc(that: {/*@stringU
(
*/})
mut method 
Void #cRound() this.acc(that: {/*@stringU
)
*/})
mut method 
Void #oSquare() this.acc(that: {/*@stringU
[
*/})
mut method 
Void #cSquare() this.acc(that: {/*@stringU
]
*/})
mut method 
Void #oCurly() this.acc(that: {/*@stringU
{
*/})
mut method 
Void #cCurly() this.acc(that: {/*@stringU
}
*/})
mut method 
Void #dQuote() this.acc(that: {/*@stringU
"
*/})
mut method 
Void #sQuote() this.acc(that: {/*@stringU
'
*/})
mut method 
Void #hQuote() (//SYMBOLS- Unused operators:
this.acc(that: {/*@stringU
`
*/}))
mut method 
Void #equal() this.acc(that: {/*@stringU
=
*/})
mut method 
Void #qMark() this.acc(that: {/*@stringU
?
*/})
mut method 
Void #hat() this.acc(that: {/*@stringU
^
*/})
mut method 
Void #comma() this.acc(that: {/*@stringU
,
*/})
mut method 
Void #semicolon() this.acc(that: {/*@stringU
;
*/})
mut method 
Void #colon() this.acc(that: {/*@stringU
:
*/})
mut method 
Void #dot() this.acc(that: {/*@stringU
.
*/})
mut method 
Void #underscore() this.acc(that: {/*@stringU
_
*/})
mut method 
Void #hash() this.acc(that: {/*@stringU
#
*/})
mut method 
Void #at() this.acc(that: {/*@stringU
\u0040
*/})
mut method 
Void #backslash() this.acc(that: {/*@stringU
\u005C
*/})
mut method 
Void #space() this.acc(that: {/*@stringU
 
*/})
mut method 
Void #newline() this.acc(that: {/*@stringU


*/})}}
UnsafeRefactor: {
Compose: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Compose
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*Compose(that,and)*/}
class method 
Library compose(Library left, Library right) (
  Library res=use This0 check #compose(_1_ast%ExpCore$ClassB:left, _2_ast%ExpCore$ClassB:right) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Compose\u000amethod name: compose(left,right)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Compose.#compose(_1_ast%ExpCore$ClassB,_2_ast%ExpCore$ClassB)\u000a
*/})
  res
  )
class method 
Library #apply(Library that, Library and) This0.compose(left:that, right:and)}
RenameClass: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Rename
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*renameClass(Library that,S nameSrc,S nameDest)*/}
class method 
Library renameClass(Library that, This2.S nameSrc, This2.S nameDest) (
  Library res=use This0 check #renameClass(_1_ast%ExpCore$ClassB:that, _2_java%lang%String:nameSrc.#binaryRepr(), _3_java%lang%String:nameDest.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Rename\u000amethod name: renameClass(that,nameSrc,nameDest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Rename.#renameClass(_1_ast%ExpCore$ClassB,_2_java%lang%String,_3_java%lang%String)\u000a
*/})
  res
  )}
Redirect: {/*@plugin  toFix 
@pluginPart is.L42.connected.withSafeOperators.refactor.Redirect
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Void #pluginUnresponsive(Library binaryRepr) error  {/*redirect(Library that,S src,class Any dest)*/}
class method 
Library redirect(Library that, This2.S src, class Any dest) (
  Library res=use This0 check #redirect(_1_ast%ExpCore$ClassB:that, _2_java%lang%String:src.#binaryRepr(), _3_ast%Ast$Path:dest) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: toFix\u000aplugin part: is.L42.connected.withSafeOperators.refactor.Redirect\u000amethod name: redirect(that,src,dest)\u000ajava method: is.L42.connected.withSafeOperators.refactor.Redirect.#redirect(_1_ast%ExpCore$ClassB,_2_java%lang%String,_3_ast%Ast$Path)\u000a
*/})
  res
  )}
This$er: {
class method 
Library #leftrightleft(Library that) This1.RenameClass.renameClass(that:that, nameSrc:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  Void unused3=b.#$()
  b
  )), nameDest:This2.S.#from(builder:(
  mut This2.S.SBuilder b0=This2.S.#builder()
  Void unused4=b0.#T()
  Void unused5=b0.#h()
  Void unused6=b0.#i()
  Void unused7=b0.#s()
  b0
  )))}
MiniDataTrait: {
class method 
Library #apply()  {implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This2.MiniData.classObjToS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) 
refine read method 
This3.S toS() }}
MiniData: {
class method 
This2.S classObjToS() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#O()
  Void unused1=b.#F()
  Void unused2=b.#I()
  Void unused3=b.#X()
  b
  ))
class method 
Library thisLib()  {interface implements This3.Concept.Base, This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
refine read method 
This3.S toS() 
refine read method 
class This3.Concept.Classable class() 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) 
refine read method 
This3.Bool equals(read Any that) }
class method 
Library #leftrightleft(Library that) This1.This$er.#leftrightleft(that:This1.Compose.compose(left:This1.MiniDataTrait.#apply(), right:that))}}
Range: {
class method 
mut This0.Iterator #apply(This1.Size that) This0.Iterator.#apply(start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), end:that)
class method 
mut This0.Iterator #apply(This1.Size start, This1.Size stop) This0.Iterator.#apply(start:start, end:stop)
class method 
mut This0.Iterator #apply(This1.Size start) This0.Iterator.#apply(start:start, end:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
class method 
class This1.Size #default##apply(Void that) This1.Size
class method 
class This1.Size #default##apply(Void stop) This1.Size
class method 
class This1.Size #default##apply(Void start) This1.Size
Iterator: {
class method 
mut This0 #mutK(This2.Size start, This2.Size end) 
class method 
mut This0 #apply(This2.Size start, This2.Size end) This0.#mutK(start:start, end:end)
mut method 
Void start(This2.Size that) 
mut method 
This2.Size #start() 
read method 
This2.Size start() 
mut method 
This2.Size #end() 
read method 
This2.Size end() 
mut method 
Void #next() exception Void ((
  This2.Bool cond=(
    This2.Size opNorm=this.end()
    This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).#right(that:opNorm)
    ).#or(that:(
    This2.Size opNorm0=this.start()
    this.end().#right(that:opNorm0)
    ))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched3 exception void
    
    (this.start(that:this.start().#plus(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This2.Size #inner() this.start().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
Debug: {
class method 
Void #apply(read This1.Concept.ToS that) use This1.Alu check stringDebug(that:that.toS().#binaryRepr()) void
class method 
Void #apply(Library lib) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#t()
  Void unused0=b.#o()
  Void unused1=b.#space()
  Void unused2=b.#f()
  Void unused3=b.#i()
  Void unused4=b.#x()
  Void unused5=b.#space()
  Void unused6=b.#i()
  Void unused7=b.#n()
  Void unused8=b.#space()
  Void unused9=b.#A()
  Void unused10=b.#d()
  Void unused11=b.#a()
  Void unused12=b.#m()
  Void unused13=b.#T()
  Void unused14=b.#o()
  Void unused15=b.#w()
  Void unused16=b.#e()
  Void unused17=b.#l()
  Void unused18=b.#2()
  b
  ))
class method 
Void #apply(This1.Concept.ToS fileName, This1.Concept.ToS content) use This1.Alu check fileDebug(fileName:fileName.toS().#binaryRepr(), content:content.toS().#binaryRepr()) void
class method 
This1.S readFile(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check fileReadDebug(fileName:fileName.toS().#binaryRepr()) error (
  This1.S.Continue rcv0=(
    This1.S rcv1=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv1.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv1.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv0.#from(builder:(
    mut This1.S.SBuilder b1=rcv0.#builder()
    b1
    ))
  ))
class method 
This1.S localToAbsolute(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check localToAbsolute(fileName:fileName.toS().#binaryRepr()) error (
  This1.S.Continue rcv2=(
    This1.S rcv3=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv3.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv3.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv2.#from(builder:(
    mut This1.S.SBuilder b1=rcv2.#builder()
    b1
    ))
  ))
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected, This1.S message) (
  This1.S sExpected=expected.toS()
  This1.S given=that.toS()
  (
    This1.Bool cond=sExpected.#equalequal(that:given).#bang()
    (
      Void unused=cond.#checkTrue()
      
      catch exception Void catched1 (/* message = given
*/This1.Debug.#apply(that:(
        This1.S.Continue rcv10=(
          This1.S rcv11=(
            This1.S.Continue rcv12=(
              This1.S rcv13=This1.S.#from(builder:(
                mut This1.S.SBuilder b=This1.S.#builder()
                Void unused0=b.#oSquare()
                Void unused1=b.#P()
                Void unused2=b.#A()
                Void unused3=b.#S()
                Void unused4=b.#S()
                Void unused5=b.#cSquare()
                Void unused6=b.#space()
                b
                ))
              rcv13.#from(seqBuilder:(
                mut This1.S.SConcat b0=rcv13.#seqBuilder()
                Void unused7=b0.#add(that:message)
                b0
                ))
              )
            rcv12.#from(builder:(
              mut This1.S.SBuilder b1=rcv12.#builder()
              Void unused8=b1.#colon()
              Void unused9=b1.#space()
              b1
              ))
            )
          rcv11.#from(seqBuilder:(
            mut This1.S.SConcat b2=rcv11.#seqBuilder()
            Void unused10=b2.#add(that:given)
            b2
            ))
          )
        rcv10.#from(builder:(
          mut This1.S.SBuilder b3=rcv10.#builder()
          b3
          ))
        )))
      
      (This1.Debug.#apply(that:(
        This1.S.Continue rcv4=(
          This1.S rcv5=(
            This1.S.Continue rcv6=(
              This1.S rcv7=(
                This1.S.Continue rcv8=(
                  This1.S rcv9=This1.S.#from(builder:(
                    mut This1.S.SBuilder b4=This1.S.#builder()
                    Void unused11=b4.#oSquare()
                    Void unused12=b4.#F()
                    Void unused13=b4.#A()
                    Void unused14=b4.#I()
                    Void unused15=b4.#L()
                    Void unused16=b4.#cSquare()
                    Void unused17=b4.#space()
                    b4
                    ))
                  rcv9.#from(seqBuilder:(
                    mut This1.S.SConcat b5=rcv9.#seqBuilder()
                    Void unused18=b5.#add(that:message)
                    b5
                    ))
                  )
                rcv8.#from(builder:(
                  mut This1.S.SBuilder b6=rcv8.#builder()
                  Void unused19=b6.#colon()
                  Void unused20=b6.#space()
                  b6
                  ))
                )
              rcv7.#from(seqBuilder:(
                mut This1.S.SConcat b7=rcv7.#seqBuilder()
                Void unused21=b7.#add(that:given)
                b7
                ))
              )
            rcv6.#from(builder:(
              mut This1.S.SBuilder b8=rcv6.#builder()
              Void unused22=b8.#space()
              Void unused23=b8.#bang()
              Void unused24=b8.#equal()
              Void unused25=b8.#space()
              b8
              ))
            )
          rcv5.#from(seqBuilder:(
            mut This1.S.SConcat b9=rcv5.#seqBuilder()
            Void unused26=b9.#add(that:expected)
            b9
            ))
          )
        rcv4.#from(builder:(
          mut This1.S.SBuilder b10=rcv4.#builder()
          b10
          ))
        )))
      )
    )
  )
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected) This1.Debug.test(that:that, expected:expected, message:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
Test: {/* Builder to look like a list and run a series of debug.test calls.
 Does not actually make an instance or store the list of calls anywhere :-)
*/
class method 
class This0 #seqBuilder() This0
class method 
Void #from(class This0 seqBuilder) void
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected) This2.Debug.test(that:that, expected:expected, message:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected, This2.S message) This2.Debug.test(that:that, expected:expected, message:message)}}
Count: {
class method 
mut This0 #mutK(This1.Size counter) 
class method 
mut This0 #apply(This1.Size counter) This0.#mutK(counter:counter)
mut method 
Void counter(This1.Size that) 
mut method 
This1.Size #counter() 
read method 
This1.Size counter() 
class method 
mut This0 #seqBuilder() This0.#apply(counter:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.Size #from(mut This0 seqBuilder) seqBuilder.counter()
mut method 
Void #add(This1.Bool that) (
  Void unused=that.#checkTrue()
  
  catch exception Void catched void
  
  (this.counter(that:this.counter().#plus(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused0=b.#1()
    b
    )))))
  )}
Concept: {
ToS: {interface 
read method 
This2.S toS() }
Classable: {interface 
read method 
class This0 class() 
class method 
This2.S readableName() 
class method 
This2.Bool is(class Any subtype) }
Base: {interface implements This1.ToS, This1.Classable, This1.Equals
refine read method 
This2.S toS() 
refine read method 
class This1.Classable class() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool equals(read Any that) }
Wrapper: {interface 
read method 
Any inner() }
ClassWrapper: {interface 
read method 
class Any inner() }
MutWrapper: {interface 
read method 
read Any inner() 
mut method 
mut Any #inner() }
Equals: {interface 
read method 
This2.Bool equals(read Any that) }
Comparable: {interface 
read method 
This2.Bool greater(read Any that) }
Boollable: {interface 
read method 
Void #checkTrue() exception Void }
Decorator: {interface }
Contains: {interface 
read method 
This2.Bool contains(read Any that) }
Parsable: {interface }
Invariant: {interface 
read method /* can throw error or return false, as more opportune
*/This2.Bool invariant() }
RandomAccess: {interface 
read method 
read Any get(This2.Size that) 
mut method 
mut Any #get(This2.Size that) }
Sizable: {interface 
read method 
This2.Size size() 
read method 
This2.Bool isEmpty() }
Iterator: {interface 
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
Void #close() }}
GetMyName: {
class method 
This1.S #apply(class Any that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#less()
  Void unused0=b.#less()
  Void unused1=b.#N()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#S()
  Void unused6=b.#t()
  Void unused7=b.#i()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#T()
  Void unused11=b.#o()
  Void unused12=b.#F()
  Void unused13=b.#i()
  Void unused14=b.#x()
  Void unused15=b.#less()
  Void unused16=b.#less()
  b
  ))}
Message: {interface implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
This1.S kind() 
read method 
This1.S text() 
read method 
This0.Opt responseOf() 
refine read method 
class This0 class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
Opt: {
class method 
mut This0 #mutK(This0.TOpt that) 
class method 
This0 #new(This0.TOpt that) This0.#mutK(that:that)
mut method 
This0.TOpt #that() 
read method 
This0.TOpt that() 
method 
This1 #get() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    Void unused0=(
      This0.TOpt cell=this.that()
      (
        This0.TOf cell0=(
          Void unused2=return cell
          
          catch return This0.TOf casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This2.Bool.true()
          void
          )
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This1 that) This0.#new(that:This0.TOf.#apply(that:that))
TOpt: {interface 
method 
This2 get() }
TEmpty: {implements This1.TOpt
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
This2 get() error (//error Guard.Operation"TEmpty.get() Value not present in Optional"
This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#U()
  Void unused0=b.#n()
  Void unused1=b.#s()
  Void unused2=b.#a()
  Void unused3=b.#t()
  Void unused4=b.#i()
  Void unused5=b.#s()
  Void unused6=b.#f()
  Void unused7=b.#a()
  Void unused8=b.#c()
  Void unused9=b.#t()
  Void unused10=b.#o()
  Void unused11=b.#r()
  Void unused12=b.#y()
  Void unused13=b.#E()
  Void unused14=b.#r()
  Void unused15=b.#r()
  Void unused16=b.#o()
  Void unused17=b.#r()
  Void unused18=b.#T()
  Void unused19=b.#o()
  Void unused20=b.#A()
  Void unused21=b.#v()
  Void unused22=b.#o()
  Void unused23=b.#i()
  Void unused24=b.#d()
  Void unused25=b.#C()
  Void unused26=b.#y()
  Void unused27=b.#c()
  Void unused28=b.#l()
  Void unused29=b.#e()
  Void unused30=b.#comma()
  Void unused31=b.#space()
  Void unused32=b.#r()
  Void unused33=b.#e()
  Void unused34=b.#p()
  Void unused35=b.#l()
  Void unused36=b.#a()
  Void unused37=b.#c()
  Void unused38=b.#e()
  Void unused39=b.#space()
  Void unused40=b.#i()
  Void unused41=b.#n()
  Void unused42=b.#space()
  Void unused43=b.#A()
  Void unused44=b.#d()
  Void unused45=b.#a()
  Void unused46=b.#m()
  Void unused47=b.#2()
  b
  )))}
TOf: {implements This1.TOpt
class method 
mut This0 #mutK(This2 that) 
class method 
This0 #apply(This2 that) This0.#mutK(that:that)
mut method 
This2 #that() 
read method 
This2 that() 
refine method 
This2 get() this.that()}}
EqualMessages: {
class method 
This2.Bool #apply(read This2.Message that, read This2.Message other) (
  Void unused=(/*assuming they have the same class
*/
    This2.Bool res=that.class().kind().#equalequal(that:other.class().kind()).#and(that:that.text().#equalequal(that:other.text())).#and(that:that.responseOf().isPresent().#equalequal(that:other.responseOf().isPresent()))
    Void unused0=(
      This2.Bool cond=res.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(//i know both are present
(
      This2.Bool cond0=that.responseOf().isPresent().#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return This2.Bool.true())
        )
      ))
    Void unused2=return (// this calls  equals in message,
//that check for equal class and then call EqualMessages
that.responseOf().#get().equals(that:other.responseOf().#get()))
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
$: {
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
class method 
Library #leftrightleft(Library that) This2.UnsafeRefactor.Compose.compose(left:that, right:This0.messageTrait())
class method 
Library messageTrait()  {implements This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This3.Message.Opt responseOf() this.cause()
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$_5 varres_$_=This0.Varres_$_5.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This3.Message class() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$_5: {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
Guard: {/* exception as Guard bureocracy, error as Guard detection
-is a check guarenteed to be performed, program logic can rely on this being enforced.
  as exceptions, Guards objects are a way to report/guard complex operations,
 where checking the shape of the input can be unconvenient.
as errors, they represent precondition violations.
Turning an exception Guard into an error Guard
 is equivalent of declaring that such misuse should not happen (blame on the caller),
 still, there is no bug in the program at this stage. Is legit for the caller to try and be blamed
*/interface implements This1.Message, This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
refine class method 
This1.S kind() 
refine read method 
This1.S text() 
refine read method 
This1.Message.Opt responseOf() 
refine read method 
class This1.Message class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
Operation: {implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$_22 varres_$_=This0.Varres_$_22.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$_22: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Parameter: {implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$_23 varres_$_=This0.Varres_$_23.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$_23: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Precondition: {implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$_24 varres_$_=This0.Varres_$_24.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$_24: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
ParseFail: {interface implements This1, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine read method 
This2.S text() 
refine read method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) }}
System: {
Guard: {/* implements Outer.Guard soon (remove "interface" for a bad translation bug: This1_System_Guard is not abstract and does not override abstract method MtoS()
*/interface implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine read method 
This2.S text() 
refine read method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
PluginFailure: {implements This1, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This3.Message.Opt responseOf() this.cause()
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote())))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$_27 varres_$_=This0.Varres_$_27.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        
        varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          ))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This3.Message class() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$_27: {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
X: {
class method 
This0.AssertionFail #from(This1.S.SBuilder builder) This0.AssertionFail.#from(builder:builder)
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
NotImplementedYet: {implements This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$_29 varres_$_=This0.Varres_$_29.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$_29: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
AssertionFail: {implements This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$_31 varres_$_=This0.Varres_$_31.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$_31: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Collections: {
class method 
Library vector(class Any of) (
  Void unused=(
    Void unused0=return this.eq(that:of)
    
    catch error Library catched return this.minimal(that:of)
    
    catch error This1.S catched return this.minimal(that:of)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library minimal(class Any that) (
  Library tmp=This1.UnsafeRefactor.Redirect.redirect(that:This0.VectorTrait.#apply(), src:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )), dest:that)
  This1.UnsafeRefactor.Redirect.redirect(that:tmp, src:This1.S.#from(builder:(
    mut This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )), dest:This0.MutListAny)
  )
class method 
Library eq(class Any that) (
  Library lib=This1.UnsafeRefactor.Compose.compose(left:This0.VectorTrait.#apply(), right:This0.CodeEq.#apply())
  Library tmp=This1.UnsafeRefactor.Redirect.redirect(that:lib, src:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )), dest:that)
  This1.UnsafeRefactor.Redirect.redirect(that:tmp, src:This1.S.#from(builder:(
    mut This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )), dest:This0.MutListAny)
  )
IterationFailure: {implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine read method 
This2.S text() this._text()
refine read method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$_33 varres_$_=This0.Varres_$_33.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$_33: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
CollectionErrors: {
class method 
Any negBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv15=(
    This2.Guard.Parameter rcv16=(
      This2.Guard.Parameter.Continue rcv17=(
        This2.Guard.Parameter rcv18=This2.Guard.Parameter.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#n()
          Void unused17=b.#e()
          Void unused18=b.#g()
          Void unused19=b.#a()
          Void unused20=b.#t()
          Void unused21=b.#i()
          Void unused22=b.#v()
          Void unused23=b.#e()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#n()
          Void unused27=b.#d()
          Void unused28=b.#e()
          Void unused29=b.#x()
          Void unused30=b.#space()
          Void unused31=b.#p()
          Void unused32=b.#r()
          Void unused33=b.#o()
          Void unused34=b.#v()
          Void unused35=b.#i()
          Void unused36=b.#d()
          Void unused37=b.#e()
          Void unused38=b.#d()
          Void unused39=b.#semicolon()
          Void unused40=b.#space()
          Void unused41=b.#m()
          Void unused42=b.#a()
          Void unused43=b.#x()
          Void unused44=b.#space()
          Void unused45=b.#i()
          Void unused46=b.#s()
          Void unused47=b.#space()
          b
          ))
        rcv18.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv18.#seqBuilder()
          Void unused48=b0.#add(that:listSize)
          b0
          ))
        )
      rcv17.#from(builder:(
        mut This2.S.SBuilder b1=rcv17.#builder()
        Void unused49=b1.#space()
        Void unused50=b1.#p()
        Void unused51=b1.#r()
        Void unused52=b1.#o()
        Void unused53=b1.#p()
        Void unused54=b1.#o()
        Void unused55=b1.#s()
        Void unused56=b1.#e()
        Void unused57=b1.#d()
        Void unused58=b1.#space()
        Void unused59=b1.#i()
        Void unused60=b1.#s()
        Void unused61=b1.#space()
        b1
        ))
      )
    rcv16.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv16.#seqBuilder()
      Void unused62=b2.#add(that:that)
      b2
      ))
    )
  rcv15.#from(builder:(
    mut This2.S.SBuilder b3=rcv15.#builder()
    b3
    ))
  )
class method 
Any outBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv19=(
    This2.Guard.Parameter rcv20=(
      This2.Guard.Parameter.Continue rcv21=(
        This2.Guard.Parameter rcv22=This2.Guard.Parameter.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#m()
          Void unused17=b.#a()
          Void unused18=b.#x()
          Void unused19=b.#space()
          Void unused20=b.#i()
          Void unused21=b.#s()
          Void unused22=b.#space()
          b
          ))
        rcv22.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv22.#seqBuilder()
          Void unused23=b0.#add(that:listSize)
          b0
          ))
        )
      rcv21.#from(builder:(
        mut This2.S.SBuilder b1=rcv21.#builder()
        Void unused24=b1.#space()
        Void unused25=b1.#p()
        Void unused26=b1.#r()
        Void unused27=b1.#o()
        Void unused28=b1.#p()
        Void unused29=b1.#o()
        Void unused30=b1.#s()
        Void unused31=b1.#e()
        Void unused32=b1.#d()
        Void unused33=b1.#space()
        Void unused34=b1.#i()
        Void unused35=b1.#s()
        Void unused36=b1.#space()
        b1
        ))
      )
    rcv20.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv20.#seqBuilder()
      Void unused37=b2.#add(that:that)
      b2
      ))
    )
  rcv19.#from(builder:(
    mut This2.S.SBuilder b3=rcv19.#builder()
    b3
    ))
  )
class method 
Any cast() This2.Guard.Operation.#from(builder:(
  mut This2.S.SBuilder b=This2.Guard.Operation.#builder()
  Void unused=b.#c()
  Void unused0=b.#a()
  Void unused1=b.#s()
  Void unused2=b.#t()
  Void unused3=b.#space()
  Void unused4=b.#f()
  Void unused5=b.#a()
  Void unused6=b.#i()
  Void unused7=b.#l()
  Void unused8=b.#u()
  Void unused9=b.#r()
  Void unused10=b.#e()
  b
  ))
class method 
Any iterationTermination(This2.Size from, This2.Size minTo, This2.Size size) (
  This1.IterationFailure.Continue rcv23=(
    This1.IterationFailure rcv24=(
      This1.IterationFailure.Continue rcv25=(
        This1.IterationFailure rcv26=This1.IterationFailure.#from(builder:(
          mut This2.S.SBuilder b=This1.IterationFailure.#builder()
          Void unused=b.#U()
          Void unused0=b.#n()
          Void unused1=b.#e()
          Void unused2=b.#x()
          Void unused3=b.#p()
          Void unused4=b.#e()
          Void unused5=b.#c()
          Void unused6=b.#t()
          Void unused7=b.#e()
          Void unused8=b.#d()
          Void unused9=b.#space()
          Void unused10=b.#t()
          Void unused11=b.#e()
          Void unused12=b.#r()
          Void unused13=b.#m()
          Void unused14=b.#i()
          Void unused15=b.#n()
          Void unused16=b.#a()
          Void unused17=b.#t()
          Void unused18=b.#i()
          Void unused19=b.#o()
          Void unused20=b.#n()
          Void unused21=b.#space()
          Void unused22=b.#o()
          Void unused23=b.#f()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#t()
          Void unused27=b.#e()
          Void unused28=b.#r()
          Void unused29=b.#a()
          Void unused30=b.#t()
          Void unused31=b.#i()
          Void unused32=b.#o()
          Void unused33=b.#n()
          Void unused34=b.#comma()
          Void unused35=b.#space()
          Void unused36=b.#r()
          Void unused37=b.#e()
          Void unused38=b.#a()
          Void unused39=b.#c()
          Void unused40=b.#h()
          Void unused41=b.#e()
          Void unused42=b.#d()
          Void unused43=b.#space()
          b
          ))
        rcv26.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv26.#seqBuilder()
          Void unused44=b0.#add(that:from)
          b0
          ))
        )
      rcv25.#from(builder:(
        mut This2.S.SBuilder b1=rcv25.#builder()
        Void unused45=b1.#space()
        Void unused46=b1.#i()
        Void unused47=b1.#n()
        Void unused48=b1.#s()
        Void unused49=b1.#t()
        Void unused50=b1.#e()
        Void unused51=b1.#a()
        Void unused52=b1.#d()
        Void unused53=b1.#space()
        Void unused54=b1.#o()
        Void unused55=b1.#f()
        Void unused56=b1.#space()
        b1
        ))
      )
    rcv24.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv24.#seqBuilder()
      Void unused57=b2.#add(that:minTo)
      b2
      ))
    )
  rcv23.#from(builder:(
    mut This2.S.SBuilder b3=rcv23.#builder()
    b3
    ))
  )
class method 
Void checkBound(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This1.CollectionErrors.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#rightequal(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This1.CollectionErrors.outBound(that:that, listSize:listSize))
      )
    )
  )
class method 
Void checkBoundAdd(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This1.CollectionErrors.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#right(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This1.CollectionErrors.outBound(that:that, listSize:listSize))
      )
    )
  )}
MutListAny: {implements This2.Concept.ToS
class method 
mut This0 #mutK(This0.Cell head, This2.Size size) 
class method 
mut This0 #apply(This0.Cell head, This2.Size size) This0.#mutK(head:head, size:size)
mut method 
Void head(This0.Cell that) 
mut method 
This0.Cell #head() 
read method 
This0.Cell head() 
mut method 
Void size(This2.Size that) 
mut method 
This2.Size #size() 
read method 
This2.Size size() 
class method 
mut This0 empty() This0.#apply(head:This0.CellEnd.#apply(), size:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Any val(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head().get(that:that)
  )
mut method 
Void #apply(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head(that:this.head().set(that:that, val:val, add:This2.Bool.false()))
  )
mut method 
Void add(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  Void unused0=this.head(that:this.head().set(that:that, val:val, add:This2.Bool.true()))
  this.size(that:this.size().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
mut method 
Void remove(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  Void unused0=this.head(that:this.head().remove(that:that))
  this.size(that:this.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
method 
This0 without(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().remove(that:that), size:this.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 withAlso(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.true()), size:this.size().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 with(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.false()), size:this.size().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
refine read method 
This2.S toS() (
  Void unused=(
    This2.S ret=This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused1=b.#oSquare()
      b
      ))
    This2.S sep=This2.S.#from(builder:(
      mut This2.S.SBuilder b0=This2.S.#builder()
      b0
      ))
    This0.Cell c=this.head()
    mut This0.Varret_$_6 varret_$_=This0.Varret_$_6.#apply(inner:ret)
    mut This0.Varsep_$_7 varsep_$_=This0.Varsep_$_7.#apply(inner:sep)
    mut This0.Varc_$_8 varc_$_=This0.Varc_$_8.#apply(inner:c)
    Void unused0=loop (/*Debug(S"MutListAny.toS() loop pass with ret='"[ret]"', sep='"[sep]"'")
*/
      Void unused2=(
        This0.CellNext c0=(
          Void unused3=return varc_$_.#inner()
          
          catch return This0.CellNext casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched2 return varret_$_.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused4=b1.#cSquare()
          b1
          )))
        
        (
          Void unused5=(
            Void unused6=varret_$_.inner(that:varret_$_.#inner().#plusplus(that:varsep_$_.#inner()))
            Void unused7=(
              Any v=c0.val()
              (
                This2.Concept.ToS v2=(
                  Void unused8=return v
                  
                  catch return This2.Concept.ToS casted2 casted2
                  
                  catch return Any casted2 exception void
                  
                  error  {/*@stringU
CastT-Should be unreachable code
*/}
                  )
                
                catch exception Void catched6 (
                  Void v1=(
                    Void unused9=return v
                    
                    catch return Void casted1 casted1
                    
                    catch return Any casted1 exception void
                    
                    error  {/*@stringU
CastT-Should be unreachable code
*/}
                    )
                  
                  catch exception Void catched8 (
                    Library v0=(
                      Void unused10=return v
                      
                      catch return Library casted0 casted0
                      
                      catch return Any casted0 exception void
                      
                      error  {/*@stringU
CastT-Should be unreachable code
*/}
                      )
                    
                    catch exception Void catched10 varret_$_.inner(that:varret_$_.#inner().#plusplus(that:This2.S.#from(builder:(
                      mut This2.S.SBuilder b2=This2.S.#builder()
                      Void unused11=b2.#qMark()
                      b2
                      ))))
                    
                    (
                      Void unused12=varret_$_.inner(that:varret_$_.#inner().#plusplus(that:This2.S.#from(builder:(
                        mut This2.S.SBuilder b3=This2.S.#builder()
                        Void unused13=b3.#oCurly()
                        Void unused14=b3.#dot()
                        Void unused15=b3.#dot()
                        Void unused16=b3.#cCurly()
                        b3
                        ))))
                      void
                      )
                    )
                  
                  (
                    Void unused17=varret_$_.inner(that:varret_$_.#inner().#plusplus(that:This2.S.#from(builder:(
                      mut This2.S.SBuilder b4=This2.S.#builder()
                      Void unused18=b4.#v()
                      Void unused19=b4.#o()
                      Void unused20=b4.#i()
                      Void unused21=b4.#d()
                      b4
                      ))))
                    void
                    )
                  )
                
                (
                  Void unused22=varret_$_.inner(that:varret_$_.#inner().#plusplus(that:v2.toS()))
                  void
                  )
                )
              )
            varc_$_.inner(that:c0.next())
            )
          void
          )
        )
      varsep_$_.inner(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b5=This2.S.#builder()
        Void unused23=b5.#semicolon()
        Void unused24=b5.#space()
        b5
        )))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varc_$_8: {
class method 
mut This0 #mutK(This1.Cell inner) 
class method 
mut This0 #apply(This1.Cell inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1.Cell that) 
mut method 
This1.Cell #inner() 
read method 
This1.Cell inner() }
Varsep_$_7: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Varret_$_6: {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Cell: {interface 
method 
Any get(This3.Size that) 
method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) 
method 
This1.Cell remove(This3.Size that) }
CellNext: {implements This1.Cell
class method 
mut This0 #mutK(Any val, This1.Cell next) 
class method 
This0 #apply(Any val, This1.Cell next) This0.#mutK(val:val, next:next)
mut method 
Any #val() 
read method 
Any val() 
mut method 
This1.Cell #next() 
read method 
This1.Cell next() 
refine method 
Any get(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.val())
        )
      )
    Void unused1=return this.next().get(that:that.#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused3=b.#0()
        b
        ))).#bang()
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().set(that:that.#less(that:This3.Size.#from(builder:(
          mut This3.S.SBuilder b0=This3.Size.#builder()
          Void unused5=b0.#1()
          b0
          ))), val:val, add:add)))
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched3 void
      
      (return This0.#apply(val:val, next:this))
      )
    Void unused2=return This0.#apply(val:val, next:this.next())
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().remove(that:that.#less(that:This3.Size.#from(builder:(
          mut This3.S.SBuilder b0=This3.Size.#builder()
          Void unused4=b0.#1()
          b0
          ))))))
        )
      )
    Void unused1=return this.next()
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
CellEnd: {implements This1.Cell
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
Any get(This3.Size that) error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#g()
  Void unused8=b.#e()
  Void unused9=b.#t()
  b
  ))
refine method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (error This3.X.#from(builder:(
          mut This3.S.SBuilder b=This3.X.#builder()
          Void unused4=b.#C()
          Void unused5=b.#e()
          Void unused6=b.#l()
          Void unused7=b.#l()
          Void unused8=b.#E()
          Void unused9=b.#n()
          Void unused10=b.#d()
          Void unused11=b.#dot()
          Void unused12=b.#s()
          Void unused13=b.#e()
          Void unused14=b.#t()
          Void unused15=b.#1()
          b
          )))
        )
      )
    Void unused1=(
      This3.Bool cond0=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused16=b0.#0()
        b0
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This1.CellNext.#apply(val:val, next:this))
        )
      )
    Void unused2=error This3.X.#from(builder:(
      mut This3.S.SBuilder b1=This3.X.#builder()
      Void unused18=b1.#C()
      Void unused19=b1.#e()
      Void unused20=b1.#l()
      Void unused21=b1.#l()
      Void unused22=b1.#E()
      Void unused23=b1.#n()
      Void unused24=b1.#d()
      Void unused25=b1.#dot()
      Void unused26=b1.#s()
      Void unused27=b1.#e()
      Void unused28=b1.#t()
      Void unused29=b1.#2()
      b1
      ))
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.Size that) error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#r()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#o()
  Void unused11=b.#v()
  Void unused12=b.#e()
  b
  ))}}
VectorTrait: {
class method 
Library #apply()  {implements This3.Concept.ToS, This3.Concept.Classable
mut method 
mut This0.MutListT #inner() 
read method 
read This0.MutListT inner() 
class method 
mut This0 #apply(fwd mut This0.MutListT inner) 
class method 
This0 #immK(This0.MutListT inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This0.MutListT.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This0.Elem that) this.add(right:that)
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This0.Elem val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
read method 
This0.Elem left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This0.Elem right() (//#################MUT METHODS
This0.Cast.#apply(that:(
  read This0.MutListT rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This0.Elem val) (
  mut This0.MutListT rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This0.Elem that) (
  mut This0.MutListT rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This0.Elem that) (
  mut This0.MutListT rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This0.Elem val) this.#inner().add(that:that, val:val)
mut method 
Void add(This0.Elem right) (
  mut This0.MutListT rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This0.Elem left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This0.Elem that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This0.Elem that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This0.Elem that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This0.Elem that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0.Elem that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This0.Elem filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This0.Elem filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
MutListT: {implements This4.Concept.ToS
read method 
This4.Size size() 
class method 
mut This0 empty() 
read method 
Any val(This4.Size that) 
mut method 
Void #apply(This4.Size that, Any val) 
mut method 
Void add(This4.Size that, Any val) 
mut method 
Void remove(This4.Size that) 
method 
This0 without(This4.Size that) 
method 
This0 withAlso(This4.Size that, Any val) 
method 
This0 with(This4.Size that, Any val) 
refine read method 
This4.S toS() }
Elem: {}
Cast: {
class method 
This1.Elem #apply(Any that) (
  Void unused=(
    Void unused0=(
      This1.Elem that0=(
        Void unused2=return that
        
        catch return This1.Elem casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This3.CollectionErrors.cast()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This2.MutListT that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This2.Elem filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Elem #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This1.MutListT #_that() 
read method 
read This1.MutListT _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This1.MutListT that() this._that()
class method 
lent This0 #apply(read This1.MutListT _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This1.MutListT #_that() 
read method 
read This1.MutListT _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
This1.Elem #filled() 
read method 
This1.Elem filled() 
read method 
read This1.MutListT that() this._that()
class method 
lent This0 #apply(read This1.MutListT _that, This4.Size from, This4.Size maxTo, This4.Size minTo, This1.Elem filled) 
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo, This1.Elem filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This1.MutListT #that() 
read method 
read This1.MutListT that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(This1.Elem that) (
  mut This1.MutListT rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}}
CodeEq: {
class method 
Library #apply()  {implements This3.Concept.Equals
read method 
This3.Size size() 
read method 
This0.Elem val(This3.Size that) 
class method 
mut This0 #seqBuilder() 
class method 
mut This0 #from(mut This0 seqBuilder) 
mut method 
Void #add(This0.Elem that) 
read method 
lent This0.IteratorVal vals() 
read method 
This3.Bool contains(This0.Elem that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=e.#inner().equals(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This0.Elem that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This3.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This3.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This0.Elem that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This2.IterationFailure catched13 (return This3.Bool.false())
    
    (
      Void unused15=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This0.Elem val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$_9 varpos_$_=This0.Varpos_$_9.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos_$_.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos_$_.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos_$_.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos_$_.inner(that:varpos_$_.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$_10 varpos0_$_=This0.Varpos0_$_10.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0_$_.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0_$_.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0_$_.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0_$_.inner(that:varpos0_$_.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) 
method 
This0 withoutLeft(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0.Elem val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This3.Bool cond=e.#inner().equals(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) 
mut method 
Void removeAll(This0.Elem val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$_11 varpos1_$_=This0.Varpos1_$_11.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1_$_.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1_$_.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1_$_.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1_$_.inner(that:varpos1_$_.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varpos_$_9: {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0_$_10: {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1_$_11: {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Elem: {implements This4.Concept.Equals
refine read method 
This4.Bool equals(read Any that) }
IteratorVal: {
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
This1.Elem #inner() 
read method 
Void #close() }}}}
Strings: {implements This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
mut method 
mut This1.Collections.MutListAny #inner() 
read method 
read This1.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This1.Collections.MutListAny inner) 
class method 
This0 #immK(This1.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This1.Collections.MutListAny.empty())
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.S left() This0.Cast.#apply(that:this.inner().val(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.S right() (//#################MUT METHODS
This0.Cast.#apply(that:(
  read This1.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This1.Size that, This1.S val) (
  mut This1.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.S that) (
  mut This1.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.S that) (
  mut This1.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This1.Size that, This1.S val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.S right) (
  mut This1.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.S left) this.#inner().add(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void removeLeft() this.remove(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.S that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This1.Size that, This1.S val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.S that) this.with(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.S that) (//insertion
this.with(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.Size that, This1.S val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.S that) this.withAlso(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.S that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 withoutLeft() this.without(index:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This1.Size from, This1.Size maxTo, This1.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.Size minTo) this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.Size from, This1.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This1.Size from, This1.Size maxTo, This1.Size minTo, This1.S filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Size minTo, This1.S filled) this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Size from, This1.Size to, This1.S filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.S filled) this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This1.Size from, This1.Size maxTo, This1.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.Size minTo) this.#vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.Size from, This1.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b1=This1.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This1.S toS() this.inner().toS()
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
read method 
This1.Size size() this.inner().size()
read method 
This1.S val(This1.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.S that) this.add(right:that)
read method 
lent This0.IteratorVal vals() this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
This1.Bool contains(This1.S that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This1.Bool cond=e.#inner().equals(that:that)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This1.Bool.true())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.S that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=that.contains(that:e.#inner()).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=loop (
        Void unused1=v.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=v.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=(that.#right(that:v.#inner()))
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:v.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This1.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=loop (
          Void unused3=e.#next()
          
          catch exception Void catched0 (
            Void unused4=(
              Void unused5=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          ((
            This1.Bool cond=(this.#right(that:e.#inner())).#bang()
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched4 void
              
              (return This1.Bool.false())
              )
            ))
          )
        
        catch exception Void catched5 void
        
        void
        )
      )
    Void unused1=return This1.Bool.true()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This1.S that) this.contains(that:that)
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        lent This0.IteratorVal e2=that.vals()
        (
          Void unused1=loop (
            Void unused2=e1.#next()
            
            catch exception Void catched1 (
              Void unused3=(
                Void unused6=e2.#next()
                
                catch exception Void catched2 void
                
                void
                )
              Void unused4=(
                Void unused7=e1.#checkEnd()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused5=(
                Void unused8=e2.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              exception void
              )
            
            (
              Void unused9=e2.#next()
              
              catch exception Void catched6 (
                Void unused10=(
                  Void unused12=e1.#checkEnd()
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                Void unused11=(
                  Void unused13=e2.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This1.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                (
                  Void unused14=cond.#checkTrue()
                  
                  catch exception Void catched11 void
                  
                  (return This1.Bool.false())
                  )
                ))
              )
            )
          
          catch exception Void catched12 void
          
          void
          )
        )
      )
    
    catch error This1.Collections.IterationFailure catched13 (return This1.Bool.false())
    
    (
      Void unused15=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size indexOfLeft(This1.S val) (
  Void unused=(
    This1.Size size=this.size()
    This1.Size pos=This1.Size.#from(builder:(
      mut This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$_37 varpos_$_=This0.Varpos_$_37.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos_$_.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos_$_.#inner())
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos_$_.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This1.Size.#from(builder:(
            mut This1.S.SBuilder b0=This1.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos_$_.inner(that:varpos_$_.#inner().#plus(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b1=This1.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size indexOfRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$_38 varpos0_$_=This0.Varpos0_$_38.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos0_$_.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0_$_.#inner())
          )
        )
      Void unused3=(
        This1.Bool cond0=(
          This1.Size opNorm=varpos0_$_.#inner()
          This1.Size.#from(builder:(
            mut This1.S.SBuilder b0=This1.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This1.Size.#from(builder:(
            mut This1.S.SBuilder b1=This1.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0_$_.inner(that:varpos0_$_.#inner().#less(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b2=This1.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 without(This1.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.S val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        ((
          This1.Bool cond=e.#inner().equals(that:val).#bang()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched4 void
            
            ((
              Void unused5=b.#add(that:e.#inner())
              void
              ))
            )
          ))
        )
      
      catch exception Void catched6 void
      
      void
      )
    )
  b
  ))
mut method 
Void remove(This1.Size that) this.#inner().remove(that:that)
mut method 
Void removeAll(This1.S val) (
  Void unused=(
    This1.Size pos=This1.Size.#from(builder:(
      mut This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$_39 varpos1_$_=This0.Varpos1_$_39.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos1_$_.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1_$_.#inner()))
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos1_$_.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1_$_.inner(that:varpos1_$_.#inner().#plus(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b0=This1.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Cast: {
class method 
This2.S #apply(Any that) (
  Void unused=(
    Void unused0=(
      This2.S that0=(
        Void unused2=return that
        
        catch return This2.S casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This2.Collections.CollectionErrors.cast()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() 
read method 
This3.S filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.S #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This2.Collections.MutListAny #_that() 
read method 
read This2.Collections.MutListAny _that() 
mut method 
Void from(This2.Size that) 
mut method 
This2.Size #from() 
read method 
This2.Size from() 
mut method 
This2.Size #maxTo() 
read method 
This2.Size maxTo() 
mut method 
This2.Size #minTo() 
read method 
This2.Size minTo() 
mut method 
This2.S #filled() 
read method 
This2.S filled() 
read method 
read This2.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This2.Collections.MutListAny _that, This2.Size from, This2.Size maxTo, This2.Size minTo, This2.S filled) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo, This2.S filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This2.Bool isFill() This2.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This2.Collections.MutListAny #that() 
read method 
read This2.Collections.MutListAny that() 
mut method 
Void from(This2.Size that) 
mut method 
This2.Size #from() 
read method 
This2.Size from() 
mut method 
This2.Size #maxTo() 
read method 
This2.Size maxTo() 
mut method 
This2.Size #minTo() 
read method 
This2.Size minTo() 
class method 
mut This0 #apply(mut This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) 
mut method 
Void inner(This2.S that) (
  mut This2.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.X.#from(builder:(
  mut This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
Varpos_$_37: {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Varpos0_$_38: {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Varpos1_$_39: {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This2.Collections.MutListAny #_that() 
read method 
read This2.Collections.MutListAny _that() 
mut method 
Void from(This2.Size that) 
mut method 
This2.Size #from() 
read method 
This2.Size from() 
mut method 
This2.Size #maxTo() 
read method 
This2.Size maxTo() 
mut method 
This2.Size #minTo() 
read method 
This2.Size minTo() 
read method 
read This2.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This2.Collections.MutListAny _that, This2.Size from, This2.Size maxTo, This2.Size minTo) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.X.#from(builder:(
  mut This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}
StringSplit: {
class method /*will be fixed in adam2
*/This1.Strings splitOn(This1.S that, This1.S chars) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#t()
  Void unused1=b.#r()
  Void unused2=b.#i()
  Void unused3=b.#n()
  Void unused4=b.#g()
  Void unused5=b.#S()
  Void unused6=b.#p()
  Void unused7=b.#l()
  Void unused8=b.#i()
  Void unused9=b.#t()
  Void unused10=b.#dot()
  Void unused11=b.#U()
  Void unused12=b.#n()
  Void unused13=b.#s()
  Void unused14=b.#a()
  Void unused15=b.#t()
  Void unused16=b.#i()
  Void unused17=b.#s()
  Void unused18=b.#f()
  Void unused19=b.#a()
  Void unused20=b.#c()
  Void unused21=b.#t()
  Void unused22=b.#o()
  Void unused23=b.#r()
  Void unused24=b.#y()
  Void unused25=b.#E()
  Void unused26=b.#r()
  Void unused27=b.#r()
  Void unused28=b.#o()
  Void unused29=b.#r()
  Void unused30=b.#T()
  Void unused31=b.#o()
  Void unused32=b.#A()
  Void unused33=b.#v()
  Void unused34=b.#o()
  Void unused35=b.#i()
  Void unused36=b.#d()
  Void unused37=b.#C()
  Void unused38=b.#y()
  Void unused39=b.#c()
  Void unused40=b.#l()
  Void unused41=b.#e()
  Void unused42=b.#comma()
  Void unused43=b.#space()
  Void unused44=b.#r()
  Void unused45=b.#e()
  Void unused46=b.#p()
  Void unused47=b.#l()
  Void unused48=b.#a()
  Void unused49=b.#c()
  Void unused50=b.#e()
  Void unused51=b.#space()
  Void unused52=b.#i()
  Void unused53=b.#n()
  Void unused54=b.#space()
  Void unused55=b.#A()
  Void unused56=b.#d()
  Void unused57=b.#a()
  Void unused58=b.#m()
  Void unused59=b.#T()
  Void unused60=b.#2()
  b
  ))}
CTest: {
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()}
Path: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromDocInternalizedS(This1.S that) (
  Void unused=(
    This1.S internal=(
      Void unused2=(
        Void unused3=(
          This1.Bool cond=that.#apply(that:that.size().#less(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b=This1.Size.#builder()
            Void unused5=b.#1()
            b
            )))).#equalequal(that:This1.S.nl()).#bang()
          (
            Void unused6=cond.#checkTrue()
            
            catch exception Void catched1 void
            
            (return that)
            )
          )
        Void unused4=return that.#apply(end:that.size().#less(that:This1.Size.#from(builder:(
          mut This1.S.SBuilder b0=This1.Size.#builder()
          Void unused7=b0.#1()
          b0
          ))))
        void
        )
      
      catch return This1.S result0 result0
      
      error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
      )
    Void unused0=(
      This1.Bool cond0=internal.#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b1=This1.S.#builder()
        Void unused8=b1.#at()
        Void unused9=b1.#dot()
        b1
        )))
      (
        Void unused10=cond0.#checkTrue()
        
        catch exception Void catched7 void
        
        (return This0.fromS(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b2=This1.S.#builder()
          Void unused11=b2.#T()
          Void unused12=b2.#h()
          Void unused13=b2.#i()
          Void unused14=b2.#s()
          b2
          ))))
        )
      )
    Void unused1=return This0.fromS(that:internal.#apply(start:This1.Size.#from(builder:(
      mut This1.S.SBuilder b3=This1.Size.#builder()
      Void unused15=b3.#2()
      b3
      ))))
    
    catch error This1.Message x error This0.parseError(that:that, cause:x)
    
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 fromS(This1.Concept.ToS that) This0.#from(binaryRepr:that.toS().#binaryRepr())
class method 
This0 #from(This1.S.SBuilder builder) This0.#from(binaryRepr:builder.#binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0 #from(Library binaryRepr) (
  Void unused=use This1.SafeOperators check ifInvalidDo(path:binaryRepr) error This0.parseError(that:This1.S.#from(binaryRepr:binaryRepr))
  This0._private(_binaryRepr:binaryRepr)
  )
class method 
Any parseError(This1.S that) (
  This1.S.Continue rcv33=(
    This1.S rcv34=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#P()
      Void unused0=b.#a()
      Void unused1=b.#t()
      Void unused2=b.#h()
      Void unused3=b.#1()
      Void unused4=b.#dot()
      Void unused5=b.#oSquare()
      b
      ))
    rcv34.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv34.#seqBuilder()
      Void unused6=b0.#add(that:that)
      b0
      ))
    )
  rcv33.#from(builder:(
    mut This1.S.SBuilder b1=rcv33.#builder()
    Void unused7=b1.#cSquare()
    Void unused8=b1.#space()
    Void unused9=b1.#U()
    Void unused10=b1.#n()
    Void unused11=b1.#s()
    Void unused12=b1.#a()
    Void unused13=b1.#t()
    Void unused14=b1.#i()
    Void unused15=b1.#s()
    Void unused16=b1.#f()
    Void unused17=b1.#a()
    Void unused18=b1.#c()
    Void unused19=b1.#t()
    Void unused20=b1.#o()
    Void unused21=b1.#r()
    Void unused22=b1.#y()
    Void unused23=b1.#E()
    Void unused24=b1.#r()
    Void unused25=b1.#r()
    Void unused26=b1.#o()
    Void unused27=b1.#r()
    Void unused28=b1.#T()
    Void unused29=b1.#o()
    Void unused30=b1.#A()
    Void unused31=b1.#v()
    Void unused32=b1.#o()
    Void unused33=b1.#i()
    Void unused34=b1.#d()
    Void unused35=b1.#C()
    Void unused36=b1.#y()
    Void unused37=b1.#c()
    Void unused38=b1.#l()
    Void unused39=b1.#e()
    Void unused40=b1.#comma()
    Void unused41=b1.#space()
    Void unused42=b1.#r()
    Void unused43=b1.#e()
    Void unused44=b1.#p()
    Void unused45=b1.#l()
    Void unused46=b1.#a()
    Void unused47=b1.#c()
    Void unused48=b1.#e()
    Void unused49=b1.#space()
    Void unused50=b1.#i()
    Void unused51=b1.#n()
    Void unused52=b1.#space()
    Void unused53=b1.#A()
    Void unused54=b1.#d()
    Void unused55=b1.#a()
    Void unused56=b1.#m()
    Void unused57=b1.#T()
    Void unused58=b1.#2()
    b1
    ))
  )
class method 
Any parseError(This1.S that, This1.Message cause) (
  This1.S.Continue rcv35=(
    This1.S rcv36=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#P()
      Void unused0=b.#a()
      Void unused1=b.#t()
      Void unused2=b.#h()
      Void unused3=b.#2()
      Void unused4=b.#dot()
      Void unused5=b.#oSquare()
      b
      ))
    rcv36.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv36.#seqBuilder()
      Void unused6=b0.#add(that:that)
      b0
      ))
    )
  rcv35.#from(builder:(
    mut This1.S.SBuilder b1=rcv35.#builder()
    Void unused7=b1.#cSquare()
    Void unused8=b1.#space()
    Void unused9=b1.#U()
    Void unused10=b1.#n()
    Void unused11=b1.#s()
    Void unused12=b1.#a()
    Void unused13=b1.#t()
    Void unused14=b1.#i()
    Void unused15=b1.#s()
    Void unused16=b1.#f()
    Void unused17=b1.#a()
    Void unused18=b1.#c()
    Void unused19=b1.#t()
    Void unused20=b1.#o()
    Void unused21=b1.#r()
    Void unused22=b1.#y()
    Void unused23=b1.#E()
    Void unused24=b1.#r()
    Void unused25=b1.#r()
    Void unused26=b1.#o()
    Void unused27=b1.#r()
    Void unused28=b1.#T()
    Void unused29=b1.#o()
    Void unused30=b1.#A()
    Void unused31=b1.#v()
    Void unused32=b1.#o()
    Void unused33=b1.#i()
    Void unused34=b1.#d()
    Void unused35=b1.#C()
    Void unused36=b1.#y()
    Void unused37=b1.#c()
    Void unused38=b1.#l()
    Void unused39=b1.#e()
    Void unused40=b1.#comma()
    Void unused41=b1.#space()
    Void unused42=b1.#r()
    Void unused43=b1.#e()
    Void unused44=b1.#p()
    Void unused45=b1.#l()
    Void unused46=b1.#a()
    Void unused47=b1.#c()
    Void unused48=b1.#e()
    Void unused49=b1.#space()
    Void unused50=b1.#i()
    Void unused51=b1.#n()
    Void unused52=b1.#space()
    Void unused53=b1.#A()
    Void unused54=b1.#d()
    Void unused55=b1.#a()
    Void unused56=b1.#m()
    Void unused57=b1.#T()
    Void unused58=b1.#2()
    b1
    ))
  )
read method 
Library #binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() This1.S.#from(binaryRepr:this._binaryRepr())
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.#binaryRepr(), s2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Path #plusplus(This1.Path that) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.#equalequal(that:This1.Path.#from(builder:(
        mut This1.S.SBuilder b=This1.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return that)
        )
      )
    Void unused1=(
      This1.Bool cond0=that.#equalequal(that:This1.Path.#from(builder:(
        mut This1.S.SBuilder b0=This1.Path.#builder()
        Void unused8=b0.#T()
        Void unused9=b0.#h()
        Void unused10=b0.#i()
        Void unused11=b0.#s()
        b0
        )))
      (
        Void unused12=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return this)
        )
      )
    Void unused2=return This1.Path.#from(binaryRepr:(
      This1.S.Continue rcv37=(
        This1.S rcv38=this.toS()
        rcv38.#from(seqBuilder:(
          mut This1.S.SConcat b1=rcv38.#seqBuilder()
          Void unused13=b1.#add(that:This1.S.#from(builder:(
            mut This1.S.SBuilder b2=This1.S.#builder()
            Void unused15=b2.#dot()
            b2
            )))
          Void unused14=b1.#add(that:that)
          b1
          ))
        )
      rcv37.#from(builder:(
        mut This1.S.SBuilder b3=rcv37.#builder()
        b3
        ))
      ).#binaryRepr())
    void
    )
  
  catch return This1.Path result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
mut This1.Strings names() (
  Void unused=(
    This1.S str=this.toS()
    Void unused0=(
      This1.Bool cond=str.#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused4=b.#T()
        Void unused5=b.#h()
        Void unused6=b.#i()
        Void unused7=b.#s()
        b
        )))
      (
        Void unused8=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Strings.empty())
        )
      )
    mut This0.Varstr_$_12 varstr_$_=This0.Varstr_$_12.#apply(inner:str)
    Void unused1=varstr_$_.inner(that:varstr_$_.#inner().#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b0=This1.S.#builder()
      Void unused9=b0.#dot()
      b0
      ))))
    mut This1.Strings result=This1.Strings.empty()
    Void unused2=(
      Void unused10=loop (
        Void unused11=varstr_$_.#inner().#equalequal(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          b1
          ))).#bang().#checkTrue()
        (
          This1.Size pos=varstr_$_.#inner().indexOfLeft(val:This1.S.#from(builder:(
            mut This1.S.SBuilder b2=This1.S.#builder()
            Void unused13=b2.#dot()
            b2
            )))
          Void unused12=result.add(right:varstr_$_.#inner().#apply(end:pos))
          varstr_$_.inner(that:varstr_$_.#inner().#apply(start:pos.#plus(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b3=This1.Size.#builder()
            Void unused14=b3.#1()
            b3
            )))))
          )
        )
      
      catch exception Void catched8 void
      
      void
      )
    Void unused3=return result
    void
    )
  
  catch return mut This1.Strings result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Path from(read This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.Path.#from(builder:(
          mut This1.S.SBuilder b0=This1.Path.#builder()
          Void unused3=b0.#T()
          Void unused4=b0.#h()
          Void unused5=b0.#i()
          Void unused6=b0.#s()
          b0
          )))
        )
      )
    This1.S s=(
      This1.S.Continue rcv39=(
        This1.S rcv40=This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          b1
          ))
        rcv40.#from(seqBuilder:(
          mut This1.S.SConcat b=rcv40.#seqBuilder()
          Void unused7=(
            lent This1.Strings.IteratorVal n=names.vals()
            (
              Void unused8=loop (
                Void unused9=n.#next()
                
                catch exception Void catched5 (
                  Void unused10=(
                    Void unused11=n.#checkEnd()
                    
                    catch exception Void catched6 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  Void unused12=b.#add(that:n.#inner(), sep:This1.S.#from(builder:(
                    mut This1.S.SBuilder b2=This1.S.#builder()
                    Void unused13=b2.#dot()
                    b2
                    )))
                  void
                  ))
                )
              
              catch exception Void catched10 void
              
              void
              )
            )
          b
          ))
        )
      rcv39.#from(builder:(
        mut This1.S.SBuilder b3=rcv39.#builder()
        b3
        ))
      )
    Void unused1=return (//(end:s.size()-1Size)
This0.fromS(that:s))
    void
    )
  
  catch return This1.Path result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Path fresh(This1.S name) This1.Path.fromS(that:This1.SafeOperators.freshName(that:name))
class method 
This1.Path fresh() this.fresh(name:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#F()
  Void unused0=b.#r()
  Void unused1=b.#e()
  Void unused2=b.#s()
  Void unused3=b.#h()
  b
  )))
class method 
This1.Path fresh(This1.Path path) (
  Void unused=(
    mut This1.Strings names=path.names()
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return this.fresh())
        )
      )
    This1.S right=This1.SafeOperators.freshName(that:names.right())
    Void unused1=names.right(that:right)
    Void unused2=return This1.Path.from(names:names)
    void
    )
  
  catch return This1.Path result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varstr_$_12: {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }}
Selector: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) This0.#from(binaryRepr:that.toS().#binaryRepr())
class method 
This0 #from(This1.S.SBuilder builder) This0.#from(binaryRepr:builder.#binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0 #from(Library binaryRepr) (
  Void unused=use This1.SafeOperators check ifInvalidDo(selector:binaryRepr) error This0.parseError(that:This1.S.#from(binaryRepr:binaryRepr))
  This0._private(_binaryRepr:binaryRepr)
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#e()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#U()
  Void unused9=b.#n()
  Void unused10=b.#s()
  Void unused11=b.#a()
  Void unused12=b.#t()
  Void unused13=b.#i()
  Void unused14=b.#s()
  Void unused15=b.#f()
  Void unused16=b.#a()
  Void unused17=b.#c()
  Void unused18=b.#t()
  Void unused19=b.#o()
  Void unused20=b.#r()
  Void unused21=b.#y()
  Void unused22=b.#E()
  Void unused23=b.#r()
  Void unused24=b.#r()
  Void unused25=b.#o()
  Void unused26=b.#r()
  Void unused27=b.#T()
  Void unused28=b.#o()
  Void unused29=b.#A()
  Void unused30=b.#v()
  Void unused31=b.#o()
  Void unused32=b.#i()
  Void unused33=b.#d()
  Void unused34=b.#C()
  Void unused35=b.#y()
  Void unused36=b.#c()
  Void unused37=b.#l()
  Void unused38=b.#e()
  Void unused39=b.#comma()
  Void unused40=b.#space()
  Void unused41=b.#r()
  Void unused42=b.#e()
  Void unused43=b.#p()
  Void unused44=b.#l()
  Void unused45=b.#a()
  Void unused46=b.#c()
  Void unused47=b.#e()
  Void unused48=b.#space()
  Void unused49=b.#i()
  Void unused50=b.#n()
  Void unused51=b.#space()
  Void unused52=b.#A()
  Void unused53=b.#d()
  Void unused54=b.#a()
  Void unused55=b.#m()
  Void unused56=b.#T()
  Void unused57=b.#2()
  b
  ))
class method 
This0 from(This1.S name, This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.fromS(that:name.#plusplus(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b0=This1.S.#builder()
          Void unused3=b0.#oRound()
          Void unused4=b0.#cRound()
          b0
          )))))
        )
      )
    This1.S pars=(
      This1.S.Continue rcv41=(
        This1.S rcv42=This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          Void unused5=b1.#oRound()
          b1
          ))
        rcv42.#from(seqBuilder:(
          mut This1.S.SConcat b=rcv42.#seqBuilder()
          Void unused6=(
            lent This1.Strings.IteratorVal n=names.vals()
            (
              Void unused7=loop (
                Void unused8=n.#next()
                
                catch exception Void catched5 (
                  Void unused9=(
                    Void unused10=n.#checkEnd()
                    
                    catch exception Void catched6 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  Void unused11=b.#add(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
                    mut This1.S.SBuilder b2=This1.S.#builder()
                    Void unused12=b2.#comma()
                    b2
                    ))))
                  void
                  ))
                )
              
              catch exception Void catched10 void
              
              void
              )
            )
          b
          ))
        )
      rcv41.#from(builder:(
        mut This1.S.SBuilder b3=rcv41.#builder()
        b3
        ))
      )
    Void unused1=return (//This.fromS(name[pars(end:#-1Size)]")")
This0.fromS(that:name.#plusplus(that:pars.#apply(end:pars.size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b4=This1.Size.#builder()
      Void unused13=b4.#1()
      b4
      )))).#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b5=This1.S.#builder()
      Void unused14=b5.#cRound()
      b5
      ))))))
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S nameAsField() (
  Void unused=(
    This1.S n=this.name()
    Void unused0=(
      This1.Bool cond=n.#apply(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return n.#apply(start:This1.Size.#from(builder:(
          mut This1.S.SBuilder b1=This1.Size.#builder()
          Void unused5=b1.#1()
          b1
          ))))
        )
      )
    Void unused1=return n
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S prefixAsField() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=(
        This1.S rcv43=this.toS()
        rcv43.#apply(that:This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )))
        ).#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched3 void
        
        (return This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          Void unused5=b1.#hash()
          b1
          )))
        )
      )
    Void unused1=return This1.S.#from(builder:(
      mut This1.S.SBuilder b2=This1.S.#builder()
      b2
      ))
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Library #binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() This1.S.#from(binaryRepr:this._binaryRepr())
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.#binaryRepr(), s2:that.#binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool isOperator() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.name().size().#equalequal(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Bool.true())
        )
      )
    Void unused1=return (
      This1.S rcv44=this.name()
      rcv44.#apply(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b0=This1.Size.#builder()
        Void unused4=b0.#0()
        b0
        )))
      ).#equalequal(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b1=This1.S.#builder()
      Void unused5=b1.#hash()
      b1
      )))
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S name() (
  This1.S str=this.toS()
  str.#apply(end:str.indexOfLeft(val:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#oRound()
    b
    ))))
  )
method 
This1.Strings names() (
  Void unused=(
    This1.S str=this.toS()
    mut This0.Varstr0_$_13 varstr0_$_=This0.Varstr0_$_13.#apply(inner:str)
    Void unused0=varstr0_$_.inner(that:varstr0_$_.#inner().#apply(start:varstr0_$_.#inner().indexOfLeft(val:This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused4=b.#oRound()
      b
      ))).#plus(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b0=This1.Size.#builder()
      Void unused5=b0.#1()
      b0
      ))), end:varstr0_$_.#inner().size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b1=This1.Size.#builder()
      Void unused6=b1.#1()
      b1
      )))).#plusplus(that:(// from foo(a,b,c) to a,b,c,
This1.S.#from(builder:(
      mut This1.S.SBuilder b2=This1.S.#builder()
      Void unused7=b2.#comma()
      b2
      )))))
    mut This1.Strings result=This1.Strings.empty()
    Void unused1=(
      This1.Bool cond=varstr0_$_.#inner().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b3=This1.S.#builder()
        Void unused8=b3.#comma()
        b3
        )))
      (
        Void unused9=cond.#checkTrue()
        
        catch exception Void catched5 void
        
        (return result)
        )
      )
    Void unused2=(
      Void unused10=loop (
        Void unused11=varstr0_$_.#inner().#equalequal(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b4=This1.S.#builder()
          b4
          ))).#bang().#checkTrue()
        (
          This1.Size pos=varstr0_$_.#inner().indexOfLeft(val:This1.S.#from(builder:(
            mut This1.S.SBuilder b5=This1.S.#builder()
            Void unused13=b5.#comma()
            b5
            )))
          Void unused12=result.add(right:varstr0_$_.#inner().#apply(end:pos))
          varstr0_$_.inner(that:varstr0_$_.#inner().#apply(start:pos.#plus(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b6=This1.Size.#builder()
            Void unused14=b6.#1()
            b6
            )))))
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    Void unused3=return result
    void
    )
  
  catch return This1.Strings result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Selector fresh(This1.Selector that) (
  Void unused=(
    This1.S name=that.name()
    mut This0.Varname_$_14 varname_$_=This0.Varname_$_14.#apply(inner:name)
    Void unused0=(
      This1.Bool cond=varname_$_.#inner().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        b
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (varname_$_.inner(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b0=This1.S.#builder()
          Void unused5=b0.#f()
          Void unused6=b0.#r()
          Void unused7=b0.#e()
          Void unused8=b0.#s()
          Void unused9=b0.#h()
          b0
          ))))
        )
      )
    This1.S fName=This1.SafeOperators.freshName(that:varname_$_.#inner())
    This1.S tot=fName.#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b1=This1.S.#builder()
      Void unused10=b1.#oRound()
      b1
      )))
    mut This0.Vartot_$_15 vartot_$_=This0.Vartot_$_15.#apply(inner:tot)
    Void unused1=(
      lent This1.Strings.IteratorVal n=that.names().vals()
      (
        Void unused11=loop (
          Void unused12=n.#next()
          
          catch exception Void catched5 (
            Void unused13=(
              Void unused14=n.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (vartot_$_.inner(that:vartot_$_.#inner().#plusplus(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
            mut This1.S.SBuilder b2=This1.S.#builder()
            Void unused15=b2.#comma()
            b2
            ))))))
          )
        
        catch exception Void catched9 void
        
        void
        )
      )
    Void unused2=vartot_$_.inner(that:vartot_$_.#inner().#apply(start:This1.Size.#from(builder:(
      mut This1.S.SBuilder b3=This1.Size.#builder()
      Void unused16=b3.#0()
      b3
      )), end:vartot_$_.#inner().size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b4=This1.Size.#builder()
      Void unused17=b4.#1()
      b4
      )))).#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b5=This1.S.#builder()
      Void unused18=b5.#cRound()
      b5
      ))))
    Void unused3=return This1.Selector.fromS(that:vartot_$_.#inner())
    void
    )
  
  catch return This1.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method /*will be private
*/This1.S leftAsASCIIUpperCase(This1.S that) (
  Void unused=(
    This1.Size index=This1.S.aSCIILowerCase().indexOfLeft(val:that.left())
    Void unused0=(
      This1.Bool cond=index.#rightequal(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return that.withLeft(that:(
          This1.S rcv45=This1.S.aSCIIUpperCase()
          rcv45.#apply(that:index)
          )))
        )
      )
    Void unused1=return that
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This1.S prefix) (//we still need to add check validity, and fields name, list parameters, and ways to add/remove parameters
(
  Void unused=(
    This1.S newName=prefix.#plusplus(that:This0.leftAsASCIIUpperCase(that:this.name()))
    Void unused0=return This1.Selector.from(name:newName, names:this.names())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
Varstr0_$_13: {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }
Vartot_$_15: {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }
Varname_$_14: {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }
ParseFail: {}}
SafeOperators: {/*@plugin
L42.is/connected/withSafeOperators
*/
class method 
Library compose(Library left, Library right) use This0 check compose(left:left, right:right) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#c()
  Void unused14=b.#o()
  Void unused15=b.#m()
  Void unused16=b.#p()
  Void unused17=b.#o()
  Void unused18=b.#s()
  Void unused19=b.#e()
  b
  ))
class method 
Library renameClass(Library that, This1.Path src, This1.Path dest) use This0 check renameClass(that:that, src:src.#binaryRepr(), dest:dest.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#C()
  Void unused20=b.#l()
  Void unused21=b.#a()
  Void unused22=b.#s()
  Void unused23=b.#s()
  b
  ))
class method 
Library renameMethod(Library that, This1.Path path, This1.Selector src, This1.Selector dest) use This0 check renameMethod(that:that, path:path.#binaryRepr(), src:src.#binaryRepr(), dest:dest.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#M()
  Void unused20=b.#e()
  Void unused21=b.#t()
  Void unused22=b.#h()
  Void unused23=b.#o()
  Void unused24=b.#d()
  b
  ))
class method 
Library hideClass(Library that, This1.Path src) use This0 check hideClass(that:that, src:src.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#h()
  Void unused14=b.#i()
  Void unused15=b.#d()
  Void unused16=b.#e()
  Void unused17=b.#C()
  Void unused18=b.#l()
  Void unused19=b.#a()
  Void unused20=b.#s()
  Void unused21=b.#s()
  b
  ))
class method 
Library hideMethod(Library that, This1.Path path, This1.Selector src) use This0 check hideMethod(that:that, path:path.#binaryRepr(), src:src.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#h()
  Void unused14=b.#i()
  Void unused15=b.#d()
  Void unused16=b.#e()
  Void unused17=b.#M()
  Void unused18=b.#e()
  Void unused19=b.#t()
  Void unused20=b.#h()
  Void unused21=b.#o()
  Void unused22=b.#d()
  b
  ))
class method 
Library sumMethods(Library that, This1.Path path, This1.Selector src1, This1.Selector src2, This1.Selector dest, This1.S name) use This0 check sumMethods(that:that, path:path.#binaryRepr(), src1:src1.#binaryRepr(), src2:src2.#binaryRepr(), dest:dest.#binaryRepr(), name:name.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#M()
  Void unused20=b.#e()
  Void unused21=b.#t()
  Void unused22=b.#h()
  Void unused23=b.#o()
  Void unused24=b.#d()
  b
  ))
class method 
Library redirect(Library that, This1.Path src, class Any dest) use This0 check redirect(that:that, src:src.#binaryRepr(), dest:dest) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#d()
  Void unused16=b.#i()
  Void unused17=b.#r()
  Void unused18=b.#e()
  Void unused19=b.#c()
  Void unused20=b.#t()
  b
  ))
class method 
Library removeImplementation(Library that, This1.Path path) use This0 check removeImplementation(that:that, path:path.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#I()
  Void unused20=b.#m()
  Void unused21=b.#p()
  Void unused22=b.#l()
  Void unused23=b.#e()
  Void unused24=b.#m()
  Void unused25=b.#e()
  Void unused26=b.#n()
  Void unused27=b.#t()
  Void unused28=b.#a()
  Void unused29=b.#t()
  Void unused30=b.#i()
  Void unused31=b.#o()
  Void unused32=b.#n()
  Void unused33=b.#oRound()
  Void unused34=b.#p()
  Void unused35=b.#a()
  Void unused36=b.#t()
  Void unused37=b.#h()
  Void unused38=b.#cRound()
  b
  ))
class method 
Library moveImplementation(Library that, This1.Path path, This1.Selector src, This1.Selector dest) use This0 check moveImplementation(that:that, path:path.#binaryRepr(), src:src.#binaryRepr(), dest:dest.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#m()
  Void unused14=b.#o()
  Void unused15=b.#v()
  Void unused16=b.#e()
  Void unused17=b.#I()
  Void unused18=b.#m()
  Void unused19=b.#p()
  Void unused20=b.#l()
  Void unused21=b.#e()
  Void unused22=b.#m()
  Void unused23=b.#e()
  Void unused24=b.#n()
  Void unused25=b.#t()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#i()
  Void unused29=b.#o()
  Void unused30=b.#n()
  b
  ))
class method 
Library removeImplementation(Library that, This1.Path path, This1.Selector selector) use This0 check removeImplementation(that:that, path:path.#binaryRepr(), selector:selector.#binaryRepr()) error (/*class method
  Library addDocumentation(Library that,Path path,Introspection.Doc doc)
    use This
      check addDocumentation(that
        path:path.#binaryRepr()
        doc:doc.#binaryRepr()
        )
      error System.Guard.PluginFailure"SafeOperators.addDocumentation(path)"
  class method
  Library addDocumentation(Library that,Path path,Selector selector,Introspection.Doc doc)
    use This
      check addDocumentation(that
        path:path.#binaryRepr()
        selector:selector.#binaryRepr()
        doc:doc.#binaryRepr()
        )
      error System.Guard.PluginFailure"SafeOperators.addDocumentation(path,selector)"
*/This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#I()
  Void unused20=b.#m()
  Void unused21=b.#p()
  Void unused22=b.#l()
  Void unused23=b.#e()
  Void unused24=b.#m()
  Void unused25=b.#e()
  Void unused26=b.#n()
  Void unused27=b.#t()
  Void unused28=b.#a()
  Void unused29=b.#t()
  Void unused30=b.#i()
  Void unused31=b.#o()
  Void unused32=b.#n()
  Void unused33=b.#oRound()
  Void unused34=b.#p()
  Void unused35=b.#a()
  Void unused36=b.#t()
  Void unused37=b.#h()
  Void unused38=b.#comma()
  Void unused39=b.#s()
  Void unused40=b.#e()
  Void unused41=b.#l()
  Void unused42=b.#e()
  Void unused43=b.#c()
  Void unused44=b.#t()
  Void unused45=b.#o()
  Void unused46=b.#r()
  Void unused47=b.#cRound()
  b
  )))
class method 
This1.S freshName(This1.S that) This1.S.#from(binaryRepr:use This0 check freshName(that:that.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#f()
  Void unused14=b.#r()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#h()
  Void unused18=b.#N()
  Void unused19=b.#a()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#oRound()
  Void unused23=b.#t()
  Void unused24=b.#h()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#cRound()
  b
  )))
class method 
Library makeMethod(Library that, This1.Path path, This1.Selector selector, This1.S mdfs, This1.Size exceptionN) use This0 check makeMethod(that:that, path:path.#binaryRepr(), selector:selector.#binaryRepr(), mdfs:mdfs.#binaryRepr(), exceptionN:exceptionN.#binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#m()
  Void unused14=b.#a()
  Void unused15=b.#k()
  Void unused16=b.#e()
  Void unused17=b.#M()
  Void unused18=b.#e()
  Void unused19=b.#t()
  Void unused20=b.#h()
  Void unused21=b.#o()
  Void unused22=b.#d()
  Void unused23=b.#oRound()
  Void unused24=b.#t()
  Void unused25=b.#h()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#comma()
  Void unused29=b.#p()
  Void unused30=b.#a()
  Void unused31=b.#t()
  Void unused32=b.#h()
  Void unused33=b.#comma()
  Void unused34=b.#s()
  Void unused35=b.#e()
  Void unused36=b.#l()
  Void unused37=b.#e()
  Void unused38=b.#c()
  Void unused39=b.#t()
  Void unused40=b.#o()
  Void unused41=b.#r()
  Void unused42=b.#comma()
  Void unused43=b.#m()
  Void unused44=b.#d()
  Void unused45=b.#f()
  Void unused46=b.#s()
  Void unused47=b.#comma()
  Void unused48=b.#e()
  Void unused49=b.#x()
  Void unused50=b.#c()
  Void unused51=b.#e()
  Void unused52=b.#p()
  Void unused53=b.#t()
  Void unused54=b.#i()
  Void unused55=b.#o()
  Void unused56=b.#n()
  Void unused57=b.#N()
  Void unused58=b.#cRound()
  b
  ))
class method 
Library liftValue(Any that, This1.Selector selector, Library lib) use This0 check liftValue(that:that, selector:selector.#binaryRepr(), lib:lib) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#l()
  Void unused14=b.#i()
  Void unused15=b.#f()
  Void unused16=b.#t()
  Void unused17=b.#V()
  Void unused18=b.#a()
  Void unused19=b.#l()
  Void unused20=b.#u()
  Void unused21=b.#e()
  Void unused22=b.#oRound()
  Void unused23=b.#t()
  Void unused24=b.#h()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#comma()
  Void unused28=b.#s()
  Void unused29=b.#e()
  Void unused30=b.#l()
  Void unused31=b.#e()
  Void unused32=b.#c()
  Void unused33=b.#t()
  Void unused34=b.#o()
  Void unused35=b.#r()
  Void unused36=b.#comma()
  Void unused37=b.#l()
  Void unused38=b.#i()
  Void unused39=b.#b()
  Void unused40=b.#cRound()
  b
  ))
class method 
Library addKs(Library that, This1.Path path, This1.S fields, This1.S mutK, This1.S lentK, This1.S readK, This1.S immK, This1.Bool isFwd) (
  Library fwdRepr=(
    Void unused=(
      Void unused0=(
        Void unused2=isFwd.#checkTrue()
        
        catch exception Void catched void
        
        (return This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused3=b.#1()
          b
          )).#binaryRepr())
        )
      Void unused1=return This1.Size.#from(builder:(
        mut This1.S.SBuilder b0=This1.Size.#builder()
        Void unused4=b0.#0()
        b0
        )).#binaryRepr()
      void
      )
    
    catch return Library result result
    
    error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
    )
  use This0 check addKs(that:that, path:path.#binaryRepr(), fields:fields.#binaryRepr(), mutK:mutK.#binaryRepr(), lentK:lentK.#binaryRepr(), readK:readK.#binaryRepr(), immK:immK.#binaryRepr(), isFwd:fwdRepr) error This1.System.Guard.PluginFailure.#from(builder:(
    mut This1.S.SBuilder b1=This1.System.Guard.PluginFailure.#builder()
    Void unused5=b1.#S()
    Void unused6=b1.#a()
    Void unused7=b1.#f()
    Void unused8=b1.#e()
    Void unused9=b1.#O()
    Void unused10=b1.#p()
    Void unused11=b1.#e()
    Void unused12=b1.#r()
    Void unused13=b1.#a()
    Void unused14=b1.#t()
    Void unused15=b1.#o()
    Void unused16=b1.#r()
    Void unused17=b1.#s()
    Void unused18=b1.#dot()
    Void unused19=b1.#a()
    Void unused20=b1.#d()
    Void unused21=b1.#d()
    Void unused22=b1.#K()
    Void unused23=b1.#s()
    Void unused24=b1.#oRound()
    Void unused25=b1.#t()
    Void unused26=b1.#h()
    Void unused27=b1.#a()
    Void unused28=b1.#t()
    Void unused29=b1.#comma()
    Void unused30=b1.#p()
    Void unused31=b1.#a()
    Void unused32=b1.#t()
    Void unused33=b1.#h()
    Void unused34=b1.#comma()
    Void unused35=b1.#f()
    Void unused36=b1.#i()
    Void unused37=b1.#e()
    Void unused38=b1.#l()
    Void unused39=b1.#d()
    Void unused40=b1.#s()
    Void unused41=b1.#comma()
    Void unused42=b1.#m()
    Void unused43=b1.#u()
    Void unused44=b1.#t()
    Void unused45=b1.#K()
    Void unused46=b1.#comma()
    Void unused47=b1.#l()
    Void unused48=b1.#e()
    Void unused49=b1.#n()
    Void unused50=b1.#t()
    Void unused51=b1.#K()
    Void unused52=b1.#comma()
    Void unused53=b1.#r()
    Void unused54=b1.#e()
    Void unused55=b1.#a()
    Void unused56=b1.#d()
    Void unused57=b1.#K()
    Void unused58=b1.#comma()
    Void unused59=b1.#i()
    Void unused60=b1.#m()
    Void unused61=b1.#m()
    Void unused62=b1.#K()
    Void unused63=b1.#comma()
    Void unused64=b1.#i()
    Void unused65=b1.#s()
    Void unused66=b1.#F()
    Void unused67=b1.#w()
    Void unused68=b1.#d()
    Void unused69=b1.#cRound()
    b1
    ))
  )}
Enum: {
class method 
Library #leftrightleft(Library that) This1.UnsafeRefactor.Compose.compose(left:This1.UnsafeRefactor.RenameClass.renameClass(that:this.enumTrait(), nameSrc:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#o()
  Void unused1=b.#p()
  b
  )), nameDest:This1.S.#from(builder:(
  mut This1.S.SBuilder b0=This1.S.#builder()
  Void unused2=b0.#T()
  Void unused3=b0.#h()
  Void unused4=b0.#i()
  Void unused5=b0.#s()
  b0
  ))), right:that)
class method 
Library enumTrait()  {
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.S kind() this.readableName()
refine read method 
This3.S text() this._text()
refine read method 
This3.Message.Opt responseOf() this.cause()
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$_41 varres_$_=This0.Varres_$_41.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres_$_.inner(that:varres_$_.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres_$_.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres_$_.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This3.Message class() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$_41: {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
Top: {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This3.Concept.Equals, This3.Concept.Classable, This3.Concept.ToS
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
This3.Size #inner() 
read method 
This3.Size inner() 
class method 
This0 #apply(This3.Size inner) 
refine read method 
This3.S toS() This0.readableName().#plusplus(that:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This3.S name() This0.names().val(that:this.inner())
read method 
This3.Bool #equalequal(read This0 that) this.inner().#equalequal(that:that.inner())
class method 
This3.Strings names() 
class method 
This0 fromS(This3.S that) (
  Void unused=(
    Void unused0=(
      mut This3.Size.Iterator n=This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        lent This3.Strings.IteratorVal d=This0.names().vals()
        (
          Void unused3=loop (
            Void unused4=n.#next()
            
            catch exception Void catched2 (
              Void unused5=(
                Void unused8=d.#next()
                
                catch exception Void catched3 void
                
                void
                )
              Void unused6=(
                Void unused9=n.#checkEnd()
                
                catch exception Void catched4 void
                
                void
                )
              Void unused7=(
                Void unused10=d.#checkEnd()
                
                catch exception Void catched5 void
                
                void
                )
              exception void
              )
            
            (
              Void unused11=d.#next()
              
              catch exception Void catched7 (
                Void unused12=(
                  Void unused14=n.#checkEnd()
                  
                  catch exception Void catched8 void
                  
                  void
                  )
                Void unused13=(
                  Void unused15=d.#checkEnd()
                  
                  catch exception Void catched9 void
                  
                  void
                  )
                exception void
                )
              
              (
                This3.Bool cond=d.#inner().#equalequal(that:that)
                (
                  Void unused16=cond.#checkTrue()
                  
                  catch exception Void catched12 void
                  
                  return This0.#apply(inner:n.#inner())
                  )
                )
              )
            )
          
          catch exception Void catched13 void
          
          void
          )
        )
      )
    Void unused1=error (
      This1.ParseFail.Continue rcv46=(
        This1.ParseFail rcv47=This1.ParseFail.#from(builder:(
          mut This3.S.SBuilder b0=This1.ParseFail.#builder()
          Void unused17=b0.#T()
          Void unused18=b0.#h()
          Void unused19=b0.#e()
          Void unused20=b0.#space()
          Void unused21=b0.#p()
          Void unused22=b0.#r()
          Void unused23=b0.#o()
          Void unused24=b0.#v()
          Void unused25=b0.#i()
          Void unused26=b0.#d()
          Void unused27=b0.#e()
          Void unused28=b0.#d()
          Void unused29=b0.#space()
          Void unused30=b0.#s()
          Void unused31=b0.#t()
          Void unused32=b0.#r()
          Void unused33=b0.#i()
          Void unused34=b0.#n()
          Void unused35=b0.#g()
          Void unused36=b0.#space()
          Void unused37=b0.#i()
          Void unused38=b0.#s()
          Void unused39=b0.#space()
          Void unused40=b0.#n()
          Void unused41=b0.#o()
          Void unused42=b0.#t()
          Void unused43=b0.#space()
          Void unused44=b0.#v()
          Void unused45=b0.#a()
          Void unused46=b0.#l()
          Void unused47=b0.#i()
          Void unused48=b0.#d()
          Void unused49=b0.#colon()
          Void unused50=b0.#space()
          b0
          ))
        rcv47.#from(seqBuilder:(
          mut This3.S.SConcat b1=rcv47.#seqBuilder()
          Void unused51=b1.#add(that:that)
          b1
          ))
        )
      rcv46.#from(builder:(
        mut This3.S.SBuilder b2=rcv46.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
List: {implements This3.Concept.ToS, This3.Concept.Classable
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
mut This0 #apply(fwd mut This3.Collections.MutListAny inner) 
class method 
This0 #immK(This3.Collections.MutListAny inner) This0.#apply(inner:inner)
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(Any that) this.add(right:that)
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=loop (
        Void unused1=e.#next()
        
        catch exception Void catched0 (
          Void unused2=(
            Void unused3=e.#checkEnd()
            
            catch exception Void catched1 void
            
            void
            )
          exception void
          )
        
        (result.add(left:e.#inner()))
        )
      
      catch exception Void catched3 void
      
      void
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Any val(This3.Size that) This0.Cast.#apply(that:this.inner().val(that:that))
read method 
Any left() This0.Cast.#apply(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
Any right() (//#################MUT METHODS
This0.Cast.#apply(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, Any val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(Any that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(Any that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, Any val) this.#inner().add(that:that, val:val)
mut method 
Void add(Any right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(Any left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(Any that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=loop (
          Void unused4=e.#next()
          
          catch exception Void catched0 (
            Void unused5=(
              Void unused6=e.#checkEnd()
              
              catch exception Void catched1 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched3 void
        
        void
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused7=loop (
          Void unused8=e.#next()
          
          catch exception Void catched5 (
            Void unused9=(
              Void unused10=e.#checkEnd()
              
              catch exception Void catched6 void
              
              void
              )
            exception void
            )
          
          (res.add(right:e.#inner()))
          )
        
        catch exception Void catched8 void
        
        void
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(Any that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(Any that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(Any that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(Any that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, Any filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, Any filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, Any filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(Any filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
Cast: {
class method 
Any #apply(Any that) (
  Void unused=(
    Void unused0=(
      Any that0=(
        Void unused2=return that
        
        catch return Any casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0
        void
        )
      )
    Void unused1=error This4.Collections.CollectionErrors.cast()
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
Any filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Any #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Any #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo)
read method 
This4.Bool isFill() This4.Bool.false()
read method 
Any filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}
IteratorValFill: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Any #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
read This4.Collections.MutListAny #_that() 
read method 
read This4.Collections.MutListAny _that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
mut method 
Any #filled() 
read method 
Any filled() 
read method 
read This4.Collections.MutListAny that() this._that()
class method 
lent This0 #apply(read This4.Collections.MutListAny _that, This4.Size from, This4.Size maxTo, This4.Size minTo, Any filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, Any filled) This0.#apply(_that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
This4.Bool isFill() This4.Bool.true()}
IteratorVar: {
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Any #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Cast.#apply(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
mut method 
mut This4.Collections.MutListAny #that() 
read method 
read This4.Collections.MutListAny that() 
mut method 
Void from(This4.Size that) 
mut method 
This4.Size #from() 
read method 
This4.Size from() 
mut method 
This4.Size #maxTo() 
read method 
This4.Size maxTo() 
mut method 
This4.Size #minTo() 
read method 
This4.Size minTo() 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
mut method 
Void inner(Any that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )
read method 
This4.Bool isFill() This4.Bool.false()
read method 
Any filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))}}}
SolidTrait: {
class method 
Library #apply()  {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) 
refine read method 
This3.S toS() }}}}