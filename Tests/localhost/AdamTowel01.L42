{'--layer-- Bool N S -     and first layer of unsafe operators

Alu:{'@plugin
'L42.is/connected/withAlu
}
ExitCode:{
class method 
Library normal() {'@exitStatus
'0
}
class method 
Library failure() {'@exitStatus
'42000
}}
Bool:{<:This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Named
class method '@private
mut This0 #mutK__37_0(Library binaryRepr__37_0) 
class method '@private
This0 #apply__38_0(Library binaryRepr) This0.#mutK__37_0(binaryRepr__37_0:binaryRepr)
mut method '@private
Library #binaryRepr__37_0() 
read method '@private
Library binaryRepr__37_0() 
method myName() This1.GetMyName.#apply(that:This0)
method 
Void #checkTrue() exception Void use This1.Alu check ifInt32EqualDo(n1:this.binaryRepr__37_0(), n2:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).binaryRepr()) exception void
class method 
This0 true() This0.#apply__38_0(binaryRepr:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#1()
  b
  )).binaryRepr())
class method 
This0 false() This0.#apply__38_0(binaryRepr:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).binaryRepr())
method 
This0 #and(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      return that
      )
    Void unused1=return this
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #or(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      return this
      )
    Void unused1=return that
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #bang() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      return This0.false()
      )
    Void unused1=return This0.true()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method toS() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      return This1.S.#from(builder:(
        This1.S::#builder() b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        ))
      )
    Void unused1=return This1.S.#from(builder:(
      This1.S::#builder() b0=This1.S.#builder()
      Void unused7=b0.#f()
      Void unused8=b0.#a()
      Void unused9=b0.#l()
      Void unused10=b0.#s()
      Void unused11=b0.#e()
      b0
      ))
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This0 fromS(read This1.Concept.ToS that) (
  Void unused=(
    Void unused0=(
      This1.Concept.ToS::toS() ::#equalequal(that ) cond=that.toS().#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This0.true()
        )
      )
    Void unused1=(
      This1.Concept.ToS::toS() ::#equalequal(that ) cond0=that.toS().#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b0=This1.S.#builder()
        Void unused8=b0.#f()
        Void unused9=b0.#a()
        Void unused10=b0.#l()
        Void unused11=b0.#s()
        Void unused12=b0.#e()
        b0
        )))
      (
        Void unused13=cond0.#checkTrue()
        
        catch exception Void catched4 void
        return This0.false()
        )
      )
    Void unused2=error This0.parseError(that:that.toS())
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      return that
      )
    Void unused1=return that.#bang()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #bangequal(This0 that) this.#equalequal(that:that).#bang()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#B()
  Void unused0=b.#o()
  Void unused1=b.#o()
  Void unused2=b.#l()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))}
N:{<:This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Named
class method '@private
mut This0 #mutK__39_0(Library _binaryRepr__39_0) 
class method '@private
This0 #apply__40_0(Library _binaryRepr) This0.#mutK__39_0(_binaryRepr__39_0:_binaryRepr)
mut method '@private
Library #_binaryRepr__39_0() 
read method '@private
Library _binaryRepr__39_0() 
method myName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) (
  This1.Concept.ToS::toS() s=that.toS()
  This1.N.#apply__40_0(_binaryRepr:use This1.Alu check stringToInt32(that:s.binaryRepr()) error This0.parseError(that:s))
  )
class method 
This0 #from(Library binaryRepr) This1.N.#apply__40_0(_binaryRepr:binaryRepr)
method 
Library binaryRepr() this._binaryRepr__39_0()
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This1.N #from(This1.S.SBuilder builder) This1.N.#apply__40_0(_binaryRepr:use This1.Alu check stringToInt32(that:builder.binaryRepr()) error This0.parseError(that:This1.S.#from(builder:builder)))
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#N()
  Void unused0=b.#dot()
  Void unused1=b.#U()
  Void unused2=b.#n()
  Void unused3=b.#s()
  Void unused4=b.#a()
  Void unused5=b.#t()
  Void unused6=b.#i()
  Void unused7=b.#s()
  Void unused8=b.#f()
  Void unused9=b.#a()
  Void unused10=b.#c()
  Void unused11=b.#t()
  Void unused12=b.#o()
  Void unused13=b.#r()
  Void unused14=b.#y()
  Void unused15=b.#E()
  Void unused16=b.#r()
  Void unused17=b.#r()
  Void unused18=b.#o()
  Void unused19=b.#r()
  Void unused20=b.#T()
  Void unused21=b.#o()
  Void unused22=b.#A()
  Void unused23=b.#v()
  Void unused24=b.#o()
  Void unused25=b.#i()
  Void unused26=b.#d()
  Void unused27=b.#C()
  Void unused28=b.#y()
  Void unused29=b.#c()
  Void unused30=b.#l()
  Void unused31=b.#e()
  Void unused32=b.#comma()
  Void unused33=b.#space()
  Void unused34=b.#r()
  Void unused35=b.#e()
  Void unused36=b.#p()
  Void unused37=b.#l()
  Void unused38=b.#a()
  Void unused39=b.#c()
  Void unused40=b.#e()
  Void unused41=b.#space()
  Void unused42=b.#i()
  Void unused43=b.#n()
  Void unused44=b.#space()
  Void unused45=b.#A()
  Void unused46=b.#d()
  Void unused47=b.#a()
  Void unused48=b.#m()
  Void unused49=b.#T()
  Void unused50=b.#2()
  b
  ))
method toS() This1.S.#from(binaryRepr:use This1.Alu check int32ToString(that:this.binaryRepr()) error void)
method 
This1.N #plus(This1.N that) This1.N.#apply__40_0(_binaryRepr:use This1.Alu check sumInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.N #less(This1.N that) This1.N.#apply__40_0(_binaryRepr:use This1.Alu check subInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.N #times(This1.N that) This1.N.#apply__40_0(_binaryRepr:use This1.Alu check mulInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.N #divide(This1.N that) This1.N.#apply__40_0(_binaryRepr:use This1.Alu check divInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32EqualDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Bool #left(This1.N that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GrtDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Bool #leftequal(This1.N that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GEqDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This1.Bool #right(This1.N that) this.#leftequal(that:that).#bang()
method 
This1.Bool #rightequal(This1.N that) this.#left(that:that).#bang()
method 
mut This0.Iterator vals() This0.Iterator.#apply(start:this, end:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
method 
mut This0.Iterator vals(This1.N upTo) This0.Iterator.#apply(start:this, end:upTo)
Iterator:{
class method 
mut This0 #mutK(This1 start, This1 end) 
class method 
mut This0 #apply(This1 start, This1 end) This0.#mutK(start:start, end:end)
mut method 
Void start(This1 that) 
mut method 
This1 #start() 
read method 
This1 start() 
mut method 
This1 #end() 
read method 
This1 end() 
mut method 
Void #next() exception Void (
  This0::end() ::#left(that ) ::#or(that ) cond=this.end().#left(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#0()
    b
    ))).#or(that:this.start().#left(that:this.end()))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched1 exception void
    this.start(that:this.start().#plus(that:This2.N.#from(builder:(
      This2.N::#builder() b0=This2.N.#builder()
      Void unused1=b0.#1()
      b0
      ))))
    )
  )
read method 
Void #checkEnd() void
read method 
This1 #inner() this.start().#less(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
S:{<:This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Named
Varcurrent__72_0:'@private
{
class method 
mut This0 #mutK(fwd This2.N::#from(builder ) inner) 
class method 
mut This0 #apply(This2.N::#from(builder ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.N::#from(builder ) that) 
mut method 
This2.N::#from(builder ) #inner() }
class method '@private
mut This0 #mutK__41_0(Library _binaryRepr__41_0) 
class method '@private
This0 _private__42_0(Library _binaryRepr) This0.#mutK__41_0(_binaryRepr__41_0:_binaryRepr)
mut method '@private
Library #_binaryRepr__41_0() 
read method '@private
Library _binaryRepr__41_0() 
method myName() This1.GetMyName.#apply(that:This0)
class method 
This0 #from(Library binaryRepr) This0._private__42_0(_binaryRepr:binaryRepr)
method 
Library binaryRepr() this._binaryRepr__41_0()
method toS() this
method 
This1.S #plusplus(This1.S that) This1.S.#from(binaryRepr:use This1.Alu check stringConcat(s1:this.binaryRepr(), s2:that.toS().binaryRepr()) error void)
method 
This1.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.S #apply(This1.N start, This1.N end) This1.S.#from(binaryRepr:use This1.Alu check stringSubstring(that:this.binaryRepr(), start:start.binaryRepr(), end:end.binaryRepr()) error void)
method 
This1.S #apply(This1.N that) this.#apply(start:that, end:that.#plus(that:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.S #apply(This1.N start) this.#apply(start:start, end:this.size())
method 
This1.S #apply(This1.N end) this.#apply(start:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), end:end)
method 
This1.Bool beginsWith(This1.S that) this.#apply(end:that.size()).#equalequal(that:that)
method '@private
This1.N auxFirstIndexOf__43_0(This1.S that) (
  Void unused=(
    This1.N::#from(builder ) current=This1.N.#from(builder:(
      This1.N::#builder() b=This1.N.#builder()
      Void unused3=b.#0()
      b
      ))
    mut This0.Varcurrent__72_0 varcurrent=This0.Varcurrent__72_0.#apply(inner:current)
    Void unused0=(
      Void unused4=loop (
        Void unused5=varcurrent.#inner().#left(that:this.size()).#checkTrue()
        (
          Void unused6=(
            This0::#apply(start ) ::beginsWith(that ) cond=this.#apply(start:varcurrent.#inner()).beginsWith(that:that)
            (
              Void unused7=cond.#checkTrue()
              
              catch exception Void catched2 void
              return varcurrent.#inner()
              )
            )
          varcurrent.inner(that:varcurrent.#inner().#plus(that:This1.N.#from(builder:(
            This1.N::#builder() b0=This1.N.#builder()
            Void unused8=b0.#1()
            b0
            ))))
          )
        )
      
      catch exception Void catched5 void
      void
      )
    Void unused1=return This1.N.#from(builder:(
      This1.N::#builder() b1=This1.N.#builder()
      Void unused9=b1.#0()
      b1
      )).#less(that:This1.N.#from(builder:(
      This1.N::#builder() b2=This1.N.#builder()
      Void unused10=b2.#1()
      b2
      )))
    Void unused2=error This0.subStringNotPresent(string:this, subString:that)
    void
    )
  
  catch return This1.N result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.N firstIndexOf(This1.S that) (
  Void unused=('TODO: discuss if should be exception or error
  
    This0::auxFirstIndexOf__43_0(that ) res=this.auxFirstIndexOf__43_0(that:that)
    Void unused0=(
      This0::auxFirstIndexOf__43_0(that ) ::#rightequal(that ) cond=res.#rightequal(that:This1.N.#from(builder:(
        This1.N::#builder() b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        return res
        )
      )
    Void unused1=error This0.subStringNotPresent(string:this, subString:that)
    void
    )
  
  catch return This1.N result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
Void subStringNotPresent(This1.S string, This1.S subString) void
method 
This1.Bool contains(This1.S that) (
  Void unused=(
    This0::auxFirstIndexOf__43_0(that ) res=this.auxFirstIndexOf__43_0(that:that)
    Void unused0=(
      This0::auxFirstIndexOf__43_0(that ) ::#rightequal(that ) cond=res.#rightequal(that:This1.N.#from(builder:(
        This1.N::#builder() b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This1.Bool.true()
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Bool isASCIILowerCase(This1.N that) This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#q()
  Void unused0=b.#w()
  Void unused1=b.#e()
  Void unused2=b.#r()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#u()
  Void unused6=b.#i()
  Void unused7=b.#o()
  Void unused8=b.#p()
  Void unused9=b.#a()
  Void unused10=b.#s()
  Void unused11=b.#d()
  Void unused12=b.#f()
  Void unused13=b.#g()
  Void unused14=b.#h()
  Void unused15=b.#j()
  Void unused16=b.#k()
  Void unused17=b.#l()
  Void unused18=b.#z()
  Void unused19=b.#x()
  Void unused20=b.#c()
  Void unused21=b.#v()
  Void unused22=b.#b()
  Void unused23=b.#n()
  Void unused24=b.#m()
  b
  )).contains(that:this.#apply(that:that))
method 
This1.Bool isASCIIUpperCase(This1.N that) This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#Q()
  Void unused0=b.#W()
  Void unused1=b.#E()
  Void unused2=b.#R()
  Void unused3=b.#T()
  Void unused4=b.#Y()
  Void unused5=b.#U()
  Void unused6=b.#I()
  Void unused7=b.#O()
  Void unused8=b.#P()
  Void unused9=b.#A()
  Void unused10=b.#S()
  Void unused11=b.#D()
  Void unused12=b.#F()
  Void unused13=b.#G()
  Void unused14=b.#H()
  Void unused15=b.#J()
  Void unused16=b.#K()
  Void unused17=b.#L()
  Void unused18=b.#Z()
  Void unused19=b.#X()
  Void unused20=b.#C()
  Void unused21=b.#V()
  Void unused22=b.#B()
  Void unused23=b.#N()
  Void unused24=b.#M()
  b
  )).contains(that:this.#apply(that:that))
method 
This1.N size() This1.N.#apply__40_0(_binaryRepr:use This1.Alu check stringSize(that:this.binaryRepr()) error void)
class method 
This1.S doubleQuote() This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#dQuote()
  Void unused0=b.#newline()
  b
  )).#apply(that:This1.N.#from(builder:(
  This1.N::#builder() b0=This1.N.#builder()
  Void unused1=b0.#0()
  b0
  )))
class method 
This1.S nl() This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#newline()
  b
  ))
method 
This1.S replace(This1.S that, This1.S into) This1.S.#from(binaryRepr:use This1.Alu check stringReplace(that:this.binaryRepr(), src:that.binaryRepr(), dest:into.binaryRepr()) error void)
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  b
  )))
SConcat:{
VarnewAcc__73_0:'@private
{
class method 
mut This0 #mutK(fwd This3.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This3.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Concept.ToS::toS() that) 
mut method 
This3.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This2.S old, This2.S accumulator) 
class method 
This0 #apply(This2.S old, This2.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This2.S #old() 
read method 
This2.S old() 
mut method 
This2.S #accumulator() 
read method 
This2.S accumulator() 
method 
This1.SConcat #add(This2.Concept.ToS that) This1.SConcat.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This1.SConcat #add(This2.Concept.ToS that, This2.Concept.ToS separedBy) (
  This2.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc__73_0 varnewAcc=This0.VarnewAcc__73_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This2.S.#from(builder:(
      This2.S::#builder() b=This2.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This1.SConcat.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This1.SConcat #end() this
method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
method 
This2.S #from(This2.S.SBuilder builder) this.old().#plusplus(that:this.accumulator().#plusplus(that:This2.S.#from(builder:builder)))}
SBuilder:{
class method '@private
mut This0 #mutK__44_0(Library _binaryRepr__44_0) 
class method '@private
mut This0 _private__45_0(Library _binaryRepr) This0.#mutK__44_0(_binaryRepr__44_0:_binaryRepr)
mut method '@private
Void _binaryRepr__44_0(Library that) 
mut method '@private
Library #_binaryRepr__44_0() 
read method '@private
Library _binaryRepr__44_0() 
read method 
Library binaryRepr() this._binaryRepr__44_0()
mut method 
Void acc(Library that) this._binaryRepr__44_0(that:use This2.Alu check stringConcat(s1:this.binaryRepr(), s2:that) error void)
class method 
mut This0 empty() This0._private__45_0(_binaryRepr:{'@stringU
'
})
mut method 
Void #0() this.acc(that:{'@stringU
'0
})
mut method 
Void #1() this.acc(that:{'@stringU
'1
})
mut method 
Void #2() this.acc(that:{'@stringU
'2
})
mut method 
Void #3() this.acc(that:{'@stringU
'3
})
mut method 
Void #4() this.acc(that:{'@stringU
'4
})
mut method 
Void #5() this.acc(that:{'@stringU
'5
})
mut method 
Void #6() this.acc(that:{'@stringU
'6
})
mut method 
Void #7() this.acc(that:{'@stringU
'7
})
mut method 
Void #8() this.acc(that:{'@stringU
'8
})
mut method 
Void #9() this.acc(that:{'@stringU
'9
})
mut method 
Void #q() this.acc(that:{'@stringU
'q
})
mut method 
Void #w() this.acc(that:{'@stringU
'w
})
mut method 
Void #e() this.acc(that:{'@stringU
'e
})
mut method 
Void #r() this.acc(that:{'@stringU
'r
})
mut method 
Void #t() this.acc(that:{'@stringU
't
})
mut method 
Void #y() this.acc(that:{'@stringU
'y
})
mut method 
Void #u() this.acc(that:{'@stringU
'u
})
mut method 
Void #i() this.acc(that:{'@stringU
'i
})
mut method 
Void #o() this.acc(that:{'@stringU
'o
})
mut method 
Void #p() this.acc(that:{'@stringU
'p
})
mut method 
Void #a() this.acc(that:{'@stringU
'a
})
mut method 
Void #s() this.acc(that:{'@stringU
's
})
mut method 
Void #d() this.acc(that:{'@stringU
'd
})
mut method 
Void #f() this.acc(that:{'@stringU
'f
})
mut method 
Void #g() this.acc(that:{'@stringU
'g
})
mut method 
Void #h() this.acc(that:{'@stringU
'h
})
mut method 
Void #j() this.acc(that:{'@stringU
'j
})
mut method 
Void #k() this.acc(that:{'@stringU
'k
})
mut method 
Void #l() this.acc(that:{'@stringU
'l
})
mut method 
Void #z() this.acc(that:{'@stringU
'z
})
mut method 
Void #x() this.acc(that:{'@stringU
'x
})
mut method 
Void #c() this.acc(that:{'@stringU
'c
})
mut method 
Void #v() this.acc(that:{'@stringU
'v
})
mut method 
Void #b() this.acc(that:{'@stringU
'b
})
mut method 
Void #n() this.acc(that:{'@stringU
'n
})
mut method 
Void #m() this.acc(that:{'@stringU
'm
})
mut method 
Void #Q() this.acc(that:{'@stringU
'Q
})
mut method 
Void #W() this.acc(that:{'@stringU
'W
})
mut method 
Void #E() this.acc(that:{'@stringU
'E
})
mut method 
Void #R() this.acc(that:{'@stringU
'R
})
mut method 
Void #T() this.acc(that:{'@stringU
'T
})
mut method 
Void #Y() this.acc(that:{'@stringU
'Y
})
mut method 
Void #U() this.acc(that:{'@stringU
'U
})
mut method 
Void #I() this.acc(that:{'@stringU
'I
})
mut method 
Void #O() this.acc(that:{'@stringU
'O
})
mut method 
Void #P() this.acc(that:{'@stringU
'P
})
mut method 
Void #A() this.acc(that:{'@stringU
'A
})
mut method 
Void #S() this.acc(that:{'@stringU
'S
})
mut method 
Void #D() this.acc(that:{'@stringU
'D
})
mut method 
Void #F() this.acc(that:{'@stringU
'F
})
mut method 
Void #G() this.acc(that:{'@stringU
'G
})
mut method 
Void #H() this.acc(that:{'@stringU
'H
})
mut method 
Void #J() this.acc(that:{'@stringU
'J
})
mut method 
Void #K() this.acc(that:{'@stringU
'K
})
mut method 
Void #L() this.acc(that:{'@stringU
'L
})
mut method 
Void #Z() this.acc(that:{'@stringU
'Z
})
mut method 
Void #X() this.acc(that:{'@stringU
'X
})
mut method 
Void #C() this.acc(that:{'@stringU
'C
})
mut method 
Void #V() this.acc(that:{'@stringU
'V
})
mut method 
Void #B() this.acc(that:{'@stringU
'B
})
mut method 
Void #N() this.acc(that:{'@stringU
'N
})
mut method 
Void #M() this.acc(that:{'@stringU
'M
})
mut method 
Void #%() this.acc(that:{'@stringU
'%
})
mut method 
Void #$() this.acc(that:{'@stringU
'$
})
mut method 
Void #left() this.acc(that:{'@stringU
'<
})
mut method 
Void #right() this.acc(that:{'@stringU
'>
})
mut method 
Void #bang() this.acc(that:{'@stringU
'!
})
mut method 
Void #tilde() this.acc(that:{'@stringU
'~
})
mut method 
Void #plus() this.acc(that:{'@stringU
'+
})
mut method 
Void #times() this.acc(that:{'@stringU
'*
})
mut method 
Void #divide() this.acc(that:{'@stringU
'/
})
mut method 
Void #less() this.acc(that:{'@stringU
'-
})
mut method 
Void #and() this.acc(that:{'@stringU
'&
})
mut method 
Void #or() this.acc(that:{'@stringU
'|
})
mut method 
Void #oRound() this.acc(that:{'@stringU
'(
})
mut method 
Void #cRound() this.acc(that:{'@stringU
')
})
mut method 
Void #oSquare() this.acc(that:{'@stringU
'[
})
mut method 
Void #cSquare() this.acc(that:{'@stringU
']
})
mut method 
Void #oCurly() this.acc(that:{'@stringU
'{
})
mut method 
Void #cCurly() this.acc(that:{'@stringU
'}
})
mut method 
Void #dQuote() this.acc(that:{'@stringU
'"
})
mut method 
Void #sQuote() this.acc(that:{'@stringU
''
})
mut method 
Void #hQuote() this.acc(that:{'@stringU
'`
})
mut method 
Void #equal() this.acc(that:{'@stringU
'=
})
mut method 
Void #qMark() this.acc(that:{'@stringU
'?
})
mut method 
Void #hat() this.acc(that:{'@stringU
'^
})
mut method 
Void #comma() this.acc(that:{'@stringU
',
})
mut method 
Void #semicolon() this.acc(that:{'@stringU
';
})
mut method 
Void #colon() this.acc(that:{'@stringU
':
})
mut method 
Void #dot() this.acc(that:{'@stringU
'.
})
mut method 
Void #underscore() this.acc(that:{'@stringU
'_
})
mut method 
Void #hash() this.acc(that:{'@stringU
'#
})
mut method 
Void #at() this.acc(that:{'@stringU
'\u0040
})
mut method 
Void #backslash() this.acc(that:{'@stringU
'\
})
mut method 
Void #space() this.acc(that:{'@stringU
' 
})
mut method 
Void #newline() this.acc(that:{'@stringU
'
'
})}
class method 
This0 #from(This1.S.SBuilder builder) This0._private__42_0(_binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()}
Debug:{
class method 
Void #apply(This1.Concept.ToS that) use This1.Alu check stringDebug(that:that.toS().binaryRepr()) void
class method 
Void #apply(Library lib) error This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#t()
  Void unused0=b.#o()
  Void unused1=b.#space()
  Void unused2=b.#f()
  Void unused3=b.#i()
  Void unused4=b.#x()
  Void unused5=b.#space()
  Void unused6=b.#i()
  Void unused7=b.#n()
  Void unused8=b.#space()
  Void unused9=b.#A()
  Void unused10=b.#d()
  Void unused11=b.#a()
  Void unused12=b.#m()
  Void unused13=b.#T()
  Void unused14=b.#o()
  Void unused15=b.#w()
  Void unused16=b.#e()
  Void unused17=b.#l()
  Void unused18=b.#2()
  b
  ))
class method 
Void #apply(This1.Concept.ToS fileName, This1.Concept.ToS content) use This1.Alu check fileDebug(fileName:fileName.toS().binaryRepr(), content:content.toS().binaryRepr()) void}
Count:{
class method '@private
mut This0 #mutK__46_0(This1.N counter__46_0) 
class method '@private
This0 #apply__47_0(This1.N counter) This0.#mutK__46_0(counter__46_0:counter)
mut method '@private
This1.N #counter__46_0() 
read method '@private
This1.N counter__46_0() 
class method 
This0 #begin() This0.#apply__47_0(counter:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This1.N #end() this.counter__46_0()
method 
This0 #add(This1.Bool that) (
  Void unused=(
    Void unused0=(
      This1.Bool::#bang() cond=that.#bang()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        return this
        )
      )
    Void unused1=return This0.#apply__47_0(counter:this.counter__46_0().#plus(that:This1.N.#from(builder:(
      This1.N::#builder() b=This1.N.#builder()
      Void unused3=b.#1()
      b
      ))))
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
SafeOperatorsAccess:{'@plugin
'L42.is/connected/withSafeOperators

class method 
Library compose(Library left, Library right) use This0 check compose(left:left, right:right) error This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#c()
  Void unused20=b.#o()
  Void unused21=b.#m()
  Void unused22=b.#p()
  Void unused23=b.#o()
  Void unused24=b.#s()
  Void unused25=b.#e()
  b
  ))
class method 
Library redirect(Library that, Library srcBinaryRepr, class Any dest) use This1.SafeOperatorsAccess check redirect(that:that, src:srcBinaryRepr, dest:dest) error This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#r()
  Void unused20=b.#e()
  Void unused21=b.#d()
  Void unused22=b.#i()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#c()
  Void unused26=b.#t()
  b
  ))}
Concept:{
ToS:{interface 
read method 
This2.S toS() }
Classable:{interface 
read method 
class Any classAny() }
Named:{interface 
class method 
This2.S myName() }
Wrapper:{interface 
read method 
Any inner() }
TypeWrapper:{interface 
read method 
class Any inner() }
ReadWrapper:{interface 
read method 
read Any inner() }
MutWrapper:{interface <:This1.ReadWrapper
mut method 
mut Any #inner() }
LentWrapper:{interface <:This1.ReadWrapper
mut method 
lent Any #inner() }
Equals:{interface 
read method 
This2.Bool equals(read Any that) }
Comparable:{interface 
read method 
This2.Bool greater(read Any that) }
Boollable:{interface 
read method 
Void #checkTrue() exception Void }
Decorator:{interface 'method Library>>(Library that) exception MetaGuard(specific)
'method Library decorate(Library that) exception MetaGuard I can link metaguard for circularity
}
Contains:{interface 'read method Bool >>(read Elem that)

read method 
This2.Bool contains(read Any that) }
Parsable:{interface 'class method capsule This fromS(S that) exception Guard.Parameter(specific) invalid string
'''class method capsule This #fromS(S that) exception Guard.Parameter
}
Invariant:{interface 
read method ' can throw error or return false, as more opportune
This2.Bool invariant() }
RandomAccess:{interface 'read method read Elem (N that)
'mut method mut Elem #(N that)

read method 
read Any get(This2.N that) 
mut method 
mut Any #get(This2.N that) }
Sizable:{interface 
read method 
This2.N size() 
read method 
This2.Bool isEmpty() }
Iterator:{interface 
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
Void #close() }}
GetMyName:{
class method 
This1.S #apply(class Any that) This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#less()
  Void unused0=b.#less()
  Void unused1=b.#N()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#S()
  Void unused6=b.#t()
  Void unused7=b.#i()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#T()
  Void unused11=b.#o()
  Void unused12=b.#F()
  Void unused13=b.#i()
  Void unused14=b.#x()
  Void unused15=b.#less()
  Void unused16=b.#less()
  b
  ))}
Message:{interface <:This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable, This1.Concept.Named
class method 
This1.S kind() 
method 
This1.S text() 
method 
This0.Opt responseOf() 
read method 
class This0 clazz() 
Opt:{
class method 
mut This0 #mutK(This0.TOpt that) 
class method 
This0 #new(This0.TOpt that) This0.#mutK(that:that)
mut method 
This0.TOpt #that() 
read method 
This0.TOpt that() 
TOpt:{interface 
method 
This2 get() }
TEmpty:{<:This1.TOpt
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
method get() error This3.S.#from(builder:(
  This3.S::#builder() b=This3.S.#builder()
  Void unused=b.#U()
  Void unused0=b.#n()
  Void unused1=b.#s()
  Void unused2=b.#a()
  Void unused3=b.#t()
  Void unused4=b.#i()
  Void unused5=b.#s()
  Void unused6=b.#f()
  Void unused7=b.#a()
  Void unused8=b.#c()
  Void unused9=b.#t()
  Void unused10=b.#o()
  Void unused11=b.#r()
  Void unused12=b.#y()
  Void unused13=b.#E()
  Void unused14=b.#r()
  Void unused15=b.#r()
  Void unused16=b.#o()
  Void unused17=b.#r()
  Void unused18=b.#T()
  Void unused19=b.#o()
  Void unused20=b.#A()
  Void unused21=b.#v()
  Void unused22=b.#o()
  Void unused23=b.#i()
  Void unused24=b.#d()
  Void unused25=b.#C()
  Void unused26=b.#y()
  Void unused27=b.#c()
  Void unused28=b.#l()
  Void unused29=b.#e()
  Void unused30=b.#comma()
  Void unused31=b.#space()
  Void unused32=b.#r()
  Void unused33=b.#e()
  Void unused34=b.#p()
  Void unused35=b.#l()
  Void unused36=b.#a()
  Void unused37=b.#c()
  Void unused38=b.#e()
  Void unused39=b.#space()
  Void unused40=b.#i()
  Void unused41=b.#n()
  Void unused42=b.#space()
  Void unused43=b.#A()
  Void unused44=b.#d()
  Void unused45=b.#a()
  Void unused46=b.#m()
  Void unused47=b.#2()
  b
  ))}
TOf:{<:This1.TOpt
class method 
mut This0 #mutK(This2 that) 
class method 
This0 #apply(This2 that) This0.#mutK(that:that)
mut method 
This2 #that() 
read method 
This2 that() 
method get() this.that()}
method 
This1 #tilde() this.that().get()
method 
This2.Bool isPresent() (
  Void unused0=(
    This0::#tilde() unused=this.#tilde()
    Void unused1=return This2.Bool.true()
    
    catch error Any catched return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This1 that) This0.#new(that:This0.TOf.#apply(that:that))}
EqualMessages:{
class method 
This2.Bool #apply(This2.Message that, This2.Message other) (
  Void unused=('assuming they have the same class
  
    This2.Message::clazz() ::kind() ::#equalequal(that ) ::#and(that ) ::#and(that ) res=that.clazz().kind().#equalequal(that:other.clazz().kind()).#and(that:that.text().#equalequal(that:other.text())).#and(that:that.responseOf().isPresent().#equalequal(that:other.responseOf().isPresent()))
    Void unused0=(
      This2.Message::clazz() ::kind() ::#equalequal(that ) ::#and(that ) ::#and(that ) ::#bang() cond=res.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This2.Bool.false()
        )
      )
    Void unused1=(
      This2.Message::responseOf() ::isPresent() ::#bang() cond0=that.responseOf().isPresent().#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        return This2.Bool.true()
        )
      )
    Void unused2=return that.responseOf().#tilde().equals(that:other.responseOf().#tilde())
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
$:{
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
class method 
Library #leftleft(Library that) This2.SafeOperatorsAccess.compose(left:that, right:This0.messageTrait())
class method 
Library messageTrait() {<:This3.Message
Varres__74_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method myName() This3.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres__74_0 varres=This0.Varres__74_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This3.S.#from(builder:(
        This3.S::#builder() b=This3.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          This3.S::#builder() b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          This3.S::#builder() b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          This3.S::#builder() b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres__74_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres__74_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This3.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This3.S.#from(builder:(
  This3.S::#builder() b=This3.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0__75_0:'@private
{
class method 
mut This0 #mutK(fwd This5.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This5.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This5.Concept.ToS::toS() that) 
mut method 
This5.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This4.Concept.ToS old, This4.S accumulator) 
class method 
This0 #apply(This4.Concept.ToS old, This4.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This4.Concept.ToS #old() 
read method 
This4.Concept.ToS old() 
mut method 
This4.S #accumulator() 
read method 
This4.S accumulator() 
method 
This1.SConcat #add(This4.Concept.ToS that) This1.SConcat.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This1.SConcat #add(This4.Concept.ToS that, This4.Concept.ToS separedBy) (
  This4.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0__75_0 varnewAcc=This0.VarnewAcc0__75_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This4.S.#from(builder:(
      This4.S::#builder() b=This4.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This1.SConcat.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This1.SConcat #end() this
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This4.S.#from(builder:builder))))}}}}
Guard:{' exception as Guard bureocracy, error as Guard detection
'-is a check guarenteed to be performed, program logic can rely on this being enforced.
'  as exceptions, Guards objects are a way to report/guard complex operations,
' where checking the shape of the input can be unconvenient.
'as errors, they represent precondition violations. 
'Turning an exception Guard into an error Guard
' is equivalent of declaring that such misuse should not happen (blame on the caller),
' still, there is no bug in the program at this stage. Is legit for the caller to try and be blamed
interface <:This1.Message'all other guards should implement this one

Operation:{<:This2.Guard, This2.Message
Varres_$%0_0__76_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%0_0__76_0 varres=This0.Varres_$%0_0__76_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%0_0__76_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%0_0__76_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%1_0__77_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%1_0__77_0 varnewAcc=This0.VarnewAcc0_$%1_0__77_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}
Parameter:{<:This2.Guard, This2.Message
Varres_$%2_0__78_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%2_0__78_0 varres=This0.Varres_$%2_0__78_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%2_0__78_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%2_0__78_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%3_0__79_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%3_0__79_0 varnewAcc=This0.VarnewAcc0_$%3_0__79_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}
Precondition:{<:This2.Guard, This2.Message
Varres_$%4_0__80_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%4_0__80_0 varres=This0.Varres_$%4_0__80_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%4_0__80_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%4_0__80_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%5_0__81_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%5_0__81_0 varnewAcc=This0.VarnewAcc0_$%5_0__81_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}}
System:{
Guard:{'<:Outer.Guard soon (remove "interface" for a bad translation bug: This1_System_Guard is not abstract and does not override abstract method MtoS()
interface <:This2.Guard
PluginFailure:{<:This2.Guard, This3.Message
Varres_$%6_0__82_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method myName() This3.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%6_0__82_0 varres=This0.Varres_$%6_0__82_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This3.S.#from(builder:(
        This3.S::#builder() b=This3.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          This3.S::#builder() b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          This3.S::#builder() b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          This3.S::#builder() b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%6_0__82_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%6_0__82_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This3.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This3.S.#from(builder:(
  This3.S::#builder() b=This3.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%7_0__83_0:'@private
{
class method 
mut This0 #mutK(fwd This5.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This5.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This5.Concept.ToS::toS() that) 
mut method 
This5.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This4.Concept.ToS old, This4.S accumulator) 
class method 
This0 #apply(This4.Concept.ToS old, This4.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This4.Concept.ToS #old() 
read method 
This4.Concept.ToS old() 
mut method 
This4.S #accumulator() 
read method 
This4.S accumulator() 
method 
This0 #add(This4.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This4.Concept.ToS that, This4.Concept.ToS separedBy) (
  This4.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%7_0__83_0 varnewAcc=This0.VarnewAcc0_$%7_0__83_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This4.S.#from(builder:(
      This4.S::#builder() b=This4.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This4.S.#from(builder:builder))))}}}}
Assert:{interface <:This1.Message
NotImplementedYet:{<:This1, This2.Message
Varres_$%8_0__84_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%8_0__84_0 varres=This0.Varres_$%8_0__84_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%8_0__84_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%8_0__84_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%9_0__85_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%9_0__85_0 varnewAcc=This0.VarnewAcc0_$%9_0__85_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}
ObservedBug:{<:This1, This2.Message
Varres_$%10_0__86_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%10_0__86_0 varres=This0.Varres_$%10_0__86_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%10_0__86_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%10_0__86_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%11_0__87_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%11_0__87_0 varnewAcc=This0.VarnewAcc0_$%11_0__87_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}
CodeNotReachable:{<:This1, This2.Message
Varres_$%12_0__88_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%12_0__88_0 varres=This0.Varres_$%12_0__88_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%12_0__88_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%12_0__88_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%13_0__89_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%13_0__89_0 varnewAcc=This0.VarnewAcc0_$%13_0__89_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}
$:{
class method 
mut This0 #mutK(This2.N that) 
class method 
This0 #apply(This2.N that) This0.#mutK(that:that)
mut method 
This2.N #that() 
read method 
This2.N that() 
class method 
This0 #begin() This0.#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
Void #end() void
method 
This0 #add(This2.Bool that) (
  Void unused=(
    Void unused0=(
      Void unused2=that.#checkTrue()
      
      catch exception Void catched void
      return This0.#apply(that:this.that().#plus(that:This2.N.#from(builder:(
        This2.N::#builder() b=This2.N.#builder()
        Void unused3=b.#1()
        b
        ))))
      )
    Void unused1=error (
      This1.AssertMessage::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This1.AssertMessage.#from(builder:(
        This1.AssertMessage::#builder() b1=This1.AssertMessage.#builder()
        Void unused4=b1.#C()
        Void unused5=b1.#o()
        Void unused6=b1.#n()
        Void unused7=b1.#d()
        Void unused8=b1.#i()
        Void unused9=b1.#t()
        Void unused10=b1.#i()
        Void unused11=b1.#o()
        Void unused12=b1.#n()
        Void unused13=b1.#space()
        Void unused14=b1.#n()
        Void unused15=b1.#u()
        Void unused16=b1.#m()
        Void unused17=b1.#b()
        Void unused18=b1.#e()
        Void unused19=b1.#r()
        Void unused20=b1.#space()
        b1
        )).#begin().#add(that:this.that()).#end()
      listKind.#from(builder:(
        This1.AssertMessage::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
        Void unused21=b0.#space()
        Void unused22=b0.#f()
        Void unused23=b0.#a()
        Void unused24=b0.#i()
        Void unused25=b0.#l()
        Void unused26=b0.#e()
        Void unused27=b0.#d()
        b0
        ))
      )
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #add(This2.Bool that, This2.Concept.ToS msg) (
  Void unused=(
    Void unused0=(
      Void unused2=that.#checkTrue()
      
      catch exception Void catched void
      return This0.#apply(that:this.that().#plus(that:This2.N.#from(builder:(
        This2.N::#builder() b=This2.N.#builder()
        Void unused3=b.#1()
        b
        ))))
      )
    Void unused1=error (
      This1.AssertMessage::#from(builder ) ::#begin() ::#add(that ) ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=(
        This1.AssertMessage::#from(builder ) ::#begin() ::#add(that ) ::#add(that ) ::#end() listKind0=This1.AssertMessage.#from(builder:(
          This1.AssertMessage::#builder() b2=This1.AssertMessage.#builder()
          b2
          )).#begin().#add(that:msg).#add(that:This2.S.nl()).#end()
        listKind0.#from(builder:(
          This1.AssertMessage::#from(builder ) ::#begin() ::#add(that ) ::#add(that ) ::#end() ::#builder() b1=listKind0.#builder()
          Void unused4=b1.#n()
          Void unused5=b1.#u()
          Void unused6=b1.#m()
          Void unused7=b1.#b()
          Void unused8=b1.#e()
          Void unused9=b1.#r()
          Void unused10=b1.#colon()
          b1
          ))
        ).#begin().#add(that:this.that()).#end()
      listKind.#from(builder:(
        This1.AssertMessage::#from(builder ) ::#begin() ::#add(that ) ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
        Void unused11=b0.#space()
        Void unused12=b0.#f()
        Void unused13=b0.#a()
        Void unused14=b0.#i()
        Void unused15=b0.#l()
        Void unused16=b0.#e()
        Void unused17=b0.#d()
        b0
        ))
      )
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
AssertMessage:{<:This1, This2.Message
Varres_$%14_0__90_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%14_0__90_0 varres=This0.Varres_$%14_0__90_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%14_0__90_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%14_0__90_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%15_0__91_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%15_0__91_0 varnewAcc=This0.VarnewAcc0_$%15_0__91_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}}
Collections:{
CollectionErrors:{
class method 
Any unreachable() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#u()
  Void unused0=b.#n()
  Void unused1=b.#r()
  Void unused2=b.#e()
  Void unused3=b.#a()
  Void unused4=b.#c()
  Void unused5=b.#h()
  Void unused6=b.#a()
  Void unused7=b.#b()
  Void unused8=b.#l()
  Void unused9=b.#e()
  Void unused10=b.#divide()
  Void unused11=b.#t()
  Void unused12=b.#o()
  Void unused13=b.#space()
  Void unused14=b.#b()
  Void unused15=b.#e()
  Void unused16=b.#space()
  Void unused17=b.#r()
  Void unused18=b.#e()
  Void unused19=b.#p()
  Void unused20=b.#l()
  Void unused21=b.#a()
  Void unused22=b.#c()
  Void unused23=b.#e()
  Void unused24=b.#d()
  Void unused25=b.#space()
  Void unused26=b.#i()
  Void unused27=b.#n()
  Void unused28=b.#space()
  Void unused29=b.#A()
  Void unused30=b.#d()
  Void unused31=b.#a()
  Void unused32=b.#m()
  Void unused33=b.#T()
  Void unused34=b.#o()
  Void unused35=b.#w()
  Void unused36=b.#e()
  Void unused37=b.#l()
  Void unused38=b.#2()
  b
  ))
class method 
Any negBound(This2.N that, This1.MutListAny list) (
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind0=This2.S.#from(builder:(
      This2.S::#builder() b1=This2.S.#builder()
      Void unused=b1.#I()
      Void unused0=b1.#n()
      Void unused1=b1.#d()
      Void unused2=b1.#e()
      Void unused3=b1.#x()
      Void unused4=b1.#O()
      Void unused5=b1.#u()
      Void unused6=b1.#t()
      Void unused7=b1.#O()
      Void unused8=b1.#f()
      Void unused9=b1.#B()
      Void unused10=b1.#o()
      Void unused11=b1.#u()
      Void unused12=b1.#n()
      Void unused13=b1.#d()
      Void unused14=b1.#colon()
      Void unused15=b1.#space()
      Void unused16=b1.#n()
      Void unused17=b1.#e()
      Void unused18=b1.#g()
      Void unused19=b1.#a()
      Void unused20=b1.#t()
      Void unused21=b1.#i()
      Void unused22=b1.#v()
      Void unused23=b1.#e()
      Void unused24=b1.#space()
      Void unused25=b1.#i()
      Void unused26=b1.#n()
      Void unused27=b1.#d()
      Void unused28=b1.#e()
      Void unused29=b1.#x()
      Void unused30=b1.#space()
      Void unused31=b1.#p()
      Void unused32=b1.#r()
      Void unused33=b1.#o()
      Void unused34=b1.#v()
      Void unused35=b1.#i()
      Void unused36=b1.#d()
      Void unused37=b1.#e()
      Void unused38=b1.#d()
      Void unused39=b1.#semicolon()
      Void unused40=b1.#space()
      Void unused41=b1.#m()
      Void unused42=b1.#a()
      Void unused43=b1.#x()
      Void unused44=b1.#space()
      Void unused45=b1.#i()
      Void unused46=b1.#s()
      Void unused47=b1.#space()
      b1
      )).#begin().#add(that:list.size()).#end()
    listKind0.#from(builder:(
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind0.#builder()
      Void unused48=b0.#space()
      Void unused49=b0.#p()
      Void unused50=b0.#r()
      Void unused51=b0.#o()
      Void unused52=b0.#p()
      Void unused53=b0.#o()
      Void unused54=b0.#s()
      Void unused55=b0.#e()
      Void unused56=b0.#d()
      Void unused57=b0.#space()
      Void unused58=b0.#i()
      Void unused59=b0.#s()
      Void unused60=b0.#space()
      b0
      ))
    ).#begin().#add(that:that).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    b
    ))
  )
class method 
Any outBound(This2.N that, This1.MutListAny list) (
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind0=This2.S.#from(builder:(
      This2.S::#builder() b1=This2.S.#builder()
      Void unused=b1.#I()
      Void unused0=b1.#n()
      Void unused1=b1.#d()
      Void unused2=b1.#e()
      Void unused3=b1.#x()
      Void unused4=b1.#O()
      Void unused5=b1.#u()
      Void unused6=b1.#t()
      Void unused7=b1.#O()
      Void unused8=b1.#f()
      Void unused9=b1.#B()
      Void unused10=b1.#o()
      Void unused11=b1.#u()
      Void unused12=b1.#n()
      Void unused13=b1.#d()
      Void unused14=b1.#colon()
      Void unused15=b1.#space()
      Void unused16=b1.#m()
      Void unused17=b1.#a()
      Void unused18=b1.#x()
      Void unused19=b1.#space()
      Void unused20=b1.#i()
      Void unused21=b1.#s()
      Void unused22=b1.#space()
      b1
      )).#begin().#add(that:list.size()).#end()
    listKind0.#from(builder:(
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind0.#builder()
      Void unused23=b0.#space()
      Void unused24=b0.#p()
      Void unused25=b0.#r()
      Void unused26=b0.#o()
      Void unused27=b0.#p()
      Void unused28=b0.#o()
      Void unused29=b0.#s()
      Void unused30=b0.#e()
      Void unused31=b0.#d()
      Void unused32=b0.#space()
      Void unused33=b0.#i()
      Void unused34=b0.#s()
      Void unused35=b0.#space()
      b0
      ))
    ).#begin().#add(that:that).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    b
    ))
  )
class method 
Any cast() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#c()
  Void unused0=b.#a()
  Void unused1=b.#s()
  Void unused2=b.#t()
  Void unused3=b.#space()
  Void unused4=b.#f()
  Void unused5=b.#a()
  Void unused6=b.#i()
  Void unused7=b.#l()
  Void unused8=b.#u()
  Void unused9=b.#r()
  Void unused10=b.#e()
  b
  ))
class method 
Any iterationTermination(This2.N from, This2.N stopOk, This2.N size) (
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind0=This2.S.#from(builder:(
      This2.S::#builder() b1=This2.S.#builder()
      Void unused=b1.#U()
      Void unused0=b1.#n()
      Void unused1=b1.#e()
      Void unused2=b1.#x()
      Void unused3=b1.#p()
      Void unused4=b1.#e()
      Void unused5=b1.#c()
      Void unused6=b1.#t()
      Void unused7=b1.#e()
      Void unused8=b1.#d()
      Void unused9=b1.#space()
      Void unused10=b1.#t()
      Void unused11=b1.#e()
      Void unused12=b1.#r()
      Void unused13=b1.#m()
      Void unused14=b1.#i()
      Void unused15=b1.#n()
      Void unused16=b1.#a()
      Void unused17=b1.#t()
      Void unused18=b1.#i()
      Void unused19=b1.#o()
      Void unused20=b1.#n()
      Void unused21=b1.#space()
      Void unused22=b1.#o()
      Void unused23=b1.#f()
      Void unused24=b1.#space()
      Void unused25=b1.#i()
      Void unused26=b1.#t()
      Void unused27=b1.#e()
      Void unused28=b1.#r()
      Void unused29=b1.#a()
      Void unused30=b1.#t()
      Void unused31=b1.#i()
      Void unused32=b1.#o()
      Void unused33=b1.#n()
      Void unused34=b1.#comma()
      Void unused35=b1.#space()
      Void unused36=b1.#r()
      Void unused37=b1.#e()
      Void unused38=b1.#a()
      Void unused39=b1.#c()
      Void unused40=b1.#h()
      Void unused41=b1.#e()
      Void unused42=b1.#d()
      Void unused43=b1.#space()
      b1
      )).#begin().#add(that:from).#end()
    listKind0.#from(builder:(
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind0.#builder()
      Void unused44=b0.#space()
      Void unused45=b0.#i()
      Void unused46=b0.#n()
      Void unused47=b0.#s()
      Void unused48=b0.#t()
      Void unused49=b0.#e()
      Void unused50=b0.#a()
      Void unused51=b0.#d()
      Void unused52=b0.#space()
      Void unused53=b0.#o()
      Void unused54=b0.#f()
      Void unused55=b0.#space()
      b0
      ))
    ).#begin().#add(that:stopOk).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    b
    ))
  )}
IterationFailure:{}
MutListAny:{
class method 
mut This0 #mutK(This0.Cell head, This2.N size) 
class method 
mut This0 #apply(This0.Cell head, This2.N size) This0.#mutK(head:head, size:size)
mut method 
Void head(This0.Cell that) 
mut method 
This0.Cell #head() 
read method 
This0.Cell head() 
mut method 
Void size(This2.N that) 
mut method 
This2.N #size() 
read method 
This2.N size() 
Cell:{interface <:Any
method 
Any get(This3.N that) 
method 
This1.Cell set(This3.N that, Any val, This3.Bool add) 
method 
This1.Cell remove(This3.N that) }
CellNext:{<:This1.Cell
class method 
mut This0 #mutK(Any val, This1.Cell next) 
class method 
This0 #apply(Any val, This1.Cell next) This0.#mutK(val:val, next:next)
mut method 
Any #val() 
read method 
Any val() 
mut method 
This1.Cell #next() 
read method 
This1.Cell next() 
method get(that ) (
  Void unused=(
    Void unused0=(
      This0::get(that ) ::that::#equalequal(that ) cond=that.#equalequal(that:This3.N.#from(builder:(
        This3.N::#builder() b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        return this.val()
        )
      )
    Void unused1=return this.next().get(that:that.#less(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return This0::get(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method set(that val add ) (
  Void unused=(
    Void unused0=(
      This0::set(that val add ) ::that::#bangequal(that ) cond=that.#bangequal(that:This3.N.#from(builder:(
        This3.N::#builder() b=This3.N.#builder()
        Void unused3=b.#0()
        b
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This0.#apply(val:this.val(), next:this.next().set(that:that.#less(that:This3.N.#from(builder:(
          This3.N::#builder() b0=This3.N.#builder()
          Void unused5=b0.#1()
          b0
          ))), val:val, add:add))
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched3 void
      return This0.#apply(val:val, next:this)
      )
    Void unused2=return This0.#apply(val:val, next:this.next())
    void
    )
  
  catch return This0::set(that val add )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method remove(that ) (
  Void unused=(
    Void unused0=(
      This0::remove(that ) ::that::#bangequal(that ) cond=that.#bangequal(that:This3.N.#from(builder:(
        This3.N::#builder() b=This3.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This0.#apply(val:this.val(), next:this.next().remove(that:that.#less(that:This3.N.#from(builder:(
          This3.N::#builder() b0=This3.N.#builder()
          Void unused4=b0.#1()
          b0
          )))))
        )
      )
    Void unused1=return this.next()
    void
    )
  
  catch return This0::remove(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
CellEnd:{<:This1.Cell
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
method get(that ) error This2.CollectionErrors.unreachable()
method set(that val add ) (
  Void unused=(
    Void unused0=(
      This0::set(that val add ) ::add::#bang() cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        error This2.CollectionErrors.unreachable()
        )
      )
    Void unused1=(
      This0::set(that val add ) ::that::#equalequal(that ) cond0=that.#equalequal(that:This3.N.#from(builder:(
        This3.N::#builder() b=This3.N.#builder()
        Void unused4=b.#0()
        b
        )))
      (
        Void unused5=cond0.#checkTrue()
        
        catch exception Void catched3 void
        return This1.CellNext.#apply(val:val, next:this)
        )
      )
    Void unused2=error This2.CollectionErrors.unreachable()
    void
    )
  
  catch return This0::set(that val add )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method remove(that ) error This2.CollectionErrors.unreachable()}
class method 
mut This0 empty() This0.#apply(head:This0.CellEnd.#apply(), size:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Any val(This2.N that) (
  Void unused=this.checkBound(that:that)
  this.head().get(that:that)
  )
mut method 
Void #apply(This2.N that, Any val) (
  Void unused=this.checkBound(that:that)
  this.head(that:this.head().set(that:that, val:val, add:This2.Bool.false()))
  )
mut method 
Void add(This2.N that, Any val) (
  Void unused=this.checkBoundAdd(that:that)
  Void unused0=this.head(that:this.head().set(that:that, val:val, add:This2.Bool.true()))
  this.size(that:this.size().#plus(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
mut method 
Void remove(This2.N that) (
  Void unused=this.checkBound(that:that)
  Void unused0=this.head(that:this.head().remove(that:that))
  this.size(that:this.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
method 
This0 without(This2.N that) (
  Void unused=this.checkBound(that:that)
  This0.#apply(head:this.head().remove(that:that), size:this.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 withAlso(This2.N that, Any val) (
  Void unused=this.checkBoundAdd(that:that)
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.true()), size:this.size().#plus(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 with(This2.N that, Any val) (
  Void unused=this.checkBound(that:that)
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.false()), size:this.size().#plus(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
read method 
Void checkBound(This2.N that) (
  Void unused=(
    This2.N::#left(that ) cond=that.#left(that:This2.N.#from(builder:(
      This2.N::#builder() b=This2.N.#builder()
      Void unused0=b.#0()
      b
      )))
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched1 void
      error This1.CollectionErrors.negBound(that:that, list:this)
      )
    )
  (
    This0::size() ::#leftequal(that ) cond0=this.size().#leftequal(that:that)
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched4 void
      error This1.CollectionErrors.outBound(that:that, list:this)
      )
    )
  )
read method 
Void checkBoundAdd(This2.N that) (
  Void unused=(
    This2.N::#left(that ) cond=that.#left(that:This2.N.#from(builder:(
      This2.N::#builder() b=This2.N.#builder()
      Void unused0=b.#0()
      b
      )))
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched1 void
      error This1.CollectionErrors.negBound(that:that, list:this)
      )
    )
  (
    This0::size() ::#left(that ) cond0=this.size().#left(that:that)
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched4 void
      error This1.CollectionErrors.outBound(that:that, list:this)
      )
    )
  )}
class method 
Library vector(class Any of) This1.SafeOperatorsAccess.redirect(that:This0.VectorTrait.#apply(), srcBinaryRepr:This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#E()
  Void unused0=b.#l()
  Void unused1=b.#e()
  Void unused2=b.#m()
  b
  )).binaryRepr(), dest:of)
class method 
Library vector(class Any ofEq) (
  This1.SafeOperatorsAccess::compose(left right ) lib=This1.SafeOperatorsAccess.compose(left:This0.VectorTrait.#apply(), right:This0.CodeEq.#apply())
  This1.SafeOperatorsAccess.redirect(that:lib, srcBinaryRepr:This1.S.#from(builder:(
    This1.S::#builder() b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )).binaryRepr(), dest:ofEq)
  )
VectorTrait:{
class method 
Library #apply() {
Varres0__92_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.MutListAny inner) 
class method 
mut This0 #apply(mut This2.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.MutListAny #inner() 
read method 
read This2.MutListAny inner() 
class method 
This0 #immK(This2.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This0.Elem that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This0.Elem that) this.withAlso(that:this.size(), val:that)
Elem:{}
class method 
This0.Elem cast(Any that) (
  Void unused=(
    Void unused0=(
      This0.Elem that0=(
        Void unused1=return that
        
        catch return This0.Elem casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This0.Elem result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This0.Elem val(This3.N that) This0.cast(that:this.inner().val(that:that))
read method 
This0.Elem left() This0.cast(that:this.inner().val(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This0.Elem right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This3.N that, This0.Elem val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This3.N that, This0.Elem val) this.#inner().add(that:that, val:val)
mut method 
Void add(This0.Elem right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This0.Elem left) this.#inner().add(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.N that) this.#inner().remove(that:that)
mut method 
Void left(This0.Elem that) this.#inner().#apply(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This0.Elem that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This3.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This3.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This3.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This3.N size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0__92_0 varres=This0.Varres0__92_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.MutListAny that() 
read method 
This5.N from() 
mut method 
Void from(This5.N that) 
read method 
This5.N to() 
read method 
This5.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.N.#from(builder:(
    This5.N::#builder() b=This5.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This5.N.#from(builder:(
      This5.N::#builder() b0=This5.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Elem #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This3.N from, This3.N to, This3.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This3.N stopOk) this.vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This3.N from, This3.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This1.Elem #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.MutListAny that, This4.N from, This4.N to, This4.N stopOk) 
class method 
lent This0 #apply(read This3.MutListAny that, This4.N from, This4.N to, This4.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #to() 
mut method 
This4.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This3.N from, This3.N to, This3.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This3.N stopOk) this.#vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This3.N from, This3.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This1.Elem #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.MutListAny that, This4.N from, This4.N to, This4.N stopOk) 
class method 
mut This0 #apply(mut This3.MutListAny that, This4.N from, This4.N to, This4.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #to() 
mut method 
This4.N #stopOk() 
mut method 
Void inner(This1.Elem that) this.#that().#apply(that:this.from(), val:that)}}}
CodeEq:{
class method 
Library #apply() {
Varaccumulator__93_0:'@private
{
class method 
mut This0 #mutK(fwd This1::#begin() inner) 
class method 
mut This0 #apply(This1::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::#begin() that) 
mut method 
This1::#begin() #inner() }
class method 
This0 #begin() 
method 
This0 #end() 
method 
This0 #add(This0.Elem that) 
read method 
This3.N size() 
Elem:{<:This4.Concept.Equals}
read method 
lent This0.IteratorVal vals() 
IteratorVal:{
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
This1.Elem #inner() 
read method 
Void #close() }
read method 
This3.Bool contains(This0.Elem that) (
  Void unused=(
    Void unused0=(
      This0::vals() e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::vals() ::#inner() ::equals(that ) cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  return This3.Bool.true()
                  )
                )
              )
            
            catch exception Void catched5 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 withoutAll(This0.Elem that) (
  This0::#begin() accumulator=This0.#begin()
  mut This0.Varaccumulator__93_0 varaccumulator=This0.Varaccumulator__93_0.#apply(inner:accumulator)
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e.#inner().equals(that:that).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:e.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
read method 
This3.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::vals() e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            This0::vals() e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          return This3.Bool.false()
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched12 void
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        e1.#close()
        )
      )
    
    catch error This2.IterationFailure catched21 return This3.Bool.false()
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This3.Bool equals(Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}}
Strings:{
Varres0_$%16_0__94_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This1.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This1.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This1.Collections.MutListAny #inner() 
read method 
read This1.Collections.MutListAny inner() 
class method 
This0 #immK(This1.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This1.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.S that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.S that) this.withAlso(that:this.size(), val:that)
class method 
This1.S cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.S that0=(
        Void unused1=return that
        
        catch return This1.S casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This1.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.S val(This1.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.S left() This0.cast(that:this.inner().val(that:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.S right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This1.N.#from(builder:(
    This1.N::#builder() b=This1.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This1.N that, This1.S val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This1.N that, This1.S val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.S right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.S left) this.#inner().add(that:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This1.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.S that) this.#inner().#apply(that:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.S that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This1.N.#from(builder:(
    This1.N::#builder() b=This1.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This1.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This1.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This1.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This1.N size() this.inner().size()
read method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0_$%16_0__94_0 varres=This0.Varres0_$%16_0__94_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.S #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This1.N from, This1.N to, This1.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This1.N stopOk) this.vals(from:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b0=This1.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This1.N.#from(builder:(
  This1.N::#builder() b1=This1.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b2=This1.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This1.N from, This1.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b0=This1.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This1.N.#from(builder:(
  This1.N::#builder() b1=This1.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b2=This1.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This2.Collections.MutListAny that() 
read method 
This2.N from() 
mut method 
Void from(This2.N that) 
read method 
This2.N to() 
read method 
This2.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This2.N.#from(builder:(
      This2.N::#builder() b0=This2.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.S #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This2.Collections.MutListAny that, This2.N from, This2.N to, This2.N stopOk) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.N from, This2.N to, This2.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This2.Collections.MutListAny #that() 
mut method 
This2.N #from() 
mut method 
This2.N #to() 
mut method 
This2.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This1.N from, This1.N to, This1.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This1.N stopOk) this.#vals(from:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b0=This1.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This1.N.#from(builder:(
  This1.N::#builder() b1=This1.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b2=This1.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This1.N from, This1.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This1.N.#from(builder:(
  This1.N::#builder() b=This1.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b0=This1.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This1.N.#from(builder:(
  This1.N::#builder() b1=This1.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This1.N.#from(builder:(
  This1.N::#builder() b2=This1.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This2.Collections.MutListAny that() 
read method 
This2.N from() 
mut method 
Void from(This2.N that) 
read method 
This2.N to() 
read method 
This2.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This2.N.#from(builder:(
      This2.N::#builder() b0=This2.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.S #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This2.Collections.MutListAny that, This2.N from, This2.N to, This2.N stopOk) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny that, This2.N from, This2.N to, This2.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This2.Collections.MutListAny #that() 
mut method 
This2.N #from() 
mut method 
This2.N #to() 
mut method 
This2.N #stopOk() 
mut method 
Void inner(This2.S that) this.#that().#apply(that:this.from(), val:that)}
Varaccumulator_$%17_0__95_0:'@private
{
class method 
mut This0 #mutK(fwd This1::#begin() inner) 
class method 
mut This0 #apply(This1::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::#begin() that) 
mut method 
This1::#begin() #inner() }
read method 
This1.Bool contains(This1.S that) (
  Void unused=(
    Void unused0=(
      This0::vals() e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::vals() ::#inner() ::equals(that ) cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  return This1.Bool.true()
                  )
                )
              )
            
            catch exception Void catched5 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This1.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 withoutAll(This1.S that) (
  This0::#begin() accumulator=This0.#begin()
  mut This0.Varaccumulator_$%17_0__95_0 varaccumulator=This0.Varaccumulator_$%17_0__95_0.#apply(inner:accumulator)
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e.#inner().equals(that:that).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:e.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
read method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::vals() e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            This0::vals() e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          return This1.Bool.false()
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched12 void
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                void
                )
              
              catch return This1.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          void
          )
        
        catch return This1.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        e1.#close()
        )
      )
    
    catch error This1.Collections.IterationFailure catched21 return This1.Bool.false()
    (
      Void unused23=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Bool equals(Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
CTest:{
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()}
Path:{<:This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Named
Varstr__96_0:'@private
{
class method 
mut This0 #mutK(fwd This1::toS() inner) 
class method 
mut This0 #apply(This1::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::toS() that) 
mut method 
This1::toS() #inner() }
Varaccumulator0__97_0:'@private
{
class method 
mut This0 #mutK(fwd This2.S::#from(builder ) ::#begin() inner) 
class method 
mut This0 #apply(This2.S::#from(builder ) ::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S::#from(builder ) ::#begin() that) 
mut method 
This2.S::#from(builder ) ::#begin() #inner() }
class method '@private
mut This0 #mutK__48_0(Library _binaryRepr__48_0) 
class method '@private
This0 _private__49_0(Library _binaryRepr) This0.#mutK__48_0(_binaryRepr__48_0:_binaryRepr)
mut method '@private
Library #_binaryRepr__48_0() 
read method '@private
Library _binaryRepr__48_0() 
method myName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromDocInternalizedS(This1.S that) (
  Void unused=(
    Void unused0=(
      This1.S::#equalequal(that ) cond=that.#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b=This1.S.#builder()
        Void unused2=b.#at()
        Void unused3=b.#dot()
        b
        )).#plusplus(that:This1.S.nl()))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This0.fromS(that:This1.S.#from(builder:(
          This1.S::#builder() b0=This1.S.#builder()
          Void unused5=b0.#T()
          Void unused6=b0.#h()
          Void unused7=b0.#i()
          Void unused8=b0.#s()
          b0
          )))
        )
      )
    Void unused1=return This0.fromS(that:that.#apply(start:This1.N.#from(builder:(
      This1.N::#builder() b1=This1.N.#builder()
      Void unused9=b1.#2()
      b1
      )), end:that.size().#less(that:This1.N.#from(builder:(
      This1.N::#builder() b2=This1.N.#builder()
      Void unused10=b2.#1()
      b2
      )))))
    
    catch error This1.Message x error This0.parseError(that:that, cause:x)
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This0 fromS(This1.Concept.ToS that) This0.#from(binaryRepr:that.toS().binaryRepr())
class method 
This0 #from(This1.S.SBuilder builder) This0.#from(binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This0 #from(Library binaryRepr) (
  Void unused=use This1.SafeOperators check ifInvalidDo(path:binaryRepr) error This0.parseError(that:This1.S.#from(binaryRepr:binaryRepr))
  This0._private__49_0(_binaryRepr:binaryRepr)
  )
class method 
Any parseError(This1.S that) (
  This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This1.S.#from(builder:(
    This1.S::#builder() b0=This1.S.#builder()
    Void unused=b0.#P()
    Void unused0=b0.#a()
    Void unused1=b0.#t()
    Void unused2=b0.#h()
    Void unused3=b0.#1()
    Void unused4=b0.#dot()
    Void unused5=b0.#oSquare()
    b0
    )).#begin().#add(that:that).#end()
  listKind.#from(builder:(
    This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused6=b.#cSquare()
    Void unused7=b.#space()
    Void unused8=b.#U()
    Void unused9=b.#n()
    Void unused10=b.#s()
    Void unused11=b.#a()
    Void unused12=b.#t()
    Void unused13=b.#i()
    Void unused14=b.#s()
    Void unused15=b.#f()
    Void unused16=b.#a()
    Void unused17=b.#c()
    Void unused18=b.#t()
    Void unused19=b.#o()
    Void unused20=b.#r()
    Void unused21=b.#y()
    Void unused22=b.#E()
    Void unused23=b.#r()
    Void unused24=b.#r()
    Void unused25=b.#o()
    Void unused26=b.#r()
    Void unused27=b.#T()
    Void unused28=b.#o()
    Void unused29=b.#A()
    Void unused30=b.#v()
    Void unused31=b.#o()
    Void unused32=b.#i()
    Void unused33=b.#d()
    Void unused34=b.#C()
    Void unused35=b.#y()
    Void unused36=b.#c()
    Void unused37=b.#l()
    Void unused38=b.#e()
    Void unused39=b.#comma()
    Void unused40=b.#space()
    Void unused41=b.#r()
    Void unused42=b.#e()
    Void unused43=b.#p()
    Void unused44=b.#l()
    Void unused45=b.#a()
    Void unused46=b.#c()
    Void unused47=b.#e()
    Void unused48=b.#space()
    Void unused49=b.#i()
    Void unused50=b.#n()
    Void unused51=b.#space()
    Void unused52=b.#A()
    Void unused53=b.#d()
    Void unused54=b.#a()
    Void unused55=b.#m()
    Void unused56=b.#T()
    Void unused57=b.#2()
    b
    ))
  )
class method 
Any parseError(This1.S that, This1.Message cause) (
  This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This1.S.#from(builder:(
    This1.S::#builder() b0=This1.S.#builder()
    Void unused=b0.#P()
    Void unused0=b0.#a()
    Void unused1=b0.#t()
    Void unused2=b0.#h()
    Void unused3=b0.#2()
    Void unused4=b0.#dot()
    Void unused5=b0.#oSquare()
    b0
    )).#begin().#add(that:that).#end()
  listKind.#from(builder:(
    This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused6=b.#cSquare()
    Void unused7=b.#space()
    Void unused8=b.#U()
    Void unused9=b.#n()
    Void unused10=b.#s()
    Void unused11=b.#a()
    Void unused12=b.#t()
    Void unused13=b.#i()
    Void unused14=b.#s()
    Void unused15=b.#f()
    Void unused16=b.#a()
    Void unused17=b.#c()
    Void unused18=b.#t()
    Void unused19=b.#o()
    Void unused20=b.#r()
    Void unused21=b.#y()
    Void unused22=b.#E()
    Void unused23=b.#r()
    Void unused24=b.#r()
    Void unused25=b.#o()
    Void unused26=b.#r()
    Void unused27=b.#T()
    Void unused28=b.#o()
    Void unused29=b.#A()
    Void unused30=b.#v()
    Void unused31=b.#o()
    Void unused32=b.#i()
    Void unused33=b.#d()
    Void unused34=b.#C()
    Void unused35=b.#y()
    Void unused36=b.#c()
    Void unused37=b.#l()
    Void unused38=b.#e()
    Void unused39=b.#comma()
    Void unused40=b.#space()
    Void unused41=b.#r()
    Void unused42=b.#e()
    Void unused43=b.#p()
    Void unused44=b.#l()
    Void unused45=b.#a()
    Void unused46=b.#c()
    Void unused47=b.#e()
    Void unused48=b.#space()
    Void unused49=b.#i()
    Void unused50=b.#n()
    Void unused51=b.#space()
    Void unused52=b.#A()
    Void unused53=b.#d()
    Void unused54=b.#a()
    Void unused55=b.#m()
    Void unused56=b.#T()
    Void unused57=b.#2()
    b
    ))
  )
method 
Library binaryRepr() this._binaryRepr__48_0()
method toS() This1.S.#from(binaryRepr:this._binaryRepr__48_0())
method 
This1.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Path #plusplus(This1.Path that) (
  Void unused=(
    Void unused0=(
      This0::#equalequal(that ) cond=this.#equalequal(that:This1.Path.#from(builder:(
        This1.Path::#builder() b=This1.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        return that
        )
      )
    Void unused1=(
      This1.Path::#equalequal(that ) cond0=that.#equalequal(that:This1.Path.#from(builder:(
        This1.Path::#builder() b0=This1.Path.#builder()
        Void unused8=b0.#T()
        Void unused9=b0.#h()
        Void unused10=b0.#i()
        Void unused11=b0.#s()
        b0
        )))
      (
        Void unused12=cond0.#checkTrue()
        
        catch exception Void catched4 void
        return this
        )
      )
    Void unused2=return This1.Path.#from(binaryRepr:(
      This0::toS() ::#begin() ::#add(that ) ::#add(that ) ::#end() listKind=this.toS().#begin().#add(that:This1.S.#from(builder:(
        This1.S::#builder() b2=This1.S.#builder()
        Void unused13=b2.#dot()
        b2
        ))).#add(that:that).#end()
      listKind.#from(builder:(
        This0::toS() ::#begin() ::#add(that ) ::#add(that ) ::#end() ::#builder() b1=listKind.#builder()
        b1
        ))
      ).binaryRepr())
    void
    )
  
  catch return This1.Path result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
mut This1.Strings names() (
  Void unused=(
    This0::toS() str=this.toS()
    Void unused0=(
      This0::toS() ::#equalequal(that ) cond=str.#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b=This1.S.#builder()
        Void unused4=b.#T()
        Void unused5=b.#h()
        Void unused6=b.#i()
        Void unused7=b.#s()
        b
        )))
      (
        Void unused8=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This1.Strings.empty()
        )
      )
    mut This0.Varstr__96_0 varstr=This0.Varstr__96_0.#apply(inner:str)
    Void unused1=varstr.inner(that:varstr.#inner().#plusplus(that:This1.S.#from(builder:(
      This1.S::#builder() b0=This1.S.#builder()
      Void unused9=b0.#dot()
      b0
      ))))
    This1.Strings::empty() result=This1.Strings.empty()
    Void unused2=(
      Void unused10=loop (
        Void unused11=varstr.#inner().#bangequal(that:This1.S.#from(builder:(
          This1.S::#builder() b1=This1.S.#builder()
          b1
          ))).#checkTrue()
        (
          This0.Varstr__96_0::#inner() ::firstIndexOf(that ) pos=varstr.#inner().firstIndexOf(that:This1.S.#from(builder:(
            This1.S::#builder() b2=This1.S.#builder()
            Void unused13=b2.#dot()
            b2
            )))
          Void unused12=result.add(right:varstr.#inner().#apply(end:pos))
          varstr.inner(that:varstr.#inner().#apply(start:pos.#plus(that:This1.N.#from(builder:(
            This1.N::#builder() b3=This1.N.#builder()
            Void unused14=b3.#1()
            b3
            )))))
          )
        )
      
      catch exception Void catched8 void
      void
      )
    Void unused3=return result
    void
    )
  
  catch return mut This1.Strings result0 result0
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This1.Path from(read This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Strings::isEmpty() cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This1.Path.#from(builder:(
          This1.Path::#builder() b=This1.Path.#builder()
          Void unused3=b.#T()
          Void unused4=b.#h()
          Void unused5=b.#i()
          Void unused6=b.#s()
          b
          ))
        )
      )
    This1.S::#from(builder ) ::#begin() ::#end() ::#from(builder ) s=(
      This1.S::#from(builder ) ::#begin() ::#end() listKind=(
        This1.S::#from(builder ) ::#begin() accumulator=This1.S.#from(builder:(
          This1.S::#builder() b1=This1.S.#builder()
          b1
          )).#begin()
        mut This0.Varaccumulator0__97_0 varaccumulator=This0.Varaccumulator0__97_0.#apply(inner:accumulator)
        Void unused7=(
          This1.Strings::vals() n=names.vals()
          (
            Void unused8=(
              Void unused9=(
                Void unused10=loop (
                  Void unused11=n.#next()
                  
                  catch exception Void catched4 (
                    Void unused12=(
                      Void unused13=n.#checkEnd()
                      
                      catch exception Void catched5 void
                      void
                      )
                    exception void
                    )
                  varaccumulator.inner(that:varaccumulator.#inner().#add(that:n.#inner(), separedBy:This1.S.#from(builder:(
                    This1.S::#builder() b2=This1.S.#builder()
                    Void unused14=b2.#dot()
                    b2
                    ))))
                  )
                
                catch exception Void catched8 void
                void
                )
              
              catch exception Any propagated (
                Void unused15=n.#close()
                exception propagated
                )
              void
              )
            
            catch return This1.Path propagated0 (
              Void unused16=n.#close()
              return propagated0
              )
            n.#close()
            )
          )
        varaccumulator.#inner().#end()
        )
      listKind.#from(builder:(
        This1.S::#from(builder ) ::#begin() ::#end() ::#builder() b0=listKind.#builder()
        b0
        ))
      )
    Void unused1=return This0.fromS(that:s)
    void
    )
  
  catch return This1.Path result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This1.Path fresh(This1.S name) This1.Path.fromS(that:This1.SafeOperators.freshName(that:name))
class method 
This1.Path fresh() this.fresh(name:This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#F()
  Void unused0=b.#r()
  Void unused1=b.#e()
  Void unused2=b.#s()
  Void unused3=b.#h()
  b
  )))
class method 
This1.Path fresh(This1.Path path) (
  Void unused=(
    mut This1.Strings names=path.names()
    Void unused0=(
      This1.Strings::isEmpty() cond=names.isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return this.fresh()
        )
      )
    This1.SafeOperators::freshName(that ) right=This1.SafeOperators.freshName(that:names.right())
    Void unused1=names.right(that:right)
    Void unused2=return This1.Path.from(names:names)
    void
    )
  
  catch return This1.Path result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Selector:{<:This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Named
Varaccumulator1__98_0:'@private
{
class method 
mut This0 #mutK(fwd This2.S::#from(builder ) ::#begin() inner) 
class method 
mut This0 #apply(This2.S::#from(builder ) ::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S::#from(builder ) ::#begin() that) 
mut method 
This2.S::#from(builder ) ::#begin() #inner() }
Varresult__99_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Strings::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Strings::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Strings::#begin() ::#end() that) 
mut method 
This2.Strings::#begin() ::#end() #inner() }
Varstr0__100_0:'@private
{
class method 
mut This0 #mutK(fwd This1::toS() inner) 
class method 
mut This0 #apply(This1::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::toS() that) 
mut method 
This1::toS() #inner() }
Vartot__101_0:'@private
{
class method 
mut This0 #mutK(fwd This2.SafeOperators::freshName(that ) ::#plusplus(that ) inner) 
class method 
mut This0 #apply(This2.SafeOperators::freshName(that ) ::#plusplus(that ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.SafeOperators::freshName(that ) ::#plusplus(that ) that) 
mut method 
This2.SafeOperators::freshName(that ) ::#plusplus(that ) #inner() }
Varname__102_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Selector::name() inner) 
class method 
mut This0 #apply(This2.Selector::name() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Selector::name() that) 
mut method 
This2.Selector::name() #inner() }
class method '@private
mut This0 #mutK__50_0(Library _binaryRepr__50_0) 
class method '@private
This0 _private__51_0(Library _binaryRepr) This0.#mutK__50_0(_binaryRepr__50_0:_binaryRepr)
mut method '@private
Library #_binaryRepr__50_0() 
read method '@private
Library _binaryRepr__50_0() 
method myName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) This0.#from(binaryRepr:that.toS().binaryRepr())
class method 
This0 #from(This1.S.SBuilder builder) This0.#from(binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This0 #from(Library binaryRepr) (
  Void unused=use This1.SafeOperators check ifInvalidDo(selector:binaryRepr) error This0.parseError(that:This1.S.#from(binaryRepr:binaryRepr))
  This0._private__51_0(_binaryRepr:binaryRepr)
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  This1.S::#builder() b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#e()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#U()
  Void unused9=b.#n()
  Void unused10=b.#s()
  Void unused11=b.#a()
  Void unused12=b.#t()
  Void unused13=b.#i()
  Void unused14=b.#s()
  Void unused15=b.#f()
  Void unused16=b.#a()
  Void unused17=b.#c()
  Void unused18=b.#t()
  Void unused19=b.#o()
  Void unused20=b.#r()
  Void unused21=b.#y()
  Void unused22=b.#E()
  Void unused23=b.#r()
  Void unused24=b.#r()
  Void unused25=b.#o()
  Void unused26=b.#r()
  Void unused27=b.#T()
  Void unused28=b.#o()
  Void unused29=b.#A()
  Void unused30=b.#v()
  Void unused31=b.#o()
  Void unused32=b.#i()
  Void unused33=b.#d()
  Void unused34=b.#C()
  Void unused35=b.#y()
  Void unused36=b.#c()
  Void unused37=b.#l()
  Void unused38=b.#e()
  Void unused39=b.#comma()
  Void unused40=b.#space()
  Void unused41=b.#r()
  Void unused42=b.#e()
  Void unused43=b.#p()
  Void unused44=b.#l()
  Void unused45=b.#a()
  Void unused46=b.#c()
  Void unused47=b.#e()
  Void unused48=b.#space()
  Void unused49=b.#i()
  Void unused50=b.#n()
  Void unused51=b.#space()
  Void unused52=b.#A()
  Void unused53=b.#d()
  Void unused54=b.#a()
  Void unused55=b.#m()
  Void unused56=b.#T()
  Void unused57=b.#2()
  b
  ))
class method 
This0 from(This1.S name, This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Strings::isEmpty() cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.fromS(that:name.#plusplus(that:This1.S.#from(builder:(
          This1.S::#builder() b=This1.S.#builder()
          Void unused3=b.#oRound()
          Void unused4=b.#cRound()
          b
          ))))
        )
      )
    This1.S::#from(builder ) ::#begin() ::#end() ::#from(builder ) pars=(
      This1.S::#from(builder ) ::#begin() ::#end() listKind=(
        This1.S::#from(builder ) ::#begin() accumulator=This1.S.#from(builder:(
          This1.S::#builder() b1=This1.S.#builder()
          Void unused6=b1.#oRound()
          b1
          )).#begin()
        mut This0.Varaccumulator1__98_0 varaccumulator=This0.Varaccumulator1__98_0.#apply(inner:accumulator)
        Void unused5=(
          This1.Strings::vals() n=names.vals()
          (
            Void unused7=(
              Void unused8=(
                Void unused9=loop (
                  Void unused10=n.#next()
                  
                  catch exception Void catched4 (
                    Void unused11=(
                      Void unused12=n.#checkEnd()
                      
                      catch exception Void catched5 void
                      void
                      )
                    exception void
                    )
                  varaccumulator.inner(that:varaccumulator.#inner().#add(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
                    This1.S::#builder() b2=This1.S.#builder()
                    Void unused13=b2.#comma()
                    b2
                    )))))
                  )
                
                catch exception Void catched8 void
                void
                )
              
              catch exception Any propagated (
                Void unused14=n.#close()
                exception propagated
                )
              void
              )
            
            catch return This0 propagated0 (
              Void unused15=n.#close()
              return propagated0
              )
            n.#close()
            )
          )
        varaccumulator.#inner().#end()
        )
      listKind.#from(builder:(
        This1.S::#from(builder ) ::#begin() ::#end() ::#builder() b0=listKind.#builder()
        b0
        ))
      )
    Void unused1=return This0.fromS(that:name.#plusplus(that:pars.#apply(end:pars.size().#less(that:This1.N.#from(builder:(
      This1.N::#builder() b3=This1.N.#builder()
      Void unused16=b3.#1()
      b3
      )))).#plusplus(that:This1.S.#from(builder:(
      This1.S::#builder() b4=This1.S.#builder()
      Void unused17=b4.#cRound()
      b4
      )))))
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.S nameAsField() (
  Void unused=(
    This0::name() n=this.name()
    Void unused0=(
      This0::name() ::#apply(that ) ::#equalequal(that ) cond=n.#apply(that:This1.N.#from(builder:(
        This1.N::#builder() b=This1.N.#builder()
        Void unused2=b.#0()
        b
        ))).#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched2 void
        return n.#apply(start:This1.N.#from(builder:(
          This1.N::#builder() b1=This1.N.#builder()
          Void unused5=b1.#1()
          b1
          )))
        )
      )
    Void unused1=return n
    void
    )
  
  catch return This1.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.S prefixAsField() (
  Void unused=(
    Void unused0=(
      This0::toS() ::#apply(that ) ::#equalequal(that ) cond=this.toS().#apply(that:This1.N.#from(builder:(
        This1.N::#builder() b=This1.N.#builder()
        Void unused2=b.#0()
        b
        ))).#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched2 void
        return This1.S.#from(builder:(
          This1.S::#builder() b1=This1.S.#builder()
          Void unused5=b1.#hash()
          b1
          ))
        )
      )
    Void unused1=return This1.S.#from(builder:(
      This1.S::#builder() b2=This1.S.#builder()
      b2
      ))
    void
    )
  
  catch return This1.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
Library binaryRepr() this._binaryRepr__50_0()
method toS() This1.S.#from(binaryRepr:this._binaryRepr__50_0())
method 
This1.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Bool isOperator() (
  Void unused=(
    Void unused0=(
      This0::name() ::size() ::#equalequal(that ) cond=this.name().size().#equalequal(that:This1.N.#from(builder:(
        This1.N::#builder() b=This1.N.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This1.Bool.true()
        )
      )
    Void unused1=return this.name().#apply(that:This1.N.#from(builder:(
      This1.N::#builder() b0=This1.N.#builder()
      Void unused4=b0.#0()
      b0
      ))).#equalequal(that:This1.S.#from(builder:(
      This1.S::#builder() b1=This1.S.#builder()
      Void unused5=b1.#hash()
      b1
      )))
    void
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.S name() (
  This0::toS() str=this.toS()
  str.#apply(end:str.firstIndexOf(that:This1.S.#from(builder:(
    This1.S::#builder() b=This1.S.#builder()
    Void unused=b.#oRound()
    b
    ))))
  )
method 
This1.Strings names() (
  Void unused=(
    This0::toS() str=this.toS()
    mut This0.Varstr0__100_0 varstr=This0.Varstr0__100_0.#apply(inner:str)
    Void unused0=varstr.inner(that:varstr.#inner().#apply(start:varstr.#inner().firstIndexOf(that:This1.S.#from(builder:(
      This1.S::#builder() b=This1.S.#builder()
      Void unused4=b.#oRound()
      b
      ))).#plus(that:This1.N.#from(builder:(
      This1.N::#builder() b0=This1.N.#builder()
      Void unused5=b0.#1()
      b0
      ))), end:varstr.#inner().size().#less(that:This1.N.#from(builder:(
      This1.N::#builder() b1=This1.N.#builder()
      Void unused6=b1.#1()
      b1
      )))).#plusplus(that:This1.S.#from(builder:(
      This1.S::#builder() b2=This1.S.#builder()
      Void unused7=b2.#comma()
      b2
      ))))
    This1.Strings::#begin() ::#end() result=This1.Strings.#begin().#end()
    Void unused1=(
      This0.Varstr0__100_0::#inner() ::#equalequal(that ) cond=varstr.#inner().#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b3=This1.S.#builder()
        Void unused8=b3.#comma()
        b3
        )))
      (
        Void unused9=cond.#checkTrue()
        
        catch exception Void catched5 void
        return result
        )
      )
    mut This0.Varresult__99_0 varresult=This0.Varresult__99_0.#apply(inner:result)
    Void unused2=(
      Void unused10=loop (
        Void unused11=varstr.#inner().#bangequal(that:This1.S.#from(builder:(
          This1.S::#builder() b4=This1.S.#builder()
          b4
          ))).#checkTrue()
        (
          This0.Varstr0__100_0::#inner() ::firstIndexOf(that ) pos=varstr.#inner().firstIndexOf(that:This1.S.#from(builder:(
            This1.S::#builder() b5=This1.S.#builder()
            Void unused13=b5.#comma()
            b5
            )))
          Void unused12=varresult.inner(that:varresult.#inner().#add(that:varstr.#inner().#apply(end:pos)))
          varstr.inner(that:varstr.#inner().#apply(start:pos.#plus(that:This1.N.#from(builder:(
            This1.N::#builder() b6=This1.N.#builder()
            Void unused14=b6.#1()
            b6
            )))))
          )
        )
      
      catch exception Void catched11 void
      void
      )
    Void unused3=return varresult.#inner()
    void
    )
  
  catch return This1.Strings result0 result0
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This1.Selector fresh(This1.Selector that) (
  Void unused=(
    This1.Selector::name() name=that.name()
    mut This0.Varname__102_0 varname=This0.Varname__102_0.#apply(inner:name)
    Void unused0=(
      This0.Varname__102_0::#inner() ::#equalequal(that ) cond=varname.#inner().#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b=This1.S.#builder()
        b
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        varname.inner(that:This1.S.#from(builder:(
          This1.S::#builder() b0=This1.S.#builder()
          Void unused5=b0.#f()
          Void unused6=b0.#r()
          Void unused7=b0.#e()
          Void unused8=b0.#s()
          Void unused9=b0.#h()
          b0
          )))
        )
      )
    This1.SafeOperators::freshName(that ) fName=This1.SafeOperators.freshName(that:varname.#inner())
    This1.SafeOperators::freshName(that ) ::#plusplus(that ) tot=fName.#plusplus(that:This1.S.#from(builder:(
      This1.S::#builder() b1=This1.S.#builder()
      Void unused10=b1.#oRound()
      b1
      )))
    mut This0.Vartot__101_0 vartot=This0.Vartot__101_0.#apply(inner:tot)
    Void unused1=(
      This1.Selector::names() ::vals() n=that.names().vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=n.#next()
              
              catch exception Void catched5 (
                Void unused15=(
                  Void unused16=n.#checkEnd()
                  
                  catch exception Void catched6 void
                  void
                  )
                exception void
                )
              vartot.inner(that:vartot.#inner().#plusplus(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
                This1.S::#builder() b2=This1.S.#builder()
                Void unused17=b2.#comma()
                b2
                )))))
              )
            
            catch exception Void catched9 void
            void
            )
          
          catch exception Any propagated (
            Void unused18=n.#close()
            exception propagated
            )
          void
          )
        
        catch return This1.Selector propagated0 (
          Void unused19=n.#close()
          return propagated0
          )
        n.#close()
        )
      )
    Void unused2=vartot.inner(that:vartot.#inner().#apply(start:This1.N.#from(builder:(
      This1.N::#builder() b3=This1.N.#builder()
      Void unused20=b3.#0()
      b3
      )), end:vartot.#inner().size().#less(that:This1.N.#from(builder:(
      This1.N::#builder() b4=This1.N.#builder()
      Void unused21=b4.#1()
      b4
      )))).#plusplus(that:This1.S.#from(builder:(
      This1.S::#builder() b5=This1.S.#builder()
      Void unused22=b5.#cRound()
      b5
      ))))
    Void unused3=return This1.Selector.fromS(that:vartot.#inner())
    void
    )
  
  catch return This1.Selector result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
SafeOperators:{'@plugin
'L42.is/connected/withSafeOperators

class method 
Library compose(Library left, Library right) use This0 check compose(left:left, right:right) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#c()
  Void unused14=b.#o()
  Void unused15=b.#m()
  Void unused16=b.#p()
  Void unused17=b.#o()
  Void unused18=b.#s()
  Void unused19=b.#e()
  b
  ))
class method 
Library renameClass(Library that, This1.Path src, This1.Path dest) use This0 check renameClass(that:that, src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#C()
  Void unused20=b.#l()
  Void unused21=b.#a()
  Void unused22=b.#s()
  Void unused23=b.#s()
  b
  ))
class method 
Library renameMethod(Library that, This1.Path path, This1.Selector src, This1.Selector dest) use This0 check renameMethod(that:that, path:path.binaryRepr(), src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#M()
  Void unused20=b.#e()
  Void unused21=b.#t()
  Void unused22=b.#h()
  Void unused23=b.#o()
  Void unused24=b.#d()
  b
  ))
class method 
Library sumMethods(Library that, This1.Path path, This1.Selector src1, This1.Selector src2, This1.Selector dest, This1.S name) use This0 check sumMethods(that:that, path:path.binaryRepr(), src1:src1.binaryRepr(), src2:src2.binaryRepr(), dest:dest.binaryRepr(), name:name.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#M()
  Void unused20=b.#e()
  Void unused21=b.#t()
  Void unused22=b.#h()
  Void unused23=b.#o()
  Void unused24=b.#d()
  b
  ))
class method 
Library redirect(Library that, This1.Path src, class Any dest) use This0 check redirect(that:that, src:src.binaryRepr(), dest:dest) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#d()
  Void unused16=b.#i()
  Void unused17=b.#r()
  Void unused18=b.#e()
  Void unused19=b.#c()
  Void unused20=b.#t()
  b
  ))
class method 
Library removeImplementation(Library that, This1.Path path) use This0 check removeImplementation(that:that, path:path.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#I()
  Void unused20=b.#m()
  Void unused21=b.#p()
  Void unused22=b.#l()
  Void unused23=b.#e()
  Void unused24=b.#m()
  Void unused25=b.#e()
  Void unused26=b.#n()
  Void unused27=b.#t()
  Void unused28=b.#a()
  Void unused29=b.#t()
  Void unused30=b.#i()
  Void unused31=b.#o()
  Void unused32=b.#n()
  Void unused33=b.#oRound()
  Void unused34=b.#p()
  Void unused35=b.#a()
  Void unused36=b.#t()
  Void unused37=b.#h()
  Void unused38=b.#cRound()
  b
  ))
class method 
Library moveImplementation(Library that, This1.Path path, This1.Selector src, This1.Selector dest) use This0 check moveImplementation(that:that, path:path.binaryRepr(), src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#m()
  Void unused14=b.#o()
  Void unused15=b.#v()
  Void unused16=b.#e()
  Void unused17=b.#I()
  Void unused18=b.#m()
  Void unused19=b.#p()
  Void unused20=b.#l()
  Void unused21=b.#e()
  Void unused22=b.#m()
  Void unused23=b.#e()
  Void unused24=b.#n()
  Void unused25=b.#t()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#i()
  Void unused29=b.#o()
  Void unused30=b.#n()
  b
  ))
class method 
Library removeImplementation(Library that, This1.Path path, This1.Selector selector) use This0 check removeImplementation(that:that, path:path.binaryRepr(), selector:selector.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#I()
  Void unused20=b.#m()
  Void unused21=b.#p()
  Void unused22=b.#l()
  Void unused23=b.#e()
  Void unused24=b.#m()
  Void unused25=b.#e()
  Void unused26=b.#n()
  Void unused27=b.#t()
  Void unused28=b.#a()
  Void unused29=b.#t()
  Void unused30=b.#i()
  Void unused31=b.#o()
  Void unused32=b.#n()
  Void unused33=b.#oRound()
  Void unused34=b.#p()
  Void unused35=b.#a()
  Void unused36=b.#t()
  Void unused37=b.#h()
  Void unused38=b.#comma()
  Void unused39=b.#s()
  Void unused40=b.#e()
  Void unused41=b.#l()
  Void unused42=b.#e()
  Void unused43=b.#c()
  Void unused44=b.#t()
  Void unused45=b.#o()
  Void unused46=b.#r()
  Void unused47=b.#cRound()
  b
  ))
class method 
Library addDocumentation(Library that, This1.Path path, This1.Introspection.Doc doc) use This0 check addDocumentation(that:that, path:path.binaryRepr(), doc:doc.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#a()
  Void unused14=b.#d()
  Void unused15=b.#d()
  Void unused16=b.#D()
  Void unused17=b.#o()
  Void unused18=b.#c()
  Void unused19=b.#u()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#n()
  Void unused23=b.#t()
  Void unused24=b.#a()
  Void unused25=b.#t()
  Void unused26=b.#i()
  Void unused27=b.#o()
  Void unused28=b.#n()
  Void unused29=b.#oRound()
  Void unused30=b.#p()
  Void unused31=b.#a()
  Void unused32=b.#t()
  Void unused33=b.#h()
  Void unused34=b.#cRound()
  b
  ))
class method 
Library addDocumentation(Library that, This1.Path path, This1.Selector selector, This1.Introspection.Doc doc) use This0 check addDocumentation(that:that, path:path.binaryRepr(), selector:selector.binaryRepr(), doc:doc.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#a()
  Void unused14=b.#d()
  Void unused15=b.#d()
  Void unused16=b.#D()
  Void unused17=b.#o()
  Void unused18=b.#c()
  Void unused19=b.#u()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#n()
  Void unused23=b.#t()
  Void unused24=b.#a()
  Void unused25=b.#t()
  Void unused26=b.#i()
  Void unused27=b.#o()
  Void unused28=b.#n()
  Void unused29=b.#oRound()
  Void unused30=b.#p()
  Void unused31=b.#a()
  Void unused32=b.#t()
  Void unused33=b.#h()
  Void unused34=b.#comma()
  Void unused35=b.#s()
  Void unused36=b.#e()
  Void unused37=b.#l()
  Void unused38=b.#e()
  Void unused39=b.#c()
  Void unused40=b.#t()
  Void unused41=b.#o()
  Void unused42=b.#r()
  Void unused43=b.#cRound()
  b
  ))
class method 
This1.S freshName(This1.S that) This1.S.#from(binaryRepr:use This0 check freshName(that:that.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  This1.System.Guard.PluginFailure::#builder() b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#f()
  Void unused14=b.#r()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#h()
  Void unused18=b.#N()
  Void unused19=b.#a()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#oRound()
  Void unused23=b.#t()
  Void unused24=b.#h()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#cRound()
  b
  )))}
Introspection:{'findMeIntrospection

class method 
This0.NestedClass #apply(Library lib) (
  This0.MirrorPr.Lib::#apply(lib ) ::introspectReport(root path ) root=This0.MirrorPr.Lib.#apply(lib:lib).introspectReport(root:root, path:This1.Path.#from(builder:(
    This1.Path::#builder() b=This1.Path.#builder()
    Void unused=b.#T()
    Void unused0=b.#h()
    Void unused1=b.#i()
    Void unused2=b.#s()
    b
    )))
  
  catch exception This1.MetaGuard.NestedClassUnavailable x error This1.Assert.CodeNotReachable.#from(builder:(
    This1.Assert.CodeNotReachable::#builder() b0=This1.Assert.CodeNotReachable.#builder()
    Void unused3=b0.#I()
    Void unused4=b0.#n()
    Void unused5=b0.#t()
    Void unused6=b0.#r()
    Void unused7=b0.#o()
    Void unused8=b0.#s()
    Void unused9=b0.#p()
    Void unused10=b0.#e()
    Void unused11=b0.#c()
    Void unused12=b0.#t()
    Void unused13=b0.#i()
    Void unused14=b0.#o()
    Void unused15=b0.#n()
    Void unused16=b0.#1()
    b0
    ))
  root
  )
class method 
This0.NestedClass #apply(Library lib, This1.Path path) exception This1.MetaGuard.NestedClassUnavailable (
  This0::#apply(lib ) root=This0.#apply(lib:lib)
  root.mirror__56_0().introspectReport(root:root, path:path)
  )
class method 
This0.NestedClass #apply(class Any clazz) (
  This0.MirrorPr.Class::#apply(lib ) ::introspectReport(root path ) root=This0.MirrorPr.Class.#apply(lib:clazz).introspectReport(root:root, path:This1.Path.#from(builder:(
    This1.Path::#builder() b=This1.Path.#builder()
    Void unused=b.#T()
    Void unused0=b.#h()
    Void unused1=b.#i()
    Void unused2=b.#s()
    b
    )))
  
  catch exception This1.MetaGuard.NestedClassUnavailable x error This1.Assert.CodeNotReachable.#from(builder:(
    This1.Assert.CodeNotReachable::#builder() b0=This1.Assert.CodeNotReachable.#builder()
    Void unused3=b0.#I()
    Void unused4=b0.#n()
    Void unused5=b0.#t()
    Void unused6=b0.#r()
    Void unused7=b0.#o()
    Void unused8=b0.#s()
    Void unused9=b0.#p()
    Void unused10=b0.#e()
    Void unused11=b0.#c()
    Void unused12=b0.#t()
    Void unused13=b0.#i()
    Void unused14=b0.#o()
    Void unused15=b0.#n()
    Void unused16=b0.#2()
    b0
    ))
  root
  )
class method 
This0.NestedClass #apply(class Any clazz, This1.Path path) (
  This0.MirrorPr.Class::#apply(lib ) ::introspectReport(root path ) root=This0.MirrorPr.Class.#apply(lib:clazz).introspectReport(root:root, path:path)
  
  catch exception This1.MetaGuard.NestedClassUnavailable x error This1.Assert.CodeNotReachable.#from(builder:(
    This1.Assert.CodeNotReachable::#builder() b=This1.Assert.CodeNotReachable.#builder()
    Void unused=b.#I()
    Void unused0=b.#n()
    Void unused1=b.#t()
    Void unused2=b.#r()
    Void unused3=b.#o()
    Void unused4=b.#s()
    Void unused5=b.#p()
    Void unused6=b.#e()
    Void unused7=b.#c()
    Void unused8=b.#t()
    Void unused9=b.#i()
    Void unused10=b.#o()
    Void unused11=b.#n()
    Void unused12=b.#3()
    b
    ))
  root
  )
MirrorPr:{interface <:This2.Concept.ToS
method 
This1.NestedClass introspectReport(fwd This1.NestedClass root, This2.Path path) exception This2.MetaGuard.NestedClassUnavailable 
method 
This1.Member introspectReportMember(fwd This1.NestedClass root, This2.Path path, This2.N memberN) exception This2.MetaGuard.MemberUnavailable, Void 
method 
This1.Type introspectReportType(fwd This1.NestedClass root, This2.Path path, This2.N memberN, This2.N typeN) exception This2.MetaGuard.MemberUnavailable, Void 
method 
This2.S introspectDocAsString(This2.Path path) exception This2.MetaGuard.NestedClassUnavailable 
method 
This2.S introspectDocAsString(This2.Path path, This2.N annotationN) exception This2.MetaGuard.NestedClassUnavailable, Void 
method 
class Any introspectDocPath(This2.Path path, This2.N annotationN) exception This2.MetaGuard.NestedClassUnavailable, Void 
Lib:{<:This1
class method 
mut This0 #mutK(Library lib) 
class method 
This0 #apply(Library lib) This0.#mutK(lib:lib)
mut method 
Library #lib() 
read method 
Library lib() 
method toS() This3.Introspection.#apply(lib:this.lib()).toS()
method introspectReport(root path ) (
  This2.NestedClass::#apply__57_0(_root path mirror record ) result=This2.NestedClass.#apply__57_0(_root:root, path:path, mirror:this, record:This2.Record.#apply(that:This1.Lib.#apply(lib:use This3.SafeOperators check introspectLibraryReport(that:this.lib(), path:path.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    This3.System.Guard.PluginFailure::#builder() b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#L()
    Void unused24=b.#i()
    Void unused25=b.#b()
    Void unused26=b.#r()
    Void unused27=b.#a()
    Void unused28=b.#r()
    Void unused29=b.#y()
    Void unused30=b.#R()
    Void unused31=b.#e()
    Void unused32=b.#p()
    Void unused33=b.#o()
    Void unused34=b.#r()
    Void unused35=b.#t()
    b
    )))))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )
method introspectReportMember(root path memberN ) (
  This2.Record::dispatch(root path mirror memberN record ) result=This2.Record.dispatch(root:root, path:path, mirror:this, memberN:memberN, record:use This3.SafeOperators check introspectLibraryReportMember(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  result
  )
method introspectReportType(root path memberN typeN ) (
  This2.Type::#apply__62_0(root path memberN typeN record ) result=This2.Type.#apply__62_0(root:root, path:path, memberN:memberN, typeN:typeN, record:This2.Record.#apply(that:This1.Lib.#apply(lib:use This3.SafeOperators check introspectLibraryReportType(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr(), typeN:typeN.binaryRepr()) exception void)))
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  result
  )
method introspectDocAsString(path annotationN ) (
  This3.S::#from(binaryRepr ) result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectLibraryDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )
method introspectDocAsString(path ) (
  This3.S::#from(binaryRepr ) result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectLibraryDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused=b.#0()
    b
    )).binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    This3.System.Guard.PluginFailure::#builder() b0=This3.System.Guard.PluginFailure.#builder()
    Void unused0=b0.#S()
    Void unused1=b0.#a()
    Void unused2=b0.#f()
    Void unused3=b0.#e()
    Void unused4=b0.#O()
    Void unused5=b0.#p()
    Void unused6=b0.#e()
    Void unused7=b0.#r()
    Void unused8=b0.#a()
    Void unused9=b0.#t()
    Void unused10=b0.#o()
    Void unused11=b0.#r()
    Void unused12=b0.#s()
    Void unused13=b0.#dot()
    Void unused14=b0.#i()
    Void unused15=b0.#n()
    Void unused16=b0.#t()
    Void unused17=b0.#r()
    Void unused18=b0.#o()
    Void unused19=b0.#s()
    Void unused20=b0.#p()
    Void unused21=b0.#e()
    Void unused22=b0.#c()
    Void unused23=b0.#t()
    Void unused24=b0.#L()
    Void unused25=b0.#i()
    Void unused26=b0.#b()
    Void unused27=b0.#r()
    Void unused28=b0.#a()
    Void unused29=b0.#r()
    Void unused30=b0.#y()
    Void unused31=b0.#D()
    Void unused32=b0.#o()
    Void unused33=b0.#c()
    Void unused34=b0.#A()
    Void unused35=b0.#s()
    Void unused36=b0.#S()
    Void unused37=b0.#t()
    Void unused38=b0.#r()
    Void unused39=b0.#i()
    Void unused40=b0.#n()
    Void unused41=b0.#g()
    b0
    )))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )
method introspectDocPath(path annotationN ) (
  class Any result=use This3.SafeOperators check introspectLibraryDocPath(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    This3.System.Guard.PluginFailure::#builder() b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#L()
    Void unused24=b.#i()
    Void unused25=b.#b()
    Void unused26=b.#r()
    Void unused27=b.#a()
    Void unused28=b.#r()
    Void unused29=b.#y()
    Void unused30=b.#D()
    Void unused31=b.#o()
    Void unused32=b.#c()
    Void unused33=b.#P()
    Void unused34=b.#a()
    Void unused35=b.#t()
    Void unused36=b.#h()
    b
    ))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )}
Class:{<:This1
class method 
mut This0 #mutK(class Any lib) 
class method 
This0 #apply(class Any lib) This0.#mutK(lib:lib)
mut method 
class Any #lib() 
read method 
class Any lib() 
method toS() This3.Introspection.#apply(clazz:this.lib()).toS()
method introspectReport(root path ) (
  This2.Record::#apply(lib ) record=This2.Record.#apply(lib:use This3.SafeOperators check introspectTypeReport(that:this.lib(), path:path.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    This3.System.Guard.PluginFailure::#builder() b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#T()
    Void unused24=b.#y()
    Void unused25=b.#p()
    Void unused26=b.#e()
    Void unused27=b.#R()
    Void unused28=b.#e()
    Void unused29=b.#p()
    Void unused30=b.#o()
    Void unused31=b.#r()
    Void unused32=b.#t()
    b
    )))
  This2.Record::#apply(lib ) ::docOf(path ) ::annotations() ::left() ::referredClass() realRootType=record.docOf(path:This3.Path.#from(builder:(
    This3.Path::#builder() b0=This3.Path.#builder()
    Void unused33=b0.#M()
    Void unused34=b0.#y()
    Void unused35=b0.#C()
    Void unused36=b0.#l()
    Void unused37=b0.#a()
    Void unused38=b0.#s()
    Void unused39=b0.#s()
    b0
    ))).annotations().left().referredClass()
  This2.NestedClass::#apply__57_0(_root path mirror record ) result=This2.NestedClass.#apply__57_0(_root:result, path:This3.Path.#from(builder:(
    This3.Path::#builder() b1=This3.Path.#builder()
    Void unused40=b1.#T()
    Void unused41=b1.#h()
    Void unused42=b1.#i()
    Void unused43=b1.#s()
    b1
    )), mirror:This0.#apply(lib:realRootType), record:record)
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )
method introspectReportMember(root path memberN ) (
  This2.Record::dispatch(root path mirror memberN record ) result=This2.Record.dispatch(root:root, path:path, mirror:this, memberN:memberN, record:use This3.SafeOperators check introspectTypeReportMember(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  result
  )
method introspectReportType(root path memberN typeN ) (
  This2.Type::#apply__62_0(root path memberN typeN record ) result=This2.Type.#apply__62_0(root:root, path:path, memberN:memberN, typeN:typeN, record:This2.Record.#apply(that:This1.Lib.#apply(lib:use This3.SafeOperators check introspectTypeReportType(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr(), typeN:typeN.binaryRepr()) exception void)))
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  result
  )
method introspectDocAsString(path annotationN ) (
  This3.S::#from(binaryRepr ) result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectTypeDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )
method introspectDocAsString(path ) (
  This3.S::#from(binaryRepr ) result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectTypeDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused=b.#0()
    b
    )).binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    This3.System.Guard.PluginFailure::#builder() b0=This3.System.Guard.PluginFailure.#builder()
    Void unused0=b0.#S()
    Void unused1=b0.#a()
    Void unused2=b0.#f()
    Void unused3=b0.#e()
    Void unused4=b0.#O()
    Void unused5=b0.#p()
    Void unused6=b0.#e()
    Void unused7=b0.#r()
    Void unused8=b0.#a()
    Void unused9=b0.#t()
    Void unused10=b0.#o()
    Void unused11=b0.#r()
    Void unused12=b0.#s()
    Void unused13=b0.#dot()
    Void unused14=b0.#i()
    Void unused15=b0.#n()
    Void unused16=b0.#t()
    Void unused17=b0.#r()
    Void unused18=b0.#o()
    Void unused19=b0.#s()
    Void unused20=b0.#p()
    Void unused21=b0.#e()
    Void unused22=b0.#c()
    Void unused23=b0.#t()
    Void unused24=b0.#T()
    Void unused25=b0.#y()
    Void unused26=b0.#p()
    Void unused27=b0.#e()
    Void unused28=b0.#D()
    Void unused29=b0.#o()
    Void unused30=b0.#c()
    Void unused31=b0.#A()
    Void unused32=b0.#s()
    Void unused33=b0.#S()
    Void unused34=b0.#t()
    Void unused35=b0.#r()
    Void unused36=b0.#i()
    Void unused37=b0.#n()
    Void unused38=b0.#g()
    b0
    )))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )
method introspectDocPath(path annotationN ) (
  class Any result=use This3.SafeOperators check introspectTypeDocPath(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    This3.System.Guard.PluginFailure::#builder() b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#T()
    Void unused24=b.#y()
    Void unused25=b.#p()
    Void unused26=b.#e()
    Void unused27=b.#D()
    Void unused28=b.#o()
    Void unused29=b.#c()
    Void unused30=b.#P()
    Void unused31=b.#a()
    Void unused32=b.#t()
    Void unused33=b.#h()
    b
    ))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  result
  )}}
Doc:{<:This2.Concept.ToS, This2.Concept.Named
VaraN__103_0:'@private
{
class method 
mut This0 #mutK(fwd This3.N::#from(builder ) inner) 
class method 
mut This0 #apply(This3.N::#from(builder ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.N::#from(builder ) that) 
mut method 
This3.N::#from(builder ) #inner() }
Varresult0__104_0:'@private
{
class method 
mut This0 #mutK(fwd This1.Annotations::#begin() ::#end() inner) 
class method 
mut This0 #apply(This1.Annotations::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1.Annotations::#begin() ::#end() that) 
mut method 
This1.Annotations::#begin() ::#end() #inner() }
class method '@private
mut This0 #mutK__52_0(Library _binaryRepr__52_0, This0.Annotations _annotations__52_0) 
class method '@private
This0 _private__53_0(Library _binaryRepr, This0.Annotations _annotations) This0.#mutK__52_0(_binaryRepr__52_0:_binaryRepr, _annotations__52_0:_annotations)
mut method '@private
Library #_binaryRepr__52_0() 
read method '@private
Library _binaryRepr__52_0() 
mut method '@private
This0.Annotations #_annotations__52_0() 
read method '@private
This0.Annotations _annotations__52_0() 
method myName() This2.GetMyName.#apply(that:This0)
Annotation:{<:This3.Concept.ToS, This3.Concept.Named
class method 
mut This0 #mutK(Library _binaryRepr, This3.S text, This3.N index) 
class method 
This0 #apply(Library _binaryRepr, This3.S text, This3.N index) This0.#mutK(_binaryRepr:_binaryRepr, text:text, index:index)
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
mut method 
This3.S #text() 
read method 
This3.S text() 
mut method 
This3.N #index() 
read method 
This3.N index() 
method myName() This3.GetMyName.#apply(that:This0)
method toS() this.text()
method 
class Any referredClass() (
  Void unused=(
    Void unused0=return This3.Introspection.Record.#apply(lib:this._binaryRepr()).that().introspectDocPath(path:This3.Path.#from(builder:(
      This3.Path::#builder() b=This3.Path.#builder()
      Void unused1=b.#T()
      Void unused2=b.#h()
      Void unused3=b.#i()
      Void unused4=b.#s()
      b
      )), annotationN:this.index())
    
    catch exception This3.MetaGuard.NestedClassUnavailable x error This3.Assert.CodeNotReachable.#from(builder:(
      This3.Assert.CodeNotReachable::#builder() b0=This3.Assert.CodeNotReachable.#builder()
      Void unused5=b0.#D()
      Void unused6=b0.#o()
      Void unused7=b0.#c()
      Void unused8=b0.#1()
      b0
      )).#apply(that:x)
    catch exception Void x error This3.Assert.ObservedBug.#from(builder:(
      This3.Assert.ObservedBug::#builder() b1=This3.Assert.ObservedBug.#builder()
      Void unused9=b1.#P()
      Void unused10=b1.#l()
      Void unused11=b1.#u()
      Void unused12=b1.#g()
      Void unused13=b1.#i()
      Void unused14=b1.#n()
      Void unused15=b1.#space()
      Void unused16=b1.#i()
      Void unused17=b1.#n()
      Void unused18=b1.#t()
      Void unused19=b1.#r()
      Void unused20=b1.#o()
      Void unused21=b1.#s()
      Void unused22=b1.#p()
      Void unused23=b1.#e()
      Void unused24=b1.#c()
      Void unused25=b1.#t()
      Void unused26=b1.#i()
      Void unused27=b1.#o()
      Void unused28=b1.#n()
      Void unused29=b1.#space()
      Void unused30=b1.#b()
      Void unused31=b1.#u()
      Void unused32=b1.#g()
      b1
      ))
    void
    )
  
  catch return class Any result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This3.Bool hasReferredClass() (
  This0::text() ::#bangequal(that ) ::#and(that ) res=this.text().#bangequal(that:This3.S.#from(builder:(
    This3.S::#builder() b=This3.S.#builder()
    b
    ))).#and(that:this.text().isASCIIUpperCase(that:This3.N.#from(builder:(
    This3.N::#builder() b0=This3.N.#builder()
    Void unused=b0.#0()
    b0
    ))))
  res
  )}
Annotations:{
Varres0__105_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.Annotation that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.Annotation that) this.withAlso(that:this.size(), val:that)
class method 
This1.Annotation cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.Annotation that0=(
        Void unused1=return that
        
        catch return This1.Annotation casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.Annotation result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.Annotation val(This3.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Annotation left() This0.cast(that:this.inner().val(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Annotation right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This3.N that, This1.Annotation val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This3.N that, This1.Annotation val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Annotation right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.Annotation left) this.#inner().add(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.Annotation that) this.#inner().#apply(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.Annotation that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This3.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This3.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This3.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This3.N size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0__105_0 varres=This0.Varres0__105_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.N from() 
mut method 
Void from(This5.N that) 
read method 
This5.N to() 
read method 
This5.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.N.#from(builder:(
    This5.N::#builder() b=This5.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This5.N.#from(builder:(
      This5.N::#builder() b0=This5.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.Annotation #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This3.N from, This3.N to, This3.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This3.N stopOk) this.vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This3.N from, This3.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Annotation #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.N from, This4.N to, This4.N stopOk) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.N from, This4.N to, This4.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #to() 
mut method 
This4.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This3.N from, This3.N to, This3.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This3.N stopOk) this.#vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This3.N from, This3.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.N.#from(builder:(
  This3.N::#builder() b=This3.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b0=This3.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This3.N.#from(builder:(
  This3.N::#builder() b1=This3.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This3.N.#from(builder:(
  This3.N::#builder() b2=This3.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Annotation #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.N from, This4.N to, This4.N stopOk) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.N from, This4.N to, This4.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.N #from() 
mut method 
This4.N #to() 
mut method 
This4.N #stopOk() 
mut method 
Void inner(This2.Annotation that) this.#that().#apply(that:this.from(), val:that)}}
class method 
This0 #apply(Library that) (
  This0.Annotations::#begin() ::#end() result=This0.Annotations.#begin().#end()
  This2.N::#from(builder ) aN=This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))
  mut This0.Varresult0__104_0 varresult=This0.Varresult0__104_0.#apply(inner:result)
  mut This0.VaraN__103_0 varaN=This0.VaraN__103_0.#apply(inner:aN)
  Void unused=(
    Void unused1=loop (
      Void unused2=This2.Bool.true().#checkTrue()
      (' to be able to break
      
        Void unused3=varresult.inner(that:varresult.#inner().#add(that:This0.Annotation.#apply(_binaryRepr:that, text:This2.Introspection.Record.#apply(lib:that).that().introspectDocAsString(path:This2.Path.#from(builder:(
          This2.Path::#builder() b0=This2.Path.#builder()
          Void unused4=b0.#T()
          Void unused5=b0.#h()
          Void unused6=b0.#i()
          Void unused7=b0.#s()
          b0
          )), annotationN:varaN.#inner()), index:varaN.#inner())))
        varaN.inner(that:varaN.#inner().#plus(that:This2.N.#from(builder:(
          This2.N::#builder() b1=This2.N.#builder()
          Void unused8=b1.#1()
          b1
          ))))
        )
      )
    
    catch exception Void catched4 void
    void
    )
  
  catch exception This2.MetaGuard.NestedClassUnavailable x error This2.Assert.CodeNotReachable.#from(builder:(
    This2.Assert.CodeNotReachable::#builder() b2=This2.Assert.CodeNotReachable.#builder()
    Void unused9=b2.#D()
    Void unused10=b2.#o()
    Void unused11=b2.#c()
    Void unused12=b2.#2()
    b2
    )).#apply(that:x)
  This0._private__53_0(_binaryRepr:that, _annotations:varresult.#inner())
  )
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(that:builder.binaryRepr())
method 
Library binaryRepr() this._binaryRepr__52_0()
method toS() (
  Void unused=(
    Void unused0=return This2.Introspection.Record.#apply(lib:this._binaryRepr__52_0()).that().introspectDocAsString(path:This2.Path.#from(builder:(
      This2.Path::#builder() b=This2.Path.#builder()
      Void unused1=b.#T()
      Void unused2=b.#h()
      Void unused3=b.#i()
      Void unused4=b.#s()
      b
      )))
    
    catch exception This2.MetaGuard.NestedClassUnavailable x error This2.Assert.CodeNotReachable.#from(builder:(
      This2.Assert.CodeNotReachable::#builder() b0=This2.Assert.CodeNotReachable.#builder()
      Void unused5=b0.#D()
      Void unused6=b0.#o()
      Void unused7=b0.#c()
      Void unused8=b0.#3()
      b0
      )).#apply(that:x)
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0.Annotations annotations() this._annotations__52_0()}
Record:{
class method 
mut This0 #mutK(This1.MirrorPr that) 
class method 
This0 #apply(This1.MirrorPr that) This0.#mutK(that:that)
mut method 
This1.MirrorPr #that() 
read method 
This1.MirrorPr that() 
class method 
This0 #apply(class Any clazz) This0.#apply(that:This1.MirrorPr.Class.#apply(lib:clazz))
class method 
This0 #apply(Library lib) This0.#apply(that:This1.MirrorPr.Lib.#apply(lib:lib))
method 
Void dbg() (
  This0::that() x=this.that()
  (
    This1.MirrorPr.Lib x0=(
      Void unused=return x
      
      catch return This1.MirrorPr.Lib casted casted
      catch return Any casted exception void
      error {'@stringU
      'CastT-Should be unreachable code
      }
      )
    
    catch exception Void catched1 This2.Debug.#apply(that:This2.S.#from(builder:(
      This2.S::#builder() b=This2.S.#builder()
      Void unused0=b.#S()
      Void unused1=b.#o()
      Void unused2=b.#r()
      Void unused3=b.#r()
      Void unused4=b.#y()
      Void unused5=b.#comma()
      Void unused6=b.#space()
      Void unused7=b.#c()
      Void unused8=b.#a()
      Void unused9=b.#n()
      Void unused10=b.#space()
      Void unused11=b.#n()
      Void unused12=b.#o()
      Void unused13=b.#t()
      Void unused14=b.#space()
      Void unused15=b.#p()
      Void unused16=b.#r()
      Void unused17=b.#i()
      Void unused18=b.#n()
      Void unused19=b.#t()
      Void unused20=b.#space()
      Void unused21=b.#c()
      Void unused22=b.#l()
      Void unused23=b.#a()
      Void unused24=b.#s()
      Void unused25=b.#s()
      Void unused26=b.#space()
      Void unused27=b.#m()
      Void unused28=b.#i()
      Void unused29=b.#r()
      Void unused30=b.#r()
      Void unused31=b.#o()
      Void unused32=b.#r()
      Void unused33=b.#s()
      b
      )))
    (
      Void unused34=This2.Debug.#apply(lib:x0.lib())
      void
      )
    )
  )
method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
method 
This2.S #from(This2.S.SBuilder builder) (
  Void unused=(
    This2.Path::#from(builder ) path=This2.Path.#from(builder:builder)
    Void unused0=return this.that().introspectDocAsString(path:path)
    
    catch exception This2.MetaGuard.MemberUnavailable catched error (
      This2.Assert.CodeNotReachable::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.Assert.CodeNotReachable.#from(builder:(
        This2.Assert.CodeNotReachable::#builder() b0=This2.Assert.CodeNotReachable.#builder()
        Void unused1=b0.#R()
        Void unused2=b0.#e()
        Void unused3=b0.#c()
        Void unused4=b0.#o()
        Void unused5=b0.#r()
        Void unused6=b0.#d()
        Void unused7=b0.#1()
        b0
        )).#begin().#add(that:this.that()).#end()
      listKind.#from(builder:(
        This2.Assert.CodeNotReachable::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
        b
        ))
      ).#apply(that:catched)
    void
    )
  
  catch return This2.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Doc docOf(This2.Path path) (
  Void unused=(
    Void unused0=(
      This0::that() mirror=this.that()
      (
        This1.MirrorPr.Lib mirror0=(
          Void unused2=return mirror
          
          catch return This1.MirrorPr.Lib casted casted
          catch return Any casted exception void
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        
        catch exception Void catched1 void
        (
          Void unused3=return This1.Doc.#apply(that:This2.SafeOperators.renameClass(that:mirror0.lib(), src:path, dest:This2.Path.#from(builder:(
            This2.Path::#builder() b=This2.Path.#builder()
            Void unused4=b.#T()
            Void unused5=b.#h()
            Void unused6=b.#i()
            Void unused7=b.#s()
            b
            ))))
          void
          )
        )
      )
    Void unused1=error This2.Assert.CodeNotReachable.#from(builder:(
      This2.Assert.CodeNotReachable::#builder() b0=This2.Assert.CodeNotReachable.#builder()
      Void unused8=b0.#R()
      Void unused9=b0.#e()
      Void unused10=b0.#c()
      Void unused11=b0.#o()
      Void unused12=b0.#r()
      Void unused13=b0.#d()
      Void unused14=b0.#2()
      b0
      ))
    void
    )
  
  catch return This1.Doc result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
RootForMember:' toPutAs private
{interface 
method 
This2.Member #apply(fwd This2.NestedClass root) }
RootForNested:' toPutAs private
{<:This1.RootForMember
class method 
mut This0 #mutK(This3.Path path, This2.MirrorPr mirror, This2.Record _report) 
class method 
This0 #apply(This3.Path path, This2.MirrorPr mirror, This2.Record _report) This0.#mutK(path:path, mirror:mirror, _report:_report)
mut method 
This3.Path #path() 
read method 
This3.Path path() 
mut method 
This2.MirrorPr #mirror() 
read method 
This2.MirrorPr mirror() 
mut method 
This2.Record #_report() 
read method 
This2.Record _report() 
method #apply(root ) (
  This3.Path::fromS(that ) path=This3.Path.fromS(that:(
    This0::#apply(root ) ::this::_report() listKind=this._report()
    listKind.#from(builder:(
      This0::#apply(root ) ::this::_report() ::#builder() b=listKind.#builder()
      Void unused=b.#K()
      Void unused0=b.#e()
      Void unused1=b.#y()
      b
      ))
    ))
  This2.NestedClass.#apply__57_0(_root:root, path:path, mirror:this.mirror(), record:this._report())
  )}
RootForMethod:' toPutAs private
{<:This1.RootForMember
class method 
mut This0 #mutK(This3.Path path, This3.N memberN, This2.Record _report) 
class method 
This0 #apply(This3.Path path, This3.N memberN, This2.Record _report) This0.#mutK(path:path, memberN:memberN, _report:_report)
mut method 
This3.Path #path() 
read method 
This3.Path path() 
mut method 
This3.N #memberN() 
read method 
This3.N memberN() 
mut method 
This2.Record #_report() 
read method 
This2.Record _report() 
method #apply(root ) This2.Method.#apply__55_0(_root:root, path:this.path(), memberN:this.memberN(), record:this._report())}
class method 
This1.Member dispatch(fwd This1.NestedClass root, This2.Path path, This1.MirrorPr mirror, This2.N memberN, Library record) (
  This1.Record::#apply(lib ) _report=This1.Record.#apply(lib:record)
  This0.RootForMember result=(
    Void unused=(
      This1.Record::#apply(lib ) ::#from(builder ) x=_report.#from(builder:(
        This1.Record::#apply(lib ) ::#builder() b=_report.#builder()
        Void unused5=b.#M()
        Void unused6=b.#e()
        Void unused7=b.#m()
        Void unused8=b.#b()
        Void unused9=b.#e()
        Void unused10=b.#r()
        Void unused11=b.#K()
        Void unused12=b.#i()
        Void unused13=b.#n()
        Void unused14=b.#d()
        b
        ))
      Void unused0=(
        This1.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused15=b0.#I()
          Void unused16=b0.#n()
          Void unused17=b0.#t()
          Void unused18=b0.#e()
          Void unused19=b0.#r()
          Void unused20=b0.#f()
          Void unused21=b0.#a()
          Void unused22=b0.#c()
          Void unused23=b0.#e()
          Void unused24=b0.#I()
          Void unused25=b0.#m()
          Void unused26=b0.#p()
          Void unused27=b0.#l()
          Void unused28=b0.#e()
          Void unused29=b0.#m()
          Void unused30=b0.#e()
          Void unused31=b0.#n()
          Void unused32=b0.#t()
          Void unused33=b0.#e()
          Void unused34=b0.#d()
          Void unused35=b0.#M()
          Void unused36=b0.#e()
          Void unused37=b0.#t()
          Void unused38=b0.#h()
          Void unused39=b0.#o()
          Void unused40=b0.#d()
          b0
          )))
        (
          Void unused41=cond.#checkTrue()
          
          catch exception Void catched2 void
          return This0.RootForMethod.#apply(path:path, memberN:memberN, _report:_report)
          )
        )
      Void unused1=(
        This1.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond0=x.#equalequal(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused42=b1.#I()
          Void unused43=b1.#m()
          Void unused44=b1.#p()
          Void unused45=b1.#l()
          Void unused46=b1.#e()
          Void unused47=b1.#m()
          Void unused48=b1.#e()
          Void unused49=b1.#n()
          Void unused50=b1.#t()
          Void unused51=b1.#e()
          Void unused52=b1.#d()
          Void unused53=b1.#M()
          Void unused54=b1.#e()
          Void unused55=b1.#t()
          Void unused56=b1.#h()
          Void unused57=b1.#o()
          Void unused58=b1.#d()
          b1
          )))
        (
          Void unused59=cond0.#checkTrue()
          
          catch exception Void catched5 void
          return This0.RootForMethod.#apply(path:path, memberN:memberN, _report:_report)
          )
        )
      Void unused2=(
        This1.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond1=x.#equalequal(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused60=b2.#A()
          Void unused61=b2.#b()
          Void unused62=b2.#s()
          Void unused63=b2.#t()
          Void unused64=b2.#r()
          Void unused65=b2.#a()
          Void unused66=b2.#c()
          Void unused67=b2.#t()
          Void unused68=b2.#M()
          Void unused69=b2.#e()
          Void unused70=b2.#t()
          Void unused71=b2.#h()
          Void unused72=b2.#o()
          Void unused73=b2.#d()
          b2
          )))
        (
          Void unused74=cond1.#checkTrue()
          
          catch exception Void catched8 void
          return This0.RootForMethod.#apply(path:path, memberN:memberN, _report:_report)
          )
        )
      Void unused3=(
        This1.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond2=x.#equalequal(that:This2.S.#from(builder:(
          This2.S::#builder() b3=This2.S.#builder()
          Void unused75=b3.#N()
          Void unused76=b3.#e()
          Void unused77=b3.#s()
          Void unused78=b3.#t()
          Void unused79=b3.#e()
          Void unused80=b3.#d()
          Void unused81=b3.#C()
          Void unused82=b3.#l()
          Void unused83=b3.#a()
          Void unused84=b3.#s()
          Void unused85=b3.#s()
          b3
          )))
        (
          Void unused86=cond2.#checkTrue()
          
          catch exception Void catched11 void
          return This0.RootForNested.#apply(path:path, mirror:mirror, _report:_report)
          )
        )
      Void unused4=error This2.Assert.ObservedBug.#apply(text:(
        This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
          This2.S::#builder() b5=This2.S.#builder()
          Void unused87=b5.#i()
          Void unused88=b5.#n()
          Void unused89=b5.#v()
          Void unused90=b5.#a()
          Void unused91=b5.#l()
          Void unused92=b5.#i()
          Void unused93=b5.#d()
          Void unused94=b5.#space()
          Void unused95=b5.#m()
          Void unused96=b5.#e()
          Void unused97=b5.#m()
          Void unused98=b5.#b()
          Void unused99=b5.#e()
          Void unused100=b5.#r()
          Void unused101=b5.#space()
          Void unused102=b5.#k()
          Void unused103=b5.#i()
          Void unused104=b5.#n()
          Void unused105=b5.#d()
          Void unused106=b5.#space()
          b5
          )).#begin().#add(that:x).#end()
        listKind.#from(builder:(
          This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b4=listKind.#builder()
          b4
          ))
        ))
      void
      )
    
    catch return This0.RootForMember result0 result0
    error {'@stringU
    'CurlyBlock-Should be unreachable code
    }
    )
  result.#apply(root:root)
  )}
Member:{interface <:This2.Concept.ToS, This2.Concept.Named, This2.Concept.Equals}
Members:{
Varres0_$%18_0__106_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.Member that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.Member that) this.withAlso(that:this.size(), val:that)
class method 
This1.Member cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.Member that0=(
        Void unused1=return that
        
        catch return This1.Member casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.Member result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.Member val(This2.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Member left() This0.cast(that:this.inner().val(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Member right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This2.N that, This1.Member val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This2.N that, This1.Member val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Member right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.Member left) this.#inner().add(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.Member that) this.#inner().#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.Member that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This2.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This2.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This2.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This2.N size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0_$%18_0__106_0 varres=This0.Varres0_$%18_0__106_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.Member #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N stopOk) this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Member #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N stopOk) this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Member #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() 
mut method 
Void inner(This2.Member that) this.#that().#apply(that:this.from(), val:that)}
Varaccumulator_$%19_0__107_0:'@private
{
class method 
mut This0 #mutK(fwd This1::#begin() inner) 
class method 
mut This0 #apply(This1::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::#begin() that) 
mut method 
This1::#begin() #inner() }
read method 
This2.Bool contains(This1.Member that) (
  Void unused=(
    Void unused0=(
      This0::vals() e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::vals() ::#inner() ::equals(that ) cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  return This2.Bool.true()
                  )
                )
              )
            
            catch exception Void catched5 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 withoutAll(This1.Member that) (
  This0::#begin() accumulator=This0.#begin()
  mut This0.Varaccumulator_$%19_0__107_0 varaccumulator=This0.Varaccumulator_$%19_0__107_0.#apply(inner:accumulator)
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e.#inner().equals(that:that).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:e.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
read method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::vals() e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            This0::vals() e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          return This2.Bool.false()
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched12 void
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                void
                )
              
              catch return This2.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          void
          )
        
        catch return This2.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        e1.#close()
        )
      )
    
    catch error This2.Collections.IterationFailure catched21 return This2.Bool.false()
    (
      Void unused23=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool equals(Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Method:{<:This1.Member, This2.Concept.Equals
VarpN__108_0:'@private
{
class method 
mut This0 #mutK(fwd This3.N::#from(builder ) inner) 
class method 
mut This0 #apply(This3.N::#from(builder ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.N::#from(builder ) that) 
mut method 
This3.N::#from(builder ) #inner() }
Varresult1__109_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Types::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Types::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types::#begin() ::#end() that) 
mut method 
This2.Types::#begin() ::#end() #inner() }
class method '@private
mut This0 #mutK__54_0(fwd This1.NestedClass _root__54_0, This2.Path path__54_0, This2.N memberN__54_0, This1.Record record__54_0) 
class method '@private
This0 #apply__55_0(fwd This1.NestedClass _root, This2.Path path, This2.N memberN, This1.Record record) This0.#mutK__54_0(_root__54_0:_root, path__54_0:path, memberN__54_0:memberN, record__54_0:record)
mut method '@private
This1.NestedClass #_root__54_0() 
read method '@private
This1.NestedClass _root__54_0() 
mut method '@private
This2.Path #path__54_0() 
read method '@private
This2.Path path__54_0() 
mut method '@private
This2.N #memberN__54_0() 
read method '@private
This2.N memberN__54_0() 
mut method '@private
This1.Record #record__54_0() 
read method '@private
This1.Record record__54_0() 
method myName() This2.GetMyName.#apply(that:This0)
method toS() This0.myName().#plusplus(that:(
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
    This2.S::#builder() b0=This2.S.#builder()
    Void unused=b0.#oSquare()
    b0
    )).#begin().#add(that:this.allAsString()).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused0=b.#cSquare()
    b
    ))
  ))
method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::path__54_0() ::#bangequal(that ) cond=this.path__54_0().#bangequal(that:that.path__54_0())
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This2.Bool.false()
        )
      )
    Void unused1=(
      This0::memberN__54_0() ::#bangequal(that ) cond0=this.memberN__54_0().#bangequal(that:this.memberN__54_0())
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        return This2.Bool.false()
        )
      )
    Void unused2=return this.root().#equalequal(that:that.root())
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Doc doc() this.record__54_0().docOf(path:This2.Path.#from(builder:(
  This2.Path::#builder() b=This2.Path.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#m()
  Void unused2=b.#b()
  Void unused3=b.#e()
  Void unused4=b.#r()
  Void unused5=b.#D()
  Void unused6=b.#o()
  Void unused7=b.#c()
  b
  )))
method 
This2.S thisMdf() (
  This0::record__54_0() listKind=this.record__54_0()
  listKind.#from(builder:(
    This0::record__54_0() ::#builder() b=listKind.#builder()
    Void unused=b.#T()
    Void unused0=b.#h()
    Void unused1=b.#i()
    Void unused2=b.#s()
    Void unused3=b.#M()
    Void unused4=b.#d()
    Void unused5=b.#f()
    b
    ))
  )
method ' invariant NestedClass(...).nestedClassFromRoot(path).pathFromRoot()==path
This2.Path pathFromRoot() this.path__54_0()
method 
This2.Selector selector() This2.Selector.fromS(that:(
  This0::record__54_0() listKind=this.record__54_0()
  listKind.#from(builder:(
    This0::record__54_0() ::#builder() b=listKind.#builder()
    Void unused=b.#K()
    Void unused0=b.#e()
    Void unused1=b.#y()
    b
    ))
  ))
method 
This2.S methodKind() (
  This0::record__54_0() listKind=this.record__54_0()
  listKind.#from(builder:(
    This0::record__54_0() ::#builder() b=listKind.#builder()
    Void unused=b.#M()
    Void unused0=b.#e()
    Void unused1=b.#m()
    Void unused2=b.#b()
    Void unused3=b.#e()
    Void unused4=b.#r()
    Void unused5=b.#K()
    Void unused6=b.#i()
    Void unused7=b.#n()
    Void unused8=b.#d()
    b
    ))
  )
method 
This2.S allAsString() (
  This0::record__54_0() listKind=this.record__54_0()
  listKind.#from(builder:(
    This0::record__54_0() ::#builder() b=listKind.#builder()
    Void unused=b.#A()
    Void unused0=b.#l()
    Void unused1=b.#l()
    Void unused2=b.#A()
    Void unused3=b.#s()
    Void unused4=b.#S()
    Void unused5=b.#t()
    Void unused6=b.#r()
    Void unused7=b.#i()
    Void unused8=b.#n()
    Void unused9=b.#g()
    b
    ))
  )
method 
This1.Type returnType() (
  Void unused=(
    Void unused0=return this.root().mirror__56_0().introspectReportType(root:this.root(), path:this.path__54_0(), memberN:this.memberN__54_0(), typeN:This2.N.#from(builder:(
      This2.N::#builder() b=This2.N.#builder()
      Void unused1=b.#0()
      b
      )))
    
    catch exception This2.MetaGuard.MemberUnavailable x error This2.Assert.CodeNotReachable.#from(builder:(
      This2.Assert.CodeNotReachable::#builder() b0=This2.Assert.CodeNotReachable.#builder()
      Void unused2=b0.#M()
      Void unused3=b0.#e()
      Void unused4=b0.#t()
      Void unused5=b0.#h()
      Void unused6=b0.#o()
      Void unused7=b0.#d()
      Void unused8=b0.#1()
      b0
      )).#apply(that:x)
    catch exception Void catched0 error This2.Assert.CodeNotReachable.#from(builder:(
      This2.Assert.CodeNotReachable::#builder() b1=This2.Assert.CodeNotReachable.#builder()
      Void unused9=b1.#v()
      Void unused10=b1.#o()
      Void unused11=b1.#i()
      Void unused12=b1.#d()
      Void unused13=b1.#space()
      Void unused14=b1.#w()
      Void unused15=b1.#a()
      Void unused16=b1.#s()
      Void unused17=b1.#space()
      Void unused18=b1.#t()
      Void unused19=b1.#h()
      Void unused20=b1.#r()
      Void unused21=b1.#o()
      Void unused22=b1.#w()
      Void unused23=b1.#n()
      b1
      ))
    void
    )
  
  catch return This1.Type result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Types exceptions() error This2.Assert.NotImplementedYet.#from(builder:(
  This2.Assert.NotImplementedYet::#builder() b=This2.Assert.NotImplementedYet.#builder()
  b
  ))
method 
This1.Types parameterTypes() (
  Void unused=(
    This1.Types::#begin() ::#end() result=This1.Types.#begin().#end()
    This2.N::#from(builder ) pN=This2.N.#from(builder:(
      This2.N::#builder() b=This2.N.#builder()
      Void unused2=b.#1()
      b
      ))
    mut This0.Varresult1__109_0 varresult=This0.Varresult1__109_0.#apply(inner:result)
    mut This0.VarpN__108_0 varpN=This0.VarpN__108_0.#apply(inner:pN)
    Void unused0=(
      Void unused3=loop (
        Void unused4=This2.Bool.true().#checkTrue()
        (' to be able to break
        
          This1.Type ti=this.root().mirror__56_0().introspectReportType(root:this.root(), path:this.pathFromRoot(), memberN:this.memberN__54_0(), typeN:varpN.#inner())
          Void unused5=varresult.inner(that:varresult.#inner().#add(that:ti))
          varpN.inner(that:varpN.#inner().#plus(that:This2.N.#from(builder:(
            This2.N::#builder() b0=This2.N.#builder()
            Void unused6=b0.#1()
            b0
            ))))
          )
        )
      
      catch exception Void catched3 void
      void
      )
    Void unused1=return varresult.#inner()
    
    catch exception This2.MetaGuard.MemberUnavailable err error This2.Assert.CodeNotReachable.#from(builder:(
      This2.Assert.CodeNotReachable::#builder() b1=This2.Assert.CodeNotReachable.#builder()
      Void unused7=b1.#M()
      Void unused8=b1.#e()
      Void unused9=b1.#t()
      Void unused10=b1.#h()
      Void unused11=b1.#o()
      Void unused12=b1.#d()
      Void unused13=b1.#2()
      b1
      )).#apply(that:err)
    void
    )
  
  catch return This1.Types result0 result0
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool isPrivate() (
  Void unused=(
    Void unused0=(
      This0::doc() ::annotations() ::vals() ann=this.doc().annotations().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ann.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=ann.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::doc() ::annotations() ::vals() ::#inner() ::toS() ::#equalequal(that ) cond=ann.#inner().toS().#equalequal(that:This2.S.#from(builder:(
                  This2.S::#builder() b=This2.S.#builder()
                  Void unused8=b.#p()
                  Void unused9=b.#r()
                  Void unused10=b.#i()
                  Void unused11=b.#v()
                  Void unused12=b.#a()
                  Void unused13=b.#t()
                  Void unused14=b.#e()
                  b
                  )))
                (
                  Void unused15=cond.#checkTrue()
                  
                  catch exception Void catched5 void
                  return This2.Bool.true()
                  )
                )
              )
            
            catch exception Void catched6 void
            void
            )
          
          catch exception Any propagated (
            Void unused16=ann.#close()
            exception propagated
            )
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused17=ann.#close()
          return propagated0
          )
        ann.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.NestedClass root() this._root__54_0()}
Methods:{
Varres0_$%20_0__110_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.Method that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.Method that) this.withAlso(that:this.size(), val:that)
class method 
This1.Method cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.Method that0=(
        Void unused1=return that
        
        catch return This1.Method casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.Method result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.Method val(This2.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Method left() This0.cast(that:this.inner().val(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Method right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This2.N that, This1.Method val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This2.N that, This1.Method val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Method right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.Method left) this.#inner().add(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.Method that) this.#inner().#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.Method that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This2.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This2.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This2.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This2.N size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0_$%20_0__110_0 varres=This0.Varres0_$%20_0__110_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.Method #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N stopOk) this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Method #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N stopOk) this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Method #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() 
mut method 
Void inner(This2.Method that) this.#that().#apply(that:this.from(), val:that)}
Varaccumulator_$%21_0__111_0:'@private
{
class method 
mut This0 #mutK(fwd This1::#begin() inner) 
class method 
mut This0 #apply(This1::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::#begin() that) 
mut method 
This1::#begin() #inner() }
read method 
This2.Bool contains(This1.Method that) (
  Void unused=(
    Void unused0=(
      This0::vals() e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::vals() ::#inner() ::equals(that ) cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  return This2.Bool.true()
                  )
                )
              )
            
            catch exception Void catched5 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 withoutAll(This1.Method that) (
  This0::#begin() accumulator=This0.#begin()
  mut This0.Varaccumulator_$%21_0__111_0 varaccumulator=This0.Varaccumulator_$%21_0__111_0.#apply(inner:accumulator)
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e.#inner().equals(that:that).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:e.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
read method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::vals() e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            This0::vals() e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          return This2.Bool.false()
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched12 void
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                void
                )
              
              catch return This2.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          void
          )
        
        catch return This2.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        e1.#close()
        )
      )
    
    catch error This2.Collections.IterationFailure catched21 return This2.Bool.false()
    (
      Void unused23=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool equals(Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
NestedClass:{'findMeNestedClass
<:This1.Member, This2.Concept.Equals
VarmN__112_0:'@private
{
class method 
mut This0 #mutK(fwd This3.N::#from(builder ) inner) 
class method 
mut This0 #apply(This3.N::#from(builder ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.N::#from(builder ) that) 
mut method 
This3.N::#from(builder ) #inner() }
Varresult2__113_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Members::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Members::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Members::#begin() ::#end() that) 
mut method 
This2.Members::#begin() ::#end() #inner() }
Varaccumulator2__114_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Methods::#begin() inner) 
class method 
mut This0 #apply(This2.Methods::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Methods::#begin() that) 
mut method 
This2.Methods::#begin() #inner() }
Varaccumulator3__115_0:'@private
{
class method 
mut This0 #mutK(fwd This2.NestedClasses::#begin() inner) 
class method 
mut This0 #apply(This2.NestedClasses::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.NestedClasses::#begin() that) 
mut method 
This2.NestedClasses::#begin() #inner() }
Varresult3__116_0:'@private
{
class method 
mut This0 #mutK(fwd This2.NestedClasses::#begin() ::#add(that ) ::#end() inner) 
class method 
mut This0 #apply(This2.NestedClasses::#begin() ::#add(that ) ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.NestedClasses::#begin() ::#add(that ) ::#end() that) 
mut method 
This2.NestedClasses::#begin() ::#add(that ) ::#end() #inner() }
VartN__117_0:'@private
{
class method 
mut This0 #mutK(fwd This3.N::#from(builder ) inner) 
class method 
mut This0 #apply(This3.N::#from(builder ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.N::#from(builder ) that) 
mut method 
This3.N::#from(builder ) #inner() }
Varresult4__118_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Types::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Types::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types::#begin() ::#end() that) 
mut method 
This2.Types::#begin() ::#end() #inner() }
Varnew__119_0:'@private
{
class method 
mut This0 #mutK(fwd This1::removeDup__58_0(that ) inner) 
class method 
mut This0 #apply(This1::removeDup__58_0(that ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::removeDup__58_0(that ) that) 
mut method 
This1::removeDup__58_0(that ) #inner() }
Varresult5__120_0:'@private
{
class method 
mut This0 #mutK(fwd This1::removeDup__58_0(that ) inner) 
class method 
mut This0 #apply(This1::removeDup__58_0(that ) inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::removeDup__58_0(that ) that) 
mut method 
This1::removeDup__58_0(that ) #inner() }
Varextra__121_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Types::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Types::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types::#begin() ::#end() that) 
mut method 
This2.Types::#begin() ::#end() #inner() }
Varresult6__122_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Types::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Types::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types::#begin() ::#end() that) 
mut method 
This2.Types::#begin() ::#end() #inner() }
Varaccumulator4__123_0:'@private
{
class method 
mut This0 #mutK(fwd This3.Count::#begin() inner) 
class method 
mut This0 #apply(This3.Count::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Count::#begin() that) 
mut method 
This3.Count::#begin() #inner() }
Varaccumulator5__124_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Types::#begin() inner) 
class method 
mut This0 #apply(This2.Types::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types::#begin() that) 
mut method 
This2.Types::#begin() #inner() }
VarabsMethods__125_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Methods::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Methods::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Methods::#begin() ::#end() that) 
mut method 
This2.Methods::#begin() ::#end() #inner() }
VarhavePrivate__126_0:'@private
{
class method 
mut This0 #mutK(fwd This3.Bool::false() inner) 
class method 
mut This0 #apply(This3.Bool::false() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Bool::false() that) 
mut method 
This3.Bool::false() #inner() }
Varaccumulator6__127_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Methods::#begin() inner) 
class method 
mut This0 #apply(This2.Methods::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Methods::#begin() that) 
mut method 
This2.Methods::#begin() #inner() }
Varaccumulator7__128_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Methods::#begin() inner) 
class method 
mut This0 #apply(This2.Methods::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Methods::#begin() that) 
mut method 
This2.Methods::#begin() #inner() }
Varresult7__129_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Methods::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.Methods::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Methods::#begin() ::#end() that) 
mut method 
This2.Methods::#begin() ::#end() #inner() }
Varaccumulator8__130_0:'@private
{
class method 
mut This0 #mutK(fwd This2.Methods::#begin() inner) 
class method 
mut This0 #apply(This2.Methods::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Methods::#begin() that) 
mut method 
This2.Methods::#begin() #inner() }
class method '@private
mut This0 #mutK__56_0(fwd This1.NestedClass _root__56_0, This2.Path path__56_0, This1.MirrorPr mirror__56_0, This1.Record record__56_0) 
class method '@private
This0 #apply__57_0(fwd This1.NestedClass _root, This2.Path path, This1.MirrorPr mirror, This1.Record record) This0.#mutK__56_0(_root__56_0:_root, path__56_0:path, mirror__56_0:mirror, record__56_0:record)
mut method '@private
This1.NestedClass #_root__56_0() 
read method '@private
This1.NestedClass _root__56_0() 
mut method '@private
This2.Path #path__56_0() 
read method '@private
This2.Path path__56_0() 
mut method '@private
This1.MirrorPr #mirror__56_0() 
read method '@private
This1.MirrorPr mirror__56_0() 
mut method '@private
This1.Record #record__56_0() 
read method '@private
This1.Record record__56_0() 
method myName() This2.GetMyName.#apply(that:This0)
method toS() This0.myName().#plusplus(that:(
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
    This2.S::#builder() b0=This2.S.#builder()
    Void unused=b0.#oSquare()
    b0
    )).#begin().#add(that:this.allAsString()).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused0=b.#cSquare()
    b
    ))
  ))
method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::path__56_0() ::#bangequal(that ) cond=this.path__56_0().#bangequal(that:that.path__56_0())
      (
        Void unused5=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This2.Bool.false()
        )
      )
    Void unused1=(
      This0::path__56_0() ::#bangequal(that ) cond0=this.path__56_0().#bangequal(that:This2.Path.#from(builder:(
        This2.Path::#builder() b=This2.Path.#builder()
        Void unused6=b.#T()
        Void unused7=b.#h()
        Void unused8=b.#i()
        Void unused9=b.#s()
        b
        )))
      (
        Void unused10=cond0.#checkTrue()
        
        catch exception Void catched3 void
        return this.root().#equalequal(that:that.root())
        )
      )
    This0::hasExternalType() ext=this.hasExternalType()
    Void unused2=(
      This0::hasExternalType() ::#bangequal(that ) cond1=ext.#bangequal(that:that.hasExternalType())
      (
        Void unused11=cond1.#checkTrue()
        
        catch exception Void catched5 void
        return This2.Bool.false()
        )
      )
    Void unused3=(
      Void unused12=ext.#checkTrue()
      
      catch exception Void catched6 void
      return this.externalTypeToS().#equalequal(that:that.externalTypeToS())
      )
    Void unused4=return this.allAsString().#equalequal(that:that.allAsString())
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 root() this._root__56_0()
method 'error for This
This1.Doc nestedDoc() (
  Void unused=(
    This0::path__56_0() ::#equalequal(that ) cond=this.path__56_0().#equalequal(that:This2.Path.#from(builder:(
      This2.Path::#builder() b=This2.Path.#builder()
      Void unused0=b.#T()
      Void unused1=b.#h()
      Void unused2=b.#i()
      Void unused3=b.#s()
      b
      )))
    (
      Void unused4=cond.#checkTrue()
      
      catch exception Void catched1 void
      error This2.Guard.Operation.#from(builder:(
        This2.Guard.Operation::#builder() b0=This2.Guard.Operation.#builder()
        Void unused5=b0.#N()
        Void unused6=b0.#e()
        Void unused7=b0.#s()
        Void unused8=b0.#t()
        Void unused9=b0.#e()
        Void unused10=b0.#d()
        Void unused11=b0.#C()
        Void unused12=b0.#l()
        Void unused13=b0.#a()
        Void unused14=b0.#s()
        Void unused15=b0.#s()
        Void unused16=b0.#dot()
        Void unused17=b0.#n()
        Void unused18=b0.#e()
        Void unused19=b0.#s()
        Void unused20=b0.#t()
        Void unused21=b0.#e()
        Void unused22=b0.#d()
        Void unused23=b0.#D()
        Void unused24=b0.#o()
        Void unused25=b0.#c()
        Void unused26=b0.#oRound()
        Void unused27=b0.#cRound()
        Void unused28=b0.#space()
        Void unused29=b0.#space()
        Void unused30=b0.#T()
        Void unused31=b0.#h()
        Void unused32=b0.#e()
        Void unused33=b0.#space()
        Void unused34=b0.#N()
        Void unused35=b0.#e()
        Void unused36=b0.#s()
        Void unused37=b0.#t()
        Void unused38=b0.#e()
        Void unused39=b0.#d()
        Void unused40=b0.#C()
        Void unused41=b0.#l()
        Void unused42=b0.#a()
        Void unused43=b0.#s()
        Void unused44=b0.#s()
        Void unused45=b0.#space()
        Void unused46=b0.#O()
        Void unused47=b0.#b()
        Void unused48=b0.#j()
        Void unused49=b0.#e()
        Void unused50=b0.#c()
        Void unused51=b0.#t()
        Void unused52=b0.#space()
        Void unused53=b0.#r()
        Void unused54=b0.#e()
        Void unused55=b0.#f()
        Void unused56=b0.#e()
        Void unused57=b0.#r()
        Void unused58=b0.#s()
        Void unused59=b0.#space()
        Void unused60=b0.#t()
        Void unused61=b0.#o()
        Void unused62=b0.#space()
        Void unused63=b0.#T()
        Void unused64=b0.#h()
        Void unused65=b0.#i()
        Void unused66=b0.#s()
        b0
        ))
      )
    )
  this.record__56_0().docOf(path:This2.Path.#from(builder:(
    This2.Path::#builder() b1=This2.Path.#builder()
    Void unused67=b1.#M()
    Void unused68=b1.#e()
    Void unused69=b1.#m()
    Void unused70=b1.#b()
    Void unused71=b1.#e()
    Void unused72=b1.#r()
    Void unused73=b1.#D()
    Void unused74=b1.#o()
    Void unused75=b1.#c()
    b1
    )))
  )
method 'of the library literal
This1.Doc doc() this.record__56_0().docOf(path:This2.Path.#from(builder:(
  This2.Path::#builder() b=This2.Path.#builder()
  Void unused=b.#L()
  Void unused0=b.#i()
  Void unused1=b.#b()
  Void unused2=b.#r()
  Void unused3=b.#a()
  Void unused4=b.#r()
  Void unused5=b.#y()
  Void unused6=b.#D()
  Void unused7=b.#o()
  Void unused8=b.#c()
  b
  )))
method 
This2.Path pathFromRoot() this.path__56_0()
method 
This2.Bool hasExternalType() (
  Void unused=(
    Void unused0=(
      This0::path__56_0() ::#bangequal(that ) cond=this.path__56_0().#bangequal(that:This2.Path.#from(builder:(
        This2.Path::#builder() b=This2.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        return This2.Bool.false()
        )
      )
    Void unused1=(
      This0::mirror__56_0() mirror=this.mirror__56_0()
      (
        This1.MirrorPr.Class mirror0=(
          Void unused8=return mirror
          
          catch return This1.MirrorPr.Class casted casted
          catch return Any casted exception void
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        
        catch exception Void catched4 void
        (
          Void unused9=return This2.Bool.true()
          void
          )
        )
      )
    Void unused2=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
class Any externalType() (
  Void unused=(
    Void unused0=(
      This0::path__56_0() ::#bangequal(that ) cond=this.path__56_0().#bangequal(that:This2.Path.#from(builder:(
        This2.Path::#builder() b=This2.Path.#builder()
        Void unused2=b.#T()
        Void unused3=b.#h()
        Void unused4=b.#i()
        Void unused5=b.#s()
        b
        )))
      (
        Void unused6=cond.#checkTrue()
        
        catch exception Void catched1 void
        error This2.Guard.Operation.#apply(text:(
          This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
            This2.S::#builder() b1=This2.S.#builder()
            Void unused7=b1.#N()
            Void unused8=b1.#e()
            Void unused9=b1.#s()
            Void unused10=b1.#t()
            Void unused11=b1.#e()
            Void unused12=b1.#d()
            Void unused13=b1.#C()
            Void unused14=b1.#l()
            Void unused15=b1.#a()
            Void unused16=b1.#s()
            Void unused17=b1.#s()
            Void unused18=b1.#dot()
            Void unused19=b1.#e()
            Void unused20=b1.#x()
            Void unused21=b1.#t()
            Void unused22=b1.#e()
            Void unused23=b1.#r()
            Void unused24=b1.#n()
            Void unused25=b1.#a()
            Void unused26=b1.#l()
            Void unused27=b1.#T()
            Void unused28=b1.#y()
            Void unused29=b1.#p()
            Void unused30=b1.#e()
            Void unused31=b1.#oRound()
            Void unused32=b1.#cRound()
            Void unused33=b1.#space()
            Void unused34=b1.#T()
            Void unused35=b1.#h()
            Void unused36=b1.#e()
            Void unused37=b1.#space()
            Void unused38=b1.#N()
            Void unused39=b1.#e()
            Void unused40=b1.#s()
            Void unused41=b1.#t()
            Void unused42=b1.#e()
            Void unused43=b1.#d()
            Void unused44=b1.#C()
            Void unused45=b1.#l()
            Void unused46=b1.#a()
            Void unused47=b1.#s()
            Void unused48=b1.#s()
            Void unused49=b1.#space()
            Void unused50=b1.#O()
            Void unused51=b1.#b()
            Void unused52=b1.#j()
            Void unused53=b1.#e()
            Void unused54=b1.#c()
            Void unused55=b1.#t()
            Void unused56=b1.#space()
            Void unused57=b1.#r()
            Void unused58=b1.#e()
            Void unused59=b1.#f()
            Void unused60=b1.#e()
            Void unused61=b1.#r()
            Void unused62=b1.#s()
            Void unused63=b1.#space()
            Void unused64=b1.#t()
            Void unused65=b1.#o()
            Void unused66=b1.#space()
            b1
            )).#begin().#add(that:this.path__56_0()).#end()
          listKind.#from(builder:(
            This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
            b0
            ))
          ))
        )
      )
    Void unused1=(
      This0::mirror__56_0() mirror=this.mirror__56_0()
      (
        This1.MirrorPr.Class mirror1=(
          Void unused67=return mirror
          
          catch return This1.MirrorPr.Class casted0 casted0
          catch return Any casted0 exception void
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        
        catch exception Void catched7 (
          This1.MirrorPr.Lib mirror0=(
            Void unused68=return mirror
            
            catch return This1.MirrorPr.Lib casted casted
            catch return Any casted exception void
            error {'@stringU
            'CastT-Should be unreachable code
            }
            )
          
          catch exception Void catched9 error This2.Assert.CodeNotReachable.#from(builder:(
            This2.Assert.CodeNotReachable::#builder() b2=This2.Assert.CodeNotReachable.#builder()
            Void unused69=b2.#N()
            Void unused70=b2.#e()
            Void unused71=b2.#s()
            Void unused72=b2.#t()
            Void unused73=b2.#e()
            Void unused74=b2.#d()
            Void unused75=b2.#C()
            Void unused76=b2.#l()
            Void unused77=b2.#a()
            Void unused78=b2.#s()
            Void unused79=b2.#s()
            Void unused80=b2.#1()
            b2
            ))
          (
            Void unused81=error This2.Guard.Operation.#from(builder:(
              This2.Guard.Operation::#builder() b3=This2.Guard.Operation.#builder()
              Void unused82=b3.#N()
              Void unused83=b3.#e()
              Void unused84=b3.#s()
              Void unused85=b3.#t()
              Void unused86=b3.#e()
              Void unused87=b3.#d()
              Void unused88=b3.#C()
              Void unused89=b3.#l()
              Void unused90=b3.#a()
              Void unused91=b3.#s()
              Void unused92=b3.#s()
              Void unused93=b3.#dot()
              Void unused94=b3.#e()
              Void unused95=b3.#x()
              Void unused96=b3.#t()
              Void unused97=b3.#e()
              Void unused98=b3.#r()
              Void unused99=b3.#n()
              Void unused100=b3.#a()
              Void unused101=b3.#l()
              Void unused102=b3.#T()
              Void unused103=b3.#y()
              Void unused104=b3.#p()
              Void unused105=b3.#e()
              Void unused106=b3.#oRound()
              Void unused107=b3.#cRound()
              Void unused108=b3.#space()
              Void unused109=b3.#T()
              Void unused110=b3.#h()
              Void unused111=b3.#e()
              Void unused112=b3.#space()
              Void unused113=b3.#N()
              Void unused114=b3.#e()
              Void unused115=b3.#s()
              Void unused116=b3.#t()
              Void unused117=b3.#e()
              Void unused118=b3.#d()
              Void unused119=b3.#C()
              Void unused120=b3.#l()
              Void unused121=b3.#a()
              Void unused122=b3.#s()
              Void unused123=b3.#s()
              Void unused124=b3.#space()
              Void unused125=b3.#O()
              Void unused126=b3.#b()
              Void unused127=b3.#j()
              Void unused128=b3.#e()
              Void unused129=b3.#c()
              Void unused130=b3.#t()
              Void unused131=b3.#space()
              Void unused132=b3.#i()
              Void unused133=b3.#s()
              Void unused134=b3.#space()
              Void unused135=b3.#u()
              Void unused136=b3.#n()
              Void unused137=b3.#b()
              Void unused138=b3.#o()
              Void unused139=b3.#u()
              Void unused140=b3.#n()
              Void unused141=b3.#d()
              b3
              ))
            void
            )
          )
        (
          Void unused142=return mirror1.lib()
          void
          )
        )
      )
    void
    )
  
  catch return class Any result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.S externalTypeToS() (
  Void unused=(
    Void unused0=(
      This0::path__56_0() ::#bangequal(that ) cond=this.path__56_0().#bangequal(that:This2.Path.#from(builder:(
        This2.Path::#builder() b=This2.Path.#builder()
        Void unused4=b.#T()
        Void unused5=b.#h()
        Void unused6=b.#i()
        Void unused7=b.#s()
        b
        )))
      (
        Void unused8=cond.#checkTrue()
        
        catch exception Void catched1 void
        error This2.Guard.Operation.#apply(text:(
          This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
            This2.S::#builder() b1=This2.S.#builder()
            Void unused9=b1.#N()
            Void unused10=b1.#e()
            Void unused11=b1.#s()
            Void unused12=b1.#t()
            Void unused13=b1.#e()
            Void unused14=b1.#d()
            Void unused15=b1.#C()
            Void unused16=b1.#l()
            Void unused17=b1.#a()
            Void unused18=b1.#s()
            Void unused19=b1.#s()
            Void unused20=b1.#dot()
            Void unused21=b1.#e()
            Void unused22=b1.#x()
            Void unused23=b1.#t()
            Void unused24=b1.#e()
            Void unused25=b1.#r()
            Void unused26=b1.#n()
            Void unused27=b1.#a()
            Void unused28=b1.#l()
            Void unused29=b1.#T()
            Void unused30=b1.#y()
            Void unused31=b1.#p()
            Void unused32=b1.#e()
            Void unused33=b1.#T()
            Void unused34=b1.#o()
            Void unused35=b1.#S()
            Void unused36=b1.#oRound()
            Void unused37=b1.#cRound()
            Void unused38=b1.#space()
            Void unused39=b1.#T()
            Void unused40=b1.#h()
            Void unused41=b1.#e()
            Void unused42=b1.#space()
            Void unused43=b1.#N()
            Void unused44=b1.#e()
            Void unused45=b1.#s()
            Void unused46=b1.#t()
            Void unused47=b1.#e()
            Void unused48=b1.#d()
            Void unused49=b1.#C()
            Void unused50=b1.#l()
            Void unused51=b1.#a()
            Void unused52=b1.#s()
            Void unused53=b1.#s()
            Void unused54=b1.#space()
            Void unused55=b1.#O()
            Void unused56=b1.#b()
            Void unused57=b1.#j()
            Void unused58=b1.#e()
            Void unused59=b1.#c()
            Void unused60=b1.#t()
            Void unused61=b1.#space()
            Void unused62=b1.#r()
            Void unused63=b1.#e()
            Void unused64=b1.#f()
            Void unused65=b1.#e()
            Void unused66=b1.#r()
            Void unused67=b1.#s()
            Void unused68=b1.#space()
            Void unused69=b1.#t()
            Void unused70=b1.#o()
            Void unused71=b1.#space()
            b1
            )).#begin().#add(that:this.path__56_0()).#end()
          listKind.#from(builder:(
            This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
            b0
            ))
          ))
        )
      )
    This0::record__56_0() ::docOf(path ) doc=this.record__56_0().docOf(path:This2.Path.#from(builder:(
      This2.Path::#builder() b2=This2.Path.#builder()
      Void unused72=b2.#M()
      Void unused73=b2.#y()
      Void unused74=b2.#C()
      Void unused75=b2.#l()
      Void unused76=b2.#a()
      Void unused77=b2.#s()
      Void unused78=b2.#s()
      b2
      )))
    This0::record__56_0() ::docOf(path ) ::annotations() ::left() ::toS() nameAndPrefix=doc.annotations().left().toS()
    This0::record__56_0() ::docOf(path ) ::annotations() ::left() ::toS() ::firstIndexOf(that ) sep=nameAndPrefix.firstIndexOf(that:This2.S.#from(builder:(
      This2.S::#builder() b3=This2.S.#builder()
      Void unused79=b3.#dot()
      b3
      )))
    This0::record__56_0() ::docOf(path ) ::annotations() ::left() ::toS() ::#apply(start ) name=nameAndPrefix.#apply(start:sep.#plus(that:This2.N.#from(builder:(
      This2.N::#builder() b4=This2.N.#builder()
      Void unused80=b4.#1()
      b4
      ))))
    This2.N::fromS(that ) prefix=This2.N.fromS(that:nameAndPrefix.#apply(start:This2.N.#from(builder:(
      This2.N::#builder() b5=This2.N.#builder()
      Void unused81=b5.#4()
      b5
      )), end:sep))
    Void unused1=This2.Assert.$.#begin().#add(that:prefix.#right(that:This2.N.#from(builder:(
      This2.N::#builder() b6=This2.N.#builder()
      Void unused82=b6.#0()
      b6
      )))).#end()
    Void unused2=(
      This2.N::fromS(that ) ::#equalequal(that ) cond0=prefix.#equalequal(that:This2.N.#from(builder:(
        This2.N::#builder() b7=This2.N.#builder()
        Void unused83=b7.#1()
        b7
        )))
      (
        Void unused84=cond0.#checkTrue()
        
        catch exception Void catched12 void
        return This2.S.#from(builder:(
          This2.S::#builder() b8=This2.S.#builder()
          Void unused85=b8.#T()
          Void unused86=b8.#h()
          Void unused87=b8.#i()
          Void unused88=b8.#s()
          Void unused89=b8.#dot()
          b8
          )).#plusplus(that:name)
        )
      )
    Void unused3=return (
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind0=This2.S.#from(builder:(
        This2.S::#builder() b10=This2.S.#builder()
        Void unused90=b10.#T()
        Void unused91=b10.#h()
        Void unused92=b10.#i()
        Void unused93=b10.#s()
        b10
        )).#begin().#add(that:prefix.#less(that:This2.N.#from(builder:(
        This2.N::#builder() b11=This2.N.#builder()
        Void unused94=b11.#1()
        b11
        )))).#end()
      listKind0.#from(builder:(
        This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b9=listKind0.#builder()
        Void unused95=b9.#dot()
        b9
        ))
      ).#plusplus(that:name)
    void
    )
  
  catch return This2.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.S classKind() (
  This0::record__56_0() listKind=this.record__56_0()
  listKind.#from(builder:(
    This0::record__56_0() ::#builder() b=listKind.#builder()
    Void unused=b.#C()
    Void unused0=b.#l()
    Void unused1=b.#a()
    Void unused2=b.#s()
    Void unused3=b.#s()
    Void unused4=b.#K()
    Void unused5=b.#i()
    Void unused6=b.#n()
    Void unused7=b.#d()
    b
    ))
  )
method 
This2.S allAsString() (
  This0::record__56_0() listKind=this.record__56_0()
  listKind.#from(builder:(
    This0::record__56_0() ::#builder() b=listKind.#builder()
    Void unused=b.#A()
    Void unused0=b.#l()
    Void unused1=b.#l()
    Void unused2=b.#A()
    Void unused3=b.#s()
    Void unused4=b.#S()
    Void unused5=b.#t()
    Void unused6=b.#r()
    Void unused7=b.#i()
    Void unused8=b.#n()
    Void unused9=b.#g()
    b
    ))
  )
method 
This1.Members members() (
  This1.Members::#begin() ::#end() result=This1.Members.#begin().#end()
  This2.N::#from(builder ) mN=This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))
  mut This0.Varresult2__113_0 varresult=This0.Varresult2__113_0.#apply(inner:result)
  mut This0.VarmN__112_0 varmN=This0.VarmN__112_0.#apply(inner:mN)
  Void unused=(
    Void unused1=loop (
      Void unused2=This2.Bool.true().#checkTrue()
      (' to be able to break
      'Debug(S"Iteration "[mN]"")
      
        Void unused3=varresult.inner(that:varresult.#inner().#add(that:this.mirror__56_0().introspectReportMember(root:this, path:this.path__56_0(), memberN:varmN.#inner())))
        
        catch exception This2.MetaGuard.MemberUnavailable catched1 exception void
        varmN.inner(that:varmN.#inner().#plus(that:This2.N.#from(builder:(
          This2.N::#builder() b0=This2.N.#builder()
          Void unused4=b0.#1()
          b0
          ))))
        )
      )
    
    catch exception Void catched3 void
    void
    )
  varresult.#inner()
  )
method 
This1.Methods methods() (
  This1.Methods::#begin() accumulator=This1.Methods.#begin()
  mut This0.Varaccumulator2__114_0 varaccumulator=This0.Varaccumulator2__114_0.#apply(inner:accumulator)
  Void unused=(
    This0::members() ::vals() m=this.members().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=m.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=m.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This1.Method m0=(
                Void unused6=return m.#inner()
                
                catch return This1.Method casted casted
                catch return Any casted exception void
                error {'@stringU
                'CastT-Should be unreachable code
                }
                )
              
              catch exception Void catched4 void
              (
                Void unused7=varaccumulator.inner(that:varaccumulator.#inner().#add(that:m0))
                void
                )
              )
            )
          
          catch exception Void catched6 void
          void
          )
        
        catch exception Any propagated (
          Void unused8=m.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused9=m.#close()
        return propagated0
        )
      m.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
method 
This1.NestedClasses nestedClasses() (
  This1.NestedClasses::#begin() accumulator=This1.NestedClasses.#begin()
  mut This0.Varaccumulator3__115_0 varaccumulator=This0.Varaccumulator3__115_0.#apply(inner:accumulator)
  Void unused=(
    This0::members() ::vals() m=this.members().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=m.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=m.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This1.NestedClass m0=(
                Void unused6=return m.#inner()
                
                catch return This1.NestedClass casted casted
                catch return Any casted exception void
                error {'@stringU
                'CastT-Should be unreachable code
                }
                )
              
              catch exception Void catched4 void
              (
                Void unused7=varaccumulator.inner(that:varaccumulator.#inner().#add(that:m0))
                void
                )
              )
            )
          
          catch exception Void catched6 void
          void
          )
        
        catch exception Any propagated (
          Void unused8=m.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused9=m.#close()
        return propagated0
        )
      m.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
method 
This1.NestedClasses transitivelyNestedClasses() (
  This1.NestedClasses::#begin() ::#add(that ) ::#end() result=This1.NestedClasses.#begin().#add(that:this).#end()
  mut This0.Varresult3__116_0 varresult=This0.Varresult3__116_0.#apply(inner:result)
  Void unused=(
    This0::nestedClasses() ::vals() nc=this.nestedClasses().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=nc.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=nc.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            varresult.inner(that:varresult.#inner().#plusplus(that:nc.#inner().transitivelyNestedClasses()))
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=nc.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=nc.#close()
        return propagated0
        )
      nc.#close()
      )
    )
  varresult.#inner()
  )
method 
This1.Types implementedInterfaces() (
  This1.Types::#begin() ::#end() result=This1.Types.#begin().#end()
  This2.N::#from(builder ) tN=This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused0=b.#1()
    b
    ))
  mut This0.Varresult4__118_0 varresult=This0.Varresult4__118_0.#apply(inner:result)
  mut This0.VartN__117_0 vartN=This0.VartN__117_0.#apply(inner:tN)
  Void unused=(
    Void unused1=loop (
      Void unused2=This2.Bool.true().#checkTrue()
      (' to be able to break
      
        This0::mirror__56_0() ::introspectReportType(root path memberN typeN ) ti=this.mirror__56_0().introspectReportType(root:this, path:this.path__56_0(), memberN:This2.N.#from(builder:(
          This2.N::#builder() b0=This2.N.#builder()
          Void unused5=b0.#0()
          b0
          )), typeN:vartN.#inner())
        This0::mirror__56_0() ::introspectReportType(root path memberN typeN ) ::strRepr() sr=ti.strRepr()
        Void unused3=This2.Assert.$.#begin().#add(that:sr.#bangequal(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#at()
          Void unused7=b1.#dot()
          Void unused8=b1.#T()
          Void unused9=b1.#h()
          Void unused10=b1.#i()
          Void unused11=b1.#s()
          b1
          )))).#add(that:sr.#bangequal(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#T()
          Void unused13=b2.#h()
          Void unused14=b2.#i()
          Void unused15=b2.#s()
          b2
          )))).#add(that:sr.#bangequal(that:This2.S.#from(builder:(
          This2.S::#builder() b3=This2.S.#builder()
          b3
          )))).#end()
        Void unused4=varresult.inner(that:varresult.#inner().#add(that:ti))
        vartN.inner(that:vartN.#inner().#plus(that:This2.N.#from(builder:(
          This2.N::#builder() b4=This2.N.#builder()
          Void unused16=b4.#1()
          b4
          ))))
        )
      )
    
    catch exception Void catched7 void
    void
    )
  
  catch exception This2.MetaGuard.MemberUnavailable x error This2.Assert.CodeNotReachable.#from(builder:(
    This2.Assert.CodeNotReachable::#builder() b5=This2.Assert.CodeNotReachable.#builder()
    Void unused17=b5.#N()
    Void unused18=b5.#e()
    Void unused19=b5.#s()
    Void unused20=b5.#t()
    Void unused21=b5.#e()
    Void unused22=b5.#d()
    Void unused23=b5.#C()
    Void unused24=b5.#l()
    Void unused25=b5.#a()
    Void unused26=b5.#s()
    Void unused27=b5.#s()
    Void unused28=b5.#3()
    b5
    )).#apply(that:x)
  varresult.#inner()
  )
method 
This1.Types transitivelyImplementedInterfaces() (
  Void unused=(
    This0::removeDup__58_0(that ) result=this.removeDup__58_0(that:this.implementedInterfaces())
    This0::removeDup__58_0(that ) new=result
    mut This0.Varresult5__120_0 varresult=This0.Varresult5__120_0.#apply(inner:result)
    mut This0.Varnew__119_0 varnew=This0.Varnew__119_0.#apply(inner:new)
    Void unused0=loop (
      This1.Types::#begin() ::#end() extra=This1.Types.#begin().#end()
      mut This0.Varextra__121_0 varextra=This0.Varextra__121_0.#apply(inner:extra)
      Void unused1=(
        This0.Varnew__119_0::#inner() ::vals() t=varnew.#inner().vals()
        (
          Void unused4=(
            Void unused5=(
              Void unused6=loop (
                Void unused7=t.#next()
                
                catch exception Void catched0 (
                  Void unused8=(
                    Void unused9=t.#checkEnd()
                    
                    catch exception Void catched1 void
                    void
                    )
                  exception void
                  )
                (
                  This0.Varnew__119_0::#inner() ::vals() ::#inner() ::referencedPath() ::implementedInterfaces() impl=t.#inner().referencedPath().implementedInterfaces()
                  varextra.inner(that:varextra.#inner().#plusplus(that:this.remove__60_0(that:impl, from:varresult.#inner())))
                  )
                )
              
              catch exception Void catched4 void
              void
              )
            
            catch exception Any propagated (
              Void unused10=t.#close()
              exception propagated
              )
            void
            )
          
          catch return This1.Types propagated0 (
            Void unused11=t.#close()
            return propagated0
            )
          t.#close()
          )
        )
      Void unused2=(
        This0.Varextra__121_0::#inner() ::isEmpty() cond=varextra.#inner().isEmpty()
        (
          Void unused12=cond.#checkTrue()
          
          catch exception Void catched10 void
          return varresult.#inner()
          )
        )
      Void unused3=varnew.inner(that:varextra.#inner())
      varresult.inner(that:varresult.#inner().#plusplus(that:varextra.#inner()))
      )
    void
    )
  
  catch return This1.Types result0 result0
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method '@private
This1.Types removeDup__58_0(This1.Types that) (
  This1.Types::#begin() ::#end() result=This1.Types.#begin().#end()
  mut This0.Varresult6__122_0 varresult=This0.Varresult6__122_0.#apply(inner:result)
  Void unused=(
    This1.Types::vals() t=that.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=t.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=t.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::select__59_0(that from ) cond=this.select__59_0(that:t.#inner(), from:varresult.#inner())
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varresult.inner(that:varresult.#inner().#add(that:t.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=t.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=t.#close()
        return propagated0
        )
      t.#close()
      )
    )
  varresult.#inner()
  )
method '@private
This2.Bool select__59_0(This1.Type that, This1.Types from) (
  This1.Type::referencedPath() rp=that.referencedPath()
  (
    This2.Count::#begin() accumulator=This2.Count.#begin()
    mut This0.Varaccumulator4__123_0 varaccumulator=This0.Varaccumulator4__123_0.#apply(inner:accumulator)
    Void unused=(
      This1.Types::vals() t=from.vals()
      (
        Void unused0=(
          Void unused1=(
            Void unused2=loop (
              Void unused3=t.#next()
              
              catch exception Void catched1 (
                Void unused4=(
                  Void unused5=t.#checkEnd()
                  
                  catch exception Void catched2 void
                  void
                  )
                exception void
                )
              varaccumulator.inner(that:varaccumulator.#inner().#add(that:t.#inner().referencedPath().#equalequal(that:rp)))
              )
            
            catch exception Void catched4 void
            void
            )
          
          catch exception Any propagated (
            Void unused6=t.#close()
            exception propagated
            )
          void
          )
        
        catch return Any propagated0 (
          Void unused7=t.#close()
          return propagated0
          )
        t.#close()
        )
      )
    varaccumulator.#inner().#end()
    ).#equalequal(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused8=b.#0()
    b
    )))
  )
method '@private
This1.Types remove__60_0(This1.Types that, This1.Types from) (
  This1.Types::#begin() accumulator=This1.Types.#begin()
  mut This0.Varaccumulator5__124_0 varaccumulator=This0.Varaccumulator5__124_0.#apply(inner:accumulator)
  Void unused=(
    This1.Types::vals() t=that.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=t.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=t.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::select__59_0(that from ) cond=this.select__59_0(that:t.#inner(), from:from)
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:t.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=t.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=t.#close()
        return propagated0
        )
      t.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
method 
This1.Methods stateCandidate() (
  This2.Bool::false() havePrivate=This2.Bool.false()
  mut This0.VarhavePrivate__126_0 varhavePrivate=This0.VarhavePrivate__126_0.#apply(inner:havePrivate)
  This1.Methods::#begin() ::#end() absMethods=(
    This1.Methods::#begin() accumulator=This1.Methods.#begin()
    mut This0.Varaccumulator6__127_0 varaccumulator=This0.Varaccumulator6__127_0.#apply(inner:accumulator)
    Void unused0=(
      This0::methods() ::vals() m=this.methods().vals()
      (
        Void unused1=(
          Void unused2=(
            Void unused3=loop (
              Void unused4=m.#next()
              
              catch exception Void catched0 (
                Void unused5=(
                  Void unused6=m.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::methods() ::vals() ::#inner() ::methodKind() ::#equalequal(that ) cond=m.#inner().methodKind().#equalequal(that:This2.S.#from(builder:(
                  This2.S::#builder() b=This2.S.#builder()
                  Void unused7=b.#A()
                  Void unused8=b.#b()
                  Void unused9=b.#s()
                  Void unused10=b.#t()
                  Void unused11=b.#r()
                  Void unused12=b.#a()
                  Void unused13=b.#c()
                  Void unused14=b.#t()
                  Void unused15=b.#M()
                  Void unused16=b.#e()
                  Void unused17=b.#t()
                  Void unused18=b.#h()
                  Void unused19=b.#o()
                  Void unused20=b.#d()
                  b
                  )))
                (
                  Void unused21=cond.#checkTrue()
                  
                  catch exception Void catched5 void
                  (
                    Void unused22=varhavePrivate.inner(that:varhavePrivate.#inner().#or(that:m.#inner().isPrivate()))
                    varaccumulator.inner(that:varaccumulator.#inner().#add(that:m.#inner()))
                    )
                  )
                )
              )
            
            catch exception Void catched7 void
            void
            )
          
          catch exception Any propagated (
            Void unused23=m.#close()
            exception propagated
            )
          void
          )
        
        catch return Any propagated0 (
          Void unused24=m.#close()
          return propagated0
          )
        m.#close()
        )
      )
    varaccumulator.#inner().#end()
    )
  mut This0.VarabsMethods__125_0 varabsMethods=This0.VarabsMethods__125_0.#apply(inner:absMethods)
  Void unused=(
    This0.VarhavePrivate__126_0::#inner() cond0=varhavePrivate.#inner()
    (
      Void unused25=cond0.#checkTrue()
      
      catch exception Void catched14 void
      varabsMethods.inner(that:(
        This1.Methods::#begin() accumulator0=This1.Methods.#begin()
        mut This0.Varaccumulator7__128_0 varaccumulator0=This0.Varaccumulator7__128_0.#apply(inner:accumulator0)
        Void unused26=(
          This0.VarabsMethods__125_0::#inner() ::vals() a=varabsMethods.#inner().vals()
          (
            Void unused27=(
              Void unused28=(
                Void unused29=loop (
                  Void unused30=a.#next()
                  
                  catch exception Void catched16 (
                    Void unused31=(
                      Void unused32=a.#checkEnd()
                      
                      catch exception Void catched17 void
                      void
                      )
                    exception void
                    )
                  (
                    This0.VarabsMethods__125_0::#inner() ::vals() ::#inner() ::isPrivate() cond1=a.#inner().isPrivate()
                    (
                      Void unused33=cond1.#checkTrue()
                      
                      catch exception Void catched20 void
                      varaccumulator0.inner(that:varaccumulator0.#inner().#add(that:a.#inner()))
                      )
                    )
                  )
                
                catch exception Void catched21 void
                void
                )
              
              catch exception Any propagated1 (
                Void unused34=a.#close()
                exception propagated1
                )
              void
              )
            
            catch return Any propagated2 (
              Void unused35=a.#close()
              return propagated2
              )
            a.#close()
            )
          )
        varaccumulator0.#inner().#end()
        ))
      )
    )
  varabsMethods.#inner()
  )
method 
This1.Methods state() (
  Void unused=(
    This1.Methods::#begin() ::#end() result=This1.Methods.#begin().#end()
    This0::stateCandidate() stateCandidate=this.stateCandidate()
    This1.Methods::#begin() ::#end() ::left() constr=(
      This1.Methods::#begin() ::#end() classMethods=(
        This1.Methods::#begin() accumulator=This1.Methods.#begin()
        mut This0.Varaccumulator8__130_0 varaccumulator=This0.Varaccumulator8__130_0.#apply(inner:accumulator)
        Void unused5=(
          This0::stateCandidate() ::vals() m=stateCandidate.vals()
          (
            Void unused6=(
              Void unused7=(
                Void unused8=loop (
                  Void unused9=m.#next()
                  
                  catch exception Void catched0 (
                    Void unused10=(
                      Void unused11=m.#checkEnd()
                      
                      catch exception Void catched1 void
                      void
                      )
                    exception void
                    )
                  (
                    This0::stateCandidate() ::vals() ::#inner() ::thisMdf() ::#equalequal(that ) cond=m.#inner().thisMdf().#equalequal(that:This2.S.#from(builder:(
                      This2.S::#builder() b=This2.S.#builder()
                      Void unused12=b.#c()
                      Void unused13=b.#l()
                      Void unused14=b.#a()
                      Void unused15=b.#s()
                      Void unused16=b.#s()
                      b
                      )))
                    (
                      Void unused17=cond.#checkTrue()
                      
                      catch exception Void catched5 void
                      varaccumulator.inner(that:varaccumulator.#inner().#add(that:m.#inner()))
                      )
                    )
                  )
                
                catch exception Void catched6 void
                void
                )
              
              catch exception Any propagated (
                Void unused18=m.#close()
                exception propagated
                )
              void
              )
            
            catch return This1.Methods propagated0 (
              Void unused19=m.#close()
              return propagated0
              )
            m.#close()
            )
          )
        varaccumulator.#inner().#end()
        )
      Void unused3=(
        This1.Methods::#begin() ::#end() ::isEmpty() cond0=classMethods.isEmpty()
        (
          Void unused20=cond0.#checkTrue()
          
          catch exception Void catched13 void
          return result
          )
        )
      Void unused4=(
        This1.Methods::#begin() ::#end() ::size() ::#right(that ) cond1=classMethods.size().#right(that:This2.N.#from(builder:(
          This2.N::#builder() b0=This2.N.#builder()
          Void unused21=b0.#1()
          b0
          )))
        (
          Void unused22=cond1.#checkTrue()
          
          catch exception Void catched16 void
          return result
          )
        )
      classMethods.left()
      )
    mut This0.Varresult7__129_0 varresult=This0.Varresult7__129_0.#apply(inner:result)
    Void unused0=varresult.inner(that:varresult.#inner().#add(that:constr))
    This1.Methods::#begin() ::#end() ::left() ::selector() ::names() names=constr.selector().names()
    Void unused1=(
      This1.Methods::#begin() ::#end() ::left() ::selector() ::names() ::vals() name=names.vals()
      (
        Void unused23=(
          Void unused24=(
            Void unused25=loop (
              Void unused26=name.#next()
              
              catch exception Void catched19 (
                Void unused27=(
                  Void unused28=name.#checkEnd()
                  
                  catch exception Void catched20 void
                  void
                  )
                exception void
                )
              (
                This2.Selector::fromS(that ) getter=This2.Selector.fromS(that:name.#inner().#plusplus(that:This2.S.#from(builder:(
                  This2.S::#builder() b1=This2.S.#builder()
                  Void unused29=b1.#oRound()
                  Void unused30=b1.#cRound()
                  b1
                  ))))
                This2.Selector::fromS(that ) exposer=This2.Selector.fromS(that:This2.S.#from(builder:(
                  This2.S::#builder() b2=This2.S.#builder()
                  Void unused31=b2.#hash()
                  b2
                  )).#plusplus(that:name.#inner().#plusplus(that:This2.S.#from(builder:(
                  This2.S::#builder() b3=This2.S.#builder()
                  Void unused32=b3.#oRound()
                  Void unused33=b3.#cRound()
                  b3
                  )))))
                This2.Selector::fromS(that ) setter=This2.Selector.fromS(that:name.#inner().#plusplus(that:This2.S.#from(builder:(
                  This2.S::#builder() b4=This2.S.#builder()
                  Void unused34=b4.#oRound()
                  Void unused35=b4.#t()
                  Void unused36=b4.#h()
                  Void unused37=b4.#a()
                  Void unused38=b4.#t()
                  Void unused39=b4.#cRound()
                  b4
                  ))))
                (
                  This0::stateCandidate() ::vals() f=stateCandidate.vals()
                  (
                    Void unused40=(
                      Void unused41=(
                        Void unused42=loop (
                          Void unused43=f.#next()
                          
                          catch exception Void catched28 (
                            Void unused44=(
                              Void unused45=f.#checkEnd()
                              
                              catch exception Void catched29 void
                              void
                              )
                            exception void
                            )
                          (
                            This0::stateCandidate() ::vals() ::#inner() ::selector() ::#equalequal(that ) ::#or(that ) ::#or(that ) cond2=f.#inner().selector().#equalequal(that:getter).#or(that:f.#inner().selector().#equalequal(that:exposer)).#or(that:f.#inner().selector().#equalequal(that:setter))
                            (
                              Void unused46=cond2.#checkTrue()
                              
                              catch exception Void catched32 void
                              varresult.inner(that:varresult.#inner().#add(that:f.#inner()))
                              )
                            )
                          )
                        
                        catch exception Void catched33 void
                        void
                        )
                      
                      catch exception Any propagated1 (
                        Void unused47=f.#close()
                        exception propagated1
                        )
                      void
                      )
                    
                    catch return This1.Methods propagated2 (
                      Void unused48=f.#close()
                      return propagated2
                      )
                    f.#close()
                    )
                  )
                )
              )
            
            catch exception Void catched38 void
            void
            )
          
          catch exception Any propagated3 (
            Void unused49=name.#close()
            exception propagated3
            )
          void
          )
        
        catch return This1.Methods propagated4 (
          Void unused50=name.#close()
          return propagated4
          )
        name.#close()
        )
      )
    Void unused2=return varresult.#inner()
    void
    )
  
  catch return This1.Methods result0 result0
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Method methodFromSelector(This2.Selector that) exception This2.MetaGuard.MethodUnavailable (
  Void unused=(
    Void unused0=(
      This0::methods() ::vals() meth=this.methods().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=meth.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=meth.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::methods() ::vals() ::#inner() ::selector() ::#equalequal(that ) cond=meth.#inner().selector().#equalequal(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  return meth.#inner()
                  )
                )
              )
            
            catch exception Void catched5 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=meth.#close()
            exception propagated
            )
          void
          )
        
        catch return This1.Method propagated0 (
          Void unused10=meth.#close()
          return propagated0
          )
        meth.#close()
        )
      )
    Void unused1=exception This2.MetaGuard.MethodUnavailable.#apply(path:this.pathFromRoot(), selector:that, isPrivate:This2.Bool.false())
    void
    )
  
  catch return This1.Method result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool has(This2.Selector selector) (
  Void unused0=(
    This0::methodFromSelector(that ) unused=this.methodFromSelector(that:selector)
    
    catch exception This2.MetaGuard.MemberUnavailable catched return This2.Bool.false()
    (
      Void unused1=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.NestedClass nestedClassFromRoot(This2.Path that) exception This2.MetaGuard.NestedClassUnavailable (
  Void unused=(
    Void unused0=(
      This2.Path::#equalequal(that ) cond=that.#equalequal(that:This2.Path.#from(builder:(
        This2.Path::#builder() b=This2.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        return this.root()
        )
      )
    This0::record__56_0() ::docOf(path ) ::annotations() ::left() myClass=this.record__56_0().docOf(path:This2.Path.#from(builder:(
      This2.Path::#builder() b0=This2.Path.#builder()
      Void unused8=b0.#M()
      Void unused9=b0.#y()
      Void unused10=b0.#C()
      Void unused11=b0.#l()
      Void unused12=b0.#a()
      Void unused13=b0.#s()
      Void unused14=b0.#s()
      b0
      ))).annotations().left()
    Void unused1=(
      This0::record__56_0() ::docOf(path ) ::annotations() ::left() ::hasReferredClass() ::#bang() cond0=myClass.hasReferredClass().#bang()
      (
        Void unused15=cond0.#checkTrue()
        
        catch exception Void catched4 void
        return this.mirror__56_0().introspectReport(root:this.root(), path:that)
        )
      )
    Void unused2=return This2.Introspection.#apply(clazz:myClass.referredClass(), path:that)
    void
    )
  
  catch return This1.NestedClass result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool has(This2.Path fromRoot) (
  This0::nestedClassFromRoot(that ) unused=this.nestedClassFromRoot(that:fromRoot)
  
  catch exception This2.MetaGuard.MemberUnavailable catched This2.Bool.false()
  This2.Bool.true()
  )
method 
This2.Bool isPrivate() (
  Void unused=(
    Void unused0=(
      This0::nestedDoc() ::annotations() ::vals() ann=this.nestedDoc().annotations().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ann.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=ann.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::nestedDoc() ::annotations() ::vals() ::#inner() ::toS() ::#equalequal(that ) cond=ann.#inner().toS().#equalequal(that:This2.S.#from(builder:(
                  This2.S::#builder() b=This2.S.#builder()
                  Void unused8=b.#p()
                  Void unused9=b.#r()
                  Void unused10=b.#i()
                  Void unused11=b.#v()
                  Void unused12=b.#a()
                  Void unused13=b.#t()
                  Void unused14=b.#e()
                  b
                  )))
                (
                  Void unused15=cond.#checkTrue()
                  
                  catch exception Void catched5 void
                  return This2.Bool.true()
                  )
                )
              )
            
            catch exception Void catched6 void
            void
            )
          
          catch exception Any propagated (
            Void unused16=ann.#close()
            exception propagated
            )
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused17=ann.#close()
          return propagated0
          )
        ann.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
NestedClasses:{
Varres0_$%22_0__131_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.NestedClass that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.NestedClass that) this.withAlso(that:this.size(), val:that)
class method 
This1.NestedClass cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.NestedClass that0=(
        Void unused1=return that
        
        catch return This1.NestedClass casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.NestedClass result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.NestedClass val(This2.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.NestedClass left() This0.cast(that:this.inner().val(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.NestedClass right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This2.N that, This1.NestedClass val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This2.N that, This1.NestedClass val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.NestedClass right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.NestedClass left) this.#inner().add(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.NestedClass that) this.#inner().#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.NestedClass that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This2.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This2.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This2.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This2.N size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0_$%22_0__131_0 varres=This0.Varres0_$%22_0__131_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.NestedClass #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N stopOk) this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.NestedClass #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N stopOk) this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.NestedClass #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() 
mut method 
Void inner(This2.NestedClass that) this.#that().#apply(that:this.from(), val:that)}
Varaccumulator_$%23_0__132_0:'@private
{
class method 
mut This0 #mutK(fwd This1::#begin() inner) 
class method 
mut This0 #apply(This1::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::#begin() that) 
mut method 
This1::#begin() #inner() }
read method 
This2.Bool contains(This1.NestedClass that) (
  Void unused=(
    Void unused0=(
      This0::vals() e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This0::vals() ::#inner() ::equals(that ) cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  return This2.Bool.true()
                  )
                )
              )
            
            catch exception Void catched5 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 withoutAll(This1.NestedClass that) (
  This0::#begin() accumulator=This0.#begin()
  mut This0.Varaccumulator_$%23_0__132_0 varaccumulator=This0.Varaccumulator_$%23_0__132_0.#apply(inner:accumulator)
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            (
              This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e.#inner().equals(that:that).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                varaccumulator.inner(that:varaccumulator.#inner().#add(that:e.#inner()))
                )
              )
            )
          
          catch exception Void catched5 void
          void
          )
        
        catch exception Any propagated (
          Void unused7=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused8=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  varaccumulator.#inner().#end()
  )
read method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This0::vals() e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            This0::vals() e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::vals() ::#inner() ::equals(that ) ::#bang() cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          return This2.Bool.false()
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched12 void
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                void
                )
              
              catch return This2.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          void
          )
        
        catch return This2.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        e1.#close()
        )
      )
    
    catch error This2.Collections.IterationFailure catched21 return This2.Bool.false()
    (
      Void unused23=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool equals(Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Type:{<:This2.Concept.ToS, This2.Concept.Named
class method '@private
mut This0 #mutK__61_0(fwd This1.NestedClass root__61_0, This2.Path path__61_0, This2.N memberN__61_0, This2.N typeN__61_0, This1.Record record__61_0) 
class method '@private
This0 #apply__62_0(fwd This1.NestedClass root, This2.Path path, This2.N memberN, This2.N typeN, This1.Record record) This0.#mutK__61_0(root__61_0:root, path__61_0:path, memberN__61_0:memberN, typeN__61_0:typeN, record__61_0:record)
mut method '@private
This1.NestedClass #root__61_0() 
read method '@private
This1.NestedClass root__61_0() 
mut method '@private
This2.Path #path__61_0() 
read method '@private
This2.Path path__61_0() 
mut method '@private
This2.N #memberN__61_0() 
read method '@private
This2.N memberN__61_0() 
mut method '@private
This2.N #typeN__61_0() 
read method '@private
This2.N typeN__61_0() 
mut method '@private
This1.Record #record__61_0() 
read method '@private
This1.Record record__61_0() 
method myName() This2.GetMyName.#apply(that:This0)
method toS() This0.myName().#plusplus(that:(
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
    This2.S::#builder() b0=This2.S.#builder()
    Void unused=b0.#oSquare()
    b0
    )).#begin().#add(that:this.allAsString()).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused0=b.#cSquare()
    b
    ))
  ))
method 
This2.S allAsString() (
  This0::record__61_0() listKind=this.record__61_0()
  listKind.#from(builder:(
    This0::record__61_0() ::#builder() b=listKind.#builder()
    Void unused=b.#A()
    Void unused0=b.#l()
    Void unused1=b.#l()
    Void unused2=b.#A()
    Void unused3=b.#s()
    Void unused4=b.#S()
    Void unused5=b.#t()
    Void unused6=b.#r()
    Void unused7=b.#i()
    Void unused8=b.#n()
    Void unused9=b.#g()
    b
    ))
  )
method 
This2.S strRepr() (
  Void unused=('should become toS? is toS ok?
  
    This0::referencedPath() n=this.referencedPath()
    This2.S s=(
      Void unused1=(
        Void unused2=(
          This0::referencedPath() ::hasExternalType() cond=n.hasExternalType()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched0 void
            return n.externalTypeToS()
            )
          )
        Void unused3=return (
          This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
            This2.S::#builder() b0=This2.S.#builder()
            Void unused5=b0.#at()
            Void unused6=b0.#dot()
            b0
            )).#begin().#add(that:n.pathFromRoot()).#end()
          listKind.#from(builder:(
            This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
            b
            ))
          )
        void
        )
      
      catch return This2.S result0 result0
      error {'@stringU
      'CurlyBlock-Should be unreachable code
      }
      )
    Void unused0=return this.mdf().#plusplus(that:This2.S.#from(builder:(
      This2.S::#builder() b1=This2.S.#builder()
      Void unused7=b1.#space()
      b1
      )).#plusplus(that:s))
    void
    )
  
  catch return This2.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.S typeKind() (
  This0::record__61_0() listKind=this.record__61_0()
  listKind.#from(builder:(
    This0::record__61_0() ::#builder() b=listKind.#builder()
    Void unused=b.#T()
    Void unused0=b.#y()
    Void unused1=b.#p()
    Void unused2=b.#e()
    Void unused3=b.#K()
    Void unused4=b.#i()
    Void unused5=b.#n()
    Void unused6=b.#d()
    b
    ))
  )
method 
This2.S mdf() (
  Void unused=('error on AliasUnresolvable
  
    Void unused0=(
      This0::typeKind() ::#bangequal(that ) cond=this.typeKind().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        Void unused2=b.#A()
        Void unused3=b.#l()
        Void unused4=b.#i()
        Void unused5=b.#a()
        Void unused6=b.#s()
        Void unused7=b.#U()
        Void unused8=b.#n()
        Void unused9=b.#r()
        Void unused10=b.#e()
        Void unused11=b.#s()
        Void unused12=b.#o()
        Void unused13=b.#l()
        Void unused14=b.#v()
        Void unused15=b.#a()
        Void unused16=b.#b()
        Void unused17=b.#l()
        Void unused18=b.#e()
        b
        )))
      (
        Void unused19=cond.#checkTrue()
        
        catch exception Void catched1 void
        return (
          This0::record__61_0() listKind=this.record__61_0()
          listKind.#from(builder:(
            This0::record__61_0() ::#builder() b0=listKind.#builder()
            Void unused20=b0.#M()
            Void unused21=b0.#d()
            Void unused22=b0.#f()
            b0
            ))
          )
        )
      )
    Void unused1=error This2.Guard.Operation.#from(builder:(
      This2.Guard.Operation::#builder() b1=This2.Guard.Operation.#builder()
      Void unused23=b1.#A()
      Void unused24=b1.#l()
      Void unused25=b1.#i()
      Void unused26=b1.#a()
      Void unused27=b1.#s()
      Void unused28=b1.#U()
      Void unused29=b1.#n()
      Void unused30=b1.#r()
      Void unused31=b1.#e()
      Void unused32=b1.#s()
      Void unused33=b1.#o()
      Void unused34=b1.#l()
      Void unused35=b1.#v()
      Void unused36=b1.#a()
      Void unused37=b1.#b()
      Void unused38=b1.#l()
      Void unused39=b1.#e()
      Void unused40=b1.#space()
      Void unused41=b1.#c()
      Void unused42=b1.#l()
      Void unused43=b1.#a()
      Void unused44=b1.#s()
      Void unused45=b1.#s()
      Void unused46=b1.#comma()
      Void unused47=b1.#space()
      Void unused48=b1.#m()
      Void unused49=b1.#d()
      Void unused50=b1.#f()
      Void unused51=b1.#space()
      Void unused52=b1.#u()
      Void unused53=b1.#n()
      Void unused54=b1.#k()
      Void unused55=b1.#n()
      Void unused56=b1.#o()
      Void unused57=b1.#w()
      Void unused58=b1.#n()
      b1
      ))
    void
    )
  
  catch return This2.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method '@private
This1.NestedClass referencedPath__63_0(This1.Doc.Annotation ann) (
  Void unused=(
    Void unused0=(
      This1.Doc.Annotation::hasReferredClass() cond=ann.hasReferredClass()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This2.Introspection.#apply(clazz:ann.referredClass())
        )
      )
    This2.S sPath=ann.toS().#apply(start:This2.N.#from(builder:(
      This2.N::#builder() b=This2.N.#builder()
      Void unused4=b.#1()
      b
      )))
    Void unused1=(
      This2.S::#equalequal(that ) cond0=sPath.#equalequal(that:This2.S.#from(builder:(
        This2.S::#builder() b0=This2.S.#builder()
        b0
        )))
      (
        Void unused5=cond0.#checkTrue()
        
        catch exception Void catched4 void
        return this.root__61_0()
        )
      )
    This2.Path path=This2.Path.fromS(that:sPath)
    Void unused2=return this.root__61_0().nestedClassFromRoot(that:path)
    
    catch exception This2.MetaGuard.NestedClassUnavailable x error This2.Assert.ObservedBug.#from(builder:(
      This2.Assert.ObservedBug::#builder() b1=This2.Assert.ObservedBug.#builder()
      Void unused6=b1.#T()
      Void unused7=b1.#y()
      Void unused8=b1.#p()
      Void unused9=b1.#e()
      Void unused10=b1.#space()
      Void unused11=b1.#r()
      Void unused12=b1.#e()
      Void unused13=b1.#f()
      Void unused14=b1.#e()
      Void unused15=b1.#r()
      Void unused16=b1.#s()
      Void unused17=b1.#space()
      Void unused18=b1.#t()
      Void unused19=b1.#o()
      Void unused20=b1.#space()
      Void unused21=b1.#u()
      Void unused22=b1.#n()
      Void unused23=b1.#e()
      Void unused24=b1.#x()
      Void unused25=b1.#i()
      Void unused26=b1.#s()
      Void unused27=b1.#t()
      Void unused28=b1.#e()
      Void unused29=b1.#n()
      Void unused30=b1.#t()
      Void unused31=b1.#space()
      Void unused32=b1.#p()
      Void unused33=b1.#a()
      Void unused34=b1.#t()
      Void unused35=b1.#h()
      b1
      ))
    void
    )
  
  catch return This1.NestedClass result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.NestedClass referencedPath() this.referencedPath__63_0(ann:this.record__61_0().docOf(path:This2.Path.#from(builder:(
  This2.Path::#builder() b=This2.Path.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#t()
  Void unused2=b.#h()
  b
  ))).annotations().left())
method 
This1.NestedClass resolvedReferencedPath() (
  Void unused=('error on AliasUnresolvable
  
    Void unused0=(
      This0::typeKind() ::#bangequal(that ) cond=this.typeKind().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        Void unused2=b.#A()
        Void unused3=b.#l()
        Void unused4=b.#i()
        Void unused5=b.#a()
        Void unused6=b.#s()
        Void unused7=b.#U()
        Void unused8=b.#n()
        Void unused9=b.#r()
        Void unused10=b.#e()
        Void unused11=b.#s()
        Void unused12=b.#o()
        Void unused13=b.#l()
        Void unused14=b.#v()
        Void unused15=b.#a()
        Void unused16=b.#b()
        Void unused17=b.#l()
        Void unused18=b.#e()
        b
        )))
      (
        Void unused19=cond.#checkTrue()
        
        catch exception Void catched1 void
        return this.referencedPath__63_0(ann:this.record__61_0().docOf(path:This2.Path.#from(builder:(
          This2.Path::#builder() b0=This2.Path.#builder()
          Void unused20=b0.#R()
          Void unused21=b0.#e()
          Void unused22=b0.#s()
          Void unused23=b0.#o()
          Void unused24=b0.#l()
          Void unused25=b0.#v()
          Void unused26=b0.#e()
          Void unused27=b0.#d()
          Void unused28=b0.#P()
          Void unused29=b0.#a()
          Void unused30=b0.#t()
          Void unused31=b0.#h()
          b0
          ))).annotations().left())
        )
      )
    Void unused1=error This2.Guard.Operation.#from(builder:(
      This2.Guard.Operation::#builder() b1=This2.Guard.Operation.#builder()
      Void unused32=b1.#A()
      Void unused33=b1.#l()
      Void unused34=b1.#i()
      Void unused35=b1.#a()
      Void unused36=b1.#s()
      Void unused37=b1.#U()
      Void unused38=b1.#n()
      Void unused39=b1.#r()
      Void unused40=b1.#e()
      Void unused41=b1.#s()
      Void unused42=b1.#o()
      Void unused43=b1.#l()
      Void unused44=b1.#v()
      Void unused45=b1.#a()
      Void unused46=b1.#b()
      Void unused47=b1.#l()
      Void unused48=b1.#e()
      Void unused49=b1.#space()
      Void unused50=b1.#c()
      Void unused51=b1.#l()
      Void unused52=b1.#a()
      Void unused53=b1.#s()
      Void unused54=b1.#s()
      Void unused55=b1.#comma()
      Void unused56=b1.#space()
      Void unused57=b1.#m()
      Void unused58=b1.#d()
      Void unused59=b1.#f()
      Void unused60=b1.#space()
      Void unused61=b1.#u()
      Void unused62=b1.#n()
      Void unused63=b1.#k()
      Void unused64=b1.#n()
      Void unused65=b1.#o()
      Void unused66=b1.#w()
      Void unused67=b1.#n()
      b1
      ))
    void
    )
  
  catch return This1.NestedClass result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool partial() (
  This0::record__61_0() listKind=this.record__61_0()
  listKind.#from(builder:(
    This0::record__61_0() ::#builder() b=listKind.#builder()
    Void unused=b.#P()
    Void unused0=b.#h()
    b
    ))
  ).#equalequal(that:This2.S.#from(builder:(
  This2.S::#builder() b0=This2.S.#builder()
  Void unused1=b0.#t()
  Void unused2=b0.#r()
  Void unused3=b0.#u()
  Void unused4=b0.#e()
  b0
  )))
method 
This2.Bool resolvedPartial() (
  This0::record__61_0() listKind=this.record__61_0()
  listKind.#from(builder:(
    This0::record__61_0() ::#builder() b=listKind.#builder()
    Void unused=b.#R()
    Void unused0=b.#e()
    Void unused1=b.#s()
    Void unused2=b.#o()
    Void unused3=b.#l()
    Void unused4=b.#v()
    Void unused5=b.#e()
    Void unused6=b.#d()
    Void unused7=b.#P()
    Void unused8=b.#h()
    b
    ))
  ).#equalequal(that:This2.S.#from(builder:(
  This2.S::#builder() b0=This2.S.#builder()
  Void unused9=b0.#t()
  Void unused10=b0.#r()
  Void unused11=b0.#u()
  Void unused12=b0.#e()
  b0
  )))
method 
This2.S suffix() (
  Void unused=('error on Normal
  
    Void unused0=(
      This0::typeKind() ::#equalequal(that ) cond=this.typeKind().#equalequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        Void unused2=b.#N()
        Void unused3=b.#o()
        Void unused4=b.#r()
        Void unused5=b.#m()
        Void unused6=b.#a()
        Void unused7=b.#l()
        b
        )))
      (
        Void unused8=cond.#checkTrue()
        
        catch exception Void catched1 void
        error This2.Guard.Operation.#from(builder:(
          This2.Guard.Operation::#builder() b0=This2.Guard.Operation.#builder()
          Void unused9=b0.#N()
          Void unused10=b0.#o()
          Void unused11=b0.#r()
          Void unused12=b0.#m()
          Void unused13=b0.#a()
          Void unused14=b0.#l()
          Void unused15=b0.#space()
          Void unused16=b0.#t()
          Void unused17=b0.#y()
          Void unused18=b0.#p()
          Void unused19=b0.#e()
          Void unused20=b0.#s()
          Void unused21=b0.#space()
          Void unused22=b0.#h()
          Void unused23=b0.#a()
          Void unused24=b0.#v()
          Void unused25=b0.#e()
          Void unused26=b0.#space()
          Void unused27=b0.#n()
          Void unused28=b0.#o()
          Void unused29=b0.#space()
          Void unused30=b0.#s()
          Void unused31=b0.#u()
          Void unused32=b0.#f()
          Void unused33=b0.#f()
          Void unused34=b0.#i()
          Void unused35=b0.#x()
          b0
          ))
        )
      )
    Void unused1=return (
      This0::record__61_0() listKind=this.record__61_0()
      listKind.#from(builder:(
        This0::record__61_0() ::#builder() b1=listKind.#builder()
        Void unused36=b1.#P()
        Void unused37=b1.#h()
        b1
        ))
      )
    void
    )
  
  catch return This2.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This1.Doc doc() this.record__61_0().docOf(path:This2.Path.#from(builder:(
  This2.Path::#builder() b=This2.Path.#builder()
  Void unused=b.#D()
  Void unused0=b.#o()
  Void unused1=b.#c()
  b
  )))}
Types:{
Varres0__133_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.Type that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.Type that) this.withAlso(that:this.size(), val:that)
class method 
This1.Type cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.Type that0=(
        Void unused1=return that
        
        catch return This1.Type casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.Type result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.Type val(This2.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Type left() This0.cast(that:this.inner().val(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Type right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This2.N that, This1.Type val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This2.N that, This1.Type val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Type right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.Type left) this.#inner().add(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.Type that) this.#inner().#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.Type that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This2.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This2.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This2.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This2.N size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0__133_0 varres=This0.Varres0__133_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.Type #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N stopOk) this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Type #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N stopOk) this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.Type #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() 
mut method 
Void inner(This2.Type that) this.#that().#apply(that:this.from(), val:that)}}}
MetaGuard:{interface <:This1.Guard
RecordWrapper:' can not be private, I need to Patch it.
{
class method 
This2.S libToS(Library that) This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#O()
  Void unused1=b.#space()
  Void unused2=b.#F()
  Void unused3=b.#I()
  Void unused4=b.#X()
  b
  ))
class method 
Library recordWrapperToSTrait() {<:This3.MetaGuard
method toS() This0.myName().#plusplus(that:This1.libToS(that:this.lib()))
method 
Library lib() }
class method 
Library recordWrapperTrait() {<:This3.MetaGuard
method kind() This0.myName()
method text() This3.S.#from(builder:(
  This3.S::#builder() b=This3.S.#builder()
  b
  ))
method responseOf() This3.Message.Opt.#apply()
method myName() This3.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This3.Introspection.Record record, Library lib) 
method 
This3.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This3.S libName() 
class method 
Void #apply(Library lift) exception This0 (
  This3.Introspection.Record::#apply(lib ) record=This3.Introspection.Record.#apply(lib:lift)
  This3.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This3.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This3.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )}
class method 
Library #leftleft(Library that) ('either that provides a toS, or I have a default impl, that requires lib()

  This2.SafeOperatorsAccess::compose(left right ) res=This2.SafeOperatorsAccess.compose(left:that, right:This0.recordWrapperTrait())
  Library open=(
    Void unused=(
      Void unused0=return This2.SafeOperatorsAccess.compose(left:res, right:This0.recordWrapperToSTrait())
      
      catch error Library catched return res
      void
      )
    
    catch return Library result result
    error {'@stringU
    'CurlyBlock-Should be unreachable code
    }
    )
  (
    Void unused1=(
      Void unused2=return This2.SafeOperatorsAccess.compose(left:open, right:{
      class method 
      mut This0 #mut(fwd This3.Introspection.Record record, fwd Library lib) 
      class method 
      This0 #apply(This3.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)})
      
      catch error Library catched2 return open
      void
      )
    
    catch return Library result0 result0
    error {'@stringU
    'CurlyBlock-Should be unreachable code
    }
    )
  )}
SourceUnfit:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#o()
  Void unused1=b.#u()
  Void unused2=b.#r()
  Void unused3=b.#c()
  Void unused4=b.#e()
  Void unused5=b.#U()
  Void unused6=b.#n()
  Void unused7=b.#f()
  Void unused8=b.#i()
  Void unused9=b.#t()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
IncoherentRedirectMapping:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#I()
  Void unused0=b.#n()
  Void unused1=b.#c()
  Void unused2=b.#o()
  Void unused3=b.#h()
  Void unused4=b.#e()
  Void unused5=b.#r()
  Void unused6=b.#e()
  Void unused7=b.#n()
  Void unused8=b.#t()
  Void unused9=b.#R()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#i()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#c()
  Void unused16=b.#t()
  Void unused17=b.#M()
  Void unused18=b.#a()
  Void unused19=b.#p()
  Void unused20=b.#p()
  Void unused21=b.#i()
  Void unused22=b.#n()
  Void unused23=b.#g()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
ClassClash:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#C()
  Void unused0=b.#l()
  Void unused1=b.#a()
  Void unused2=b.#s()
  Void unused3=b.#s()
  Void unused4=b.#C()
  Void unused5=b.#l()
  Void unused6=b.#a()
  Void unused7=b.#s()
  Void unused8=b.#h()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
MethodClash:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#t()
  Void unused2=b.#h()
  Void unused3=b.#o()
  Void unused4=b.#d()
  Void unused5=b.#C()
  Void unused6=b.#l()
  Void unused7=b.#a()
  Void unused8=b.#s()
  Void unused9=b.#h()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
InvalidOnTopLevel:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#I()
  Void unused0=b.#n()
  Void unused1=b.#v()
  Void unused2=b.#a()
  Void unused3=b.#l()
  Void unused4=b.#i()
  Void unused5=b.#d()
  Void unused6=b.#O()
  Void unused7=b.#n()
  Void unused8=b.#T()
  Void unused9=b.#o()
  Void unused10=b.#p()
  Void unused11=b.#L()
  Void unused12=b.#e()
  Void unused13=b.#v()
  Void unused14=b.#e()
  Void unused15=b.#l()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
PrivacyCoupuled:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#P()
  Void unused0=b.#r()
  Void unused1=b.#i()
  Void unused2=b.#v()
  Void unused3=b.#a()
  Void unused4=b.#c()
  Void unused5=b.#y()
  Void unused6=b.#C()
  Void unused7=b.#o()
  Void unused8=b.#u()
  Void unused9=b.#p()
  Void unused10=b.#u()
  Void unused11=b.#l()
  Void unused12=b.#e()
  Void unused13=b.#d()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
ParameterMismatch:{<:This2.MetaGuard, This2.MetaGuard
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#r()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#t()
  Void unused6=b.#e()
  Void unused7=b.#r()
  Void unused8=b.#M()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#m()
  Void unused12=b.#a()
  Void unused13=b.#t()
  Void unused14=b.#c()
  Void unused15=b.#h()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )
method toS() This0.myName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
MemberUnavailable:{interface <:This2.MetaGuard}
DispatchMemberUnavailable:{
class method 
Void #apply(Library that) exception This1.MemberUnavailable (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:that)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This2.S.#from(builder:(
      This2.S::#builder() b0=This2.S.#builder()
      Void unused3=b0.#M()
      Void unused4=b0.#e()
      Void unused5=b0.#m()
      Void unused6=b0.#b()
      Void unused7=b0.#e()
      Void unused8=b0.#r()
      Void unused9=b0.#U()
      Void unused10=b0.#n()
      Void unused11=b0.#a()
      Void unused12=b0.#v()
      Void unused13=b0.#a()
      Void unused14=b0.#i()
      Void unused15=b0.#l()
      Void unused16=b0.#a()
      Void unused17=b0.#b()
      Void unused18=b0.#l()
      Void unused19=b0.#e()
      b0
      )))
    (
      Void unused20=cond.#checkTrue()
      
      catch exception Void catched3 void
      (
        Void unused21=(
          This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::contains(that ) cond0=record.#from(builder:(
            This2.Introspection.Record::#apply(lib ) ::#builder() b1=record.#builder()
            Void unused22=b1.#I()
            Void unused23=b1.#n()
            Void unused24=b1.#v()
            Void unused25=b1.#a()
            Void unused26=b1.#l()
            Void unused27=b1.#i()
            Void unused28=b1.#d()
            Void unused29=b1.#K()
            Void unused30=b1.#i()
            Void unused31=b1.#n()
            Void unused32=b1.#d()
            b1
            )).contains(that:This2.S.#from(builder:(
            This2.S::#builder() b2=This2.S.#builder()
            Void unused33=b2.#M()
            Void unused34=b2.#e()
            Void unused35=b2.#t()
            Void unused36=b2.#h()
            Void unused37=b2.#o()
            Void unused38=b2.#d()
            b2
            )))
          (
            Void unused39=cond0.#checkTrue()
            
            catch exception Void catched7 void
            exception This1.MethodUnavailable.#apply(record:record, lib:that)
            )
          )
        exception This1.NestedClassUnavailable.#apply(record:record, lib:that)
        )
      )
    )
  )}
NestedClassUnavailable:{<:This1.MemberUnavailable, This2.MetaGuard
class method 
mut This0 #mutK(This2.Path path, This2.Bool isPrivate) 
class method 
This0 #apply(This2.Path path, This2.Bool isPrivate) This0.#mutK(path:path, isPrivate:isPrivate)
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Bool #isPrivate() 
read method 
This2.Bool isPrivate() 
method toS() This0.myName().#plusplus(that:(
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind0=This2.S.#from(builder:(
      This2.S::#builder() b1=This2.S.#builder()
      Void unused=b1.#oSquare()
      Void unused0=b1.#p()
      Void unused1=b1.#a()
      Void unused2=b1.#t()
      Void unused3=b1.#h()
      Void unused4=b1.#colon()
      b1
      )).#begin().#add(that:this.path()).#end()
    listKind0.#from(builder:(
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind0.#builder()
      Void unused5=b0.#comma()
      Void unused6=b0.#i()
      Void unused7=b0.#s()
      Void unused8=b0.#P()
      Void unused9=b0.#r()
      Void unused10=b0.#i()
      Void unused11=b0.#v()
      Void unused12=b0.#a()
      Void unused13=b0.#t()
      Void unused14=b0.#e()
      Void unused15=b0.#colon()
      b0
      ))
    ).#begin().#add(that:this.isPrivate()).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused16=b.#cSquare()
    b
    ))
  ))
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#apply(path:This2.Path.fromDocInternalizedS(that:record.#from(builder:(
  This2.Introspection.Record::#builder() b=record.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#t()
  Void unused2=b.#h()
  b
  ))), isPrivate:This2.Bool.fromS(that:record.#from(builder:(
  This2.Introspection.Record::#builder() b0=record.#builder()
  Void unused3=b0.#I()
  Void unused4=b0.#s()
  Void unused5=b0.#P()
  Void unused6=b0.#r()
  Void unused7=b0.#i()
  Void unused8=b0.#v()
  Void unused9=b0.#a()
  Void unused10=b0.#t()
  Void unused11=b0.#e()
  b0
  ))))
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#m()
  Void unused2=b.#b()
  Void unused3=b.#e()
  Void unused4=b.#r()
  Void unused5=b.#U()
  Void unused6=b.#n()
  Void unused7=b.#a()
  Void unused8=b.#v()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  Void unused12=b.#a()
  Void unused13=b.#b()
  Void unused14=b.#l()
  Void unused15=b.#e()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )}
MethodUnavailable:{<:This1.MemberUnavailable, This2.MetaGuard
class method 
mut This0 #mutK(This2.Path path, This2.Selector selector, This2.Bool isPrivate) 
class method 
This0 #apply(This2.Path path, This2.Selector selector, This2.Bool isPrivate) This0.#mutK(path:path, selector:selector, isPrivate:isPrivate)
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Selector #selector() 
read method 
This2.Selector selector() 
mut method 
This2.Bool #isPrivate() 
read method 
This2.Bool isPrivate() 
method toS() This0.myName().#plusplus(that:(
  This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind0=(
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind1=This2.S.#from(builder:(
        This2.S::#builder() b2=This2.S.#builder()
        Void unused=b2.#oSquare()
        Void unused0=b2.#p()
        Void unused1=b2.#a()
        Void unused2=b2.#t()
        Void unused3=b2.#h()
        Void unused4=b2.#colon()
        b2
        )).#begin().#add(that:this.path()).#end()
      listKind1.#from(builder:(
        This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b1=listKind1.#builder()
        Void unused5=b1.#comma()
        Void unused6=b1.#space()
        Void unused7=b1.#s()
        Void unused8=b1.#e()
        Void unused9=b1.#l()
        Void unused10=b1.#e()
        Void unused11=b1.#c()
        Void unused12=b1.#t()
        Void unused13=b1.#o()
        Void unused14=b1.#r()
        Void unused15=b1.#colon()
        b1
        ))
      ).#begin().#add(that:this.selector()).#end()
    listKind0.#from(builder:(
      This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind0.#builder()
      Void unused16=b0.#comma()
      Void unused17=b0.#i()
      Void unused18=b0.#s()
      Void unused19=b0.#P()
      Void unused20=b0.#r()
      Void unused21=b0.#i()
      Void unused22=b0.#v()
      Void unused23=b0.#a()
      Void unused24=b0.#t()
      Void unused25=b0.#e()
      Void unused26=b0.#colon()
      b0
      ))
    ).#begin().#add(that:this.isPrivate()).#end()
  listKind.#from(builder:(
    This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b=listKind.#builder()
    Void unused27=b.#cSquare()
    b
    ))
  ))
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#apply(path:This2.Path.fromDocInternalizedS(that:record.#from(builder:(
  This2.Introspection.Record::#builder() b=record.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#t()
  Void unused2=b.#h()
  b
  ))), selector:This2.Selector.fromS(that:record.#from(builder:(
  This2.Introspection.Record::#builder() b0=record.#builder()
  Void unused3=b0.#S()
  Void unused4=b0.#e()
  Void unused5=b0.#l()
  Void unused6=b0.#e()
  Void unused7=b0.#c()
  Void unused8=b0.#t()
  Void unused9=b0.#o()
  Void unused10=b0.#r()
  b0
  ))), isPrivate:This2.Bool.fromS(that:record.#from(builder:(
  This2.Introspection.Record::#builder() b1=record.#builder()
  Void unused11=b1.#I()
  Void unused12=b1.#s()
  Void unused13=b1.#P()
  Void unused14=b1.#r()
  Void unused15=b1.#i()
  Void unused16=b1.#v()
  Void unused17=b1.#a()
  Void unused18=b1.#t()
  Void unused19=b1.#e()
  b1
  ))))
class method 
This2.S libName() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#m()
  Void unused2=b.#b()
  Void unused3=b.#e()
  Void unused4=b.#r()
  Void unused5=b.#U()
  Void unused6=b.#n()
  Void unused7=b.#a()
  Void unused8=b.#v()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  Void unused12=b.#a()
  Void unused13=b.#b()
  Void unused14=b.#l()
  Void unused15=b.#e()
  b
  ))
method kind() This0.myName()
method text() This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  ))
method responseOf() This2.Message.Opt.#apply()
method myName() This2.GetMyName.#apply(that:This0)
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method clazz() This0
method classAny() This0
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record::#apply(lib ) record=This2.Introspection.Record.#apply(lib:lift)
  This2.Introspection.Record::#apply(lib ) ::#from(builder ) x=record.#from(builder:(
    This2.Introspection.Record::#apply(lib ) ::#builder() b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Introspection.Record::#apply(lib ) ::#from(builder ) ::#equalequal(that ) cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception This0.#apply(record:record, lib:lift)
      )
    )
  )}}
Refactor:{
class method 
Library compose(Library left, Library right) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This1.SafeOperators.compose(left:left, right:right)
    
    catch error Library err (
      Void unused1=This1.MetaGuard.ClassClash.#apply(lift:err)
      Void unused2=This1.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
Void checkTargetExists(Library that, This1.Path path) exception This1.MetaGuard.NestedClassUnavailable (
  This0.AddDocumentationPath::#apply(that doc ) ::#leftleft(that ) unused=This0.AddDocumentationPath.#apply(that:path, doc:This1.Introspection.Doc.#from(builder:(
    This1.Introspection.Doc::#builder() b=This1.Introspection.Doc.#builder()
    Void unused0=b.#J()
    Void unused1=b.#u()
    Void unused2=b.#s()
    Void unused3=b.#t()
    Void unused4=b.#T()
    Void unused5=b.#o()
    Void unused6=b.#S()
    Void unused7=b.#e()
    Void unused8=b.#e()
    Void unused9=b.#I()
    Void unused10=b.#f()
    Void unused11=b.#I()
    Void unused12=b.#t()
    Void unused13=b.#I()
    Void unused14=b.#s()
    Void unused15=b.#T()
    Void unused16=b.#h()
    Void unused17=b.#e()
    Void unused18=b.#r()
    Void unused19=b.#e()
    b
    ))).#leftleft(that:that)
  
  catch exception This1.MetaGuard.InvalidOnTopLevel x error This1.Assert.CodeNotReachable.#from(builder:(
    This1.Assert.CodeNotReachable::#builder() b0=This1.Assert.CodeNotReachable.#builder()
    Void unused20=b0.#R()
    Void unused21=b0.#e()
    Void unused22=b0.#f()
    Void unused23=b0.#a()
    Void unused24=b0.#c()
    Void unused25=b0.#t()
    Void unused26=b0.#o()
    Void unused27=b0.#r()
    Void unused28=b0.#4()
    b0
    ))
  void
  )
Redirect:{
class method 
mut This0 #mutK(This2.Path that, class Any to) 
class method 
This0 #apply(This2.Path that, class Any to) This0.#mutK(that:that, to:to)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
class Any #to() 
read method 
class Any to() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.InvalidOnTopLevel, This2.MetaGuard.SourceUnfit, This2.MetaGuard.MethodClash, This2.MetaGuard.IncoherentRedirectMapping (
  Void unused=(
    Void unused0=return This2.SafeOperators.redirect(that:that, src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.InvalidOnTopLevel.#apply(lift:err)
      Void unused3=This2.MetaGuard.SourceUnfit.#apply(lift:err)
      Void unused4=This2.MetaGuard.MethodClash.#apply(lift:err)
      Void unused5=This2.MetaGuard.IncoherentRedirectMapping.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
RenameSelector:{
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Selector to) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Selector to) This0.#mutK(that:that, of:of, to:to)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Selector #to() 
read method 
This2.Selector to() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.renameMethod(that:that, path:this.of(), src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
RenamePath:{
class method 
mut This0 #mutK(This2.Path that, This2.Path to) 
class method 
This0 #apply(This2.Path that, This2.Path to) This0.#mutK(that:that, to:to)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
This2.Path #to() 
read method 
This2.Path to() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.MethodClash, This2.MetaGuard.ClassClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.renameClass(that:that, src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      Void unused3=This2.MetaGuard.ClassClash.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
RemoveImplementationSelector:{
class method 
mut This0 #mutK(This2.Selector that, This2.Path of) 
class method 
This0 #apply(This2.Selector that, This2.Path of) This0.#mutK(that:that, of:of)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable (
  Void unused=(
    Void unused0=return This2.SafeOperators.removeImplementation(that:that, path:this.of(), selector:this.that())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
MoveImplementationSelector:{
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Selector to) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Selector to) This0.#mutK(that:that, of:of, to:to)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Selector #to() 
read method 
This2.Selector to() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.moveImplementation(that:that, path:this.of(), src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
RemoveImplementationPath:{
class method 
mut This0 #mutK(This2.Path that) 
class method 
This0 #apply(This2.Path that) This0.#mutK(that:that)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.PrivacyCoupuled (
  Void unused=(
    Void unused0=return This2.SafeOperators.removeImplementation(that:that, path:this.that())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.PrivacyCoupuled.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
AddDocumentationSelector:{
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Introspection.Doc doc) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Introspection.Doc doc) This0.#mutK(that:that, of:of, doc:doc)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Introspection.Doc #doc() 
read method 
This2.Introspection.Doc doc() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable (
  Void unused=(
    Void unused0=return This2.SafeOperators.addDocumentation(that:that, path:this.of(), selector:this.that(), doc:this.doc())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
AddDocumentationPath:{
class method 
mut This0 #mutK(This2.Path that, This2.Introspection.Doc doc) 
class method 
This0 #apply(This2.Path that, This2.Introspection.Doc doc) This0.#mutK(that:that, doc:doc)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
This2.Introspection.Doc #doc() 
read method 
This2.Introspection.Doc doc() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.InvalidOnTopLevel (
  Void unused=(
    Void unused0=return This2.SafeOperators.addDocumentation(that:that, path:this.that(), doc:this.doc())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.InvalidOnTopLevel.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
MakePrivatePath:{
class method 
mut This0 #mutK(This2.Path that) 
class method 
This0 #apply(This2.Path that) This0.#mutK(that:that)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.InvalidOnTopLevel This1.AddDocumentationPath.#apply(that:this.that(), doc:This2.Introspection.Doc.#apply(that:{'@private
})).#leftleft(that:that)}
MakePrivateSelector:{
class method 
mut This0 #mutK(This2.Selector that, This2.Path of) 
class method 
This0 #apply(This2.Selector that, This2.Path of) This0.#mutK(that:that, of:of)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable This1.AddDocumentationSelector.#apply(that:this.that(), of:this.of(), doc:This2.Introspection.Doc.#apply(that:{'@private
})).#leftleft(that:that)}
SumMethods:{
class method 
mut This0 #mutK(This2.Selector that, This2.Selector and, This2.Path of, This2.S over, This2.Selector to) 
class method 
This0 #apply(This2.Selector that, This2.Selector and, This2.Path of, This2.S over, This2.Selector to) This0.#mutK(that:that, and:and, of:of, over:over, to:to)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Selector #and() 
read method 
This2.Selector and() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.S #over() 
read method 
This2.S over() 
mut method 
This2.Selector #to() 
read method 
This2.Selector to() 
method 
Library #leftleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.MethodClash, This2.MetaGuard.ParameterMismatch (
  Void unused=(
    Void unused0=return This2.SafeOperators.sumMethods(that:that, path:this.of(), src1:this.that(), src2:this.and(), dest:this.to(), name:this.over())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      Void unused3=This2.MetaGuard.ParameterMismatch.#apply(lift:err)
      error err
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Tools:{
class method 
This2.S getToSOrName(read Any that) (
  Void unused=(
    Void unused0=(
      This2.Concept.ToS that1=(
        Void unused1=return that
        
        catch return This2.Concept.ToS casted0 casted0
        catch return Any casted0 exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 (
        This2.Concept.Classable that0=(
          Void unused2=return that
          
          catch return This2.Concept.Classable casted casted
          catch return Any casted exception void
          error {'@stringU
          'CastT-Should be unreachable code
          }
          )
        
        catch exception Void catched2 return This2.S.#from(builder:(
          This2.S::#builder() b=This2.S.#builder()
          Void unused3=b.#i()
          Void unused4=b.#n()
          Void unused5=b.#s()
          Void unused6=b.#t()
          Void unused7=b.#a()
          Void unused8=b.#n()
          Void unused9=b.#c()
          Void unused10=b.#e()
          Void unused11=b.#space()
          Void unused12=b.#n()
          Void unused13=b.#o()
          Void unused14=b.#t()
          Void unused15=b.#space()
          Void unused16=b.#T()
          Void unused17=b.#o()
          Void unused18=b.#S()
          Void unused19=b.#space()
          Void unused20=b.#o()
          Void unused21=b.#r()
          Void unused22=b.#space()
          Void unused23=b.#C()
          Void unused24=b.#l()
          Void unused25=b.#a()
          Void unused26=b.#s()
          Void unused27=b.#s()
          Void unused28=b.#a()
          Void unused29=b.#b()
          Void unused30=b.#l()
          Void unused31=b.#e()
          b
          ))
        (
          Void unused32=return This2.GetMyName.#apply(that:that0.classAny()).#plusplus(that:This2.S.#from(builder:(
            This2.S::#builder() b0=This2.S.#builder()
            Void unused33=b0.#space()
            Void unused34=b0.#i()
            Void unused35=b0.#n()
            Void unused36=b0.#s()
            Void unused37=b0.#t()
            Void unused38=b0.#a()
            Void unused39=b0.#n()
            Void unused40=b0.#c()
            Void unused41=b0.#e()
            b0
            )))
          void
          )
        )
      (
        Void unused42=return that1.toS()
        void
        )
      )
    void
    )
  
  catch return This2.S result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}
Opt:{
class method 
Library #apply(class Any that) This1.SafeOperators.redirect(that:{
class method 
mut This0 #mutK(This0.TOpt that) 
class method 
This0 #new(This0.TOpt that) This0.#mutK(that:that)
mut method 
This0.TOpt #that() 
read method 
This0.TOpt that() 
T:{}
TOpt:{interface 
method 
This1.T get() }
TEmpty:{<:This1.TOpt
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
method get() error This3.Guard.Operation.#from(builder:(
  This3.Guard.Operation::#builder() b=This3.Guard.Operation.#builder()
  Void unused=b.#T()
  Void unused0=b.#E()
  Void unused1=b.#m()
  Void unused2=b.#p()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#dot()
  Void unused6=b.#g()
  Void unused7=b.#e()
  Void unused8=b.#t()
  Void unused9=b.#oRound()
  Void unused10=b.#cRound()
  Void unused11=b.#space()
  Void unused12=b.#V()
  Void unused13=b.#a()
  Void unused14=b.#l()
  Void unused15=b.#u()
  Void unused16=b.#e()
  Void unused17=b.#space()
  Void unused18=b.#n()
  Void unused19=b.#o()
  Void unused20=b.#t()
  Void unused21=b.#space()
  Void unused22=b.#p()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#s()
  Void unused26=b.#e()
  Void unused27=b.#n()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#i()
  Void unused31=b.#n()
  Void unused32=b.#space()
  Void unused33=b.#O()
  Void unused34=b.#p()
  Void unused35=b.#t()
  Void unused36=b.#i()
  Void unused37=b.#o()
  Void unused38=b.#n()
  Void unused39=b.#a()
  Void unused40=b.#l()
  b
  ))}
TOf:{<:This1.TOpt
class method 
mut This0 #mutK(This1.T that) 
class method 
This0 #apply(This1.T that) This0.#mutK(that:that)
mut method 
This1.T #that() 
read method 
This1.T that() 
method get() this.that()}
method 
This0.T #tilde() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    This0::#tilde() aux=this.#tilde()
    Void unused0=return This2.Bool.true()
    
    catch error Any catched return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This0.T that) This0.#new(that:This0.TOf.#apply(that:that))}, src:This1.Path.#from(builder:(
  This1.Path::#builder() b=This1.Path.#builder()
  Void unused=b.#T()
  b
  )), dest:that)}
PreferentialComposition:{'members of PreferentialComposition

Varacc__134_0:'@private
{
class method 
mut This0 #mutK(fwd This1.SrcDests::#begin() ::#end() inner) 
class method 
mut This0 #apply(This1.SrcDests::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1.SrcDests::#begin() ::#end() that) 
mut method 
This1.SrcDests::#begin() ::#end() #inner() }
Varaccumulator9__135_0:'@private
{
class method 
mut This0 #mutK(fwd This1.SrcDests::#begin() inner) 
class method 
mut This0 #apply(This1.SrcDests::#begin() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1.SrcDests::#begin() that) 
mut method 
This1.SrcDests::#begin() #inner() }
$:{interface 
method 
Library solveConflict(Library that, This1.SrcDest location) }
SrcDest:{
class method 
mut This0 #mutK(This2.Path path, This2.Selector src, This2.Selector dest) 
class method 
This0 #apply(This2.Path path, This2.Selector src, This2.Selector dest) This0.#mutK(path:path, src:src, dest:dest)
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Selector #src() 
read method 
This2.Selector src() 
mut method 
This2.Selector #dest() 
read method 
This2.Selector dest() }
SrcDests:{
Varres0__136_0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(This1.SrcDest that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(This1.SrcDest that) this.withAlso(that:this.size(), val:that)
class method 
This1.SrcDest cast(Any that) (
  Void unused=(
    Void unused0=(
      This1.SrcDest that0=(
        Void unused1=return that
        
        catch return This1.SrcDest casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return This1.SrcDest result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
This1.SrcDest val(This2.N that) This0.cast(that:this.inner().val(that:that))
read method 
This1.SrcDest left() This0.cast(that:this.inner().val(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.SrcDest right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This2.N that, This1.SrcDest val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This2.N that, This1.SrcDest val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.SrcDest right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(This1.SrcDest left) this.#inner().add(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.N that) this.#inner().remove(that:that)
mut method 
Void left(This1.SrcDest that) this.#inner().#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(This1.SrcDest that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This2.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This2.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This2.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This2.N size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0__136_0 varres=This0.Varres0__136_0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This3.SrcDest #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N stopOk) this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.SrcDest #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N stopOk) this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
This2.SrcDest #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() 
mut method 
Void inner(This2.SrcDest that) this.#that().#apply(that:this.from(), val:that)}}
Libs__137_0:'@private
{
Varres0:'@private
{
class method 
mut This0 #mutK(This1 inner) 
class method 
mut This0 #apply(This1 inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1 that) 
mut method 
This1 #inner() 
read method 
This1 inner() }
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #builder() this.empty()
class method 
mut This0 #from(mut This0 builder) builder
mut method 
Void #use(Library that) this.add(right:that)
class method 
This0 #begin() this.#builder()
method 
This0 #end() this
method 
This0 #add(Library that) this.withAlso(that:this.size(), val:that)
class method 
Library cast(Any that) (
  Void unused=(
    Void unused0=(
      Library that0=(
        Void unused1=return that
        
        catch return Library casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
      (
        Void unused2=return that0
        void
        )
      )
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
read method 
Library val(This2.N that) This0.cast(that:this.inner().val(that:that))
read method 
Library left() This0.cast(that:this.inner().val(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
Library right() This0.cast(that:(
  This0::inner() rcv=this.inner()
  rcv.val(that:rcv.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))))
  ))
mut method 
Void #apply(This2.N that, Library val) this.#inner().#apply(that:that, val:val)
mut method 
Void add(This2.N that, Library val) this.#inner().add(that:that, val:val)
mut method 
Void add(Library right) (
  This0::#inner() rcv0=this.#inner()
  rcv0.add(that:rcv0.size(), val:right)
  )
mut method 
Void add(Library left) this.#inner().add(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.N that) this.#inner().remove(that:that)
mut method 
Void left(Library that) this.#inner().#apply(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )), val:that)
mut method 
Void right(Library that) (
  This0::#inner() rcv1=this.#inner()
  rcv1.#apply(that:rcv1.size().#less(that:This2.N.#from(builder:(
    This2.N::#builder() b=This2.N.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
method 
This0 without(This2.N that) This0.#immK(inner:this.inner().without(that:that))
method 
This0 withoutLeft() This0.#immK(inner:this.inner().without(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  ))))
method 
This0 withAlso(This2.N that, Any val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 with(This2.N that, Any val) This0.#immK(inner:this.inner().with(that:that, val:val))
read method 
mut This0 reverse() (
  This0::empty() result=This0.empty()
  Void unused=(
    This0::vals() e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                void
                )
              exception void
              )
            result.add(left:e.#inner())
            )
          
          catch exception Void catched3 void
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      e.#close()
      )
    )
  result
  )
read method 
This2.N size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 #plusplus(This0 that) (
  Void unused=(
    This0 res=this
    mut This0.Varres0 varres=This0.Varres0.#apply(inner:res)
    Void unused0=(
      This0::vals() e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varres.inner(that:varres.#inner().#add(that:e.#inner()))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=e.#close()
            exception propagated
            )
          void
          )
        
        catch return This0 propagated0 (
          Void unused9=e.#close()
          return propagated0
          )
        e.#close()
        )
      )
    Void unused1=return varres.#inner()
    void
    )
  
  catch return This0 result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
IteratorTrait:{
class method 
Library #apply() {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.N from() 
mut method 
Void from(This4.N that) 
read method 
This4.N to() 
read method 
This4.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.N.#from(builder:(
    This4.N::#builder() b=This4.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This4.N.#from(builder:(
      This4.N::#builder() b0=This4.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
Library #inner() This2.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void}}
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVal.#apply(that:this.inner(), from:from, to:to, stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N stopOk) this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
read method 
lent This0.IteratorVal vals(This2.N from, This2.N to) this.vals(from:from, to:to, stopOk:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVal:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
Library #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#lentK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() }
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to, This2.N stopOk) This0.IteratorVar.#apply(that:this.#inner(), from:from, to:to, stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N stopOk) this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:stopOk)
mut method 
lent This0.IteratorVar #vals(This2.N from, This2.N to) this.#vals(from:from, to:to, stopOk:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.N.#from(builder:(
  This2.N::#builder() b=This2.N.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b0=This2.N.#builder()
  Void unused0=b0.#1()
  b0
  ))), to:This2.N.#from(builder:(
  This2.N::#builder() b1=This2.N.#builder()
  Void unused1=b1.#0()
  b1
  )).#less(that:This2.N.#from(builder:(
  This2.N::#builder() b2=This2.N.#builder()
  Void unused2=b2.#2()
  b2
  ))), stopOk:this.inner().size())
IteratorVar:{
read method 
read This3.Collections.MutListAny that() 
read method 
This3.N from() 
mut method 
Void from(This3.N that) 
read method 
This3.N to() 
read method 
This3.N stopOk() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.N.#from(builder:(
    This3.N::#builder() b=This3.N.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This0::to() ::#right(that ) ::#and(that ) cond=this.to().#right(that:This3.N.#from(builder:(
      This3.N::#builder() b0=This3.N.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.to()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      exception void
      )
    )
  (
    This0::from() ::#rightequal(that ) cond0=this.from().#rightequal(that:this.that().size())
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      exception void
      )
    )
  )
read method 
Void #checkEnd() (
  This0::from() ::#left(that ) cond=this.from().#left(that:this.stopOk())
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched0 void
    error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), stopOk:this.stopOk(), size:this.that().size())
    )
  )
read method 
Library #inner() This1.cast(that:this.that().val(that:this.from()))
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.N from, This3.N to, This3.N stopOk) This0.#mutK(that:that, from:from, to:to, stopOk:stopOk)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.N #from() 
mut method 
This3.N #to() 
mut method 
This3.N #stopOk() 
mut method 
Void inner(Library that) this.#that().#apply(that:this.from(), val:that)}}
class method '@private
This0.SrcDests renameMap__64_0(Library that, This1.S prefix, This1.Introspection.NestedClasses intros) (
  Void unused=(
    This0.SrcDests::#begin() ::#end() acc=This0.SrcDests.#begin().#end()
    mut This0.Varacc__134_0 varacc=This0.Varacc__134_0.#apply(inner:acc)
    Void unused0=(
      This1.Introspection.NestedClasses::vals() intro=intros.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=intro.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=intro.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              varacc.inner(that:varacc.#inner().#plusplus(that:this.renameMap(that:that, prefix:prefix, path:intro.#inner().pathFromRoot(), ms:intro.#inner().methods())))
              )
            
            catch exception Void catched3 void
            void
            )
          
          catch exception Any propagated (
            Void unused8=intro.#close()
            exception propagated
            )
          void
          )
        
        catch return This0.SrcDests propagated0 (
          Void unused9=intro.#close()
          return propagated0
          )
        intro.#close()
        )
      )
    Void unused1=return varacc.#inner()
    void
    )
  
  catch return This0.SrcDests result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This0.SrcDests renameMap(Library that, This1.S prefix, This1.Path path, This1.Introspection.Methods ms) (
  Void unused=(
    This1.Introspection::#apply(lib path ) thatI=This1.Introspection.#apply(lib:that, path:path)
    
    catch exception This1.MetaGuard.MemberUnavailable catched return This0.SrcDests.#begin().#end()
    (
      Void unused0=return (
        This0.SrcDests::#begin() accumulator=This0.SrcDests.#begin()
        mut This0.Varaccumulator9__135_0 varaccumulator=This0.Varaccumulator9__135_0.#apply(inner:accumulator)
        Void unused1=(
          This1.Introspection.Methods::vals() meth=ms.vals()
          (
            Void unused2=(
              Void unused3=(
                Void unused4=loop (
                  Void unused5=meth.#next()
                  
                  catch exception Void catched1 (
                    Void unused6=(
                      Void unused7=meth.#checkEnd()
                      
                      catch exception Void catched2 void
                      void
                      )
                    exception void
                    )
                  (
                    This0::needRename(that meth ) cond=this.needRename(that:thatI, meth:meth.#inner())
                    (
                      Void unused8=cond.#checkTrue()
                      
                      catch exception Void catched5 void
                      (
                        This1.Selector::fromS(that ) destSel=This1.Selector.fromS(that:prefix.#plusplus(that:meth.#inner().selector().toS()))
                        varaccumulator.inner(that:varaccumulator.#inner().#add(that:This0.SrcDest.#apply(path:path, src:meth.#inner().selector(), dest:destSel)))
                        )
                      )
                    )
                  )
                
                catch exception Void catched7 void
                void
                )
              
              catch exception Any propagated (
                Void unused9=meth.#close()
                exception propagated
                )
              void
              )
            
            catch return This0.SrcDests propagated0 (
              Void unused10=meth.#close()
              return propagated0
              )
            meth.#close()
            )
          )
        varaccumulator.#inner().#end()
        )
      void
      )
    )
  
  catch return This0.SrcDests result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
This1.Bool needRename(This1.Introspection.NestedClass that, This1.Introspection.Method meth) (
  Void unused=(
    Void unused0=(
      This1.Introspection.Method::isPrivate() cond=meth.isPrivate()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This1.Bool.false()
        )
      )
    Void unused1=(
      This1.Introspection.Method::methodKind() ::#equalequal(that ) cond0=meth.methodKind().#equalequal(that:This1.S.#from(builder:(
        This1.S::#builder() b=This1.S.#builder()
        Void unused3=b.#A()
        Void unused4=b.#b()
        Void unused5=b.#s()
        Void unused6=b.#t()
        Void unused7=b.#r()
        Void unused8=b.#a()
        Void unused9=b.#c()
        Void unused10=b.#t()
        Void unused11=b.#M()
        Void unused12=b.#e()
        Void unused13=b.#t()
        Void unused14=b.#h()
        Void unused15=b.#o()
        Void unused16=b.#d()
        b
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched3 void
        return This1.Bool.false()
        )
      )
    This1.Introspection.NestedClass::methodFromSelector(that ) meth2=that.methodFromSelector(that:meth.selector())
    
    catch exception This1.MetaGuard.MemberUnavailable catched4 return This1.Bool.false()
    (
      Void unused18=(
        This1.Introspection.NestedClass::methodFromSelector(that ) ::isPrivate() cond1=meth2.isPrivate()
        (
          Void unused21=cond1.#checkTrue()
          
          catch exception Void catched6 void
          return This1.Bool.false()
          )
        )
      Void unused19=(
        This1.Introspection.NestedClass::methodFromSelector(that ) ::methodKind() ::#equalequal(that ) cond2=meth2.methodKind().#equalequal(that:This1.S.#from(builder:(
          This1.S::#builder() b0=This1.S.#builder()
          Void unused22=b0.#A()
          Void unused23=b0.#b()
          Void unused24=b0.#s()
          Void unused25=b0.#t()
          Void unused26=b0.#r()
          Void unused27=b0.#a()
          Void unused28=b0.#c()
          Void unused29=b0.#t()
          Void unused30=b0.#M()
          Void unused31=b0.#e()
          Void unused32=b0.#t()
          Void unused33=b0.#h()
          Void unused34=b0.#o()
          Void unused35=b0.#d()
          b0
          )))
        (
          Void unused36=cond2.#checkTrue()
          
          catch exception Void catched9 void
          return This1.Bool.false()
          )
        )
      Void unused20=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method 
Library #leftleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash This1.Refactor.compose(left:that, right:{'members of each produced class
<:This1.$
Varacc0__139_0:'@private
{
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap__140_0:'@private
{
class method 
mut This0 #mutK(fwd This2.SrcDests::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.SrcDests::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.SrcDests::#begin() ::#end() that) 
mut method 
This2.SrcDests::#begin() ::#end() #inner() }
Varlibi__141_0:'@private
{
class method 
mut This0 #mutK(fwd This1::myLibs__65_0() ::vals() ::#inner() inner) 
class method 
mut This0 #apply(This1::myLibs__65_0() ::vals() ::#inner() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::myLibs__65_0() ::vals() ::#inner() that) 
mut method 
This1::myLibs__65_0() ::vals() ::#inner() #inner() }
class method '@private
mut This0 #mutK__65_0(This1.Libs__137_0 myLibs__65_0) 
class method '@private
This0 #apply__66_0(This1.Libs__137_0 myLibs) This0.#mutK__65_0(myLibs__65_0:myLibs)
mut method '@private
This1.Libs__137_0 #myLibs__65_0() 
read method '@private
This1.Libs__137_0 myLibs__65_0() 
method 
This0 #add(Library that) This0.#apply__66_0(myLibs:this.myLibs__65_0().#add(that:that))
class method 
This0 #begin() This0.#apply__66_0(myLibs:This1.Libs__137_0.#begin().#end())
method 
This0 #end() This0.#apply__66_0(myLibs:this.myLibs__65_0().#end())
method 
Library #leftleft(Library that) exception This2.MetaGuard.ClassClash, This2.MetaGuard.MethodClash (
  Void unused=(
    This2.Introspection::#apply(lib ) i=This2.Introspection.#apply(lib:that)
    This1.SrcDests::#begin() ::#end() map=This1.SrcDests.#begin().#end()
    Library acc={}
    mut This0.Varmap__140_0 varmap=This0.Varmap__140_0.#apply(inner:map)
    mut This0.Varacc0__139_0 varacc=This0.Varacc0__139_0.#apply(inner:acc)
    Void unused0=(
      This0::myLibs__65_0() ::vals() lib=this.myLibs__65_0().vals()
      (
        Void unused4=(
          Void unused5=(
            This2.N::#from(builder ) ::vals() index=This2.N.#from(builder:(
              This2.N::#builder() b=This2.N.#builder()
              Void unused6=b.#1()
              b
              )).vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=lib.#next()
                    
                    catch exception Void catched2 (
                      Void unused11=(
                        Void unused14=index.#next()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused12=(
                        Void unused15=lib.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      Void unused13=(
                        Void unused16=index.#checkEnd()
                        
                        catch exception Void catched5 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused17=index.#next()
                      
                      catch exception Void catched7 (
                        Void unused18=(
                          Void unused20=lib.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        Void unused19=(
                          Void unused21=index.#checkEnd()
                          
                          catch exception Void catched9 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::myLibs__65_0() ::vals() ::#inner() libi=lib.#inner()
                        This1::renameMap__64_0(that prefix intros ) rens=This1.renameMap__64_0(that:lib.#inner(), prefix:(
                          This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This2.S.#from(builder:(
                            This2.S::#builder() b1=This2.S.#builder()
                            Void unused23=b1.#hash()
                            b1
                            )).#begin().#add(that:index.#inner()).#end()
                          listKind.#from(builder:(
                            This2.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
                            b0
                            ))
                          ), intros:i.transitivelyNestedClasses())
                        mut This0.Varlibi__141_0 varlibi=This0.Varlibi__141_0.#apply(inner:libi)
                        Void unused22=(
                          This1::renameMap__64_0(that prefix intros ) ::vals() ren=rens.vals()
                          (
                            Void unused24=(
                              Void unused25=(
                                Void unused26=loop (
                                  Void unused27=ren.#next()
                                  
                                  catch exception Void catched15 (
                                    Void unused28=(
                                      Void unused29=ren.#checkEnd()
                                      
                                      catch exception Void catched16 void
                                      void
                                      )
                                    exception void
                                    )
                                  (
                                    Void unused30=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                                    varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    )
                                  )
                                
                                catch exception Void catched19 void
                                void
                                )
                              
                              catch exception Any propagated (
                                Void unused31=ren.#close()
                                exception propagated
                                )
                              void
                              )
                            
                            catch return Library propagated0 (
                              Void unused32=ren.#close()
                              return propagated0
                              )
                            ren.#close()
                            )
                          )
                        varacc.inner(that:This2.Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  
                  catch exception Void catched25 void
                  void
                  )
                
                catch exception Any propagated1 (
                  Void unused33=index.#close()
                  exception propagated1
                  )
                void
                )
              
              catch return Library propagated2 (
                Void unused34=index.#close()
                return propagated2
                )
              index.#close()
              )
            )
          
          catch exception Any propagated3 (
            Void unused35=lib.#close()
            exception propagated3
            )
          void
          )
        
        catch return Library propagated4 (
          Void unused36=lib.#close()
          return propagated4
          )
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:This2.Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      This0.Varmap__140_0::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused37=(
          Void unused38=(
            Void unused39=loop (
              Void unused40=mapi.#next()
              
              catch exception Void catched35 (
                Void unused41=(
                  Void unused42=mapi.#checkEnd()
                  
                  catch exception Void catched36 void
                  void
                  )
                exception void
                )
              varacc.inner(that:This2.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftleft(that:varacc.#inner()))
              )
            
            catch exception Void catched38 void
            void
            )
          
          catch exception Any propagated5 (
            Void unused43=mapi.#close()
            exception propagated5
            )
          void
          )
        
        catch return Library propagated6 (
          Void unused44=mapi.#close()
          return propagated6
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This2.MetaGuard.MemberUnavailable catched43 error This2.Assert.CodeNotReachable.#from(builder:(
      This2.Assert.CodeNotReachable::#builder() b2=This2.Assert.CodeNotReachable.#builder()
      Void unused45=b2.#P()
      Void unused46=b2.#r()
      Void unused47=b2.#e()
      Void unused48=b2.#f()
      Void unused49=b2.#e()
      Void unused50=b2.#r()
      Void unused51=b2.#e()
      Void unused52=b2.#n()
      Void unused53=b2.#t()
      Void unused54=b2.#i()
      Void unused55=b2.#a()
      Void unused56=b2.#l()
      Void unused57=b2.#C()
      Void unused58=b2.#o()
      Void unused59=b2.#m()
      Void unused60=b2.#p()
      Void unused61=b2.#o()
      Void unused62=b2.#s()
      Void unused63=b2.#i()
      Void unused64=b2.#t()
      Void unused65=b2.#i()
      Void unused66=b2.#o()
      Void unused67=b2.#n()
      Void unused68=b2.#1()
      b2
      )).#apply(that:catched43)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #plusplus(This0 that) This0.#apply__66_0(myLibs:this.myLibs__65_0().#plusplus(that:that.myLibs__65_0()))})}
Extends:{'members of each produced class
<:This1.PreferentialComposition.$, This1.PreferentialComposition.$
method solveConflict(that location ) (
  Void unused=(
    Void unused0=return This1.Refactor.MoveImplementationSelector.#apply(that:location.src(), of:location.path(), to:location.dest()).#leftleft(that:that)
    
    catch exception This1.MetaGuard catched error This1.Assert.CodeNotReachable.#from(builder:(
      This1.Assert.CodeNotReachable::#builder() b=This1.Assert.CodeNotReachable.#builder()
      b
      )).#apply(that:catched)
    void
    )
  
  catch return This0::solveConflict(that location )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
Varacc0_$%26_0__142_0:'@private
{
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap_$%27_0__143_0:'@private
{
class method 
mut This0 #mutK(fwd This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.PreferentialComposition.SrcDests::#begin() ::#end() that) 
mut method 
This2.PreferentialComposition.SrcDests::#begin() ::#end() #inner() }
Varlibi_$%28_0__144_0:'@private
{
class method 
mut This0 #mutK(fwd This1::myLibs_$%24_0__67_0() ::vals() ::#inner() inner) 
class method 
mut This0 #apply(This1::myLibs_$%24_0__67_0() ::vals() ::#inner() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::myLibs_$%24_0__67_0() ::vals() ::#inner() that) 
mut method 
This1::myLibs_$%24_0__67_0() ::vals() ::#inner() #inner() }
class method '@private
mut This0 #mutK_$%24_0__67_0(This1.PreferentialComposition.Libs__137_0 myLibs_$%24_0__67_0) 
class method '@private
This0 #apply_$%25_0__68_0(This1.PreferentialComposition.Libs__137_0 myLibs) This0.#mutK_$%24_0__67_0(myLibs_$%24_0__67_0:myLibs)
mut method '@private
This1.PreferentialComposition.Libs__137_0 #myLibs_$%24_0__67_0() 
read method '@private
This1.PreferentialComposition.Libs__137_0 myLibs_$%24_0__67_0() 
method 
This0 #add(Library that) This0.#apply_$%25_0__68_0(myLibs:this.myLibs_$%24_0__67_0().#add(that:that))
class method 
This0 #begin() This0.#apply_$%25_0__68_0(myLibs:This1.PreferentialComposition.Libs__137_0.#begin().#end())
method 
This0 #end() This0.#apply_$%25_0__68_0(myLibs:this.myLibs_$%24_0__67_0().#end())
method 
Library #leftleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    This1.Introspection::#apply(lib ) i=This1.Introspection.#apply(lib:that)
    This1.PreferentialComposition.SrcDests::#begin() ::#end() map=This1.PreferentialComposition.SrcDests.#begin().#end()
    Library acc={}
    mut This0.Varmap_$%27_0__143_0 varmap=This0.Varmap_$%27_0__143_0.#apply(inner:map)
    mut This0.Varacc0_$%26_0__142_0 varacc=This0.Varacc0_$%26_0__142_0.#apply(inner:acc)
    Void unused0=(
      This0::myLibs_$%24_0__67_0() ::vals() lib=this.myLibs_$%24_0__67_0().vals()
      (
        Void unused4=(
          Void unused5=(
            This1.N::#from(builder ) ::vals() index=This1.N.#from(builder:(
              This1.N::#builder() b=This1.N.#builder()
              Void unused6=b.#1()
              b
              )).vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=lib.#next()
                    
                    catch exception Void catched2 (
                      Void unused11=(
                        Void unused14=index.#next()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused12=(
                        Void unused15=lib.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      Void unused13=(
                        Void unused16=index.#checkEnd()
                        
                        catch exception Void catched5 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused17=index.#next()
                      
                      catch exception Void catched7 (
                        Void unused18=(
                          Void unused20=lib.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        Void unused19=(
                          Void unused21=index.#checkEnd()
                          
                          catch exception Void catched9 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::myLibs_$%24_0__67_0() ::vals() ::#inner() libi=lib.#inner()
                        This1.PreferentialComposition::renameMap__64_0(that prefix intros ) rens=This1.PreferentialComposition.renameMap__64_0(that:lib.#inner(), prefix:(
                          This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This1.S.#from(builder:(
                            This1.S::#builder() b1=This1.S.#builder()
                            Void unused23=b1.#hash()
                            b1
                            )).#begin().#add(that:index.#inner()).#end()
                          listKind.#from(builder:(
                            This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
                            b0
                            ))
                          ), intros:i.transitivelyNestedClasses())
                        mut This0.Varlibi_$%28_0__144_0 varlibi=This0.Varlibi_$%28_0__144_0.#apply(inner:libi)
                        Void unused22=(
                          This1.PreferentialComposition::renameMap__64_0(that prefix intros ) ::vals() ren=rens.vals()
                          (
                            Void unused24=(
                              Void unused25=(
                                Void unused26=loop (
                                  Void unused27=ren.#next()
                                  
                                  catch exception Void catched15 (
                                    Void unused28=(
                                      Void unused29=ren.#checkEnd()
                                      
                                      catch exception Void catched16 void
                                      void
                                      )
                                    exception void
                                    )
                                  (
                                    Void unused30=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                                    varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    )
                                  )
                                
                                catch exception Void catched19 void
                                void
                                )
                              
                              catch exception Any propagated (
                                Void unused31=ren.#close()
                                exception propagated
                                )
                              void
                              )
                            
                            catch return Library propagated0 (
                              Void unused32=ren.#close()
                              return propagated0
                              )
                            ren.#close()
                            )
                          )
                        varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  
                  catch exception Void catched25 void
                  void
                  )
                
                catch exception Any propagated1 (
                  Void unused33=index.#close()
                  exception propagated1
                  )
                void
                )
              
              catch return Library propagated2 (
                Void unused34=index.#close()
                return propagated2
                )
              index.#close()
              )
            )
          
          catch exception Any propagated3 (
            Void unused35=lib.#close()
            exception propagated3
            )
          void
          )
        
        catch return Library propagated4 (
          Void unused36=lib.#close()
          return propagated4
          )
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      This0.Varmap_$%27_0__143_0::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused37=(
          Void unused38=(
            Void unused39=loop (
              Void unused40=mapi.#next()
              
              catch exception Void catched35 (
                Void unused41=(
                  Void unused42=mapi.#checkEnd()
                  
                  catch exception Void catched36 void
                  void
                  )
                exception void
                )
              varacc.inner(that:This1.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftleft(that:varacc.#inner()))
              )
            
            catch exception Void catched38 void
            void
            )
          
          catch exception Any propagated5 (
            Void unused43=mapi.#close()
            exception propagated5
            )
          void
          )
        
        catch return Library propagated6 (
          Void unused44=mapi.#close()
          return propagated6
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This1.MetaGuard.MemberUnavailable catched43 error This1.Assert.CodeNotReachable.#from(builder:(
      This1.Assert.CodeNotReachable::#builder() b2=This1.Assert.CodeNotReachable.#builder()
      Void unused45=b2.#P()
      Void unused46=b2.#r()
      Void unused47=b2.#e()
      Void unused48=b2.#f()
      Void unused49=b2.#e()
      Void unused50=b2.#r()
      Void unused51=b2.#e()
      Void unused52=b2.#n()
      Void unused53=b2.#t()
      Void unused54=b2.#i()
      Void unused55=b2.#a()
      Void unused56=b2.#l()
      Void unused57=b2.#C()
      Void unused58=b2.#o()
      Void unused59=b2.#m()
      Void unused60=b2.#p()
      Void unused61=b2.#o()
      Void unused62=b2.#s()
      Void unused63=b2.#i()
      Void unused64=b2.#t()
      Void unused65=b2.#i()
      Void unused66=b2.#o()
      Void unused67=b2.#n()
      Void unused68=b2.#1()
      b2
      )).#apply(that:catched43)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #plusplus(This0 that) This0.#apply_$%25_0__68_0(myLibs:this.myLibs_$%24_0__67_0().#plusplus(that:that.myLibs_$%24_0__67_0()))}
Use:{'members of each produced class
<:This1.PreferentialComposition.$, This1.PreferentialComposition.$
method solveConflict(that location ) (
  Void unused=(
    Void unused0=return This1.Refactor.RenameSelector.#apply(that:location.src(), of:location.path(), to:location.dest()).#leftleft(that:that)
    
    catch exception This1.MetaGuard catched error This1.Assert.CodeNotReachable.#from(builder:(
      This1.Assert.CodeNotReachable::#builder() b=This1.Assert.CodeNotReachable.#builder()
      b
      )).#apply(that:catched)
    void
    )
  
  catch return This0::solveConflict(that location )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
Varacc0_$%31_0__145_0:'@private
{
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap_$%32_0__146_0:'@private
{
class method 
mut This0 #mutK(fwd This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.PreferentialComposition.SrcDests::#begin() ::#end() that) 
mut method 
This2.PreferentialComposition.SrcDests::#begin() ::#end() #inner() }
Varlibi_$%33_0__147_0:'@private
{
class method 
mut This0 #mutK(fwd This1::myLibs_$%29_0__69_0() ::vals() ::#inner() inner) 
class method 
mut This0 #apply(This1::myLibs_$%29_0__69_0() ::vals() ::#inner() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::myLibs_$%29_0__69_0() ::vals() ::#inner() that) 
mut method 
This1::myLibs_$%29_0__69_0() ::vals() ::#inner() #inner() }
class method '@private
mut This0 #mutK_$%29_0__69_0(This1.PreferentialComposition.Libs__137_0 myLibs_$%29_0__69_0) 
class method '@private
This0 #apply_$%30_0__70_0(This1.PreferentialComposition.Libs__137_0 myLibs) This0.#mutK_$%29_0__69_0(myLibs_$%29_0__69_0:myLibs)
mut method '@private
This1.PreferentialComposition.Libs__137_0 #myLibs_$%29_0__69_0() 
read method '@private
This1.PreferentialComposition.Libs__137_0 myLibs_$%29_0__69_0() 
method 
This0 #add(Library that) This0.#apply_$%30_0__70_0(myLibs:this.myLibs_$%29_0__69_0().#add(that:that))
class method 
This0 #begin() This0.#apply_$%30_0__70_0(myLibs:This1.PreferentialComposition.Libs__137_0.#begin().#end())
method 
This0 #end() This0.#apply_$%30_0__70_0(myLibs:this.myLibs_$%29_0__69_0().#end())
method 
Library #leftleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    This1.Introspection::#apply(lib ) i=This1.Introspection.#apply(lib:that)
    This1.PreferentialComposition.SrcDests::#begin() ::#end() map=This1.PreferentialComposition.SrcDests.#begin().#end()
    Library acc={}
    mut This0.Varmap_$%32_0__146_0 varmap=This0.Varmap_$%32_0__146_0.#apply(inner:map)
    mut This0.Varacc0_$%31_0__145_0 varacc=This0.Varacc0_$%31_0__145_0.#apply(inner:acc)
    Void unused0=(
      This0::myLibs_$%29_0__69_0() ::vals() lib=this.myLibs_$%29_0__69_0().vals()
      (
        Void unused4=(
          Void unused5=(
            This1.N::#from(builder ) ::vals() index=This1.N.#from(builder:(
              This1.N::#builder() b=This1.N.#builder()
              Void unused6=b.#1()
              b
              )).vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=lib.#next()
                    
                    catch exception Void catched2 (
                      Void unused11=(
                        Void unused14=index.#next()
                        
                        catch exception Void catched3 void
                        void
                        )
                      Void unused12=(
                        Void unused15=lib.#checkEnd()
                        
                        catch exception Void catched4 void
                        void
                        )
                      Void unused13=(
                        Void unused16=index.#checkEnd()
                        
                        catch exception Void catched5 void
                        void
                        )
                      exception void
                      )
                    (
                      Void unused17=index.#next()
                      
                      catch exception Void catched7 (
                        Void unused18=(
                          Void unused20=lib.#checkEnd()
                          
                          catch exception Void catched8 void
                          void
                          )
                        Void unused19=(
                          Void unused21=index.#checkEnd()
                          
                          catch exception Void catched9 void
                          void
                          )
                        exception void
                        )
                      (
                        This0::myLibs_$%29_0__69_0() ::vals() ::#inner() libi=lib.#inner()
                        This1.PreferentialComposition::renameMap__64_0(that prefix intros ) rens=This1.PreferentialComposition.renameMap__64_0(that:lib.#inner(), prefix:(
                          This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() listKind=This1.S.#from(builder:(
                            This1.S::#builder() b1=This1.S.#builder()
                            Void unused23=b1.#hash()
                            b1
                            )).#begin().#add(that:index.#inner()).#end()
                          listKind.#from(builder:(
                            This1.S::#from(builder ) ::#begin() ::#add(that ) ::#end() ::#builder() b0=listKind.#builder()
                            b0
                            ))
                          ), intros:i.transitivelyNestedClasses())
                        mut This0.Varlibi_$%33_0__147_0 varlibi=This0.Varlibi_$%33_0__147_0.#apply(inner:libi)
                        Void unused22=(
                          This1.PreferentialComposition::renameMap__64_0(that prefix intros ) ::vals() ren=rens.vals()
                          (
                            Void unused24=(
                              Void unused25=(
                                Void unused26=loop (
                                  Void unused27=ren.#next()
                                  
                                  catch exception Void catched15 (
                                    Void unused28=(
                                      Void unused29=ren.#checkEnd()
                                      
                                      catch exception Void catched16 void
                                      void
                                      )
                                    exception void
                                    )
                                  (
                                    Void unused30=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                                    varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    )
                                  )
                                
                                catch exception Void catched19 void
                                void
                                )
                              
                              catch exception Any propagated (
                                Void unused31=ren.#close()
                                exception propagated
                                )
                              void
                              )
                            
                            catch return Library propagated0 (
                              Void unused32=ren.#close()
                              return propagated0
                              )
                            ren.#close()
                            )
                          )
                        varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  
                  catch exception Void catched25 void
                  void
                  )
                
                catch exception Any propagated1 (
                  Void unused33=index.#close()
                  exception propagated1
                  )
                void
                )
              
              catch return Library propagated2 (
                Void unused34=index.#close()
                return propagated2
                )
              index.#close()
              )
            )
          
          catch exception Any propagated3 (
            Void unused35=lib.#close()
            exception propagated3
            )
          void
          )
        
        catch return Library propagated4 (
          Void unused36=lib.#close()
          return propagated4
          )
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      This0.Varmap_$%32_0__146_0::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused37=(
          Void unused38=(
            Void unused39=loop (
              Void unused40=mapi.#next()
              
              catch exception Void catched35 (
                Void unused41=(
                  Void unused42=mapi.#checkEnd()
                  
                  catch exception Void catched36 void
                  void
                  )
                exception void
                )
              varacc.inner(that:This1.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftleft(that:varacc.#inner()))
              )
            
            catch exception Void catched38 void
            void
            )
          
          catch exception Any propagated5 (
            Void unused43=mapi.#close()
            exception propagated5
            )
          void
          )
        
        catch return Library propagated6 (
          Void unused44=mapi.#close()
          return propagated6
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This1.MetaGuard.MemberUnavailable catched43 error This1.Assert.CodeNotReachable.#from(builder:(
      This1.Assert.CodeNotReachable::#builder() b2=This1.Assert.CodeNotReachable.#builder()
      Void unused45=b2.#P()
      Void unused46=b2.#r()
      Void unused47=b2.#e()
      Void unused48=b2.#f()
      Void unused49=b2.#e()
      Void unused50=b2.#r()
      Void unused51=b2.#e()
      Void unused52=b2.#n()
      Void unused53=b2.#t()
      Void unused54=b2.#i()
      Void unused55=b2.#a()
      Void unused56=b2.#l()
      Void unused57=b2.#C()
      Void unused58=b2.#o()
      Void unused59=b2.#m()
      Void unused60=b2.#p()
      Void unused61=b2.#o()
      Void unused62=b2.#s()
      Void unused63=b2.#i()
      Void unused64=b2.#t()
      Void unused65=b2.#i()
      Void unused66=b2.#o()
      Void unused67=b2.#n()
      Void unused68=b2.#1()
      b2
      )).#apply(that:catched43)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #plusplus(This0 that) This0.#apply_$%30_0__70_0(myLibs:this.myLibs_$%29_0__69_0().#plusplus(that:that.myLibs_$%29_0__69_0()))}
Patch:{
Varacc1__148_0:'@private
{
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varmap0__149_0:'@private
{
class method 
mut This0 #mutK(fwd This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.PreferentialComposition.SrcDests::#begin() ::#end() that) 
mut method 
This2.PreferentialComposition.SrcDests::#begin() ::#end() #inner() }
Varacc2__150_0:'@private
{
class method 
mut This0 #mutK(fwd This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) 
class method 
mut This0 #apply(This2.PreferentialComposition.SrcDests::#begin() ::#end() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.PreferentialComposition.SrcDests::#begin() ::#end() that) 
mut method 
This2.PreferentialComposition.SrcDests::#begin() ::#end() #inner() }
class method 
mut This0 #mutK(This1.Path that) 
class method 
This0 #apply(This1.Path that) This0.#mutK(that:that)
mut method 
This1.Path #that() 
read method 
This1.Path that() 
method 
Library #leftleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    This1.Introspection::#apply(lib path ) ip=This1.Introspection.#apply(lib:that, path:this.that())
    This1.Introspection::#apply(lib path ) ::transitivelyNestedClasses() itr=ip.transitivelyNestedClasses()
    This0::renameMap__71_0(that prefix intros ) rens=This0.renameMap__71_0(that:that, prefix:This1.S.#from(builder:(
      This1.S::#builder() b=This1.S.#builder()
      Void unused4=b.#hash()
      Void unused5=b.#1()
      b
      )), intros:itr)
    This1.PreferentialComposition.SrcDests::#begin() ::#end() map=This1.PreferentialComposition.SrcDests.#begin().#end()
    Library acc=that
    mut This0.Varmap0__149_0 varmap=This0.Varmap0__149_0.#apply(inner:map)
    mut This0.Varacc1__148_0 varacc=This0.Varacc1__148_0.#apply(inner:acc)
    Void unused0=(
      This0::renameMap__71_0(that prefix intros ) ::vals() ren=rens.vals()
      (
        Void unused6=(
          Void unused7=(
            Void unused8=loop (
              Void unused9=ren.#next()
              
              catch exception Void catched1 (
                Void unused10=(
                  Void unused11=ren.#checkEnd()
                  
                  catch exception Void catched2 void
                  void
                  )
                exception void
                )
              (
                Void unused12=varmap.inner(that:varmap.#inner().#add(that:ren.#inner()))
                Void unused13=varacc.inner(that:This1.Refactor.MoveImplementationSelector.#apply(that:ren.#inner().src(), of:ren.#inner().path(), to:ren.#inner().dest()).#leftleft(that:varacc.#inner()))
                
                catch exception This1.MetaGuard err error This1.Assert.ObservedBug.#from(builder:(
                  This1.Assert.ObservedBug::#builder() b0=This1.Assert.ObservedBug.#builder()
                  Void unused14=b0.#P()
                  Void unused15=b0.#a()
                  Void unused16=b0.#t()
                  Void unused17=b0.#h()
                  Void unused18=b0.#dot()
                  Void unused19=b0.#hash()
                  Void unused20=b0.#l()
                  Void unused21=b0.#e()
                  Void unused22=b0.#s()
                  Void unused23=b0.#s()
                  Void unused24=b0.#l()
                  Void unused25=b0.#e()
                  Void unused26=b0.#s()
                  Void unused27=b0.#s()
                  Void unused28=b0.#oRound()
                  Void unused29=b0.#t()
                  Void unused30=b0.#h()
                  Void unused31=b0.#a()
                  Void unused32=b0.#t()
                  Void unused33=b0.#cRound()
                  b0
                  )).#apply(that:err)
                void
                )
              )
            
            catch exception Void catched6 void
            void
            )
          
          catch exception Any propagated (
            Void unused34=ren.#close()
            exception propagated
            )
          void
          )
        
        catch return Library propagated0 (
          Void unused35=ren.#close()
          return propagated0
          )
        ren.#close()
        )
      )
    Void unused1=varacc.inner(that:This1.Refactor.RenamePath.#apply(that:this.that(), to:This1.Path.#from(builder:(
      This1.Path::#builder() b1=This1.Path.#builder()
      Void unused36=b1.#T()
      Void unused37=b1.#h()
      Void unused38=b1.#i()
      Void unused39=b1.#s()
      b1
      ))).#leftleft(that:varacc.#inner()))
    Void unused2=(
      This0.Varmap0__149_0::#inner() ::vals() mapi=varmap.#inner().vals()
      (
        Void unused40=(
          Void unused41=(
            Void unused42=loop (
              Void unused43=mapi.#next()
              
              catch exception Void catched13 (
                Void unused44=(
                  Void unused45=mapi.#checkEnd()
                  
                  catch exception Void catched14 void
                  void
                  )
                exception void
                )
              varacc.inner(that:This1.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftleft(that:varacc.#inner()))
              )
            
            catch exception Void catched16 void
            void
            )
          
          catch exception Any propagated1 (
            Void unused46=mapi.#close()
            exception propagated1
            )
          void
          )
        
        catch return Library propagated2 (
          Void unused47=mapi.#close()
          return propagated2
          )
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This1.MetaGuard.MemberUnavailable err error This1.Assert.CodeNotReachable.#from(builder:(
      This1.Assert.CodeNotReachable::#builder() b2=This1.Assert.CodeNotReachable.#builder()
      Void unused48=b2.#P()
      Void unused49=b2.#a()
      Void unused50=b2.#t()
      Void unused51=b2.#h()
      Void unused52=b2.#2()
      b2
      )).#apply(that:err)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
class method '@private
This1.PreferentialComposition.SrcDests renameMap__71_0(Library that, This1.S prefix, This1.Introspection.NestedClasses intros) (
  Void unused=(
    This1.PreferentialComposition.SrcDests::#begin() ::#end() acc=This1.PreferentialComposition.SrcDests.#begin().#end()
    mut This0.Varacc2__150_0 varacc=This0.Varacc2__150_0.#apply(inner:acc)
    Void unused0=(
      This1.Introspection.NestedClasses::vals() intro=intros.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=intro.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=intro.#checkEnd()
                  
                  catch exception Void catched1 void
                  void
                  )
                exception void
                )
              (
                This1.Strings ns=intro.#inner().pathFromRoot().names()
                Void unused8=This1.Assert.$.#begin().#add(that:ns.isEmpty().#bang()).#end()
                varacc.inner(that:varacc.#inner().#plusplus(that:This1.PreferentialComposition.renameMap(that:that, prefix:prefix, path:This1.Path.from(names:ns.withoutLeft()), ms:intro.#inner().methods())))
                )
              )
            
            catch exception Void catched4 void
            void
            )
          
          catch exception Any propagated (
            Void unused9=intro.#close()
            exception propagated
            )
          void
          )
        
        catch return This1.PreferentialComposition.SrcDests propagated0 (
          Void unused10=intro.#close()
          return propagated0
          )
        intro.#close()
        )
      )
    Void unused1=return varacc.#inner()
    void
    )
  
  catch return This1.PreferentialComposition.SrcDests result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Default:{
DecorationUnfeasable:{<:This2.MetaGuard, This2.Message
Varres_$%34_0__151_0:'@private
{
class method 
mut This0 #mutK(fwd This1::kind() inner) 
class method 
mut This0 #apply(This1::kind() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1::kind() that) 
mut method 
This1::kind() #inner() }
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method myName() This2.GetMyName.#apply(that:This0)
method kind() this.myName()
method text() this._text()
method responseOf() this.cause()
method equals(that ) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        catch return Any casted exception void
        error {'@stringU
        'CastT-Should be unreachable code
        }
        )
      
      catch exception Void catched0 void
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This0::equals(that )  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method toS() (
  Void unused=(
    Void unused0=(
      This0::toS() ::this::cause() ::isPresent() ::#bang() cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote())))
        )
      )
    This0::kind() res=This0.kind()
    mut This0.Varres_$%34_0__151_0 varres=This0.Varres_$%34_0__151_0.#apply(inner:res)
    Void unused1=(
      This0::toS() ::this::text() ::#bangequal(that ) cond0=this.text().#bangequal(that:This2.S.#from(builder:(
        This2.S::#builder() b=This2.S.#builder()
        b
        )))
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          ))))
        varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          ))).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          This2.S::#builder() b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))
        )
      )
    Void unused2=return (
      This0.Varres_$%34_0__151_0::#inner() ::#begin() ::#add(that ) ::#end() listKind=varres.#inner().#begin().#add(that:this.cause().#tilde()).#end()
      listKind.#from(builder:(
        This0.Varres_$%34_0__151_0::#inner() ::#begin() ::#add(that ) ::#end() ::#builder() b3=listKind.#builder()
        Void unused20=b3.#cSquare()
        b3
        ))
      )
    void
    )
  
  catch return This0::toS()  result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )
method 
This2.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
method classAny() This0
method clazz() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.SConcat #begin() This0.SConcat.#apply(old:this, accumulator:This2.S.#from(builder:(
  This2.S::#builder() b=This2.S.#builder()
  b
  )))
SConcat:{
VarnewAcc0_$%35_0__152_0:'@private
{
class method 
mut This0 #mutK(fwd This4.Concept.ToS::toS() inner) 
class method 
mut This0 #apply(This4.Concept.ToS::toS() inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Concept.ToS::toS() that) 
mut method 
This4.Concept.ToS::toS() #inner() }
class method 
mut This0 #mutK(This3.Concept.ToS old, This3.S accumulator) 
class method 
This0 #apply(This3.Concept.ToS old, This3.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This3.Concept.ToS #old() 
read method 
This3.Concept.ToS old() 
mut method 
This3.S #accumulator() 
read method 
This3.S accumulator() 
method 
This0 #add(This3.Concept.ToS that) This0.#apply(old:this.old(), accumulator:this.accumulator().#plusplus(that:that.toS()))
method 
This0 #add(This3.Concept.ToS that, This3.Concept.ToS separedBy) (
  This3.Concept.ToS::toS() newAcc=that.toS()
  mut This0.VarnewAcc0_$%35_0__152_0 varnewAcc=This0.VarnewAcc0_$%35_0__152_0.#apply(inner:newAcc)
  Void unused=(
    This0::accumulator() ::#bangequal(that ) cond=this.accumulator().#bangequal(that:This3.S.#from(builder:(
      This3.S::#builder() b=This3.S.#builder()
      b
      )))
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      varnewAcc.inner(that:this.accumulator().#plusplus(that:separedBy.toS().#plusplus(that:varnewAcc.#inner())))
      )
    )
  This0.#apply(old:this.old(), accumulator:varnewAcc.#inner())
  )
method 
This0 #end() this
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.old().toS().#plusplus(that:this.accumulator().#plusplus(that:This3.S.#from(builder:builder))))}}
Parsable:{
class method 
Library #leftleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#begin().#add(that:{'ParseFailure:Message:S[]<<{<:Guard} no need, related to invariant?
    
    class method ' if you do not implement it, it is a constructor?
    This0 fromS(read This3.Concept.ToS that) 
    class method 
    This0 #from(This3.S.SBuilder builder) This0.fromS(that:This3.S.#from(binaryRepr:builder.binaryRepr()))
    class method 
    mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()}).#end().#leftleft(that:that)
    
    catch exception This2.MetaGuard catched exception This1.DecorationUnfeasable.#from(builder:(
      This1.DecorationUnfeasable::#builder() b=This1.DecorationUnfeasable.#builder()
      Void unused1=b.#P()
      Void unused2=b.#a()
      Void unused3=b.#r()
      Void unused4=b.#s()
      Void unused5=b.#a()
      Void unused6=b.#b()
      Void unused7=b.#l()
      Void unused8=b.#e()
      b
      )).#apply(that:catched)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
SealState:{' how to specify which factory to keep out? what getters

class method 
Library #leftleft(Library that) (
  Void unused=(
    This2.Introspection::#apply(lib ) i=This2.Introspection.#apply(lib:that)
    Void unused0=return that
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
DataFromToS:{' in the future we can add also hashCode and > =>

class method 
Library #leftleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#begin().#add(that:{<:This3.Concept.ToS
    method 
    This3.Bool #bangequal(This0 that) this.#equalequal(that:that).#bang()
    read method 
    This3.Bool #equalequal(read This0 that) this.toS().#equalequal(that:that.toS())}).#end().#leftleft(that:This1.Equals.#leftleft(that:that))
    
    catch exception This1.DecorationUnfeasable mg exception mg
    catch exception This2.MetaGuard catched exception This1.DecorationUnfeasable.#from(builder:(
      This1.DecorationUnfeasable::#builder() b=This1.DecorationUnfeasable.#builder()
      b
      )).#apply(that:catched)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Equals:{
class method 
Library #leftleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#begin().#add(that:{<:This3.Concept.Equals
    method equals(that ) (
      Void unused=(
        Void unused0=(
          This0 that0=(
            Void unused2=return that
            
            catch return This0 casted casted
            catch return Any casted exception void
            error {'@stringU
            'CastT-Should be unreachable code
            }
            )
          
          catch exception Void catched0 void
          (
            Void unused3=return this.#equalequal(that:that0)
            void
            )
          )
        Void unused1=return This3.Bool.false()
        void
        )
      
      catch return This0::equals(that )  result result
      error {'@stringU
      'CurlyBlock-Should be unreachable code
      }
      )
    read method 
    This3.Bool #equalequal(read This0 that) }).#end().#leftleft(that:that)
    
    catch exception This2.MetaGuard catched exception This1.DecorationUnfeasable.#from(builder:(
      This1.DecorationUnfeasable::#builder() b=This1.DecorationUnfeasable.#builder()
      Void unused1=b.#E()
      Void unused2=b.#q()
      Void unused3=b.#u()
      Void unused4=b.#a()
      Void unused5=b.#l()
      Void unused6=b.#s()
      b
      )).#apply(that:catched)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}
Named:{
class method 
Library #leftleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#begin().#add(that:{<:This3.Concept.Named
    method myName() This3.Introspection.#apply(clazz:This0).externalTypeToS()}).#end().#leftleft(that:that)
    
    catch exception This2.MetaGuard catched exception This1.DecorationUnfeasable.#from(builder:(
      This1.DecorationUnfeasable::#builder() b=This1.DecorationUnfeasable.#builder()
      Void unused1=b.#N()
      Void unused2=b.#a()
      Void unused3=b.#m()
      Void unused4=b.#e()
      Void unused5=b.#d()
      b
      )).#apply(that:catched)
    void
    )
  
  catch return Library result result
  error {'@stringU
  'CurlyBlock-Should be unreachable code
  }
  )}}
Url:{'ParseFailure:Message:S[]<<{<:Guard} no need, related to invariant?
<:This1.Concept.ToS
class method ' if you do not implement it, it is a constructor?
This0 fromS(read This1.Concept.ToS that) This0.#apply(inner:that.toS())
class method 
This0 #from(This1.S.SBuilder builder) This0.fromS(that:This1.S.#from(binaryRepr:builder.binaryRepr()))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0 #mutK(This1.S inner) 
class method 
This0 #apply(This1.S inner) This0.#mutK(inner:inner)
mut method 
This1.S #inner() 
read method 
This1.S inner() 
method toS() this.inner()
method 
Library binaryRepr() this.inner().binaryRepr()}
DeployTowel:{
class method '(Any fileName)
mut This0 #mutK(This1.Url fileName) 
class method '(Any fileName)
This0 #apply(This1.Url fileName) This0.#mutK(fileName:fileName)
mut method '(Any fileName)
This1.Url #fileName() 
read method '(Any fileName)
This1.Url fileName() 
class method 
Library binaryReprFrom(Library lib) (
  Library norm=use This0.SafeOperatorsAccess__153_0 check privateNormalize(that:lib) error {
  class method 
  mut This0 #mutK() 
  class method 
  This0 privateNormalize() This0.#mutK()}
  Library record=use This0.SafeOperatorsAccess__153_0 check introspectLibraryReport(that:norm, path:{'@stringU
  'This
  }) error {
  class method 
  mut This0 #mutK() 
  class method 
  This0 introspectLibraryReport() This0.#mutK()}
  use This0.SafeOperatorsAccess__153_0 check introspectLibraryDocAsString(that:record, path:{'@stringU
  'AllAsString
  }, annotationN:{'@int32
  '0
  }) error {
  class method 
  mut This0 #mutK() 
  class method 
  This0 introspectLibraryDocAsString() This0.#mutK()}
  )
method 
Library #leftleft(Library that) (
  Void unused=use This1.Alu check fileDebug(fileName:this.fileName().binaryRepr(), content:This0.binaryReprFrom(lib:that)) error {
  class method 
  mut This0 #mutK() 
  class method 
  This0 fileDebug() This0.#mutK()}
  This1.ExitCode.normal()
  )
SafeOperatorsAccess__153_0:'@private
{'@plugin
'L42.is/connected/withSafeOperators
}}}