 {/*--layer-- Bool Size S -     and first layer of unsafe operators
*/
Alu: {/*@plugin
L42.is/connected/withAlu
*/}
ExitCode: {
class method 
Library normal()  {/*@exitStatus
0
*/}
class method 
Library failure()  {/*@exitStatus
42000
*/}}
Bool: {implements This1.Concept.Equals, This1.Concept.ToS, This1.Concept.Classable
class method 
mut This0 #mutK(Library binaryRepr) 
class method 
This0 #apply(Library binaryRepr) This0.#mutK(binaryRepr:binaryRepr)
mut method 
Library #binaryRepr() 
read method 
Library binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
refine read method 
This1.S toS() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      )
    Void unused1=return This1.S.#from(builder:(
      mut This1.S.SBuilder b0=This1.S.#builder()
      Void unused7=b0.#f()
      Void unused8=b0.#a()
      Void unused9=b0.#l()
      Void unused10=b0.#s()
      Void unused11=b0.#e()
      b0
      ))
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
Void #checkTrue() exception Void use This1.Alu check ifFalseBoolDo(that:this.binaryRepr()) exception void
class method 
This0 true() This0.#apply(binaryRepr:use This1.Alu check constTrue() error void)
class method 
This0 false() This0.#apply(binaryRepr:use This1.Alu check constFalse() error void)
method 
This0 #and(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that)
      )
    Void unused1=return this
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #or(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return this)
      )
    Void unused1=return that
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #bang() (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return This0.false())
      )
    Void unused1=return This0.true()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      Void unused2=this.#checkTrue()
      
      catch exception Void catched void
      
      (return that)
      )
    Void unused1=return that.#bang()
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 fromS(read This1.Concept.ToS that) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=that.toS().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused3=b.#t()
        Void unused4=b.#r()
        Void unused5=b.#u()
        Void unused6=b.#e()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.true())
        )
      )
    Void unused1=(
      This1.Bool cond0=that.toS().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused8=b0.#f()
        Void unused9=b0.#a()
        Void unused10=b0.#l()
        Void unused11=b0.#s()
        Void unused12=b0.#e()
        b0
        )))
      (
        Void unused13=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This0.false())
        )
      )
    Void unused2=error This0.parseError(that:that.toS())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#B()
  Void unused0=b.#o()
  Void unused1=b.#o()
  Void unused2=b.#l()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))}
Size: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) (
  This1.S s=that.toS()
  This1.Size._private(_binaryRepr:use This1.Alu check stringToInt32(that:s.binaryRepr()) error This0.parseError(that:s))
  )
class method 
mut This0 #from(Library binaryRepr) This1.Size._private(_binaryRepr:binaryRepr)
method 
Library binaryRepr() this._binaryRepr()
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
This1.Size #from(This1.S.SBuilder builder) This1.Size._private(_binaryRepr:use This1.Alu check stringToInt32(that:builder.binaryRepr()) error This0.parseError(that:This1.S.#from(builder:builder)))
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#i()
  Void unused1=b.#z()
  Void unused2=b.#e()
  Void unused3=b.#dot()
  Void unused4=b.#U()
  Void unused5=b.#n()
  Void unused6=b.#s()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#f()
  Void unused12=b.#a()
  Void unused13=b.#c()
  Void unused14=b.#t()
  Void unused15=b.#o()
  Void unused16=b.#r()
  Void unused17=b.#y()
  Void unused18=b.#E()
  Void unused19=b.#r()
  Void unused20=b.#r()
  Void unused21=b.#o()
  Void unused22=b.#r()
  Void unused23=b.#T()
  Void unused24=b.#o()
  Void unused25=b.#A()
  Void unused26=b.#v()
  Void unused27=b.#o()
  Void unused28=b.#i()
  Void unused29=b.#d()
  Void unused30=b.#C()
  Void unused31=b.#y()
  Void unused32=b.#c()
  Void unused33=b.#l()
  Void unused34=b.#e()
  Void unused35=b.#comma()
  Void unused36=b.#space()
  Void unused37=b.#r()
  Void unused38=b.#e()
  Void unused39=b.#p()
  Void unused40=b.#l()
  Void unused41=b.#a()
  Void unused42=b.#c()
  Void unused43=b.#e()
  Void unused44=b.#space()
  Void unused45=b.#i()
  Void unused46=b.#n()
  Void unused47=b.#space()
  Void unused48=b.#A()
  Void unused49=b.#d()
  Void unused50=b.#a()
  Void unused51=b.#m()
  Void unused52=b.#T()
  Void unused53=b.#2()
  b
  ))
refine read method 
This1.S toS() This1.S.#from(binaryRepr:use This1.Alu check int32ToString(that:this.binaryRepr()) error void)
method 
This1.Size #plus(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check sumInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.Size #less(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check subInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.Size #times(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check mulInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.Size #divide(This1.Size that) This1.Size._private(_binaryRepr:use This1.Alu check divInt32(n1:this.binaryRepr(), n2:that.binaryRepr()) error void)
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32EqualDo(n1:this.binaryRepr(), n2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This1.Size that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GrtDo(n1:that.binaryRepr(), n2:this.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #rightequal(This1.Size that) (
  Void unused=(
    Void unused0=use This1.Alu check ifInt32GEqDo(n1:that.binaryRepr(), n2:this.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
mut This0.Iterator vals() This0.Iterator.#apply(start:this, end:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
method 
mut This0.Iterator vals(This1.Size upTo) This0.Iterator.#apply(start:this, end:upTo)
class method 
This0 #0() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#0()
  b
  ))
class method 
This0 #1() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  b
  ))
class method 
This0 #2() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  b
  ))
class method 
This0 #3() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  b
  ))
class method 
This0 #4() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  b
  ))
class method 
This0 #5() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  b
  ))
class method 
This0 #6() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  b
  ))
class method 
This0 #7() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#7()
  b
  ))
class method 
This0 #8() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#8()
  b
  ))
class method 
This0 #9() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#9()
  b
  ))
class method 
This0 #10() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #11() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #12() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #13() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #14() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #15() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #16() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #17() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #18() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #19() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#1()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #20() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #21() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #22() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #23() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #24() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #25() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #26() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #27() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #28() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #29() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#2()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #30() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #31() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #32() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #33() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #34() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #35() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #36() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #37() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #38() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #39() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#3()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #40() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #41() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #42() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #43() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #44() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #45() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #46() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #47() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #48() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #49() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#4()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #50() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #51() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #52() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #53() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#3()
  b
  ))
class method 
This0 #54() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#4()
  b
  ))
class method 
This0 #55() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#5()
  b
  ))
class method 
This0 #56() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#6()
  b
  ))
class method 
This0 #57() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#7()
  b
  ))
class method 
This0 #58() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#8()
  b
  ))
class method 
This0 #59() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#5()
  Void unused0=b.#9()
  b
  ))
class method 
This0 #60() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#0()
  b
  ))
class method 
This0 #61() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#1()
  b
  ))
class method 
This0 #62() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#2()
  b
  ))
class method 
This0 #63() This0.#from(builder:(
  mut This1.S.SBuilder b=This0.#builder()
  Void unused=b.#6()
  Void unused0=b.#3()
  b
  ))
Iterator: {
class method 
mut This0 #mutK(This1 start, This1 end) 
class method 
mut This0 #apply(This1 start, This1 end) This0.#mutK(start:start, end:end)
mut method 
Void start(This1 that) 
mut method 
This1 #start() 
read method 
This1 start() 
mut method 
This1 #end() 
read method 
This1 end() 
mut method 
Void #next() exception Void ((
  This2.Bool cond=(
    This1 opNorm=this.end()
    This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).#right(that:opNorm)
    ).#or(that:(
    This1 opNorm0=this.start()
    this.end().#right(that:opNorm0)
    ))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched3 exception void
    
    (this.start(that:this.start().#plus(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This1 #inner() this.start().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
S: {implements This1.Concept.Base, This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
mut This0 #from(Library binaryRepr) This0._private(_binaryRepr:binaryRepr)
method 
Library binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() this
refine read method 
This1.Bool equals(read Any that) (//#####operators
(
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This1.S #plusplus(This1.S that) This1.S.#from(binaryRepr:use This1.Alu check stringConcat(s1:this.binaryRepr(), s2:that.binaryRepr()) error void)
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #less(This0 that) this.withoutAll(val:that)
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:this.size().#right(that:that.size()))
method 
This1.Bool #rightrightequal(This0 that) this.contains(that:that)
method 
This1.Bool #right(This0 that) (//#####other sequence like methods
this.contains(that:that))
method 
This1.Size indexOfLeft(This1.S val) this.indexOfLeft(val:val, start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This1.Size indexOfLeft(This1.S val, This1.Size start) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    This1.Size current=start
    mut This0.Varcurrent__50_0 varcurrent=This0.Varcurrent__50_0.#apply(inner:current)
    Void unused0=(
      Void unused2=loop (
        Void unused3=(
          This1.Size opNorm=varcurrent.#inner()
          this.size().#right(that:opNorm)
          ).#checkTrue()
        (
          Void unused4=(
            This1.Bool cond=this.subStrEq(that:val, start:varcurrent.#inner())
            (
              Void unused5=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return varcurrent.#inner())
              )
            )
          varcurrent.inner(that:varcurrent.#inner().#plus(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b=This1.Size.#builder()
            Void unused6=b.#1()
            b
            ))))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.Size.#from(builder:(
      mut This1.S.SBuilder b0=This1.Size.#builder()
      Void unused7=b0.#less()
      Void unused8=b0.#1()
      b0
      ))
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Size indexOfRight(This0 val) (
  Void unused=(/*val must be not empty, TODO: error here?
*/
    This1.Size current=this.size().#less(that:val.size())
    mut This0.Varcurrent0__51_0 varcurrent0=This0.Varcurrent0__51_0.#apply(inner:current)
    Void unused0=(
      Void unused2=loop (
        Void unused3=varcurrent0.#inner().#rightequal(that:This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused4=b.#0()
          b
          ))).#checkTrue()
        (
          Void unused5=(
            This1.Bool cond=this.#apply(start:varcurrent0.#inner()).beginsWith(that:val)
            (
              Void unused6=cond.#checkTrue()
              
              catch exception Void catched2 void
              
              (return varcurrent0.#inner())
              )
            )
          varcurrent0.inner(that:varcurrent0.#inner().#less(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b0=This1.Size.#builder()
            Void unused7=b0.#1()
            b0
            ))))
          )
        )
      
      catch exception Void catched5 void
      
      void
      )
    Void unused1=return This1.Size.#from(builder:(
      mut This1.S.SBuilder b1=This1.Size.#builder()
      Void unused8=b1.#less()
      Void unused9=b1.#1()
      b1
      ))
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This0 val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0 val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos, skipNum:val.size())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0 val) this.replace(that:val, into:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 val(This1.Size that) this.#apply(that:that)
method 
This0 left() this.val(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 right() (//#################Withs
this.val(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 with(This1.Size that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that.#plus(that:val.size()))))
method 
This0 withLeft(This0 that) (//TODO: should be with(left)??
this.with(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that))
method 
This0 withRight(This0 that) (//insertion
this.with(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.Size that, This0 val) this.#apply(end:that).#plusplus(that:val.#plusplus(that:this.#apply(start:that)))
method 
This0 withAlsoLeft(This0 that) this.withAlso(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This1.Size index) this.#apply(end:index).#plusplus(that:this.#apply(start:index.#plus(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 without(This1.Size index, This1.Size skipNum) this.#apply(end:index).#plusplus(that:this.#apply(start:skipNum.#plus(that:index)))
method 
This0 withoutLeft() this.without(index:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() this.without(index:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.Bool contains(This1.S that) (
  Void unused=(
    This1.Size res=(//Debug(S"S.contains(this:"[this]" that:"[that]")="[res]"")
this.indexOfLeft(val:that))
    Void unused0=(
      This1.Bool cond=res.#rightequal(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Bool.true())
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S #apply(This1.Size start, This1.Size end) This1.S.#from(binaryRepr:use This1.Alu check stringSubstring(that:this.binaryRepr(), start:start.binaryRepr(), end:end.binaryRepr()) error void)
method 
This1.S #apply(This1.Size that) this.#apply(start:that, end:that.#plus(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))))
method 
This1.S #apply(This1.Size start) this.#apply(start:start, end:this.size())
method 
This1.S #apply(This1.Size end) this.#apply(start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), end:end)
method 
This1.Size size() (//##### string special
This1.Size.#from(binaryRepr:use This1.Alu check stringSize(that:this.binaryRepr()) error void))
method 
This1.Bool subStrEq(This1.S that, This1.Size start) this.#apply(start:start, end:that.size().#plus(that:start)).#equalequal(that:(//optimizing this one may help many methods
that))
method 
This1.Bool beginsWith(This1.S that) this.subStrEq(that:that, start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.S aSCIILowerCase() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#q()
  Void unused0=b.#w()
  Void unused1=b.#e()
  Void unused2=b.#r()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#u()
  Void unused6=b.#i()
  Void unused7=b.#o()
  Void unused8=b.#p()
  Void unused9=b.#a()
  Void unused10=b.#s()
  Void unused11=b.#d()
  Void unused12=b.#f()
  Void unused13=b.#g()
  Void unused14=b.#h()
  Void unused15=b.#j()
  Void unused16=b.#k()
  Void unused17=b.#l()
  Void unused18=b.#z()
  Void unused19=b.#x()
  Void unused20=b.#c()
  Void unused21=b.#v()
  Void unused22=b.#b()
  Void unused23=b.#n()
  Void unused24=b.#m()
  b
  ))
class method 
This1.S aSCIIUpperCase() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#Q()
  Void unused0=b.#W()
  Void unused1=b.#E()
  Void unused2=b.#R()
  Void unused3=b.#T()
  Void unused4=b.#Y()
  Void unused5=b.#U()
  Void unused6=b.#I()
  Void unused7=b.#O()
  Void unused8=b.#P()
  Void unused9=b.#A()
  Void unused10=b.#S()
  Void unused11=b.#D()
  Void unused12=b.#F()
  Void unused13=b.#G()
  Void unused14=b.#H()
  Void unused15=b.#J()
  Void unused16=b.#K()
  Void unused17=b.#L()
  Void unused18=b.#Z()
  Void unused19=b.#X()
  Void unused20=b.#C()
  Void unused21=b.#V()
  Void unused22=b.#B()
  Void unused23=b.#N()
  Void unused24=b.#M()
  b
  ))
method 
This1.Bool isASCIILowerCase(This1.Size that) This1.S.aSCIILowerCase().contains(that:this.#apply(that:that))
method 
This1.Bool isASCIIUpperCase(This1.Size that) (/*Debug(S"S.isASCIIUpperCase(this:"[this]" that:"[that]")")
*/This1.S.aSCIIUpperCase().contains(that:this.#apply(that:that)))
class method 
This1.S doubleQuote() (
  This1.S rcv=This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#dQuote()
    Void unused0=b.#newline()
    b
    ))
  rcv.#apply(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b0=This1.Size.#builder()
    Void unused1=b0.#0()
    b0
    )))
  )
class method 
This1.S nl() This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#newline()
  b
  ))
method 
This1.S replace(This1.S that, This1.S into) This1.S.#from(binaryRepr:use This1.Alu check stringReplace(that:this.binaryRepr(), src:that.binaryRepr(), dest:into.binaryRepr()) error void)
method 
This1.S as42MultilineString() This1.S.doubleQuote().#plusplus(that:This1.S.nl().#plusplus(that:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#sQuote()
  b
  )).#plusplus(that:this.replace(that:This1.S.nl(), into:This1.S.nl().#plusplus(that:This1.S.#from(builder:(
  mut This1.S.SBuilder b0=This1.S.#builder()
  Void unused0=b0.#sQuote()
  b0
  )))).#plusplus(that:This1.S.nl().#plusplus(that:This1.S.doubleQuote())))))
method 
This0.Continue #from(This1.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This0.SConcat #seqBuilder() This1.S.SConcat.#apply(old:this, accumulator:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
class method 
This0 #from(This1.S.SBuilder builder) This0._private(_binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
Varcurrent__50_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Varcurrent0__51_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Continue: {
class method 
mut This0 #mutK(This2.S that) 
class method 
This0 #apply(This2.S that) This0.#mutK(that:that)
mut method 
This2.S #that() 
read method 
This2.S that() 
method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
method 
This1 #from(This2.S.SBuilder builder) this.that().#plusplus(that:This2.S.#from(builder:builder))}
SConcat: {
class method 
mut This0 #mutK(This2.S old, This2.S accumulator) 
class method 
mut This0 #apply(This2.S old, This2.S accumulator) This0.#mutK(old:old, accumulator:accumulator)
mut method 
This2.S #old() 
read method 
This2.S old() 
mut method 
Void accumulator(This2.S that) 
mut method 
This2.S #accumulator() 
read method 
This2.S accumulator() 
mut method 
Void #add(read This2.Concept.ToS that) this.accumulator(that:this.accumulator().#plusplus(that:that.toS()))
mut method 
Void #add(read This2.Concept.ToS that, This2.Concept.ToS sep) (
  This2.S newAcc=that.toS()
  mut This0.VarnewAcc__52_0 varnewAcc=This0.VarnewAcc__52_0.#apply(inner:newAcc)
  Void unused=(
    This2.Bool cond=this.accumulator().#equalequal(that:This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      b
      ))).#bang()
    (
      Void unused0=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (varnewAcc.inner(that:this.accumulator().#plusplus(that:sep.toS().#plusplus(that:varnewAcc.#inner()))))
      )
    )
  this.accumulator(that:varnewAcc.#inner())
  )
VarnewAcc__52_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }}
SBuilder: {
class method 
mut This0 #mutK(Library _binaryRepr) 
class method 
mut This0 _private(Library _binaryRepr) This0.#mutK(_binaryRepr:_binaryRepr)
mut method 
Void _binaryRepr(Library that) 
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
read method 
Library binaryRepr() this._binaryRepr()
mut method 
Void acc(Library that) this._binaryRepr(that:use This2.Alu check stringConcat(s1:this.binaryRepr(), s2:that) error void)
class method 
mut This0 empty() (//NUMBERS:
This0._private(_binaryRepr: {/*@stringU

*/}))
mut method 
Void #0() this.acc(that: {/*@stringU
0
*/})
mut method 
Void #1() this.acc(that: {/*@stringU
1
*/})
mut method 
Void #2() this.acc(that: {/*@stringU
2
*/})
mut method 
Void #3() this.acc(that: {/*@stringU
3
*/})
mut method 
Void #4() this.acc(that: {/*@stringU
4
*/})
mut method 
Void #5() this.acc(that: {/*@stringU
5
*/})
mut method 
Void #6() this.acc(that: {/*@stringU
6
*/})
mut method 
Void #7() this.acc(that: {/*@stringU
7
*/})
mut method 
Void #8() this.acc(that: {/*@stringU
8
*/})
mut method 
Void #9() (//LOWERCASE:
this.acc(that: {/*@stringU
9
*/}))
mut method 
Void #q() this.acc(that: {/*@stringU
q
*/})
mut method 
Void #w() this.acc(that: {/*@stringU
w
*/})
mut method 
Void #e() this.acc(that: {/*@stringU
e
*/})
mut method 
Void #r() this.acc(that: {/*@stringU
r
*/})
mut method 
Void #t() this.acc(that: {/*@stringU
t
*/})
mut method 
Void #y() this.acc(that: {/*@stringU
y
*/})
mut method 
Void #u() this.acc(that: {/*@stringU
u
*/})
mut method 
Void #i() this.acc(that: {/*@stringU
i
*/})
mut method 
Void #o() this.acc(that: {/*@stringU
o
*/})
mut method 
Void #p() this.acc(that: {/*@stringU
p
*/})
mut method 
Void #a() this.acc(that: {/*@stringU
a
*/})
mut method 
Void #s() this.acc(that: {/*@stringU
s
*/})
mut method 
Void #d() this.acc(that: {/*@stringU
d
*/})
mut method 
Void #f() this.acc(that: {/*@stringU
f
*/})
mut method 
Void #g() this.acc(that: {/*@stringU
g
*/})
mut method 
Void #h() this.acc(that: {/*@stringU
h
*/})
mut method 
Void #j() this.acc(that: {/*@stringU
j
*/})
mut method 
Void #k() this.acc(that: {/*@stringU
k
*/})
mut method 
Void #l() this.acc(that: {/*@stringU
l
*/})
mut method 
Void #z() this.acc(that: {/*@stringU
z
*/})
mut method 
Void #x() this.acc(that: {/*@stringU
x
*/})
mut method 
Void #c() this.acc(that: {/*@stringU
c
*/})
mut method 
Void #v() this.acc(that: {/*@stringU
v
*/})
mut method 
Void #b() this.acc(that: {/*@stringU
b
*/})
mut method 
Void #n() this.acc(that: {/*@stringU
n
*/})
mut method 
Void #m() (//UPPERCASE:
this.acc(that: {/*@stringU
m
*/}))
mut method 
Void #Q() this.acc(that: {/*@stringU
Q
*/})
mut method 
Void #W() this.acc(that: {/*@stringU
W
*/})
mut method 
Void #E() this.acc(that: {/*@stringU
E
*/})
mut method 
Void #R() this.acc(that: {/*@stringU
R
*/})
mut method 
Void #T() this.acc(that: {/*@stringU
T
*/})
mut method 
Void #Y() this.acc(that: {/*@stringU
Y
*/})
mut method 
Void #U() this.acc(that: {/*@stringU
U
*/})
mut method 
Void #I() this.acc(that: {/*@stringU
I
*/})
mut method 
Void #O() this.acc(that: {/*@stringU
O
*/})
mut method 
Void #P() this.acc(that: {/*@stringU
P
*/})
mut method 
Void #A() this.acc(that: {/*@stringU
A
*/})
mut method 
Void #S() this.acc(that: {/*@stringU
S
*/})
mut method 
Void #D() this.acc(that: {/*@stringU
D
*/})
mut method 
Void #F() this.acc(that: {/*@stringU
F
*/})
mut method 
Void #G() this.acc(that: {/*@stringU
G
*/})
mut method 
Void #H() this.acc(that: {/*@stringU
H
*/})
mut method 
Void #J() this.acc(that: {/*@stringU
J
*/})
mut method 
Void #K() this.acc(that: {/*@stringU
K
*/})
mut method 
Void #L() this.acc(that: {/*@stringU
L
*/})
mut method 
Void #Z() this.acc(that: {/*@stringU
Z
*/})
mut method 
Void #X() this.acc(that: {/*@stringU
X
*/})
mut method 
Void #C() this.acc(that: {/*@stringU
C
*/})
mut method 
Void #V() this.acc(that: {/*@stringU
V
*/})
mut method 
Void #B() this.acc(that: {/*@stringU
B
*/})
mut method 
Void #N() this.acc(that: {/*@stringU
N
*/})
mut method 
Void #M() this.acc(that: {/*@stringU
M
*/})
mut method 
Void #%() this.acc(that: {/*@stringU
%
*/})
mut method 
Void #$() (//OPERATORS:
this.acc(that: {/*@stringU
$
*/}))
mut method 
Void #left() this.acc(that: {/*@stringU
<
*/})
mut method 
Void #right() this.acc(that: {/*@stringU
>
*/})
mut method 
Void #bang() this.acc(that: {/*@stringU
!
*/})
mut method 
Void #tilde() this.acc(that: {/*@stringU
~
*/})
mut method 
Void #plus() this.acc(that: {/*@stringU
+
*/})
mut method 
Void #times() this.acc(that: {/*@stringU
*
*/})
mut method 
Void #divide() this.acc(that: {/*@stringU
/
*/})
mut method 
Void #less() this.acc(that: {/*@stringU
-
*/})
mut method 
Void #and() this.acc(that: {/*@stringU
&
*/})
mut method 
Void #or() (//SYMBOLS- Parenthesis:
this.acc(that: {/*@stringU
|
*/}))
mut method 
Void #oRound() this.acc(that: {/*@stringU
(
*/})
mut method 
Void #cRound() this.acc(that: {/*@stringU
)
*/})
mut method 
Void #oSquare() this.acc(that: {/*@stringU
[
*/})
mut method 
Void #cSquare() this.acc(that: {/*@stringU
]
*/})
mut method 
Void #oCurly() this.acc(that: {/*@stringU
{
*/})
mut method 
Void #cCurly() this.acc(that: {/*@stringU
}
*/})
mut method 
Void #dQuote() this.acc(that: {/*@stringU
"
*/})
mut method 
Void #sQuote() this.acc(that: {/*@stringU
'
*/})
mut method 
Void #hQuote() (//SYMBOLS- Unused operators:
this.acc(that: {/*@stringU
`
*/}))
mut method 
Void #equal() this.acc(that: {/*@stringU
=
*/})
mut method 
Void #qMark() this.acc(that: {/*@stringU
?
*/})
mut method 
Void #hat() this.acc(that: {/*@stringU
^
*/})
mut method 
Void #comma() this.acc(that: {/*@stringU
,
*/})
mut method 
Void #semicolon() this.acc(that: {/*@stringU
;
*/})
mut method 
Void #colon() this.acc(that: {/*@stringU
:
*/})
mut method 
Void #dot() this.acc(that: {/*@stringU
.
*/})
mut method 
Void #underscore() this.acc(that: {/*@stringU
_
*/})
mut method 
Void #hash() this.acc(that: {/*@stringU
#
*/})
mut method 
Void #at() this.acc(that: {/*@stringU
\u0040
*/})
mut method 
Void #backslash() this.acc(that: {/*@stringU
\u005C
*/})
mut method 
Void #space() this.acc(that: {/*@stringU
 
*/})
mut method 
Void #newline() this.acc(that: {/*@stringU


*/})}}
Range: {
class method 
mut This0.Iterator #apply(This1.Size that) This0.Iterator.#apply(start:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), end:that)
class method 
mut This0.Iterator #apply(This1.Size start, This1.Size stop) This0.Iterator.#apply(start:start, end:stop)
class method 
mut This0.Iterator #apply(This1.Size start) This0.Iterator.#apply(start:start, end:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )))
class method 
class This1.Size #default##apply(Void that) This1.Size
class method 
class This1.Size #default##apply(Void stop) This1.Size
class method 
class This1.Size #default##apply(Void start) This1.Size
Iterator: {
class method 
mut This0 #mutK(This2.Size start, This2.Size end) 
class method 
mut This0 #apply(This2.Size start, This2.Size end) This0.#mutK(start:start, end:end)
mut method 
Void start(This2.Size that) 
mut method 
This2.Size #start() 
read method 
This2.Size start() 
mut method 
This2.Size #end() 
read method 
This2.Size end() 
mut method 
Void #next() exception Void ((
  This2.Bool cond=(
    This2.Size opNorm=this.end()
    This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused=b.#0()
      b
      )).#right(that:opNorm)
    ).#or(that:(
    This2.Size opNorm0=this.start()
    this.end().#right(that:opNorm0)
    ))
  (
    Void unused0=cond.#checkTrue()
    
    catch exception Void catched3 exception void
    
    (this.start(that:this.start().#plus(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused1=b0.#1()
      b0
      )))))
    )
  ))
read method 
Void #checkEnd() void
read method 
This2.Size #inner() this.start().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
read method 
Void #close() void}}
Debug: {
class method 
Void #apply(read This1.Concept.ToS that) use This1.Alu check stringDebug(that:that.toS().binaryRepr()) void
class method 
Void #apply(Library lib) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#t()
  Void unused0=b.#o()
  Void unused1=b.#space()
  Void unused2=b.#f()
  Void unused3=b.#i()
  Void unused4=b.#x()
  Void unused5=b.#space()
  Void unused6=b.#i()
  Void unused7=b.#n()
  Void unused8=b.#space()
  Void unused9=b.#A()
  Void unused10=b.#d()
  Void unused11=b.#a()
  Void unused12=b.#m()
  Void unused13=b.#T()
  Void unused14=b.#o()
  Void unused15=b.#w()
  Void unused16=b.#e()
  Void unused17=b.#l()
  Void unused18=b.#2()
  b
  ))
class method 
Void #apply(This1.Concept.ToS fileName, This1.Concept.ToS content) use This1.Alu check fileDebug(fileName:fileName.toS().binaryRepr(), content:content.toS().binaryRepr()) void
class method 
This1.S readFile(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check fileReadDebug(fileName:fileName.toS().binaryRepr()) error (
  This1.S.Continue rcv0=(
    This1.S rcv1=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv1.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv1.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv0.#from(builder:(
    mut This1.S.SBuilder b1=rcv0.#builder()
    b1
    ))
  ))
class method 
This1.S localToAbsolute(This1.Concept.ToS fileName) This1.S.#from(binaryRepr:use This1.Alu check localToAbsolute(fileName:fileName.toS().binaryRepr()) error (
  This1.S.Continue rcv2=(
    This1.S rcv3=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#A()
      Void unused0=b.#l()
      Void unused1=b.#u()
      Void unused2=b.#dot()
      Void unused3=b.#f()
      Void unused4=b.#i()
      Void unused5=b.#l()
      Void unused6=b.#e()
      Void unused7=b.#R()
      Void unused8=b.#e()
      Void unused9=b.#a()
      Void unused10=b.#d()
      Void unused11=b.#D()
      Void unused12=b.#e()
      Void unused13=b.#b()
      Void unused14=b.#u()
      Void unused15=b.#g()
      Void unused16=b.#space()
      Void unused17=b.#r()
      Void unused18=b.#e()
      Void unused19=b.#a()
      Void unused20=b.#d()
      Void unused21=b.#i()
      Void unused22=b.#n()
      Void unused23=b.#g()
      Void unused24=b.#space()
      Void unused25=b.#f()
      Void unused26=b.#i()
      Void unused27=b.#l()
      Void unused28=b.#e()
      Void unused29=b.#colon()
      b
      ))
    rcv3.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv3.#seqBuilder()
      Void unused30=b0.#add(that:fileName)
      b0
      ))
    )
  rcv2.#from(builder:(
    mut This1.S.SBuilder b1=rcv2.#builder()
    b1
    ))
  ))
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected, This1.S message) (
  This1.S sExpected=expected.toS()
  This1.S given=that.toS()
  (
    This1.Bool cond=sExpected.#equalequal(that:given).#bang()
    (
      Void unused=cond.#checkTrue()
      
      catch exception Void catched1 (/* message = given
*/This1.Debug.#apply(that:(
        This1.S.Continue rcv10=(
          This1.S rcv11=(
            This1.S.Continue rcv12=(
              This1.S rcv13=This1.S.#from(builder:(
                mut This1.S.SBuilder b=This1.S.#builder()
                Void unused0=b.#oSquare()
                Void unused1=b.#P()
                Void unused2=b.#A()
                Void unused3=b.#S()
                Void unused4=b.#S()
                Void unused5=b.#cSquare()
                Void unused6=b.#space()
                b
                ))
              rcv13.#from(seqBuilder:(
                mut This1.S.SConcat b0=rcv13.#seqBuilder()
                Void unused7=b0.#add(that:message)
                b0
                ))
              )
            rcv12.#from(builder:(
              mut This1.S.SBuilder b1=rcv12.#builder()
              Void unused8=b1.#colon()
              Void unused9=b1.#space()
              b1
              ))
            )
          rcv11.#from(seqBuilder:(
            mut This1.S.SConcat b2=rcv11.#seqBuilder()
            Void unused10=b2.#add(that:given)
            b2
            ))
          )
        rcv10.#from(builder:(
          mut This1.S.SBuilder b3=rcv10.#builder()
          b3
          ))
        )))
      
      (This1.Debug.#apply(that:(
        This1.S.Continue rcv4=(
          This1.S rcv5=(
            This1.S.Continue rcv6=(
              This1.S rcv7=(
                This1.S.Continue rcv8=(
                  This1.S rcv9=This1.S.#from(builder:(
                    mut This1.S.SBuilder b4=This1.S.#builder()
                    Void unused11=b4.#oSquare()
                    Void unused12=b4.#F()
                    Void unused13=b4.#A()
                    Void unused14=b4.#I()
                    Void unused15=b4.#L()
                    Void unused16=b4.#cSquare()
                    Void unused17=b4.#space()
                    b4
                    ))
                  rcv9.#from(seqBuilder:(
                    mut This1.S.SConcat b5=rcv9.#seqBuilder()
                    Void unused18=b5.#add(that:message)
                    b5
                    ))
                  )
                rcv8.#from(builder:(
                  mut This1.S.SBuilder b6=rcv8.#builder()
                  Void unused19=b6.#colon()
                  Void unused20=b6.#space()
                  b6
                  ))
                )
              rcv7.#from(seqBuilder:(
                mut This1.S.SConcat b7=rcv7.#seqBuilder()
                Void unused21=b7.#add(that:given)
                b7
                ))
              )
            rcv6.#from(builder:(
              mut This1.S.SBuilder b8=rcv6.#builder()
              Void unused22=b8.#space()
              Void unused23=b8.#bang()
              Void unused24=b8.#equal()
              Void unused25=b8.#space()
              b8
              ))
            )
          rcv5.#from(seqBuilder:(
            mut This1.S.SConcat b9=rcv5.#seqBuilder()
            Void unused26=b9.#add(that:expected)
            b9
            ))
          )
        rcv4.#from(builder:(
          mut This1.S.SBuilder b10=rcv4.#builder()
          b10
          ))
        )))
      )
    )
  )
class method 
Void test(read This1.Concept.ToS that, read This1.Concept.ToS expected) This1.Debug.test(that:that, expected:expected, message:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  b
  )))
Test: {/* Builder to look like a list and run a series of debug.test calls.
 Does not actually make an instance or store the list of calls anywhere :-)
*/
class method 
class This0 #seqBuilder() This0
class method 
Void #from(class This0 seqBuilder) void
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected) This2.Debug.test(that:that, expected:expected, message:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
class method 
Void #add(read This2.Concept.ToS that, read This2.Concept.ToS expected, This2.S message) This2.Debug.test(that:that, expected:expected, message:message)}}
Count: {
class method 
mut This0 #mutK(This1.Size counter) 
class method 
mut This0 #apply(This1.Size counter) This0.#mutK(counter:counter)
mut method 
Void counter(This1.Size that) 
mut method 
This1.Size #counter() 
read method 
This1.Size counter() 
class method 
mut This0 #seqBuilder() This0.#apply(counter:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This1.Size #from(mut This0 seqBuilder) seqBuilder.counter()
mut method 
Void #add(This1.Bool that) (
  Void unused=that.#checkTrue()
  
  catch exception Void catched void
  
  (this.counter(that:this.counter().#plus(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused0=b.#1()
    b
    )))))
  )}
SafeOperatorsAccess: {/*@plugin
L42.is/connected/withSafeOperators
*/
class method 
Library compose(Library left, Library right) use This0 check compose(left:left, right:right) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#c()
  Void unused20=b.#o()
  Void unused21=b.#m()
  Void unused22=b.#p()
  Void unused23=b.#o()
  Void unused24=b.#s()
  Void unused25=b.#e()
  b
  ))
class method 
Library redirect(Library that, Library srcBinaryRepr, class Any dest) use This1.SafeOperatorsAccess check redirect(that:that, src:srcBinaryRepr, dest:dest) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#r()
  Void unused20=b.#e()
  Void unused21=b.#d()
  Void unused22=b.#i()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#c()
  Void unused26=b.#t()
  b
  ))
class method 
Library renameClass(Library that, This1.S src, This1.S dest) use This1.SafeOperatorsAccess check renameClass(that:that, src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#A()
  Void unused13=b.#c()
  Void unused14=b.#c()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#s()
  Void unused18=b.#dot()
  Void unused19=b.#r()
  Void unused20=b.#e()
  Void unused21=b.#n()
  Void unused22=b.#a()
  Void unused23=b.#m()
  Void unused24=b.#e()
  Void unused25=b.#C()
  Void unused26=b.#l()
  Void unused27=b.#a()
  Void unused28=b.#s()
  Void unused29=b.#s()
  b
  ))}
Concept: {
ToS: {interface 
read method 
This2.S toS() }
Classable: {interface 
read method 
class This0 class() 
class method 
This2.S readableName() 
class method 
This2.Bool is(class Any subtype) }
Base: {interface implements This1.ToS, This1.Classable, This1.Equals
refine read method 
This2.S toS() 
refine read method 
class This1.Classable class() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
refine read method 
This2.Bool equals(read Any that) }
Wrapper: {interface 
read method 
Any inner() }
ClassWrapper: {interface 
read method 
class Any inner() }
MutWrapper: {interface 
read method 
read Any inner() 
mut method 
mut Any #inner() }
Equals: {interface 
read method 
This2.Bool equals(read Any that) }
Comparable: {interface 
read method 
This2.Bool greater(read Any that) }
Boollable: {interface 
read method 
Void #checkTrue() exception Void }
Decorator: {interface }
Contains: {interface 
read method 
This2.Bool contains(read Any that) }
Parsable: {interface }
Invariant: {interface 
read method /* can throw error or return false, as more opportune
*/This2.Bool invariant() }
RandomAccess: {interface 
read method 
read Any get(This2.Size that) 
mut method 
mut Any #get(This2.Size that) }
Sizable: {interface 
read method 
This2.Size size() 
read method 
This2.Bool isEmpty() }
Iterator: {interface 
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
Void #close() }}
GetMyName: {
class method 
This1.S #apply(class Any that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#less()
  Void unused0=b.#less()
  Void unused1=b.#N()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#S()
  Void unused6=b.#t()
  Void unused7=b.#i()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#T()
  Void unused11=b.#o()
  Void unused12=b.#F()
  Void unused13=b.#i()
  Void unused14=b.#x()
  Void unused15=b.#less()
  Void unused16=b.#less()
  b
  ))}
Message: {interface implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
This1.S kind() 
method 
This1.S text() 
method 
This0.Opt responseOf() 
refine read method 
class This0 class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
Opt: {
class method 
mut This0 #mutK(This0.TOpt that) 
class method 
This0 #new(This0.TOpt that) This0.#mutK(that:that)
mut method 
This0.TOpt #that() 
read method 
This0.TOpt that() 
method 
This1 #get() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    Void unused0=(
      This0.TOpt cell=this.that()
      (
        This0.TOf cell0=(
          Void unused2=return cell
          
          catch return This0.TOf casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This2.Bool.true()
          void
          )
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This1 that) This0.#new(that:This0.TOf.#apply(that:that))
TOpt: {interface 
method 
This2 get() }
TEmpty: {implements This1.TOpt
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
This2 get() error (//error Guard.Operation"TEmpty.get() Value not present in Optional"
This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#U()
  Void unused0=b.#n()
  Void unused1=b.#s()
  Void unused2=b.#a()
  Void unused3=b.#t()
  Void unused4=b.#i()
  Void unused5=b.#s()
  Void unused6=b.#f()
  Void unused7=b.#a()
  Void unused8=b.#c()
  Void unused9=b.#t()
  Void unused10=b.#o()
  Void unused11=b.#r()
  Void unused12=b.#y()
  Void unused13=b.#E()
  Void unused14=b.#r()
  Void unused15=b.#r()
  Void unused16=b.#o()
  Void unused17=b.#r()
  Void unused18=b.#T()
  Void unused19=b.#o()
  Void unused20=b.#A()
  Void unused21=b.#v()
  Void unused22=b.#o()
  Void unused23=b.#i()
  Void unused24=b.#d()
  Void unused25=b.#C()
  Void unused26=b.#y()
  Void unused27=b.#c()
  Void unused28=b.#l()
  Void unused29=b.#e()
  Void unused30=b.#comma()
  Void unused31=b.#space()
  Void unused32=b.#r()
  Void unused33=b.#e()
  Void unused34=b.#p()
  Void unused35=b.#l()
  Void unused36=b.#a()
  Void unused37=b.#c()
  Void unused38=b.#e()
  Void unused39=b.#space()
  Void unused40=b.#i()
  Void unused41=b.#n()
  Void unused42=b.#space()
  Void unused43=b.#A()
  Void unused44=b.#d()
  Void unused45=b.#a()
  Void unused46=b.#m()
  Void unused47=b.#2()
  b
  )))}
TOf: {implements This1.TOpt
class method 
mut This0 #mutK(This2 that) 
class method 
This0 #apply(This2 that) This0.#mutK(that:that)
mut method 
This2 #that() 
read method 
This2 that() 
refine method 
This2 get() this.that()}}
EqualMessages: {
class method 
This2.Bool #apply(This2.Message that, This2.Message other) (
  Void unused=(/*assuming they have the same class
*/
    This2.Bool res=that.class().kind().#equalequal(that:other.class().kind()).#and(that:that.text().#equalequal(that:other.text())).#and(that:that.responseOf().isPresent().#equalequal(that:other.responseOf().isPresent()))
    Void unused0=(
      This2.Bool cond=res.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(//i know both are present
(
      This2.Bool cond0=that.responseOf().isPresent().#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return This2.Bool.true())
        )
      ))
    Void unused2=return (// this calls  equals in message,
//that check for equal class and then call EqualMessages
that.responseOf().#get().equals(that:other.responseOf().#get()))
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
$: {
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
class method 
Library #leftrightleft(Library that) This2.SafeOperatorsAccess.compose(left:that, right:This0.messageTrait())
class method 
Library messageTrait()  {implements This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres__53_0 varres=This0.Varres__53_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This3.Message class() This0
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres__53_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
Guard: {/* exception as Guard bureocracy, error as Guard detection
-is a check guarenteed to be performed, program logic can rely on this being enforced.
  as exceptions, Guards objects are a way to report/guard complex operations,
 where checking the shape of the input can be unconvenient.
as errors, they represent precondition violations.
Turning an exception Guard into an error Guard
 is equivalent of declaring that such misuse should not happen (blame on the caller),
 still, there is no bug in the program at this stage. Is legit for the caller to try and be blamed
*/interface implements This1.Message, This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
refine class method 
This1.S kind() 
refine method 
This1.S text() 
refine method 
This1.Message.Opt responseOf() 
refine read method 
class This1.Message class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
Operation: {implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%0_0__54_0 varres=This0.Varres_$%0_0__54_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%0_0__54_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Parameter: {implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%1_0__55_0 varres=This0.Varres_$%1_0__55_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%1_0__55_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Precondition: {implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%2_0__56_0 varres=This0.Varres_$%2_0__56_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%2_0__56_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
ParseFail: {interface implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine method 
This2.S text() 
refine method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) }}
System: {
Guard: {/* implements Outer.Guard soon (remove "interface" for a bad translation bug: This1_System_Guard is not abstract and does not override abstract method MtoS()
*/interface implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine method 
This2.S text() 
refine method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) 
PluginFailure: {implements This2.Guard, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%3_0__57_0 varres=This0.Varres_$%3_0__57_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%3_0__57_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}}
X: {
class method 
This0.AssertionFail #from(This1.S.SBuilder builder) This0.AssertionFail.#from(builder:builder)
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
NotImplementedYet: {implements This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%4_0__58_0 varres=This0.Varres_$%4_0__58_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%4_0__58_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
AssertionFail: {implements This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%5_0__59_0 varres=This0.Varres_$%5_0__59_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%5_0__59_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}}
Collections: {
class method 
Library vector(class Any of) (
  Void unused=(
    Void unused0=return this.eq(that:of)
    
    catch error Library catched return this.minimal(that:of)
    
    catch error This1.S catched return this.minimal(that:of)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library minimal(class Any that) (
  Library tmp=This1.SafeOperatorsAccess.redirect(that:This0.VectorTrait.#apply(), srcBinaryRepr:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )).binaryRepr(), dest:that)
  This1.SafeOperatorsAccess.redirect(that:tmp, srcBinaryRepr:This1.S.#from(builder:(
    mut This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )).binaryRepr(), dest:This0.MutListAny)
  )
class method 
Library eq(class Any that) (
  Library lib=This1.SafeOperatorsAccess.compose(left:This0.VectorTrait.#apply(), right:This0.CodeEq.#apply())
  Library tmp=This1.SafeOperatorsAccess.redirect(that:lib, srcBinaryRepr:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#E()
    Void unused0=b.#l()
    Void unused1=b.#e()
    Void unused2=b.#m()
    b
    )).binaryRepr(), dest:that)
  This1.SafeOperatorsAccess.redirect(that:tmp, srcBinaryRepr:This1.S.#from(builder:(
    mut This1.S.SBuilder b0=This1.S.#builder()
    Void unused3=b0.#M()
    Void unused4=b0.#u()
    Void unused5=b0.#t()
    Void unused6=b0.#L()
    Void unused7=b0.#i()
    Void unused8=b0.#s()
    Void unused9=b0.#t()
    Void unused10=b0.#T()
    b0
    )).binaryRepr(), dest:This0.MutListAny)
  )
IterationFailure: {implements This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%6_0__60_0 varres=This0.Varres_$%6_0__60_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%6_0__60_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
CollectionErrors: {
class method 
Any negBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv15=(
    This2.Guard.Parameter rcv16=(
      This2.Guard.Parameter.Continue rcv17=(
        This2.Guard.Parameter rcv18=This2.Guard.Parameter.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#n()
          Void unused17=b.#e()
          Void unused18=b.#g()
          Void unused19=b.#a()
          Void unused20=b.#t()
          Void unused21=b.#i()
          Void unused22=b.#v()
          Void unused23=b.#e()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#n()
          Void unused27=b.#d()
          Void unused28=b.#e()
          Void unused29=b.#x()
          Void unused30=b.#space()
          Void unused31=b.#p()
          Void unused32=b.#r()
          Void unused33=b.#o()
          Void unused34=b.#v()
          Void unused35=b.#i()
          Void unused36=b.#d()
          Void unused37=b.#e()
          Void unused38=b.#d()
          Void unused39=b.#semicolon()
          Void unused40=b.#space()
          Void unused41=b.#m()
          Void unused42=b.#a()
          Void unused43=b.#x()
          Void unused44=b.#space()
          Void unused45=b.#i()
          Void unused46=b.#s()
          Void unused47=b.#space()
          b
          ))
        rcv18.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv18.#seqBuilder()
          Void unused48=b0.#add(that:listSize)
          b0
          ))
        )
      rcv17.#from(builder:(
        mut This2.S.SBuilder b1=rcv17.#builder()
        Void unused49=b1.#space()
        Void unused50=b1.#p()
        Void unused51=b1.#r()
        Void unused52=b1.#o()
        Void unused53=b1.#p()
        Void unused54=b1.#o()
        Void unused55=b1.#s()
        Void unused56=b1.#e()
        Void unused57=b1.#d()
        Void unused58=b1.#space()
        Void unused59=b1.#i()
        Void unused60=b1.#s()
        Void unused61=b1.#space()
        b1
        ))
      )
    rcv16.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv16.#seqBuilder()
      Void unused62=b2.#add(that:that)
      b2
      ))
    )
  rcv15.#from(builder:(
    mut This2.S.SBuilder b3=rcv15.#builder()
    b3
    ))
  )
class method 
Any outBound(This2.Size that, This2.Size listSize) (
  This2.Guard.Parameter.Continue rcv19=(
    This2.Guard.Parameter rcv20=(
      This2.Guard.Parameter.Continue rcv21=(
        This2.Guard.Parameter rcv22=This2.Guard.Parameter.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Parameter.#builder()
          Void unused=b.#I()
          Void unused0=b.#n()
          Void unused1=b.#d()
          Void unused2=b.#e()
          Void unused3=b.#x()
          Void unused4=b.#O()
          Void unused5=b.#u()
          Void unused6=b.#t()
          Void unused7=b.#O()
          Void unused8=b.#f()
          Void unused9=b.#B()
          Void unused10=b.#o()
          Void unused11=b.#u()
          Void unused12=b.#n()
          Void unused13=b.#d()
          Void unused14=b.#colon()
          Void unused15=b.#space()
          Void unused16=b.#m()
          Void unused17=b.#a()
          Void unused18=b.#x()
          Void unused19=b.#space()
          Void unused20=b.#i()
          Void unused21=b.#s()
          Void unused22=b.#space()
          b
          ))
        rcv22.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv22.#seqBuilder()
          Void unused23=b0.#add(that:listSize)
          b0
          ))
        )
      rcv21.#from(builder:(
        mut This2.S.SBuilder b1=rcv21.#builder()
        Void unused24=b1.#space()
        Void unused25=b1.#p()
        Void unused26=b1.#r()
        Void unused27=b1.#o()
        Void unused28=b1.#p()
        Void unused29=b1.#o()
        Void unused30=b1.#s()
        Void unused31=b1.#e()
        Void unused32=b1.#d()
        Void unused33=b1.#space()
        Void unused34=b1.#i()
        Void unused35=b1.#s()
        Void unused36=b1.#space()
        b1
        ))
      )
    rcv20.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv20.#seqBuilder()
      Void unused37=b2.#add(that:that)
      b2
      ))
    )
  rcv19.#from(builder:(
    mut This2.S.SBuilder b3=rcv19.#builder()
    b3
    ))
  )
class method 
Any cast() This2.Guard.Operation.#from(builder:(
  mut This2.S.SBuilder b=This2.Guard.Operation.#builder()
  Void unused=b.#c()
  Void unused0=b.#a()
  Void unused1=b.#s()
  Void unused2=b.#t()
  Void unused3=b.#space()
  Void unused4=b.#f()
  Void unused5=b.#a()
  Void unused6=b.#i()
  Void unused7=b.#l()
  Void unused8=b.#u()
  Void unused9=b.#r()
  Void unused10=b.#e()
  b
  ))
class method 
Any iterationTermination(This2.Size from, This2.Size minTo, This2.Size size) (
  This1.IterationFailure.Continue rcv23=(
    This1.IterationFailure rcv24=(
      This1.IterationFailure.Continue rcv25=(
        This1.IterationFailure rcv26=This1.IterationFailure.#from(builder:(
          mut This2.S.SBuilder b=This1.IterationFailure.#builder()
          Void unused=b.#U()
          Void unused0=b.#n()
          Void unused1=b.#e()
          Void unused2=b.#x()
          Void unused3=b.#p()
          Void unused4=b.#e()
          Void unused5=b.#c()
          Void unused6=b.#t()
          Void unused7=b.#e()
          Void unused8=b.#d()
          Void unused9=b.#space()
          Void unused10=b.#t()
          Void unused11=b.#e()
          Void unused12=b.#r()
          Void unused13=b.#m()
          Void unused14=b.#i()
          Void unused15=b.#n()
          Void unused16=b.#a()
          Void unused17=b.#t()
          Void unused18=b.#i()
          Void unused19=b.#o()
          Void unused20=b.#n()
          Void unused21=b.#space()
          Void unused22=b.#o()
          Void unused23=b.#f()
          Void unused24=b.#space()
          Void unused25=b.#i()
          Void unused26=b.#t()
          Void unused27=b.#e()
          Void unused28=b.#r()
          Void unused29=b.#a()
          Void unused30=b.#t()
          Void unused31=b.#i()
          Void unused32=b.#o()
          Void unused33=b.#n()
          Void unused34=b.#comma()
          Void unused35=b.#space()
          Void unused36=b.#r()
          Void unused37=b.#e()
          Void unused38=b.#a()
          Void unused39=b.#c()
          Void unused40=b.#h()
          Void unused41=b.#e()
          Void unused42=b.#d()
          Void unused43=b.#space()
          b
          ))
        rcv26.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv26.#seqBuilder()
          Void unused44=b0.#add(that:from)
          b0
          ))
        )
      rcv25.#from(builder:(
        mut This2.S.SBuilder b1=rcv25.#builder()
        Void unused45=b1.#space()
        Void unused46=b1.#i()
        Void unused47=b1.#n()
        Void unused48=b1.#s()
        Void unused49=b1.#t()
        Void unused50=b1.#e()
        Void unused51=b1.#a()
        Void unused52=b1.#d()
        Void unused53=b1.#space()
        Void unused54=b1.#o()
        Void unused55=b1.#f()
        Void unused56=b1.#space()
        b1
        ))
      )
    rcv24.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv24.#seqBuilder()
      Void unused57=b2.#add(that:minTo)
      b2
      ))
    )
  rcv23.#from(builder:(
    mut This2.S.SBuilder b3=rcv23.#builder()
    b3
    ))
  )
class method 
Void checkBound(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This1.CollectionErrors.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#rightequal(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This1.CollectionErrors.outBound(that:that, listSize:listSize))
      )
    )
  )
class method 
Void checkBoundAdd(This2.Size that, This2.Size listSize) (
  Void unused=(
    This2.Bool cond=(
      This2.Size opNorm=that
      This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused0=b.#0()
        b
        )).#right(that:opNorm)
      )
    (
      Void unused1=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (error This1.CollectionErrors.negBound(that:that, listSize:listSize))
      )
    )
  (
    This2.Bool cond0=(
      This2.Size opNorm0=listSize
      that.#right(that:opNorm0)
      )
    (
      Void unused2=cond0.#checkTrue()
      
      catch exception Void catched6 void
      
      (error This1.CollectionErrors.outBound(that:that, listSize:listSize))
      )
    )
  )}
MutListAny: {implements This2.Concept.ToS
class method 
mut This0 #mutK(This0.Cell head, This2.Size size) 
class method 
mut This0 #apply(This0.Cell head, This2.Size size) This0.#mutK(head:head, size:size)
mut method 
Void head(This0.Cell that) 
mut method 
This0.Cell #head() 
read method 
This0.Cell head() 
mut method 
Void size(This2.Size that) 
mut method 
This2.Size #size() 
read method 
This2.Size size() 
class method 
mut This0 empty() This0.#apply(head:This0.CellEnd.#apply(), size:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Any val(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head().get(that:that)
  )
mut method 
Void #apply(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  this.head(that:this.head().set(that:that, val:val, add:This2.Bool.false()))
  )
mut method 
Void add(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  Void unused0=this.head(that:this.head().set(that:that, val:val, add:This2.Bool.true()))
  this.size(that:this.size().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
mut method 
Void remove(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  Void unused0=this.head(that:this.head().remove(that:that))
  this.size(that:this.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  )
method 
This0 without(This2.Size that) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().remove(that:that), size:this.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 withAlso(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBoundAdd(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.true()), size:this.size().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
method 
This0 with(This2.Size that, Any val) (
  Void unused=This1.CollectionErrors.checkBound(that:that, listSize:this.size())
  This0.#apply(head:this.head().set(that:that, val:val, add:This2.Bool.false()), size:this.size().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))))
  )
refine read method 
This2.S toS() (
  Void unused=(
    This2.S ret=This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused1=b.#oSquare()
      b
      ))
    This2.S sep=This2.S.#from(builder:(
      mut This2.S.SBuilder b0=This2.S.#builder()
      b0
      ))
    This0.Cell c=this.head()
    mut This0.Varret__63_0 varret=This0.Varret__63_0.#apply(inner:ret)
    mut This0.Varsep__62_0 varsep=This0.Varsep__62_0.#apply(inner:sep)
    mut This0.Varc__61_0 varc=This0.Varc__61_0.#apply(inner:c)
    Void unused0=loop (/*Debug(S"MutListAny.toS() loop pass with ret='"[ret]"', sep='"[sep]"'")
*/
      Void unused2=(
        This0.CellNext c0=(
          Void unused3=return varc.#inner()
          
          catch return This0.CellNext casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched2 return varret.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused4=b1.#cSquare()
          b1
          )))
        
        (
          Void unused5=(
            Void unused6=varret.inner(that:varret.#inner().#plusplus(that:varsep.#inner()))
            Void unused7=(
              Any v=c0.val()
              (
                This2.Concept.ToS v2=(
                  Void unused8=return v
                  
                  catch return This2.Concept.ToS casted2 casted2
                  
                  catch return Any casted2 exception void
                  
                  error  {/*@stringU
CastT-Should be unreachable code
*/}
                  )
                
                catch exception Void catched6 (
                  Void v1=(
                    Void unused9=return v
                    
                    catch return Void casted1 casted1
                    
                    catch return Any casted1 exception void
                    
                    error  {/*@stringU
CastT-Should be unreachable code
*/}
                    )
                  
                  catch exception Void catched8 (
                    Library v0=(
                      Void unused10=return v
                      
                      catch return Library casted0 casted0
                      
                      catch return Any casted0 exception void
                      
                      error  {/*@stringU
CastT-Should be unreachable code
*/}
                      )
                    
                    catch exception Void catched10 varret.inner(that:varret.#inner().#plusplus(that:This2.S.#from(builder:(
                      mut This2.S.SBuilder b2=This2.S.#builder()
                      Void unused11=b2.#qMark()
                      b2
                      ))))
                    
                    (
                      Void unused12=varret.inner(that:varret.#inner().#plusplus(that:This2.S.#from(builder:(
                        mut This2.S.SBuilder b3=This2.S.#builder()
                        Void unused13=b3.#oCurly()
                        Void unused14=b3.#dot()
                        Void unused15=b3.#dot()
                        Void unused16=b3.#cCurly()
                        b3
                        ))))
                      void
                      )
                    )
                  
                  (
                    Void unused17=varret.inner(that:varret.#inner().#plusplus(that:This2.S.#from(builder:(
                      mut This2.S.SBuilder b4=This2.S.#builder()
                      Void unused18=b4.#v()
                      Void unused19=b4.#o()
                      Void unused20=b4.#i()
                      Void unused21=b4.#d()
                      b4
                      ))))
                    void
                    )
                  )
                
                (
                  Void unused22=varret.inner(that:varret.#inner().#plusplus(that:v2.toS()))
                  void
                  )
                )
              )
            varc.inner(that:c0.next())
            )
          void
          )
        )
      varsep.inner(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b5=This2.S.#builder()
        Void unused23=b5.#semicolon()
        Void unused24=b5.#space()
        b5
        )))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varc__61_0:/*@private*/ {
class method 
mut This0 #mutK(This1.Cell inner) 
class method 
mut This0 #apply(This1.Cell inner) This0.#mutK(inner:inner)
mut method 
Void inner(This1.Cell that) 
mut method 
This1.Cell #inner() 
read method 
This1.Cell inner() }
Varsep__62_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Varret__63_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Cell: {interface 
method 
Any get(This3.Size that) 
method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) 
method 
This1.Cell remove(This3.Size that) }
CellNext: {implements This1.Cell
class method 
mut This0 #mutK(Any val, This1.Cell next) 
class method 
This0 #apply(Any val, This1.Cell next) This0.#mutK(val:val, next:next)
mut method 
Any #val() 
read method 
Any val() 
mut method 
This1.Cell #next() 
read method 
This1.Cell next() 
refine method 
Any get(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.val())
        )
      )
    Void unused1=return this.next().get(that:that.#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused4=b0.#1()
      b0
      ))))
    void
    )
  
  catch return Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused3=b.#0()
        b
        ))).#bang()
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().set(that:that.#less(that:This3.Size.#from(builder:(
          mut This3.S.SBuilder b0=This3.Size.#builder()
          Void unused5=b0.#1()
          b0
          ))), val:val, add:add)))
        )
      )
    Void unused1=(
      Void unused6=add.#checkTrue()
      
      catch exception Void catched3 void
      
      (return This0.#apply(val:val, next:this))
      )
    Void unused2=return This0.#apply(val:val, next:this.next())
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.Size that) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This0.#apply(val:this.val(), next:this.next().remove(that:that.#less(that:This3.Size.#from(builder:(
          mut This3.S.SBuilder b0=This3.Size.#builder()
          Void unused4=b0.#1()
          b0
          ))))))
        )
      )
    Void unused1=return this.next()
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
CellEnd: {implements This1.Cell
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
Any get(This3.Size that) error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#g()
  Void unused8=b.#e()
  Void unused9=b.#t()
  b
  ))
refine method 
This1.Cell set(This3.Size that, Any val, This3.Bool add) (
  Void unused=(
    Void unused0=(
      This3.Bool cond=add.#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (error This3.X.#from(builder:(
          mut This3.S.SBuilder b=This3.X.#builder()
          Void unused4=b.#C()
          Void unused5=b.#e()
          Void unused6=b.#l()
          Void unused7=b.#l()
          Void unused8=b.#E()
          Void unused9=b.#n()
          Void unused10=b.#d()
          Void unused11=b.#dot()
          Void unused12=b.#s()
          Void unused13=b.#e()
          Void unused14=b.#t()
          Void unused15=b.#1()
          b
          )))
        )
      )
    Void unused1=(
      This3.Bool cond0=that.#equalequal(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused16=b0.#0()
        b0
        )))
      (
        Void unused17=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This1.CellNext.#apply(val:val, next:this))
        )
      )
    Void unused2=error This3.X.#from(builder:(
      mut This3.S.SBuilder b1=This3.X.#builder()
      Void unused18=b1.#C()
      Void unused19=b1.#e()
      Void unused20=b1.#l()
      Void unused21=b1.#l()
      Void unused22=b1.#E()
      Void unused23=b1.#n()
      Void unused24=b1.#d()
      Void unused25=b1.#dot()
      Void unused26=b1.#s()
      Void unused27=b1.#e()
      Void unused28=b1.#t()
      Void unused29=b1.#2()
      b1
      ))
    void
    )
  
  catch return This1.Cell result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
This1.Cell remove(This3.Size that) error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#C()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#E()
  Void unused4=b.#n()
  Void unused5=b.#d()
  Void unused6=b.#dot()
  Void unused7=b.#r()
  Void unused8=b.#e()
  Void unused9=b.#m()
  Void unused10=b.#o()
  Void unused11=b.#v()
  Void unused12=b.#e()
  b
  ))}}
VectorTrait: {
class method 
Library #apply()  {implements This3.Concept.ToS, This3.Concept.Classable
class method 
mut This0 #mutK(mut This0.MutListT inner) 
class method 
mut This0 #apply(mut This0.MutListT inner) This0.#mutK(inner:inner)
mut method 
mut This0.MutListT #inner() 
read method 
read This0.MutListT inner() 
class method 
This0 #immK(This0.MutListT inner) 
class method 
mut This0 empty() This0.#apply(inner:This0.MutListT.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This0.Elem that) this.add(right:that)
class method 
This0.Elem cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This0.Elem that0=(
      Void unused0=return that
      
      catch return This0.Elem casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This0.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This0.Elem val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This0.Elem left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This0.Elem right() (//#################MUT METHODS
This0.cast(that:(
  read This0.MutListT rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This0.Elem val) (
  mut This0.MutListT rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This0.Elem that) (
  mut This0.MutListT rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This0.Elem that) (
  mut This0.MutListT rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This0.Elem val) this.#inner().add(that:that, val:val)
mut method 
Void add(This0.Elem right) (
  mut This0.MutListT rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This0.Elem left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This0.Elem that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This0.Elem that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This0.Elem that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This0.Elem val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This0.Elem that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This0.Elem that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This0.Elem filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This0.Elem filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This0.Elem filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
MutListT: {implements This4.Concept.ToS
read method 
This4.Size size() 
class method 
mut This0 empty() 
read method 
Any val(This4.Size that) 
mut method 
Void #apply(This4.Size that, Any val) 
mut method 
Void add(This4.Size that, Any val) 
mut method 
Void remove(This4.Size that) 
method 
This0 without(This4.Size that) 
method 
This0 withAlso(This4.Size that, Any val) 
method 
This0 with(This4.Size that, Any val) 
refine read method 
This4.S toS() }
Elem: {}
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This2.MutListT that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This2.Elem filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Elem #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This1.MutListT that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This1.MutListT #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This1.MutListT that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This1.Elem filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo, This1.Elem filled) 
class method 
lent This0 #apply(read This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo, This1.Elem filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This1.MutListT #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This1.Elem #filled() }
IteratorVar: {
read method 
read This1.MutListT that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This1.Elem filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This1.Elem #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This1.Elem result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This1.MutListT that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This1.MutListT #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This1.Elem that) (
  mut This1.MutListT rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}}}
CodeEq: {
class method 
Library #apply()  {implements This3.Concept.Equals
read method 
This3.Size size() 
read method 
This0.Elem val(This3.Size that) 
class method 
mut This0 #seqBuilder() 
class method 
mut This0 #from(mut This0 seqBuilder) 
mut method 
Void #add(This0.Elem that) 
read method 
lent This0.IteratorVal vals() 
read method 
This3.Bool contains(This0.Elem that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This0.Elem that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This0.Elem that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This2.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This0.Elem val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos__64_0 varpos=This0.Varpos__64_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0__65_0 varpos0=This0.Varpos0__65_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*from VectorTrait
*/This0 without(This3.Size index) 
method 
This0 withoutLeft(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This0.Elem val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method /*from VectorTrait
*/Void remove(This3.Size that) 
mut method 
Void removeAll(This0.Elem val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1__66_0 varpos1=This0.Varpos1__66_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This0.Elem val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varpos__64_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0__65_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1__66_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Elem: {implements This4.Concept.Equals
refine read method 
This4.Bool equals(read Any that) }
IteratorVal: {
mut method 
Void #next() exception Void 
read method 
Void #checkEnd() 
read method 
This1.Elem #inner() 
read method 
Void #close() }}}}
Strings: {implements This1.Concept.ToS, This1.Concept.Classable, This1.Concept.Equals
class method 
mut This0 #mutK(mut This1.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This1.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This1.Collections.MutListAny #inner() 
read method 
read This1.Collections.MutListAny inner() 
class method 
This0 #immK(This1.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This1.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.S that) this.add(right:that)
class method 
This1.S cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.S that0=(
      Void unused0=return that
      
      catch return This1.S casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This1.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This1.Size size() this.inner().size()
read method 
This1.Bool isEmpty() this.size().#equalequal(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.S val(This1.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.S left() This0.cast(that:this.inner().val(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.S right() (//#################MUT METHODS
This0.cast(that:(
  read This1.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This1.Size that, This1.S val) (
  mut This1.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.S that) (
  mut This1.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.S that) (
  mut This1.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This1.Size.#from(builder:(
    mut This1.S.SBuilder b=This1.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This1.Size that, This1.S val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.S right) (
  mut This1.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.S left) this.#inner().add(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This1.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.S that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This1.Size that, This1.S val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.S that) this.with(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.S that) (//insertion
this.with(that:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This1.Size that, This1.S val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.S that) this.withAlso(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.S that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This1.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This1.Size from, This1.Size maxTo, This1.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.Size minTo) this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This1.Size from, This1.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This1.Size from, This1.Size maxTo, This1.Size minTo, This1.S filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Size minTo, This1.S filled) this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Size from, This1.Size to, This1.S filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.S filled) this.vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This1.Size from, This1.Size maxTo, This1.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.Size minTo) this.#vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This1.Size from, This1.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This1.Size.#from(builder:(
  mut This1.S.SBuilder b=This1.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This1.Size.#from(builder:(
  mut This1.S.SBuilder b0=This1.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This1.Size.#from(builder:(
  mut This1.S.SBuilder b1=This1.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This1.S toS() this.inner().toS()
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
read method 
This1.Bool contains(This1.S that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This1.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This1.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This1.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.S that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This1.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This1.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This1.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This1.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This1.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This1.Bool.true()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool #right(This1.S that) this.contains(that:that)
read method 
This1.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This1.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This1.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This1.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This1.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This1.Collections.IterationFailure catched21 (return This1.Bool.false())
    
    (
      Void unused23=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size indexOfLeft(This1.S val) (
  Void unused=(
    This1.Size size=this.size()
    This1.Size pos=This1.Size.#from(builder:(
      mut This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%7_0__67_0 varpos=This0.Varpos_$%7_0__67_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This1.Size.#from(builder:(
            mut This1.S.SBuilder b0=This1.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b1=This1.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This1.Size indexOfRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%8_0__68_0 varpos0=This0.Varpos0_$%8_0__68_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This1.Bool cond0=(
          This1.Size opNorm=varpos0.#inner()
          This1.Size.#from(builder:(
            mut This1.S.SBuilder b0=This1.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This1.Size.#from(builder:(
            mut This1.S.SBuilder b1=This1.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b2=This1.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This1.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.S val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1.S val) (
  Void unused=(
    This1.Size pos=This1.Size.#from(builder:(
      mut This1.S.SBuilder b=This1.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%9_0__69_0 varpos1=This0.Varpos1_$%9_0__69_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This1.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This1.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b0=This1.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.S val) (
  Void unused=(
    This1.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This1.Bool cond=(
        This1.Size opNorm=pos
        This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() 
read method 
This3.S filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.S #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This2.Collections.MutListAny that() 
read method 
This2.Size from() 
mut method 
Void from(This2.Size that) 
read method 
This2.Size maxTo() 
read method 
This2.Size minTo() 
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.X.#from(builder:(
  mut This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This2.Collections.MutListAny #that() 
mut method 
This2.Size #from() 
mut method 
This2.Size #maxTo() 
mut method 
This2.Size #minTo() }
IteratorValFill: {
read method 
read This2.Collections.MutListAny that() 
read method 
This2.Size from() 
mut method 
Void from(This2.Size that) 
read method 
This2.Size maxTo() 
read method 
This2.Size minTo() 
read method 
This2.Bool isFill() This2.Bool.true()
read method 
This2.S filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo, This2.S filled) 
class method 
lent This0 #apply(read This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo, This2.S filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This2.Collections.MutListAny #that() 
mut method 
This2.Size #from() 
mut method 
This2.Size #maxTo() 
mut method 
This2.Size #minTo() 
mut method 
This2.S #filled() }
IteratorVar: {
read method 
read This2.Collections.MutListAny that() 
read method 
This2.Size from() 
mut method 
Void from(This2.Size that) 
read method 
This2.Size maxTo() 
read method 
This2.Size minTo() 
read method 
This2.Bool isFill() This2.Bool.false()
read method 
This2.S filled() error This2.X.#from(builder:(
  mut This2.S.SBuilder b=This2.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This2.Bool cond=this.maxTo().#right(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b0=This2.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This2.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This2.Bool cond=(
    This2.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This2.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.S #inner() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny that, This2.Size from, This2.Size maxTo, This2.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This2.Collections.MutListAny #that() 
mut method 
This2.Size #from() 
mut method 
This2.Size #maxTo() 
mut method 
This2.Size #minTo() 
mut method 
Void inner(This2.S that) (
  mut This2.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%7_0__67_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Varpos0_$%8_0__68_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }
Varpos1_$%9_0__69_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Size inner) 
class method 
mut This0 #apply(This2.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Size that) 
mut method 
This2.Size #inner() 
read method 
This2.Size inner() }}
StringSplit: {
class method /*will be fixed in adam2
*/This1.Strings splitOn(This1.S that, This1.S chars) error This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#t()
  Void unused1=b.#r()
  Void unused2=b.#i()
  Void unused3=b.#n()
  Void unused4=b.#g()
  Void unused5=b.#S()
  Void unused6=b.#p()
  Void unused7=b.#l()
  Void unused8=b.#i()
  Void unused9=b.#t()
  Void unused10=b.#dot()
  Void unused11=b.#U()
  Void unused12=b.#n()
  Void unused13=b.#s()
  Void unused14=b.#a()
  Void unused15=b.#t()
  Void unused16=b.#i()
  Void unused17=b.#s()
  Void unused18=b.#f()
  Void unused19=b.#a()
  Void unused20=b.#c()
  Void unused21=b.#t()
  Void unused22=b.#o()
  Void unused23=b.#r()
  Void unused24=b.#y()
  Void unused25=b.#E()
  Void unused26=b.#r()
  Void unused27=b.#r()
  Void unused28=b.#o()
  Void unused29=b.#r()
  Void unused30=b.#T()
  Void unused31=b.#o()
  Void unused32=b.#A()
  Void unused33=b.#v()
  Void unused34=b.#o()
  Void unused35=b.#i()
  Void unused36=b.#d()
  Void unused37=b.#C()
  Void unused38=b.#y()
  Void unused39=b.#c()
  Void unused40=b.#l()
  Void unused41=b.#e()
  Void unused42=b.#comma()
  Void unused43=b.#space()
  Void unused44=b.#r()
  Void unused45=b.#e()
  Void unused46=b.#p()
  Void unused47=b.#l()
  Void unused48=b.#a()
  Void unused49=b.#c()
  Void unused50=b.#e()
  Void unused51=b.#space()
  Void unused52=b.#i()
  Void unused53=b.#n()
  Void unused54=b.#space()
  Void unused55=b.#A()
  Void unused56=b.#d()
  Void unused57=b.#a()
  Void unused58=b.#m()
  Void unused59=b.#T()
  Void unused60=b.#2()
  b
  ))}
CTest: {
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()}
Path: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromDocInternalizedS(This1.S that) (
  Void unused=(
    This1.S internal=(
      Void unused2=(
        Void unused3=(
          This1.Bool cond=that.#apply(that:that.size().#less(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b=This1.Size.#builder()
            Void unused5=b.#1()
            b
            )))).#equalequal(that:This1.S.nl()).#bang()
          (
            Void unused6=cond.#checkTrue()
            
            catch exception Void catched1 void
            
            (return that)
            )
          )
        Void unused4=return that.#apply(end:that.size().#less(that:This1.Size.#from(builder:(
          mut This1.S.SBuilder b0=This1.Size.#builder()
          Void unused7=b0.#1()
          b0
          ))))
        void
        )
      
      catch return This1.S result0 result0
      
      error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
      )
    Void unused0=(
      This1.Bool cond0=internal.#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b1=This1.S.#builder()
        Void unused8=b1.#at()
        Void unused9=b1.#dot()
        b1
        )))
      (
        Void unused10=cond0.#checkTrue()
        
        catch exception Void catched7 void
        
        (return This0.fromS(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b2=This1.S.#builder()
          Void unused11=b2.#T()
          Void unused12=b2.#h()
          Void unused13=b2.#i()
          Void unused14=b2.#s()
          b2
          ))))
        )
      )
    Void unused1=return This0.fromS(that:internal.#apply(start:This1.Size.#from(builder:(
      mut This1.S.SBuilder b3=This1.Size.#builder()
      Void unused15=b3.#2()
      b3
      ))))
    
    catch error This1.Message x error This0.parseError(that:that, cause:x)
    
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 fromS(This1.Concept.ToS that) This0.#from(binaryRepr:that.toS().binaryRepr())
class method 
This0 #from(This1.S.SBuilder builder) This0.#from(binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0 #from(Library binaryRepr) (
  Void unused=use This1.SafeOperators check ifInvalidDo(path:binaryRepr) error This0.parseError(that:This1.S.#from(binaryRepr:binaryRepr))
  This0._private(_binaryRepr:binaryRepr)
  )
class method 
Any parseError(This1.S that) (
  This1.S.Continue rcv33=(
    This1.S rcv34=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#P()
      Void unused0=b.#a()
      Void unused1=b.#t()
      Void unused2=b.#h()
      Void unused3=b.#1()
      Void unused4=b.#dot()
      Void unused5=b.#oSquare()
      b
      ))
    rcv34.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv34.#seqBuilder()
      Void unused6=b0.#add(that:that)
      b0
      ))
    )
  rcv33.#from(builder:(
    mut This1.S.SBuilder b1=rcv33.#builder()
    Void unused7=b1.#cSquare()
    Void unused8=b1.#space()
    Void unused9=b1.#U()
    Void unused10=b1.#n()
    Void unused11=b1.#s()
    Void unused12=b1.#a()
    Void unused13=b1.#t()
    Void unused14=b1.#i()
    Void unused15=b1.#s()
    Void unused16=b1.#f()
    Void unused17=b1.#a()
    Void unused18=b1.#c()
    Void unused19=b1.#t()
    Void unused20=b1.#o()
    Void unused21=b1.#r()
    Void unused22=b1.#y()
    Void unused23=b1.#E()
    Void unused24=b1.#r()
    Void unused25=b1.#r()
    Void unused26=b1.#o()
    Void unused27=b1.#r()
    Void unused28=b1.#T()
    Void unused29=b1.#o()
    Void unused30=b1.#A()
    Void unused31=b1.#v()
    Void unused32=b1.#o()
    Void unused33=b1.#i()
    Void unused34=b1.#d()
    Void unused35=b1.#C()
    Void unused36=b1.#y()
    Void unused37=b1.#c()
    Void unused38=b1.#l()
    Void unused39=b1.#e()
    Void unused40=b1.#comma()
    Void unused41=b1.#space()
    Void unused42=b1.#r()
    Void unused43=b1.#e()
    Void unused44=b1.#p()
    Void unused45=b1.#l()
    Void unused46=b1.#a()
    Void unused47=b1.#c()
    Void unused48=b1.#e()
    Void unused49=b1.#space()
    Void unused50=b1.#i()
    Void unused51=b1.#n()
    Void unused52=b1.#space()
    Void unused53=b1.#A()
    Void unused54=b1.#d()
    Void unused55=b1.#a()
    Void unused56=b1.#m()
    Void unused57=b1.#T()
    Void unused58=b1.#2()
    b1
    ))
  )
class method 
Any parseError(This1.S that, This1.Message cause) (
  This1.S.Continue rcv35=(
    This1.S rcv36=This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused=b.#P()
      Void unused0=b.#a()
      Void unused1=b.#t()
      Void unused2=b.#h()
      Void unused3=b.#2()
      Void unused4=b.#dot()
      Void unused5=b.#oSquare()
      b
      ))
    rcv36.#from(seqBuilder:(
      mut This1.S.SConcat b0=rcv36.#seqBuilder()
      Void unused6=b0.#add(that:that)
      b0
      ))
    )
  rcv35.#from(builder:(
    mut This1.S.SBuilder b1=rcv35.#builder()
    Void unused7=b1.#cSquare()
    Void unused8=b1.#space()
    Void unused9=b1.#U()
    Void unused10=b1.#n()
    Void unused11=b1.#s()
    Void unused12=b1.#a()
    Void unused13=b1.#t()
    Void unused14=b1.#i()
    Void unused15=b1.#s()
    Void unused16=b1.#f()
    Void unused17=b1.#a()
    Void unused18=b1.#c()
    Void unused19=b1.#t()
    Void unused20=b1.#o()
    Void unused21=b1.#r()
    Void unused22=b1.#y()
    Void unused23=b1.#E()
    Void unused24=b1.#r()
    Void unused25=b1.#r()
    Void unused26=b1.#o()
    Void unused27=b1.#r()
    Void unused28=b1.#T()
    Void unused29=b1.#o()
    Void unused30=b1.#A()
    Void unused31=b1.#v()
    Void unused32=b1.#o()
    Void unused33=b1.#i()
    Void unused34=b1.#d()
    Void unused35=b1.#C()
    Void unused36=b1.#y()
    Void unused37=b1.#c()
    Void unused38=b1.#l()
    Void unused39=b1.#e()
    Void unused40=b1.#comma()
    Void unused41=b1.#space()
    Void unused42=b1.#r()
    Void unused43=b1.#e()
    Void unused44=b1.#p()
    Void unused45=b1.#l()
    Void unused46=b1.#a()
    Void unused47=b1.#c()
    Void unused48=b1.#e()
    Void unused49=b1.#space()
    Void unused50=b1.#i()
    Void unused51=b1.#n()
    Void unused52=b1.#space()
    Void unused53=b1.#A()
    Void unused54=b1.#d()
    Void unused55=b1.#a()
    Void unused56=b1.#m()
    Void unused57=b1.#T()
    Void unused58=b1.#2()
    b1
    ))
  )
method 
Library binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() This1.S.#from(binaryRepr:this._binaryRepr())
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Path #plusplus(This1.Path that) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.#equalequal(that:This1.Path.#from(builder:(
        mut This1.S.SBuilder b=This1.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return that)
        )
      )
    Void unused1=(
      This1.Bool cond0=that.#equalequal(that:This1.Path.#from(builder:(
        mut This1.S.SBuilder b0=This1.Path.#builder()
        Void unused8=b0.#T()
        Void unused9=b0.#h()
        Void unused10=b0.#i()
        Void unused11=b0.#s()
        b0
        )))
      (
        Void unused12=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return this)
        )
      )
    Void unused2=return This1.Path.#from(binaryRepr:(
      This1.S.Continue rcv37=(
        This1.S rcv38=this.toS()
        rcv38.#from(seqBuilder:(
          mut This1.S.SConcat b1=rcv38.#seqBuilder()
          Void unused13=b1.#add(that:This1.S.#from(builder:(
            mut This1.S.SBuilder b2=This1.S.#builder()
            Void unused15=b2.#dot()
            b2
            )))
          Void unused14=b1.#add(that:that)
          b1
          ))
        )
      rcv37.#from(builder:(
        mut This1.S.SBuilder b3=rcv37.#builder()
        b3
        ))
      ).binaryRepr())
    void
    )
  
  catch return This1.Path result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
mut This1.Strings names() (
  Void unused=(
    This1.S str=this.toS()
    Void unused0=(
      This1.Bool cond=str.#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        Void unused4=b.#T()
        Void unused5=b.#h()
        Void unused6=b.#i()
        Void unused7=b.#s()
        b
        )))
      (
        Void unused8=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Strings.empty())
        )
      )
    mut This0.Varstr__70_0 varstr=This0.Varstr__70_0.#apply(inner:str)
    Void unused1=varstr.inner(that:varstr.#inner().#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b0=This1.S.#builder()
      Void unused9=b0.#dot()
      b0
      ))))
    mut This1.Strings result=This1.Strings.empty()
    Void unused2=(
      Void unused10=loop (
        Void unused11=varstr.#inner().#equalequal(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          b1
          ))).#bang().#checkTrue()
        (
          This1.Size pos=varstr.#inner().indexOfLeft(val:This1.S.#from(builder:(
            mut This1.S.SBuilder b2=This1.S.#builder()
            Void unused13=b2.#dot()
            b2
            )))
          Void unused12=result.add(right:varstr.#inner().#apply(end:pos))
          varstr.inner(that:varstr.#inner().#apply(start:pos.#plus(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b3=This1.Size.#builder()
            Void unused14=b3.#1()
            b3
            )))))
          )
        )
      
      catch exception Void catched8 void
      
      void
      )
    Void unused3=return result
    void
    )
  
  catch return mut This1.Strings result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Path from(read This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.Path.#from(builder:(
          mut This1.S.SBuilder b0=This1.Path.#builder()
          Void unused3=b0.#T()
          Void unused4=b0.#h()
          Void unused5=b0.#i()
          Void unused6=b0.#s()
          b0
          )))
        )
      )
    This1.S s=(
      This1.S.Continue rcv39=(
        This1.S rcv40=This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          b1
          ))
        rcv40.#from(seqBuilder:(
          mut This1.S.SConcat b=rcv40.#seqBuilder()
          Void unused7=(
            lent This1.Strings.IteratorVal n=names.vals()
            (
              Void unused8=(
                Void unused9=(
                  Void unused10=loop (
                    Void unused11=n.#next()
                    
                    catch exception Void catched5 (
                      Void unused12=(
                        Void unused13=n.#checkEnd()
                        
                        catch exception Void catched6 void
                        
                        void
                        )
                      exception void
                      )
                    
                    ((
                      Void unused14=b.#add(that:n.#inner(), sep:This1.S.#from(builder:(
                        mut This1.S.SBuilder b2=This1.S.#builder()
                        Void unused15=b2.#dot()
                        b2
                        )))
                      void
                      ))
                    )
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused16=n.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This1.Path propagated0 (
                Void unused17=n.#close()
                return propagated0
                )
              
              n.#close()
              )
            )
          b
          ))
        )
      rcv39.#from(builder:(
        mut This1.S.SBuilder b3=rcv39.#builder()
        b3
        ))
      )
    Void unused1=return (//(end:s.size()-1Size)
This0.fromS(that:s))
    void
    )
  
  catch return This1.Path result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Path fresh(This1.S name) This1.Path.fromS(that:This1.SafeOperators.freshName(that:name))
class method 
This1.Path fresh() this.fresh(name:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#F()
  Void unused0=b.#r()
  Void unused1=b.#e()
  Void unused2=b.#s()
  Void unused3=b.#h()
  b
  )))
class method 
This1.Path fresh(This1.Path path) (
  Void unused=(
    mut This1.Strings names=path.names()
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return this.fresh())
        )
      )
    This1.S right=This1.SafeOperators.freshName(that:names.right())
    Void unused1=names.right(that:right)
    Void unused2=return This1.Path.from(names:names)
    void
    )
  
  catch return This1.Path result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varstr__70_0:/*@private*/ {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }}
Selector: {implements This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
class method 
mut This0 _private(Library _binaryRepr) 
read method 
Library _binaryRepr() 
refine class method 
This1.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This1.Bool.true()
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This1.S readableName() This1.GetMyName.#apply(that:This0)
class method 
This0 fromS(This1.Concept.ToS that) This0.#from(binaryRepr:that.toS().binaryRepr())
class method 
This0 #from(This1.S.SBuilder builder) This0.#from(binaryRepr:builder.binaryRepr())
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0 #from(Library binaryRepr) (
  Void unused=use This1.SafeOperators check ifInvalidDo(selector:binaryRepr) error This0.parseError(that:This1.S.#from(binaryRepr:binaryRepr))
  This0._private(_binaryRepr:binaryRepr)
  )
class method 
Any parseError(This1.S that) This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#e()
  Void unused1=b.#l()
  Void unused2=b.#e()
  Void unused3=b.#c()
  Void unused4=b.#t()
  Void unused5=b.#o()
  Void unused6=b.#r()
  Void unused7=b.#dot()
  Void unused8=b.#U()
  Void unused9=b.#n()
  Void unused10=b.#s()
  Void unused11=b.#a()
  Void unused12=b.#t()
  Void unused13=b.#i()
  Void unused14=b.#s()
  Void unused15=b.#f()
  Void unused16=b.#a()
  Void unused17=b.#c()
  Void unused18=b.#t()
  Void unused19=b.#o()
  Void unused20=b.#r()
  Void unused21=b.#y()
  Void unused22=b.#E()
  Void unused23=b.#r()
  Void unused24=b.#r()
  Void unused25=b.#o()
  Void unused26=b.#r()
  Void unused27=b.#T()
  Void unused28=b.#o()
  Void unused29=b.#A()
  Void unused30=b.#v()
  Void unused31=b.#o()
  Void unused32=b.#i()
  Void unused33=b.#d()
  Void unused34=b.#C()
  Void unused35=b.#y()
  Void unused36=b.#c()
  Void unused37=b.#l()
  Void unused38=b.#e()
  Void unused39=b.#comma()
  Void unused40=b.#space()
  Void unused41=b.#r()
  Void unused42=b.#e()
  Void unused43=b.#p()
  Void unused44=b.#l()
  Void unused45=b.#a()
  Void unused46=b.#c()
  Void unused47=b.#e()
  Void unused48=b.#space()
  Void unused49=b.#i()
  Void unused50=b.#n()
  Void unused51=b.#space()
  Void unused52=b.#A()
  Void unused53=b.#d()
  Void unused54=b.#a()
  Void unused55=b.#m()
  Void unused56=b.#T()
  Void unused57=b.#2()
  b
  ))
class method 
This0 from(This1.S name, This1.Strings names) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=names.isEmpty()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.fromS(that:name.#plusplus(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b0=This1.S.#builder()
          Void unused3=b0.#oRound()
          Void unused4=b0.#cRound()
          b0
          )))))
        )
      )
    This1.S pars=(
      This1.S.Continue rcv41=(
        This1.S rcv42=This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          Void unused5=b1.#oRound()
          b1
          ))
        rcv42.#from(seqBuilder:(
          mut This1.S.SConcat b=rcv42.#seqBuilder()
          Void unused6=(
            lent This1.Strings.IteratorVal n=names.vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=n.#next()
                    
                    catch exception Void catched5 (
                      Void unused11=(
                        Void unused12=n.#checkEnd()
                        
                        catch exception Void catched6 void
                        
                        void
                        )
                      exception void
                      )
                    
                    ((
                      Void unused13=b.#add(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
                        mut This1.S.SBuilder b2=This1.S.#builder()
                        Void unused14=b2.#comma()
                        b2
                        ))))
                      void
                      ))
                    )
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused15=n.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This0 propagated0 (
                Void unused16=n.#close()
                return propagated0
                )
              
              n.#close()
              )
            )
          b
          ))
        )
      rcv41.#from(builder:(
        mut This1.S.SBuilder b3=rcv41.#builder()
        b3
        ))
      )
    Void unused1=return (//This.fromS(name[pars(end:#-1Size)]")")
This0.fromS(that:name.#plusplus(that:pars.#apply(end:pars.size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b4=This1.Size.#builder()
      Void unused17=b4.#1()
      b4
      )))).#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b5=This1.S.#builder()
      Void unused18=b5.#cRound()
      b5
      ))))))
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S nameAsField() (
  Void unused=(
    This1.S n=this.name()
    Void unused0=(
      This1.Bool cond=n.#apply(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        ))).#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return n.#apply(start:This1.Size.#from(builder:(
          mut This1.S.SBuilder b1=This1.Size.#builder()
          Void unused5=b1.#1()
          b1
          ))))
        )
      )
    Void unused1=return n
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S prefixAsField() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=(
        This1.S rcv43=this.toS()
        rcv43.#apply(that:This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused2=b.#0()
          b
          )))
        ).#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b0=This1.S.#builder()
        Void unused3=b0.#hash()
        b0
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched3 void
        
        (return This1.S.#from(builder:(
          mut This1.S.SBuilder b1=This1.S.#builder()
          Void unused5=b1.#hash()
          b1
          )))
        )
      )
    Void unused1=return This1.S.#from(builder:(
      mut This1.S.SBuilder b2=This1.S.#builder()
      b2
      ))
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
Library binaryRepr() this._binaryRepr()
refine read method 
This1.S toS() This1.S.#from(binaryRepr:this._binaryRepr())
method 
This1.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=use This1.Alu check ifStringEqualDo(s1:this.binaryRepr(), s2:that.binaryRepr()) return This1.Bool.true()
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This1.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This1.Bool.false()
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Bool isOperator() (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.name().size().#equalequal(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Bool.true())
        )
      )
    Void unused1=return (
      This1.S rcv44=this.name()
      rcv44.#apply(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b0=This1.Size.#builder()
        Void unused4=b0.#0()
        b0
        )))
      ).#equalequal(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b1=This1.S.#builder()
      Void unused5=b1.#hash()
      b1
      )))
    void
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.S name() (
  This1.S str=this.toS()
  str.#apply(end:str.indexOfLeft(val:This1.S.#from(builder:(
    mut This1.S.SBuilder b=This1.S.#builder()
    Void unused=b.#oRound()
    b
    ))))
  )
method 
This1.Strings names() (
  Void unused=(
    This1.S str=this.toS()
    mut This0.Varstr0__71_0 varstr0=This0.Varstr0__71_0.#apply(inner:str)
    Void unused0=varstr0.inner(that:varstr0.#inner().#apply(start:varstr0.#inner().indexOfLeft(val:This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused4=b.#oRound()
      b
      ))).#plus(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b0=This1.Size.#builder()
      Void unused5=b0.#1()
      b0
      ))), end:varstr0.#inner().size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b1=This1.Size.#builder()
      Void unused6=b1.#1()
      b1
      )))).#plusplus(that:(// from foo(a,b,c) to a,b,c,
This1.S.#from(builder:(
      mut This1.S.SBuilder b2=This1.S.#builder()
      Void unused7=b2.#comma()
      b2
      )))))
    mut This1.Strings result=This1.Strings.empty()
    Void unused1=(
      This1.Bool cond=varstr0.#inner().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b3=This1.S.#builder()
        Void unused8=b3.#comma()
        b3
        )))
      (
        Void unused9=cond.#checkTrue()
        
        catch exception Void catched5 void
        
        (return result)
        )
      )
    Void unused2=(
      Void unused10=loop (
        Void unused11=varstr0.#inner().#equalequal(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b4=This1.S.#builder()
          b4
          ))).#bang().#checkTrue()
        (
          This1.Size pos=varstr0.#inner().indexOfLeft(val:This1.S.#from(builder:(
            mut This1.S.SBuilder b5=This1.S.#builder()
            Void unused13=b5.#comma()
            b5
            )))
          Void unused12=result.add(right:varstr0.#inner().#apply(end:pos))
          varstr0.inner(that:varstr0.#inner().#apply(start:pos.#plus(that:This1.Size.#from(builder:(
            mut This1.S.SBuilder b6=This1.Size.#builder()
            Void unused14=b6.#1()
            b6
            )))))
          )
        )
      
      catch exception Void catched11 void
      
      void
      )
    Void unused3=return result
    void
    )
  
  catch return This1.Strings result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Selector fresh(This1.Selector that) (
  Void unused=(
    This1.S name=that.name()
    mut This0.Varname__73_0 varname=This0.Varname__73_0.#apply(inner:name)
    Void unused0=(
      This1.Bool cond=varname.#inner().#equalequal(that:This1.S.#from(builder:(
        mut This1.S.SBuilder b=This1.S.#builder()
        b
        )))
      (
        Void unused4=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (varname.inner(that:This1.S.#from(builder:(
          mut This1.S.SBuilder b0=This1.S.#builder()
          Void unused5=b0.#f()
          Void unused6=b0.#r()
          Void unused7=b0.#e()
          Void unused8=b0.#s()
          Void unused9=b0.#h()
          b0
          ))))
        )
      )
    This1.S fName=This1.SafeOperators.freshName(that:varname.#inner())
    This1.S tot=fName.#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b1=This1.S.#builder()
      Void unused10=b1.#oRound()
      b1
      )))
    mut This0.Vartot__72_0 vartot=This0.Vartot__72_0.#apply(inner:tot)
    Void unused1=(
      lent This1.Strings.IteratorVal n=that.names().vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=n.#next()
              
              catch exception Void catched5 (
                Void unused15=(
                  Void unused16=n.#checkEnd()
                  
                  catch exception Void catched6 void
                  
                  void
                  )
                exception void
                )
              
              (vartot.inner(that:vartot.#inner().#plusplus(that:n.#inner().#plusplus(that:This1.S.#from(builder:(
                mut This1.S.SBuilder b2=This1.S.#builder()
                Void unused17=b2.#comma()
                b2
                ))))))
              )
            
            catch exception Void catched9 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused18=n.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This1.Selector propagated0 (
          Void unused19=n.#close()
          return propagated0
          )
        
        n.#close()
        )
      )
    Void unused2=vartot.inner(that:vartot.#inner().#apply(start:This1.Size.#from(builder:(
      mut This1.S.SBuilder b3=This1.Size.#builder()
      Void unused20=b3.#0()
      b3
      )), end:vartot.#inner().size().#less(that:This1.Size.#from(builder:(
      mut This1.S.SBuilder b4=This1.Size.#builder()
      Void unused21=b4.#1()
      b4
      )))).#plusplus(that:This1.S.#from(builder:(
      mut This1.S.SBuilder b5=This1.S.#builder()
      Void unused22=b5.#cRound()
      b5
      ))))
    Void unused3=return This1.Selector.fromS(that:vartot.#inner())
    void
    )
  
  catch return This1.Selector result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method /*will be private
*/This1.S leftAsASCIIUpperCase(This1.S that) (
  Void unused=(
    This1.Size index=This1.S.aSCIILowerCase().indexOfLeft(val:that.left())
    Void unused0=(
      This1.Bool cond=index.#rightequal(that:This1.Size.#from(builder:(
        mut This1.S.SBuilder b=This1.Size.#builder()
        Void unused2=b.#0()
        b
        )))
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return that.withLeft(that:(
          This1.S rcv45=This1.S.aSCIIUpperCase()
          rcv45.#apply(that:index)
          )))
        )
      )
    Void unused1=return that
    void
    )
  
  catch return This1.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 with(This1.S prefix) (//we still need to add check validity, and fields name, list parameters, and ways to add/remove parameters
(
  Void unused=(
    This1.S newName=prefix.#plusplus(that:This0.leftAsASCIIUpperCase(that:this.name()))
    Void unused0=return This1.Selector.from(name:newName, names:this.names())
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
Varstr0__71_0:/*@private*/ {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }
Vartot__72_0:/*@private*/ {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }
Varname__73_0:/*@private*/ {
class method 
mut This0 #mutK(This2.S inner) 
class method 
mut This0 #apply(This2.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.S that) 
mut method 
This2.S #inner() 
read method 
This2.S inner() }
ParseFail: {}}
SafeOperators: {/*@plugin
L42.is/connected/withSafeOperators
*/
class method 
Library compose(Library left, Library right) use This0 check compose(left:left, right:right) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#c()
  Void unused14=b.#o()
  Void unused15=b.#m()
  Void unused16=b.#p()
  Void unused17=b.#o()
  Void unused18=b.#s()
  Void unused19=b.#e()
  b
  ))
class method 
Library renameClass(Library that, This1.Path src, This1.Path dest) use This0 check renameClass(that:that, src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#C()
  Void unused20=b.#l()
  Void unused21=b.#a()
  Void unused22=b.#s()
  Void unused23=b.#s()
  b
  ))
class method 
Library renameMethod(Library that, This1.Path path, This1.Selector src, This1.Selector dest) use This0 check renameMethod(that:that, path:path.binaryRepr(), src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#M()
  Void unused20=b.#e()
  Void unused21=b.#t()
  Void unused22=b.#h()
  Void unused23=b.#o()
  Void unused24=b.#d()
  b
  ))
class method 
Library sumMethods(Library that, This1.Path path, This1.Selector src1, This1.Selector src2, This1.Selector dest, This1.S name) use This0 check sumMethods(that:that, path:path.binaryRepr(), src1:src1.binaryRepr(), src2:src2.binaryRepr(), dest:dest.binaryRepr(), name:name.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#n()
  Void unused16=b.#a()
  Void unused17=b.#m()
  Void unused18=b.#e()
  Void unused19=b.#M()
  Void unused20=b.#e()
  Void unused21=b.#t()
  Void unused22=b.#h()
  Void unused23=b.#o()
  Void unused24=b.#d()
  b
  ))
class method 
Library redirect(Library that, This1.Path src, class Any dest) use This0 check redirect(that:that, src:src.binaryRepr(), dest:dest) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#d()
  Void unused16=b.#i()
  Void unused17=b.#r()
  Void unused18=b.#e()
  Void unused19=b.#c()
  Void unused20=b.#t()
  b
  ))
class method 
Library removeImplementation(Library that, This1.Path path) use This0 check removeImplementation(that:that, path:path.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#I()
  Void unused20=b.#m()
  Void unused21=b.#p()
  Void unused22=b.#l()
  Void unused23=b.#e()
  Void unused24=b.#m()
  Void unused25=b.#e()
  Void unused26=b.#n()
  Void unused27=b.#t()
  Void unused28=b.#a()
  Void unused29=b.#t()
  Void unused30=b.#i()
  Void unused31=b.#o()
  Void unused32=b.#n()
  Void unused33=b.#oRound()
  Void unused34=b.#p()
  Void unused35=b.#a()
  Void unused36=b.#t()
  Void unused37=b.#h()
  Void unused38=b.#cRound()
  b
  ))
class method 
Library moveImplementation(Library that, This1.Path path, This1.Selector src, This1.Selector dest) use This0 check moveImplementation(that:that, path:path.binaryRepr(), src:src.binaryRepr(), dest:dest.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#m()
  Void unused14=b.#o()
  Void unused15=b.#v()
  Void unused16=b.#e()
  Void unused17=b.#I()
  Void unused18=b.#m()
  Void unused19=b.#p()
  Void unused20=b.#l()
  Void unused21=b.#e()
  Void unused22=b.#m()
  Void unused23=b.#e()
  Void unused24=b.#n()
  Void unused25=b.#t()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#i()
  Void unused29=b.#o()
  Void unused30=b.#n()
  b
  ))
class method 
Library removeImplementation(Library that, This1.Path path, This1.Selector selector) use This0 check removeImplementation(that:that, path:path.binaryRepr(), selector:selector.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#m()
  Void unused16=b.#o()
  Void unused17=b.#v()
  Void unused18=b.#e()
  Void unused19=b.#I()
  Void unused20=b.#m()
  Void unused21=b.#p()
  Void unused22=b.#l()
  Void unused23=b.#e()
  Void unused24=b.#m()
  Void unused25=b.#e()
  Void unused26=b.#n()
  Void unused27=b.#t()
  Void unused28=b.#a()
  Void unused29=b.#t()
  Void unused30=b.#i()
  Void unused31=b.#o()
  Void unused32=b.#n()
  Void unused33=b.#oRound()
  Void unused34=b.#p()
  Void unused35=b.#a()
  Void unused36=b.#t()
  Void unused37=b.#h()
  Void unused38=b.#comma()
  Void unused39=b.#s()
  Void unused40=b.#e()
  Void unused41=b.#l()
  Void unused42=b.#e()
  Void unused43=b.#c()
  Void unused44=b.#t()
  Void unused45=b.#o()
  Void unused46=b.#r()
  Void unused47=b.#cRound()
  b
  ))
class method 
Library addDocumentation(Library that, This1.Path path, This1.Introspection.Doc doc) use This0 check addDocumentation(that:that, path:path.binaryRepr(), doc:doc.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#a()
  Void unused14=b.#d()
  Void unused15=b.#d()
  Void unused16=b.#D()
  Void unused17=b.#o()
  Void unused18=b.#c()
  Void unused19=b.#u()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#n()
  Void unused23=b.#t()
  Void unused24=b.#a()
  Void unused25=b.#t()
  Void unused26=b.#i()
  Void unused27=b.#o()
  Void unused28=b.#n()
  Void unused29=b.#oRound()
  Void unused30=b.#p()
  Void unused31=b.#a()
  Void unused32=b.#t()
  Void unused33=b.#h()
  Void unused34=b.#cRound()
  b
  ))
class method 
Library addDocumentation(Library that, This1.Path path, This1.Selector selector, This1.Introspection.Doc doc) use This0 check addDocumentation(that:that, path:path.binaryRepr(), selector:selector.binaryRepr(), doc:doc.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#a()
  Void unused14=b.#d()
  Void unused15=b.#d()
  Void unused16=b.#D()
  Void unused17=b.#o()
  Void unused18=b.#c()
  Void unused19=b.#u()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#n()
  Void unused23=b.#t()
  Void unused24=b.#a()
  Void unused25=b.#t()
  Void unused26=b.#i()
  Void unused27=b.#o()
  Void unused28=b.#n()
  Void unused29=b.#oRound()
  Void unused30=b.#p()
  Void unused31=b.#a()
  Void unused32=b.#t()
  Void unused33=b.#h()
  Void unused34=b.#comma()
  Void unused35=b.#s()
  Void unused36=b.#e()
  Void unused37=b.#l()
  Void unused38=b.#e()
  Void unused39=b.#c()
  Void unused40=b.#t()
  Void unused41=b.#o()
  Void unused42=b.#r()
  Void unused43=b.#cRound()
  b
  ))
class method 
This1.S freshName(This1.S that) This1.S.#from(binaryRepr:use This0 check freshName(that:that.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#f()
  Void unused14=b.#r()
  Void unused15=b.#e()
  Void unused16=b.#s()
  Void unused17=b.#h()
  Void unused18=b.#N()
  Void unused19=b.#a()
  Void unused20=b.#m()
  Void unused21=b.#e()
  Void unused22=b.#oRound()
  Void unused23=b.#t()
  Void unused24=b.#h()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#cRound()
  b
  )))
class method 
Library makeMethod(Library that, This1.Path path, This1.Selector selector, This1.S mdfs, This1.Size exceptionN) use This0 check makeMethod(that:that, path:path.binaryRepr(), selector:selector.binaryRepr(), mdfs:mdfs.binaryRepr(), exceptionN:exceptionN.binaryRepr()) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#m()
  Void unused14=b.#a()
  Void unused15=b.#k()
  Void unused16=b.#e()
  Void unused17=b.#M()
  Void unused18=b.#e()
  Void unused19=b.#t()
  Void unused20=b.#h()
  Void unused21=b.#o()
  Void unused22=b.#d()
  Void unused23=b.#oRound()
  Void unused24=b.#t()
  Void unused25=b.#h()
  Void unused26=b.#a()
  Void unused27=b.#t()
  Void unused28=b.#comma()
  Void unused29=b.#p()
  Void unused30=b.#a()
  Void unused31=b.#t()
  Void unused32=b.#h()
  Void unused33=b.#comma()
  Void unused34=b.#s()
  Void unused35=b.#e()
  Void unused36=b.#l()
  Void unused37=b.#e()
  Void unused38=b.#c()
  Void unused39=b.#t()
  Void unused40=b.#o()
  Void unused41=b.#r()
  Void unused42=b.#comma()
  Void unused43=b.#m()
  Void unused44=b.#d()
  Void unused45=b.#f()
  Void unused46=b.#s()
  Void unused47=b.#comma()
  Void unused48=b.#e()
  Void unused49=b.#x()
  Void unused50=b.#c()
  Void unused51=b.#e()
  Void unused52=b.#p()
  Void unused53=b.#t()
  Void unused54=b.#i()
  Void unused55=b.#o()
  Void unused56=b.#n()
  Void unused57=b.#N()
  Void unused58=b.#cRound()
  b
  ))
class method 
Library liftValue(Any that, This1.Selector selector, Library lib) use This0 check liftValue(that:that, selector:selector.binaryRepr(), lib:lib) error This1.System.Guard.PluginFailure.#from(builder:(
  mut This1.S.SBuilder b=This1.System.Guard.PluginFailure.#builder()
  Void unused=b.#S()
  Void unused0=b.#a()
  Void unused1=b.#f()
  Void unused2=b.#e()
  Void unused3=b.#O()
  Void unused4=b.#p()
  Void unused5=b.#e()
  Void unused6=b.#r()
  Void unused7=b.#a()
  Void unused8=b.#t()
  Void unused9=b.#o()
  Void unused10=b.#r()
  Void unused11=b.#s()
  Void unused12=b.#dot()
  Void unused13=b.#l()
  Void unused14=b.#i()
  Void unused15=b.#f()
  Void unused16=b.#t()
  Void unused17=b.#V()
  Void unused18=b.#a()
  Void unused19=b.#l()
  Void unused20=b.#u()
  Void unused21=b.#e()
  Void unused22=b.#oRound()
  Void unused23=b.#t()
  Void unused24=b.#h()
  Void unused25=b.#a()
  Void unused26=b.#t()
  Void unused27=b.#comma()
  Void unused28=b.#s()
  Void unused29=b.#e()
  Void unused30=b.#l()
  Void unused31=b.#e()
  Void unused32=b.#c()
  Void unused33=b.#t()
  Void unused34=b.#o()
  Void unused35=b.#r()
  Void unused36=b.#comma()
  Void unused37=b.#l()
  Void unused38=b.#i()
  Void unused39=b.#b()
  Void unused40=b.#cRound()
  b
  ))
class method 
Library addKs(Library that, This1.Path path, This1.S fields, This1.S mutK, This1.S lentK, This1.S readK, This1.S immK, This1.Bool isFwd) (
  Library fwdRepr=(
    Void unused=(
      Void unused0=(
        Void unused2=isFwd.#checkTrue()
        
        catch exception Void catched void
        
        (return This1.Size.#from(builder:(
          mut This1.S.SBuilder b=This1.Size.#builder()
          Void unused3=b.#1()
          b
          )).binaryRepr())
        )
      Void unused1=return This1.Size.#from(builder:(
        mut This1.S.SBuilder b0=This1.Size.#builder()
        Void unused4=b0.#0()
        b0
        )).binaryRepr()
      void
      )
    
    catch return Library result result
    
    error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
    )
  use This0 check addKs(that:that, path:path.binaryRepr(), fields:fields.binaryRepr(), mutK:mutK.binaryRepr(), lentK:lentK.binaryRepr(), readK:readK.binaryRepr(), immK:immK.binaryRepr(), isFwd:fwdRepr) error This1.System.Guard.PluginFailure.#from(builder:(
    mut This1.S.SBuilder b1=This1.System.Guard.PluginFailure.#builder()
    Void unused5=b1.#S()
    Void unused6=b1.#a()
    Void unused7=b1.#f()
    Void unused8=b1.#e()
    Void unused9=b1.#O()
    Void unused10=b1.#p()
    Void unused11=b1.#e()
    Void unused12=b1.#r()
    Void unused13=b1.#a()
    Void unused14=b1.#t()
    Void unused15=b1.#o()
    Void unused16=b1.#r()
    Void unused17=b1.#s()
    Void unused18=b1.#dot()
    Void unused19=b1.#a()
    Void unused20=b1.#d()
    Void unused21=b1.#d()
    Void unused22=b1.#K()
    Void unused23=b1.#s()
    Void unused24=b1.#oRound()
    Void unused25=b1.#t()
    Void unused26=b1.#h()
    Void unused27=b1.#a()
    Void unused28=b1.#t()
    Void unused29=b1.#comma()
    Void unused30=b1.#p()
    Void unused31=b1.#a()
    Void unused32=b1.#t()
    Void unused33=b1.#h()
    Void unused34=b1.#comma()
    Void unused35=b1.#f()
    Void unused36=b1.#i()
    Void unused37=b1.#e()
    Void unused38=b1.#l()
    Void unused39=b1.#d()
    Void unused40=b1.#s()
    Void unused41=b1.#comma()
    Void unused42=b1.#m()
    Void unused43=b1.#u()
    Void unused44=b1.#t()
    Void unused45=b1.#K()
    Void unused46=b1.#comma()
    Void unused47=b1.#l()
    Void unused48=b1.#e()
    Void unused49=b1.#n()
    Void unused50=b1.#t()
    Void unused51=b1.#K()
    Void unused52=b1.#comma()
    Void unused53=b1.#r()
    Void unused54=b1.#e()
    Void unused55=b1.#a()
    Void unused56=b1.#d()
    Void unused57=b1.#K()
    Void unused58=b1.#comma()
    Void unused59=b1.#i()
    Void unused60=b1.#m()
    Void unused61=b1.#m()
    Void unused62=b1.#K()
    Void unused63=b1.#comma()
    Void unused64=b1.#i()
    Void unused65=b1.#s()
    Void unused66=b1.#F()
    Void unused67=b1.#w()
    Void unused68=b1.#d()
    Void unused69=b1.#cRound()
    b1
    ))
  )}
Enum: {
class method 
Library #leftrightleft(Library that) This1.SafeOperatorsAccess.compose(left:This1.SafeOperatorsAccess.renameClass(that:this.enumTrait(), src:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#o()
  Void unused1=b.#p()
  b
  )), dest:This1.S.#from(builder:(
  mut This1.S.SBuilder b0=This1.S.#builder()
  Void unused2=b0.#T()
  Void unused3=b0.#h()
  Void unused4=b0.#i()
  Void unused5=b0.#s()
  b0
  ))), right:that)
class method 
Library enumTrait()  {
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%10_0__74_0 varres=This0.Varres_$%10_0__74_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%10_0__74_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
Top: {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This3.Concept.Equals, This3.Concept.Classable, This3.Concept.ToS
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) this.inner().#equalequal(that:that.inner())
refine read method 
This3.S toS() This0.readableName().#plusplus(that:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This3.Size inner() 
class method 
This0 #apply(This3.Size inner) 
method 
This3.S name() This0.names().val(that:this.inner())
class method 
This3.Strings names() 
class method 
This0 fromS(This3.S that) (
  Void unused=(
    Void unused0=(
      mut This3.Size.Iterator n=This3.Size.#from(builder:(
        mut This3.S.SBuilder b=This3.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        Void unused3=(
          Void unused4=(
            lent This3.Strings.IteratorVal d=This0.names().vals()
            (
              Void unused5=(
                Void unused6=(
                  Void unused7=loop (
                    Void unused8=n.#next()
                    
                    catch exception Void catched2 (
                      Void unused9=(
                        Void unused12=d.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused10=(
                        Void unused13=n.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused11=(
                        Void unused14=d.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused15=d.#next()
                      
                      catch exception Void catched7 (
                        Void unused16=(
                          Void unused18=n.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused17=(
                          Void unused19=d.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        This3.Bool cond=d.#inner().#equalequal(that:that)
                        (
                          Void unused20=cond.#checkTrue()
                          
                          catch exception Void catched12 void
                          
                          return This0.#apply(inner:n.#inner())
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched13 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused21=d.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This0 propagated0 (
                Void unused22=d.#close()
                return propagated0
                )
              
              d.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused23=n.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused24=n.#close()
          return propagated2
          )
        
        n.#close()
        )
      )
    Void unused1=error (
      This1.ParseFail.Continue rcv46=(
        This1.ParseFail rcv47=This1.ParseFail.#from(builder:(
          mut This3.S.SBuilder b0=This1.ParseFail.#builder()
          Void unused25=b0.#T()
          Void unused26=b0.#h()
          Void unused27=b0.#e()
          Void unused28=b0.#space()
          Void unused29=b0.#p()
          Void unused30=b0.#r()
          Void unused31=b0.#o()
          Void unused32=b0.#v()
          Void unused33=b0.#i()
          Void unused34=b0.#d()
          Void unused35=b0.#e()
          Void unused36=b0.#d()
          Void unused37=b0.#space()
          Void unused38=b0.#s()
          Void unused39=b0.#t()
          Void unused40=b0.#r()
          Void unused41=b0.#i()
          Void unused42=b0.#n()
          Void unused43=b0.#g()
          Void unused44=b0.#space()
          Void unused45=b0.#i()
          Void unused46=b0.#s()
          Void unused47=b0.#space()
          Void unused48=b0.#n()
          Void unused49=b0.#o()
          Void unused50=b0.#t()
          Void unused51=b0.#space()
          Void unused52=b0.#v()
          Void unused53=b0.#a()
          Void unused54=b0.#l()
          Void unused55=b0.#i()
          Void unused56=b0.#d()
          Void unused57=b0.#colon()
          Void unused58=b0.#space()
          b0
          ))
        rcv47.#from(seqBuilder:(
          mut This3.S.SConcat b1=rcv47.#seqBuilder()
          Void unused59=b1.#add(that:that)
          b1
          ))
        )
      rcv46.#from(builder:(
        mut This3.S.SBuilder b2=rcv46.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.Top that) this.add(right:that)
class method 
This1.Top cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.Top that0=(
      Void unused0=return that
      
      catch return This1.Top casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.Top result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.Top val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Top left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Top right() (//#################MUT METHODS
This0.cast(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1.Top val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Top that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Top that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1.Top val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Top right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.Top left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Top that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1.Top val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Top that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Top that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1.Top val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Top that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Top that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1.Top filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1.Top filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1.Top filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Top filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
read method 
This3.Bool contains(This1.Top that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.Top that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1.Top that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This3.Collections.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1.Top val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%11_0__75_0 varpos=This0.Varpos_$%11_0__75_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1.Top val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%12_0__76_0 varpos0=This0.Varpos0_$%12_0__76_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1.Top val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.Top val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.Top val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1.Top val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%13_0__77_0 varpos1=This0.Varpos1_$%13_0__77_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.Top val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.Top val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3.Top filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Top #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Top result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2.Top filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Top #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Top result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This2.Top filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Top #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Top result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2.Top filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2.Top filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This2.Top #filled() }
IteratorVar: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2.Top filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Top #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Top result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This2.Top that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%11_0__75_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0_$%12_0__76_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1_$%13_0__77_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }}}
SolidTrait: {
class method 
Library #apply()  {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Bool #equalequal(read This0 that) 
refine read method 
This3.S toS() }}}
Introspection: {/*findMeIntrospection
*/
class method 
This0.NestedClass #apply(Library lib) (
  This0.NestedClass root=This0.MirrorPr.Lib.#apply(lib:lib).introspectReport(root:root, path:This1.Path.#from(builder:(
    mut This1.S.SBuilder b=This1.Path.#builder()
    Void unused=b.#T()
    Void unused0=b.#h()
    Void unused1=b.#i()
    Void unused2=b.#s()
    b
    )))
  
  catch exception This1.MetaGuard.NestedClassUnavailable x error This1.X.#from(builder:(
    mut This1.S.SBuilder b0=This1.X.#builder()
    Void unused3=b0.#I()
    Void unused4=b0.#n()
    Void unused5=b0.#t()
    Void unused6=b0.#r()
    Void unused7=b0.#o()
    Void unused8=b0.#s()
    Void unused9=b0.#p()
    Void unused10=b0.#e()
    Void unused11=b0.#c()
    Void unused12=b0.#t()
    Void unused13=b0.#i()
    Void unused14=b0.#o()
    Void unused15=b0.#n()
    Void unused16=b0.#1()
    b0
    ))
  
  root
  )
class method 
This0.NestedClass #apply(Library lib, This1.Path path) exception This1.MetaGuard.NestedClassUnavailable (
  This0.NestedClass root=This0.#apply(lib:lib)
  root.mirror().introspectReport(root:root, path:path)
  )
class method 
This0.NestedClass #apply(class Any clazz) (
  This0.NestedClass root=This0.MirrorPr.Class.#apply(lib:clazz).introspectReport(root:root, path:This1.Path.#from(builder:(
    mut This1.S.SBuilder b=This1.Path.#builder()
    Void unused=b.#T()
    Void unused0=b.#h()
    Void unused1=b.#i()
    Void unused2=b.#s()
    b
    )))
  
  catch exception This1.MetaGuard.NestedClassUnavailable x error This1.X.#from(builder:(
    mut This1.S.SBuilder b0=This1.X.#builder()
    Void unused3=b0.#I()
    Void unused4=b0.#n()
    Void unused5=b0.#t()
    Void unused6=b0.#r()
    Void unused7=b0.#o()
    Void unused8=b0.#s()
    Void unused9=b0.#p()
    Void unused10=b0.#e()
    Void unused11=b0.#c()
    Void unused12=b0.#t()
    Void unused13=b0.#i()
    Void unused14=b0.#o()
    Void unused15=b0.#n()
    Void unused16=b0.#2()
    b0
    ))
  
  root
  )
class method 
This0.NestedClass #apply(class Any clazz, This1.Path path) (
  This0.NestedClass root=This0.MirrorPr.Class.#apply(lib:clazz).introspectReport(root:root, path:path)
  
  catch exception This1.MetaGuard.NestedClassUnavailable x error This1.X.#from(builder:(
    mut This1.S.SBuilder b=This1.X.#builder()
    Void unused=b.#I()
    Void unused0=b.#n()
    Void unused1=b.#t()
    Void unused2=b.#r()
    Void unused3=b.#o()
    Void unused4=b.#s()
    Void unused5=b.#p()
    Void unused6=b.#e()
    Void unused7=b.#c()
    Void unused8=b.#t()
    Void unused9=b.#i()
    Void unused10=b.#o()
    Void unused11=b.#n()
    Void unused12=b.#3()
    b
    ))
  
  root
  )
MirrorPr: {interface implements This2.Concept.ToS
method 
This1.NestedClass introspectReport(fwd This1.NestedClass root, This2.Path path) exception This2.MetaGuard.NestedClassUnavailable 
method 
This1.Member introspectReportMember(fwd This1.NestedClass root, This2.Path path, This2.Size memberN) exception This2.MetaGuard.MemberUnavailable, Void 
method 
This1.Type introspectReportType(fwd This1.NestedClass root, This2.Path path, This2.Size memberN, This2.Size typeN) exception This2.MetaGuard.MemberUnavailable, Void 
method 
This2.S introspectDocAsString(This2.Path path) exception This2.MetaGuard.NestedClassUnavailable 
method 
This2.S introspectDocAsString(This2.Path path, This2.Size annotationN) exception This2.MetaGuard.NestedClassUnavailable, Void 
method 
class Any introspectDocPath(This2.Path path, This2.Size annotationN) exception This2.MetaGuard.NestedClassUnavailable, Void 
refine read method 
This2.S toS() 
Lib: {implements This1, This3.Concept.ToS
class method 
mut This0 #mutK(Library lib) 
class method 
This0 #apply(Library lib) This0.#mutK(lib:lib)
mut method 
Library #lib() 
read method 
Library lib() 
refine read method 
This3.S toS() This3.Introspection.#apply(lib:this.lib()).toS()
refine method 
This2.NestedClass introspectReport(fwd This2.NestedClass root, This3.Path path) exception This3.MetaGuard.NestedClassUnavailable (
  This2.NestedClass result=This2.NestedClass.#apply(_root:root, path:path, mirror:this, record:This2.Record.#apply(that:This1.Lib.#apply(lib:use This3.SafeOperators check introspectLibraryReport(that:this.lib(), path:path.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    mut This3.S.SBuilder b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#L()
    Void unused24=b.#i()
    Void unused25=b.#b()
    Void unused26=b.#r()
    Void unused27=b.#a()
    Void unused28=b.#r()
    Void unused29=b.#y()
    Void unused30=b.#R()
    Void unused31=b.#e()
    Void unused32=b.#p()
    Void unused33=b.#o()
    Void unused34=b.#r()
    Void unused35=b.#t()
    b
    )))))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )
refine method 
This2.Member introspectReportMember(fwd This2.NestedClass root, This3.Path path, This3.Size memberN) exception This3.MetaGuard.MemberUnavailable, Void (
  This2.Member result=This2.Record.dispatch(root:root, path:path, mirror:this, memberN:memberN, record:use This3.SafeOperators check introspectLibraryReportMember(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  
  result
  )
refine method 
This2.Type introspectReportType(fwd This2.NestedClass root, This3.Path path, This3.Size memberN, This3.Size typeN) exception This3.MetaGuard.MemberUnavailable, Void (
  This2.Type result=This2.Type.#apply(root:root, path:path, memberN:memberN, typeN:typeN, record:This2.Record.#apply(that:This1.Lib.#apply(lib:use This3.SafeOperators check introspectLibraryReportType(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr(), typeN:typeN.binaryRepr()) exception void)))
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  
  result
  )
refine method 
This3.S introspectDocAsString(This3.Path path, This3.Size annotationN) exception This3.MetaGuard.NestedClassUnavailable, Void (
  mut This3.S result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectLibraryDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )
refine method 
This3.S introspectDocAsString(This3.Path path) exception This3.MetaGuard.NestedClassUnavailable (
  mut This3.S result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectLibraryDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )).binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    mut This3.S.SBuilder b0=This3.System.Guard.PluginFailure.#builder()
    Void unused0=b0.#S()
    Void unused1=b0.#a()
    Void unused2=b0.#f()
    Void unused3=b0.#e()
    Void unused4=b0.#O()
    Void unused5=b0.#p()
    Void unused6=b0.#e()
    Void unused7=b0.#r()
    Void unused8=b0.#a()
    Void unused9=b0.#t()
    Void unused10=b0.#o()
    Void unused11=b0.#r()
    Void unused12=b0.#s()
    Void unused13=b0.#dot()
    Void unused14=b0.#i()
    Void unused15=b0.#n()
    Void unused16=b0.#t()
    Void unused17=b0.#r()
    Void unused18=b0.#o()
    Void unused19=b0.#s()
    Void unused20=b0.#p()
    Void unused21=b0.#e()
    Void unused22=b0.#c()
    Void unused23=b0.#t()
    Void unused24=b0.#L()
    Void unused25=b0.#i()
    Void unused26=b0.#b()
    Void unused27=b0.#r()
    Void unused28=b0.#a()
    Void unused29=b0.#r()
    Void unused30=b0.#y()
    Void unused31=b0.#D()
    Void unused32=b0.#o()
    Void unused33=b0.#c()
    Void unused34=b0.#A()
    Void unused35=b0.#s()
    Void unused36=b0.#S()
    Void unused37=b0.#t()
    Void unused38=b0.#r()
    Void unused39=b0.#i()
    Void unused40=b0.#n()
    Void unused41=b0.#g()
    b0
    )))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )
refine method 
class Any introspectDocPath(This3.Path path, This3.Size annotationN) exception This3.MetaGuard.NestedClassUnavailable, Void (
  class Any result=use This3.SafeOperators check introspectLibraryDocPath(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    mut This3.S.SBuilder b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#L()
    Void unused24=b.#i()
    Void unused25=b.#b()
    Void unused26=b.#r()
    Void unused27=b.#a()
    Void unused28=b.#r()
    Void unused29=b.#y()
    Void unused30=b.#D()
    Void unused31=b.#o()
    Void unused32=b.#c()
    Void unused33=b.#P()
    Void unused34=b.#a()
    Void unused35=b.#t()
    Void unused36=b.#h()
    b
    ))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )}
Class: {implements This1, This3.Concept.ToS
class method 
mut This0 #mutK(class Any lib) 
class method 
This0 #apply(class Any lib) This0.#mutK(lib:lib)
mut method 
class Any #lib() 
read method 
class Any lib() 
refine read method 
This3.S toS() This3.Introspection.#apply(clazz:this.lib()).toS()
refine method 
This2.NestedClass introspectReport(fwd This2.NestedClass root, This3.Path path) exception This3.MetaGuard.NestedClassUnavailable (
  This2.Record record=This2.Record.#apply(lib:use This3.SafeOperators check introspectTypeReport(that:this.lib(), path:path.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    mut This3.S.SBuilder b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#T()
    Void unused24=b.#y()
    Void unused25=b.#p()
    Void unused26=b.#e()
    Void unused27=b.#R()
    Void unused28=b.#e()
    Void unused29=b.#p()
    Void unused30=b.#o()
    Void unused31=b.#r()
    Void unused32=b.#t()
    b
    )))
  class Any realRootType=record.docOf(path:This3.Path.#from(builder:(
    mut This3.S.SBuilder b0=This3.Path.#builder()
    Void unused33=b0.#M()
    Void unused34=b0.#y()
    Void unused35=b0.#C()
    Void unused36=b0.#l()
    Void unused37=b0.#a()
    Void unused38=b0.#s()
    Void unused39=b0.#s()
    b0
    ))).annotations().left().referredClass()
  This2.NestedClass result=This2.NestedClass.#apply(_root:result, path:This3.Path.#from(builder:(
    mut This3.S.SBuilder b1=This3.Path.#builder()
    Void unused40=b1.#T()
    Void unused41=b1.#h()
    Void unused42=b1.#i()
    Void unused43=b1.#s()
    b1
    )), mirror:This0.#apply(lib:realRootType), record:record)
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )
refine method 
This2.Member introspectReportMember(fwd This2.NestedClass root, This3.Path path, This3.Size memberN) exception This3.MetaGuard.MemberUnavailable, Void (
  This2.Member result=This2.Record.dispatch(root:root, path:path, mirror:this, memberN:memberN, record:use This3.SafeOperators check introspectTypeReportMember(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  
  result
  )
refine method 
This2.Type introspectReportType(fwd This2.NestedClass root, This3.Path path, This3.Size memberN, This3.Size typeN) exception This3.MetaGuard.MemberUnavailable, Void (
  This2.Type result=This2.Type.#apply(root:root, path:path, memberN:memberN, typeN:typeN, record:This2.Record.#apply(that:This1.Lib.#apply(lib:use This3.SafeOperators check introspectTypeReportType(that:this.lib(), path:path.binaryRepr(), memberN:memberN.binaryRepr(), typeN:typeN.binaryRepr()) exception void)))
  
  catch error Library x exception This3.MetaGuard.DispatchMemberUnavailable.#apply(that:x)
  
  result
  )
refine method 
This3.S introspectDocAsString(This3.Path path, This3.Size annotationN) exception This3.MetaGuard.NestedClassUnavailable, Void (
  mut This3.S result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectTypeDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) exception void)
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )
refine method 
This3.S introspectDocAsString(This3.Path path) exception This3.MetaGuard.NestedClassUnavailable (
  mut This3.S result=This3.S.#from(binaryRepr:use This3.SafeOperators check introspectTypeDocAsString(that:this.lib(), path:path.binaryRepr(), annotationN:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )).binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    mut This3.S.SBuilder b0=This3.System.Guard.PluginFailure.#builder()
    Void unused0=b0.#S()
    Void unused1=b0.#a()
    Void unused2=b0.#f()
    Void unused3=b0.#e()
    Void unused4=b0.#O()
    Void unused5=b0.#p()
    Void unused6=b0.#e()
    Void unused7=b0.#r()
    Void unused8=b0.#a()
    Void unused9=b0.#t()
    Void unused10=b0.#o()
    Void unused11=b0.#r()
    Void unused12=b0.#s()
    Void unused13=b0.#dot()
    Void unused14=b0.#i()
    Void unused15=b0.#n()
    Void unused16=b0.#t()
    Void unused17=b0.#r()
    Void unused18=b0.#o()
    Void unused19=b0.#s()
    Void unused20=b0.#p()
    Void unused21=b0.#e()
    Void unused22=b0.#c()
    Void unused23=b0.#t()
    Void unused24=b0.#T()
    Void unused25=b0.#y()
    Void unused26=b0.#p()
    Void unused27=b0.#e()
    Void unused28=b0.#D()
    Void unused29=b0.#o()
    Void unused30=b0.#c()
    Void unused31=b0.#A()
    Void unused32=b0.#s()
    Void unused33=b0.#S()
    Void unused34=b0.#t()
    Void unused35=b0.#r()
    Void unused36=b0.#i()
    Void unused37=b0.#n()
    Void unused38=b0.#g()
    b0
    )))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )
refine method 
class Any introspectDocPath(This3.Path path, This3.Size annotationN) exception This3.MetaGuard.NestedClassUnavailable, Void (
  class Any result=use This3.SafeOperators check introspectTypeDocPath(that:this.lib(), path:path.binaryRepr(), annotationN:annotationN.binaryRepr()) error This3.System.Guard.PluginFailure.#from(builder:(
    mut This3.S.SBuilder b=This3.System.Guard.PluginFailure.#builder()
    Void unused=b.#S()
    Void unused0=b.#a()
    Void unused1=b.#f()
    Void unused2=b.#e()
    Void unused3=b.#O()
    Void unused4=b.#p()
    Void unused5=b.#e()
    Void unused6=b.#r()
    Void unused7=b.#a()
    Void unused8=b.#t()
    Void unused9=b.#o()
    Void unused10=b.#r()
    Void unused11=b.#s()
    Void unused12=b.#dot()
    Void unused13=b.#i()
    Void unused14=b.#n()
    Void unused15=b.#t()
    Void unused16=b.#r()
    Void unused17=b.#o()
    Void unused18=b.#s()
    Void unused19=b.#p()
    Void unused20=b.#e()
    Void unused21=b.#c()
    Void unused22=b.#t()
    Void unused23=b.#T()
    Void unused24=b.#y()
    Void unused25=b.#p()
    Void unused26=b.#e()
    Void unused27=b.#D()
    Void unused28=b.#o()
    Void unused29=b.#c()
    Void unused30=b.#P()
    Void unused31=b.#a()
    Void unused32=b.#t()
    Void unused33=b.#h()
    b
    ))
  
  catch error Library x exception This3.MetaGuard.NestedClassUnavailable.#apply(record:This2.Record.#apply(lib:x), lib:x)
  
  result
  )}}
Doc: {implements This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #mutK(Library _binaryRepr, This0.Annotations _annotations) 
class method 
This0 _private(Library _binaryRepr, This0.Annotations _annotations) This0.#mutK(_binaryRepr:_binaryRepr, _annotations:_annotations)
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
mut method 
This0.Annotations #_annotations() 
read method 
This0.Annotations _annotations() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
class method 
This0 #apply(Library that) (
  This0.Annotations res=(
    mut This0.Annotations result=This0.Annotations.empty()
    This2.Size aN=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused0=b.#1()
      b
      ))
    mut This0.VaraN__78_0 varaN=This0.VaraN__78_0.#apply(inner:aN)
    Void unused=(
      Void unused1=loop (
        Void unused2=This2.Bool.true().#checkTrue()
        (/* to be able to break
*/
          Void unused3=result.add(right:This0.Annotation.#apply(_binaryRepr:that, text:This2.Introspection.Record.#apply(lib:that).that().introspectDocAsString(path:This2.Path.#from(builder:(
            mut This2.S.SBuilder b0=This2.Path.#builder()
            Void unused4=b0.#T()
            Void unused5=b0.#h()
            Void unused6=b0.#i()
            Void unused7=b0.#s()
            b0
            )), annotationN:varaN.#inner()), index:varaN.#inner()))
          varaN.inner(that:varaN.#inner().#plus(that:This2.Size.#from(builder:(
            mut This2.S.SBuilder b1=This2.Size.#builder()
            Void unused8=b1.#1()
            b1
            ))))
          )
        )
      
      catch exception Void catched4 void
      
      void
      )
    
    catch exception This2.MetaGuard.NestedClassUnavailable x error (
      This2.X.AssertionFail rcv49=This2.X.#from(builder:(
        mut This2.S.SBuilder b2=This2.X.#builder()
        Void unused9=b2.#D()
        Void unused10=b2.#o()
        Void unused11=b2.#c()
        Void unused12=b2.#2()
        b2
        ))
      rcv49.#apply(that:x)
      )
    
    result
    )
  This0._private(_binaryRepr:that, _annotations:res)
  )
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(that:builder.binaryRepr())
method 
Library binaryRepr() this._binaryRepr()
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=return This2.Introspection.Record.#apply(lib:this._binaryRepr()).that().introspectDocAsString(path:This2.Path.#from(builder:(
      mut This2.S.SBuilder b=This2.Path.#builder()
      Void unused1=b.#T()
      Void unused2=b.#h()
      Void unused3=b.#i()
      Void unused4=b.#s()
      b
      )))
    
    catch exception This2.MetaGuard.NestedClassUnavailable x error (
      This2.X.AssertionFail rcv50=This2.X.#from(builder:(
        mut This2.S.SBuilder b0=This2.X.#builder()
        Void unused5=b0.#D()
        Void unused6=b0.#o()
        Void unused7=b0.#c()
        Void unused8=b0.#3()
        b0
        ))
      rcv50.#apply(that:x)
      )
    
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0.Annotations annotations() this._annotations()
VaraN__78_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Annotation: {implements This3.Concept.ToS, This3.Concept.Classable
class method 
mut This0 #mutK(Library _binaryRepr, This3.S text, This3.Size index) 
class method 
This0 #apply(Library _binaryRepr, This3.S text, This3.Size index) This0.#mutK(_binaryRepr:_binaryRepr, text:text, index:index)
mut method 
Library #_binaryRepr() 
read method 
Library _binaryRepr() 
mut method 
This3.S #text() 
read method 
This3.S text() 
mut method 
This3.Size #index() 
read method 
This3.Size index() 
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine read method 
This3.S toS() this.text()
method 
class Any referredClass() (
  Void unused=(
    Void unused0=return This3.Introspection.Record.#apply(lib:this._binaryRepr()).that().introspectDocPath(path:This3.Path.#from(builder:(
      mut This3.S.SBuilder b=This3.Path.#builder()
      Void unused1=b.#T()
      Void unused2=b.#h()
      Void unused3=b.#i()
      Void unused4=b.#s()
      b
      )), annotationN:this.index())
    
    catch exception This3.MetaGuard.NestedClassUnavailable x error (
      This3.X.AssertionFail rcv48=This3.X.#from(builder:(
        mut This3.S.SBuilder b0=This3.X.#builder()
        Void unused5=b0.#D()
        Void unused6=b0.#o()
        Void unused7=b0.#c()
        Void unused8=b0.#1()
        b0
        ))
      rcv48.#apply(that:x)
      )
    
    catch exception Void x error This3.X.#from(builder:(
      mut This3.S.SBuilder b1=This3.X.#builder()
      Void unused9=b1.#P()
      Void unused10=b1.#l()
      Void unused11=b1.#u()
      Void unused12=b1.#g()
      Void unused13=b1.#i()
      Void unused14=b1.#n()
      Void unused15=b1.#space()
      Void unused16=b1.#i()
      Void unused17=b1.#n()
      Void unused18=b1.#t()
      Void unused19=b1.#r()
      Void unused20=b1.#o()
      Void unused21=b1.#s()
      Void unused22=b1.#p()
      Void unused23=b1.#e()
      Void unused24=b1.#c()
      Void unused25=b1.#t()
      Void unused26=b1.#i()
      Void unused27=b1.#o()
      Void unused28=b1.#n()
      Void unused29=b1.#space()
      Void unused30=b1.#b()
      Void unused31=b1.#u()
      Void unused32=b1.#g()
      b1
      ))
    
    void
    )
  
  catch return class Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool hasReferredClass() (
  This3.Bool res=this.text().#equalequal(that:This3.S.#from(builder:(
    mut This3.S.SBuilder b=This3.S.#builder()
    b
    ))).#bang().#and(that:(//Debug(S"Doc.hasReferredClass(this:"[this]")="[res]"")
this.text().isASCIIUpperCase(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b0=This3.Size.#builder()
    Void unused=b0.#0()
    b0
    )))))
  res
  )}
Annotations: {implements This3.Concept.ToS, This3.Concept.Classable
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.Annotation that) this.add(right:that)
class method 
This1.Annotation cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.Annotation that0=(
      Void unused0=return that
      
      catch return This1.Annotation casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.Annotation result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.Annotation val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Annotation left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Annotation right() (//#################MUT METHODS
This0.cast(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1.Annotation val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Annotation that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Annotation that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1.Annotation val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Annotation right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.Annotation left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Annotation that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1.Annotation val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Annotation that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Annotation that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1.Annotation val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Annotation that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Annotation that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1.Annotation filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1.Annotation filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1.Annotation filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Annotation filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3.Annotation filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Annotation #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Annotation result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2.Annotation filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Annotation #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Annotation result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This2.Annotation filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Annotation #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Annotation result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2.Annotation filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2.Annotation filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This2.Annotation #filled() }
IteratorVar: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2.Annotation filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Annotation #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Annotation result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This2.Annotation that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}}}
Record: {
class method 
mut This0 #mutK(This1.MirrorPr that) 
class method 
This0 #apply(This1.MirrorPr that) This0.#mutK(that:that)
mut method 
This1.MirrorPr #that() 
read method 
This1.MirrorPr that() 
class method 
This0 #apply(class Any clazz) This0.#apply(that:This1.MirrorPr.Class.#apply(lib:clazz))
class method 
This0 #apply(Library lib) (//This(Introspection(lib:lib).mirror())
This0.#apply(that:This1.MirrorPr.Lib.#apply(lib:lib)))
method 
Void dbg() (
  This1.MirrorPr x=this.that()
  (
    This1.MirrorPr.Lib x0=(
      Void unused=return x
      
      catch return This1.MirrorPr.Lib casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched1 This2.Debug.#apply(that:This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused0=b.#S()
      Void unused1=b.#o()
      Void unused2=b.#r()
      Void unused3=b.#r()
      Void unused4=b.#y()
      Void unused5=b.#comma()
      Void unused6=b.#space()
      Void unused7=b.#c()
      Void unused8=b.#a()
      Void unused9=b.#n()
      Void unused10=b.#space()
      Void unused11=b.#n()
      Void unused12=b.#o()
      Void unused13=b.#t()
      Void unused14=b.#space()
      Void unused15=b.#p()
      Void unused16=b.#r()
      Void unused17=b.#i()
      Void unused18=b.#n()
      Void unused19=b.#t()
      Void unused20=b.#space()
      Void unused21=b.#c()
      Void unused22=b.#l()
      Void unused23=b.#a()
      Void unused24=b.#s()
      Void unused25=b.#s()
      Void unused26=b.#space()
      Void unused27=b.#m()
      Void unused28=b.#i()
      Void unused29=b.#r()
      Void unused30=b.#r()
      Void unused31=b.#o()
      Void unused32=b.#r()
      Void unused33=b.#s()
      b
      )))
    
    (
      Void unused34=This2.Debug.#apply(lib:x0.lib())
      void
      )
    )
  )
method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
method 
This2.S #from(This2.S.SBuilder builder) (
  Void unused=(
    This2.Path path=This2.Path.#from(builder:builder)
    Void unused0=return this.that().introspectDocAsString(path:path)
    
    catch exception This2.MetaGuard.MemberUnavailable catched error (//TODO: not the right error? 
(
      This2.X.AssertionFail.Continue rcv51=(
        This2.X.AssertionFail rcv52=This2.X.#from(builder:(
          mut This2.S.SBuilder b=This2.X.#builder()
          Void unused1=b.#R()
          Void unused2=b.#e()
          Void unused3=b.#c()
          Void unused4=b.#o()
          Void unused5=b.#r()
          Void unused6=b.#d()
          Void unused7=b.#1()
          b
          ))
        rcv52.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv52.#seqBuilder()
          Void unused8=b0.#add(that:this.that())
          b0
          ))
        )
      rcv51.#from(builder:(
        mut This2.S.SBuilder b1=rcv51.#builder()
        b1
        ))
      )).#apply(that:catched)
    
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Doc docOf(This2.Path path) (//this is how I would like it to be
//class method Member dispatch(fwd NestedClass root,Path path,MirrorPr mirror, Size memberN,Library record) {
//  _report =Introspection(lib:report).record()
//  with x=_report"MemberKind" (
//    if x== S"NestedClass"  (return NestedClass(_root:root,path:path,mirror:mirror,record:_report))
//    if x== S"InterfaceImplementedMethod" (return Method(_root:root,path:path,memberN:memberN,record:_report))
//    if x== S"ImplementedMethod" (return Method(_root:root,path:path,memberN:memberN,record:_report))
//    if x== S"AbstractMethod" (return Method(_root:root,path:path,memberN:memberN,record:_report))
//    default error X"invalid member kind "[x]""
//    )
//  }
//instead, I have to write this :-(
(
  Void unused=(
    Void unused0=(
      This1.MirrorPr mirror=this.that()
      (
        This1.MirrorPr.Lib mirror0=(
          Void unused2=return mirror
          
          catch return This1.MirrorPr.Lib casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This1.Doc.#apply(that:(//This can not be done for circular reference Refactor.RenamePath(path to:Path"This")<><mirror.lib()
This2.SafeOperators.renameClass(that:mirror0.lib(), src:path, dest:This2.Path.#from(builder:(
            mut This2.S.SBuilder b=This2.Path.#builder()
            Void unused4=b.#T()
            Void unused5=b.#h()
            Void unused6=b.#i()
            Void unused7=b.#s()
            b
            )))))
          void
          )
        )
      )
    Void unused1=error This2.X.#from(builder:(
      mut This2.S.SBuilder b0=This2.X.#builder()
      Void unused8=b0.#R()
      Void unused9=b0.#e()
      Void unused10=b0.#c()
      Void unused11=b0.#o()
      Void unused12=b0.#r()
      Void unused13=b0.#d()
      Void unused14=b0.#2()
      b0
      ))
    void
    )
  
  catch return This1.Doc result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
class method 
This1.Member dispatch(fwd This1.NestedClass root, This2.Path path, This1.MirrorPr mirror, This2.Size memberN, Library record) (
  This1.Record _report=This1.Record.#apply(lib:record)
  This0.RootForMember result=(
    Void unused=(
      This2.S x=_report.#from(builder:(
        mut This2.S.SBuilder b=_report.#builder()
        Void unused5=b.#M()
        Void unused6=b.#e()
        Void unused7=b.#m()
        Void unused8=b.#b()
        Void unused9=b.#e()
        Void unused10=b.#r()
        Void unused11=b.#K()
        Void unused12=b.#i()
        Void unused13=b.#n()
        Void unused14=b.#d()
        b
        ))
      Void unused0=(
        This2.Bool cond=x.#equalequal(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused15=b0.#I()
          Void unused16=b0.#n()
          Void unused17=b0.#t()
          Void unused18=b0.#e()
          Void unused19=b0.#r()
          Void unused20=b0.#f()
          Void unused21=b0.#a()
          Void unused22=b0.#c()
          Void unused23=b0.#e()
          Void unused24=b0.#I()
          Void unused25=b0.#m()
          Void unused26=b0.#p()
          Void unused27=b0.#l()
          Void unused28=b0.#e()
          Void unused29=b0.#m()
          Void unused30=b0.#e()
          Void unused31=b0.#n()
          Void unused32=b0.#t()
          Void unused33=b0.#e()
          Void unused34=b0.#d()
          Void unused35=b0.#M()
          Void unused36=b0.#e()
          Void unused37=b0.#t()
          Void unused38=b0.#h()
          Void unused39=b0.#o()
          Void unused40=b0.#d()
          b0
          )))
        (
          Void unused41=cond.#checkTrue()
          
          catch exception Void catched2 void
          
          (return This0.RootForMethod.#apply(path:path, memberN:memberN, _report:_report))
          )
        )
      Void unused1=(
        This2.Bool cond0=x.#equalequal(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused42=b1.#I()
          Void unused43=b1.#m()
          Void unused44=b1.#p()
          Void unused45=b1.#l()
          Void unused46=b1.#e()
          Void unused47=b1.#m()
          Void unused48=b1.#e()
          Void unused49=b1.#n()
          Void unused50=b1.#t()
          Void unused51=b1.#e()
          Void unused52=b1.#d()
          Void unused53=b1.#M()
          Void unused54=b1.#e()
          Void unused55=b1.#t()
          Void unused56=b1.#h()
          Void unused57=b1.#o()
          Void unused58=b1.#d()
          b1
          )))
        (
          Void unused59=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This0.RootForMethod.#apply(path:path, memberN:memberN, _report:_report))
          )
        )
      Void unused2=(
        This2.Bool cond1=x.#equalequal(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused60=b2.#A()
          Void unused61=b2.#b()
          Void unused62=b2.#s()
          Void unused63=b2.#t()
          Void unused64=b2.#r()
          Void unused65=b2.#a()
          Void unused66=b2.#c()
          Void unused67=b2.#t()
          Void unused68=b2.#M()
          Void unused69=b2.#e()
          Void unused70=b2.#t()
          Void unused71=b2.#h()
          Void unused72=b2.#o()
          Void unused73=b2.#d()
          b2
          )))
        (
          Void unused74=cond1.#checkTrue()
          
          catch exception Void catched8 void
          
          (return This0.RootForMethod.#apply(path:path, memberN:memberN, _report:_report))
          )
        )
      Void unused3=(
        This2.Bool cond2=x.#equalequal(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b3=This2.S.#builder()
          Void unused75=b3.#N()
          Void unused76=b3.#e()
          Void unused77=b3.#s()
          Void unused78=b3.#t()
          Void unused79=b3.#e()
          Void unused80=b3.#d()
          Void unused81=b3.#C()
          Void unused82=b3.#l()
          Void unused83=b3.#a()
          Void unused84=b3.#s()
          Void unused85=b3.#s()
          b3
          )))
        (
          Void unused86=cond2.#checkTrue()
          
          catch exception Void catched11 void
          
          (return This0.RootForNested.#apply(path:path, mirror:mirror, _report:_report))
          )
        )
      Void unused4=error (
        This2.X.AssertionFail.Continue rcv54=(
          This2.X.AssertionFail rcv55=This2.X.#from(builder:(
            mut This2.S.SBuilder b4=This2.X.#builder()
            Void unused87=b4.#i()
            Void unused88=b4.#n()
            Void unused89=b4.#v()
            Void unused90=b4.#a()
            Void unused91=b4.#l()
            Void unused92=b4.#i()
            Void unused93=b4.#d()
            Void unused94=b4.#space()
            Void unused95=b4.#m()
            Void unused96=b4.#e()
            Void unused97=b4.#m()
            Void unused98=b4.#b()
            Void unused99=b4.#e()
            Void unused100=b4.#r()
            Void unused101=b4.#space()
            Void unused102=b4.#k()
            Void unused103=b4.#i()
            Void unused104=b4.#n()
            Void unused105=b4.#d()
            Void unused106=b4.#space()
            Void unused107=b4.#or()
            b4
            ))
          rcv55.#from(seqBuilder:(
            mut This2.S.SConcat b5=rcv55.#seqBuilder()
            Void unused108=b5.#add(that:x)
            b5
            ))
          )
        rcv54.#from(builder:(
          mut This2.S.SBuilder b6=rcv54.#builder()
          Void unused109=b6.#or()
          b6
          ))
        )
      void
      )
    
    catch return This0.RootForMember result0 result0
    
    error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
    )
  result.#apply(root:root)
  )
RootForMember:/* toPutAs private
*/ {interface 
method 
This2.Member #apply(fwd This2.NestedClass root) }
RootForNested:/* toPutAs private
*/ {implements This1.RootForMember
class method 
mut This0 #mutK(This3.Path path, This2.MirrorPr mirror, This2.Record _report) 
class method 
This0 #apply(This3.Path path, This2.MirrorPr mirror, This2.Record _report) This0.#mutK(path:path, mirror:mirror, _report:_report)
mut method 
This3.Path #path() 
read method 
This3.Path path() 
mut method 
This2.MirrorPr #mirror() 
read method 
This2.MirrorPr mirror() 
mut method 
This2.Record #_report() 
read method 
This2.Record _report() 
refine method 
This2.Member #apply(fwd This2.NestedClass root) (
  This3.Path path=This3.Path.fromS(that:(
    This2.Record rcv53=this._report()
    rcv53.#from(builder:(
      mut This3.S.SBuilder b=rcv53.#builder()
      Void unused=b.#K()
      Void unused0=b.#e()
      Void unused1=b.#y()
      b
      ))
    ))
  This2.NestedClass.#apply(_root:root, path:path, mirror:this.mirror(), record:this._report())
  )}
RootForMethod:/* toPutAs private
*/ {implements This1.RootForMember
class method 
mut This0 #mutK(This3.Path path, This3.Size memberN, This2.Record _report) 
class method 
This0 #apply(This3.Path path, This3.Size memberN, This2.Record _report) This0.#mutK(path:path, memberN:memberN, _report:_report)
mut method 
This3.Path #path() 
read method 
This3.Path path() 
mut method 
This3.Size #memberN() 
read method 
This3.Size memberN() 
mut method 
This2.Record #_report() 
read method 
This2.Record _report() 
refine method 
This2.Member #apply(fwd This2.NestedClass root) (This2.Method.#apply(_root:root, path:this.path(), memberN:this.memberN(), record:this._report()))}}
Member: {interface implements This2.Concept.ToS, This2.Concept.Equals
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) }
Members: {implements This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.Member that) this.add(right:that)
class method 
This1.Member cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.Member that0=(
      Void unused0=return that
      
      catch return This1.Member casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.Member result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.Member val(This2.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Member left() This0.cast(that:this.inner().val(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Member right() (//#################MUT METHODS
This0.cast(that:(
  read This2.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.Member val) (
  mut This2.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Member that) (
  mut This2.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Member that) (
  mut This2.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.Member val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Member right) (
  mut This2.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.Member left) this.#inner().add(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Member that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.Member val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Member that) this.with(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Member that) (//insertion
this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.Member val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Member that) this.withAlso(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Member that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.Member filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.Member filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.Member filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Member filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
read method 
This2.Bool contains(This1.Member that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.Member that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This2.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This2.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This2.Bool.true()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #right(This1.Member that) this.contains(that:that)
read method 
This2.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This2.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This2.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This2.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This2.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This2.Collections.IterationFailure catched21 (return This2.Bool.false())
    
    (
      Void unused23=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfLeft(This1.Member val) (
  Void unused=(
    This2.Size size=this.size()
    This2.Size pos=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%17_0__79_0 varpos=This0.Varpos_$%17_0__79_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This2.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b1=This2.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfRight(This1.Member val) (
  Void unused=(
    This2.Size pos=this.size().#less(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%18_0__80_0 varpos0=This0.Varpos0_$%18_0__80_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This2.Bool cond0=(
          This2.Size opNorm=varpos0.#inner()
          This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This2.Size.#from(builder:(
            mut This2.S.SBuilder b1=This2.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b2=This2.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1.Member val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.Member val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.Member val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1.Member val) (
  Void unused=(
    This2.Size pos=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%19_0__81_0 varpos1=This0.Varpos1_$%19_0__81_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This2.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b0=This2.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.Member val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.Member val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.Member filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Member #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Member result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Member filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Member #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Member result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() }
IteratorValFill: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.true()
read method 
This2.Member filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Member #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Member result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Member filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Member filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
This2.Member #filled() }
IteratorVar: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Member filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Member #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Member result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Void inner(This2.Member that) (
  mut This3.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%17_0__79_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varpos0_$%18_0__80_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varpos1_$%19_0__81_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }}
Method: {implements This1.Member, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(fwd This1.NestedClass _root, This2.Path path, This2.Size memberN, This1.Record record) 
class method 
This0 #apply(fwd This1.NestedClass _root, This2.Path path, This2.Size memberN, This1.Record record) This0.#mutK(_root:_root, path:path, memberN:memberN, record:record)
mut method 
This1.NestedClass #_root() 
read method 
This1.NestedClass _root() 
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Size #memberN() 
read method 
This2.Size memberN() 
mut method 
This1.Record #record() 
read method 
This1.Record record() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.S toS() This0.readableName().#plusplus(that:(
  This2.S.Continue rcv56=(
    This2.S rcv57=This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#oSquare()
      b
      ))
    rcv57.#from(seqBuilder:(
      mut This2.S.SConcat b0=rcv57.#seqBuilder()
      Void unused0=b0.#add(that:this.allAsString())
      b0
      ))
    )
  rcv56.#from(builder:(
    mut This2.S.SBuilder b1=rcv56.#builder()
    Void unused1=b1.#cSquare()
    b1
    ))
  ))
method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.path().#equalequal(that:that.path()).#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(
      This2.Bool cond0=this.memberN().#equalequal(that:this.memberN()).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return This2.Bool.false())
        )
      )
    Void unused2=return this.root().#equalequal(that:that.root())
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Doc doc() this.record().docOf(path:This2.Path.#from(builder:(
  mut This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#m()
  Void unused2=b.#b()
  Void unused3=b.#e()
  Void unused4=b.#r()
  Void unused5=b.#D()
  Void unused6=b.#o()
  Void unused7=b.#c()
  b
  )))
method 
This1.Mdf thisMdf() This1.Mdf.fromS(that:(
  This1.Record rcv58=this.record()
  rcv58.#from(builder:(
    mut This2.S.SBuilder b=rcv58.#builder()
    Void unused=b.#T()
    Void unused0=b.#h()
    Void unused1=b.#i()
    Void unused2=b.#s()
    Void unused3=b.#M()
    Void unused4=b.#d()
    Void unused5=b.#f()
    b
    ))
  ))
method /* invariant NestedClass(...).nestedClassFromRoot(path).pathFromRoot()==path
*/This2.Path pathFromRoot() this.path()
method 
This2.Selector selector() This2.Selector.fromS(that:(
  This1.Record rcv59=this.record()
  rcv59.#from(builder:(
    mut This2.S.SBuilder b=rcv59.#builder()
    Void unused=b.#K()
    Void unused0=b.#e()
    Void unused1=b.#y()
    b
    ))
  ))
method 
This1.MethodKind methodKind() This1.MethodKind.fromS(that:(
  This1.Record rcv60=this.record()
  rcv60.#from(builder:(
    mut This2.S.SBuilder b=rcv60.#builder()
    Void unused=b.#M()
    Void unused0=b.#e()
    Void unused1=b.#m()
    Void unused2=b.#b()
    Void unused3=b.#e()
    Void unused4=b.#r()
    Void unused5=b.#K()
    Void unused6=b.#i()
    Void unused7=b.#n()
    Void unused8=b.#d()
    b
    ))
  ))
method 
This2.S allAsString() (
  This1.Record rcv61=this.record()
  rcv61.#from(builder:(
    mut This2.S.SBuilder b=rcv61.#builder()
    Void unused=b.#A()
    Void unused0=b.#l()
    Void unused1=b.#l()
    Void unused2=b.#A()
    Void unused3=b.#s()
    Void unused4=b.#S()
    Void unused5=b.#t()
    Void unused6=b.#r()
    Void unused7=b.#i()
    Void unused8=b.#n()
    Void unused9=b.#g()
    b
    ))
  )
method 
This1.Type returnType() (
  Void unused=(
    Void unused0=return this.root().mirror().introspectReportType(root:this.root(), path:this.path(), memberN:this.memberN(), typeN:This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      )))
    
    catch exception This2.MetaGuard.MemberUnavailable x error (
      This2.X.AssertionFail rcv62=This2.X.#from(builder:(
        mut This2.S.SBuilder b0=This2.X.#builder()
        Void unused2=b0.#M()
        Void unused3=b0.#e()
        Void unused4=b0.#t()
        Void unused5=b0.#h()
        Void unused6=b0.#o()
        Void unused7=b0.#d()
        Void unused8=b0.#1()
        b0
        ))
      rcv62.#apply(that:x)
      )
    
    catch exception Void catched0 error This2.X.#from(builder:(
      mut This2.S.SBuilder b1=This2.X.#builder()
      Void unused9=b1.#v()
      Void unused10=b1.#o()
      Void unused11=b1.#i()
      Void unused12=b1.#d()
      Void unused13=b1.#space()
      Void unused14=b1.#w()
      Void unused15=b1.#a()
      Void unused16=b1.#s()
      Void unused17=b1.#space()
      Void unused18=b1.#t()
      Void unused19=b1.#h()
      Void unused20=b1.#r()
      Void unused21=b1.#o()
      Void unused22=b1.#w()
      Void unused23=b1.#n()
      b1
      ))
    
    void
    )
  
  catch return This1.Type result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Types exceptions() error This2.X.NotImplementedYet.#from(builder:(
  mut This2.S.SBuilder b=This2.X.NotImplementedYet.#builder()
  b
  ))
method 
This1.Types parameterTypes() (
  Void unused=(
    mut This1.Types result=This1.Types.empty()
    This2.Size pN=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused2=b.#1()
      b
      ))
    mut This0.VarpN__82_0 varpN=This0.VarpN__82_0.#apply(inner:pN)
    Void unused0=(
      Void unused3=loop (
        Void unused4=This2.Bool.true().#checkTrue()
        (/* to be able to break
*/
          This1.Type ti=this.root().mirror().introspectReportType(root:this.root(), path:this.pathFromRoot(), memberN:this.memberN(), typeN:varpN.#inner())
          Void unused5=result.add(right:ti)
          varpN.inner(that:varpN.#inner().#plus(that:This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused6=b0.#1()
            b0
            ))))
          )
        )
      
      catch exception Void catched3 void
      
      void
      )
    Void unused1=return result
    
    catch exception This2.MetaGuard.MemberUnavailable err error (
      This2.X.AssertionFail rcv63=This2.X.#from(builder:(
        mut This2.S.SBuilder b1=This2.X.#builder()
        Void unused7=b1.#M()
        Void unused8=b1.#e()
        Void unused9=b1.#t()
        Void unused10=b1.#h()
        Void unused11=b1.#o()
        Void unused12=b1.#d()
        Void unused13=b1.#2()
        b1
        ))
      rcv63.#apply(that:err)
      )
    
    void
    )
  
  catch return This1.Types result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool isPrivate() (
  Void unused=(
    Void unused0=(
      lent This1.Doc.Annotations.IteratorVal ann=this.doc().annotations().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ann.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=ann.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=ann.#inner().toS().#equalequal(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b=This2.S.#builder()
                  Void unused8=b.#p()
                  Void unused9=b.#r()
                  Void unused10=b.#i()
                  Void unused11=b.#v()
                  Void unused12=b.#a()
                  Void unused13=b.#t()
                  Void unused14=b.#e()
                  b
                  )))
                (
                  Void unused15=cond.#checkTrue()
                  
                  catch exception Void catched5 void
                  
                  (return This2.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched6 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused16=ann.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused17=ann.#close()
          return propagated0
          )
        
        ann.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.NestedClass root() this._root()
VarpN__82_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }}
Methods: {implements This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.Method that) this.add(right:that)
class method 
This1.Method cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.Method that0=(
      Void unused0=return that
      
      catch return This1.Method casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.Method val(This2.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Method left() This0.cast(that:this.inner().val(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Method right() (//#################MUT METHODS
This0.cast(that:(
  read This2.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.Method val) (
  mut This2.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Method that) (
  mut This2.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Method that) (
  mut This2.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.Method val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Method right) (
  mut This2.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.Method left) this.#inner().add(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Method that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.Method val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Method that) this.with(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Method that) (//insertion
this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.Method val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Method that) this.withAlso(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Method that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.Method filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.Method filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.Method filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Method filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
read method 
This2.Bool contains(This1.Method that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.Method that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This2.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This2.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This2.Bool.true()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #right(This1.Method that) this.contains(that:that)
read method 
This2.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This2.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This2.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This2.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This2.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This2.Collections.IterationFailure catched21 (return This2.Bool.false())
    
    (
      Void unused23=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfLeft(This1.Method val) (
  Void unused=(
    This2.Size size=this.size()
    This2.Size pos=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%20_0__83_0 varpos=This0.Varpos_$%20_0__83_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This2.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b1=This2.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfRight(This1.Method val) (
  Void unused=(
    This2.Size pos=this.size().#less(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%21_0__84_0 varpos0=This0.Varpos0_$%21_0__84_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This2.Bool cond0=(
          This2.Size opNorm=varpos0.#inner()
          This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This2.Size.#from(builder:(
            mut This2.S.SBuilder b1=This2.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b2=This2.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1.Method val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.Method val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.Method val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1.Method val) (
  Void unused=(
    This2.Size pos=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%22_0__85_0 varpos1=This0.Varpos1_$%22_0__85_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This2.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b0=This2.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.Method val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.Method val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.Method filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Method #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Method filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Method #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() }
IteratorValFill: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.true()
read method 
This2.Method filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Method #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Method filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Method filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
This2.Method #filled() }
IteratorVar: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Method filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Method #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Void inner(This2.Method that) (
  mut This3.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%20_0__83_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varpos0_$%21_0__84_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varpos1_$%22_0__85_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }}
NestedClass: {/*findMeNestedClass
*/implements This1.Member, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(fwd This1.NestedClass _root, This2.Path path, This1.MirrorPr mirror, This1.Record record) 
class method 
This0 #apply(fwd This1.NestedClass _root, This2.Path path, This1.MirrorPr mirror, This1.Record record) This0.#mutK(_root:_root, path:path, mirror:mirror, record:record)
mut method 
This1.NestedClass #_root() 
read method 
This1.NestedClass _root() 
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This1.MirrorPr #mirror() 
read method 
This1.MirrorPr mirror() 
mut method 
This1.Record #record() 
read method 
This1.Record record() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.S toS() This0.readableName().#plusplus(that:(
  This2.S.Continue rcv64=(
    This2.S rcv65=This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#oSquare()
      b
      ))
    rcv65.#from(seqBuilder:(
      mut This2.S.SConcat b0=rcv65.#seqBuilder()
      Void unused0=b0.#add(that:this.allAsString())
      b0
      ))
    )
  rcv64.#from(builder:(
    mut This2.S.SBuilder b1=rcv64.#builder()
    Void unused1=b1.#cSquare()
    b1
    ))
  ))
method 
This2.Bool #equalequal(This0 that) (
  Void unused=(
    Void unused0=(//else equal paths
(
      This2.Bool cond=this.path().#equalequal(that:that.path()).#bang()
      (
        Void unused5=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Bool.false())
        )
      ))
    Void unused1=(//else, both paths are This
(
      This2.Bool cond0=this.path().#equalequal(that:This2.Path.#from(builder:(
        mut This2.S.SBuilder b=This2.Path.#builder()
        Void unused6=b.#T()
        Void unused7=b.#h()
        Void unused8=b.#i()
        Void unused9=b.#s()
        b
        ))).#bang()
      (
        Void unused10=cond0.#checkTrue()
        
        catch exception Void catched3 void
        
        (return this.root().#equalequal(that:that.root()))
        )
      ))
    This2.Bool ext=this.hasExternalType()
    Void unused2=(
      This2.Bool cond1=ext.#equalequal(that:that.hasExternalType()).#bang()
      (
        Void unused11=cond1.#checkTrue()
        
        catch exception Void catched5 void
        
        (return This2.Bool.false())
        )
      )
    Void unused3=(
      Void unused12=ext.#checkTrue()
      
      catch exception Void catched6 void
      
      (return this.externalTypeToS().#equalequal(that:that.externalTypeToS()))
      )
    Void unused4=return this.allAsString().#equalequal(that:that.allAsString())
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 root() this._root()
method /*error for This
*/This1.Doc nestedDoc() (
  Void unused=(
    This2.Bool cond=this.path().#equalequal(that:This2.Path.#from(builder:(
      mut This2.S.SBuilder b=This2.Path.#builder()
      Void unused0=b.#T()
      Void unused1=b.#h()
      Void unused2=b.#i()
      Void unused3=b.#s()
      b
      )))
    (
      Void unused4=cond.#checkTrue()
      
      catch exception Void catched1 void
      
      (error This2.Guard.Operation.#from(builder:(
        mut This2.S.SBuilder b0=This2.Guard.Operation.#builder()
        Void unused5=b0.#N()
        Void unused6=b0.#e()
        Void unused7=b0.#s()
        Void unused8=b0.#t()
        Void unused9=b0.#e()
        Void unused10=b0.#d()
        Void unused11=b0.#C()
        Void unused12=b0.#l()
        Void unused13=b0.#a()
        Void unused14=b0.#s()
        Void unused15=b0.#s()
        Void unused16=b0.#dot()
        Void unused17=b0.#n()
        Void unused18=b0.#e()
        Void unused19=b0.#s()
        Void unused20=b0.#t()
        Void unused21=b0.#e()
        Void unused22=b0.#d()
        Void unused23=b0.#D()
        Void unused24=b0.#o()
        Void unused25=b0.#c()
        Void unused26=b0.#oRound()
        Void unused27=b0.#cRound()
        Void unused28=b0.#space()
        Void unused29=b0.#space()
        Void unused30=b0.#T()
        Void unused31=b0.#h()
        Void unused32=b0.#e()
        Void unused33=b0.#space()
        Void unused34=b0.#N()
        Void unused35=b0.#e()
        Void unused36=b0.#s()
        Void unused37=b0.#t()
        Void unused38=b0.#e()
        Void unused39=b0.#d()
        Void unused40=b0.#C()
        Void unused41=b0.#l()
        Void unused42=b0.#a()
        Void unused43=b0.#s()
        Void unused44=b0.#s()
        Void unused45=b0.#space()
        Void unused46=b0.#O()
        Void unused47=b0.#b()
        Void unused48=b0.#j()
        Void unused49=b0.#e()
        Void unused50=b0.#c()
        Void unused51=b0.#t()
        Void unused52=b0.#space()
        Void unused53=b0.#r()
        Void unused54=b0.#e()
        Void unused55=b0.#f()
        Void unused56=b0.#e()
        Void unused57=b0.#r()
        Void unused58=b0.#s()
        Void unused59=b0.#space()
        Void unused60=b0.#t()
        Void unused61=b0.#o()
        Void unused62=b0.#space()
        Void unused63=b0.#T()
        Void unused64=b0.#h()
        Void unused65=b0.#i()
        Void unused66=b0.#s()
        b0
        )))
      )
    )
  this.record().docOf(path:This2.Path.#from(builder:(
    mut This2.S.SBuilder b1=This2.Path.#builder()
    Void unused67=b1.#M()
    Void unused68=b1.#e()
    Void unused69=b1.#m()
    Void unused70=b1.#b()
    Void unused71=b1.#e()
    Void unused72=b1.#r()
    Void unused73=b1.#D()
    Void unused74=b1.#o()
    Void unused75=b1.#c()
    b1
    )))
  )
method /*of the library literal
*/This1.Doc doc() this.record().docOf(path:This2.Path.#from(builder:(
  mut This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#L()
  Void unused0=b.#i()
  Void unused1=b.#b()
  Void unused2=b.#r()
  Void unused3=b.#a()
  Void unused4=b.#r()
  Void unused5=b.#y()
  Void unused6=b.#D()
  Void unused7=b.#o()
  Void unused8=b.#c()
  b
  )))
method 
This2.Path pathFromRoot() (// invariant NestedClass(...).nestedClassFromRoot(path).pathFromRoot()==path
this.path())
method 
This2.Bool hasExternalType() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.path().#equalequal(that:This2.Path.#from(builder:(
        mut This2.S.SBuilder b=This2.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        ))).#bang()
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(
      This1.MirrorPr mirror=this.mirror()
      (
        This1.MirrorPr.Class mirror0=(
          Void unused8=return mirror
          
          catch return This1.MirrorPr.Class casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched4 void
        
        (
          Void unused9=return This2.Bool.true()
          void
          )
        )
      )
    Void unused2=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
class Any externalType() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.path().#equalequal(that:This2.Path.#from(builder:(
        mut This2.S.SBuilder b=This2.Path.#builder()
        Void unused2=b.#T()
        Void unused3=b.#h()
        Void unused4=b.#i()
        Void unused5=b.#s()
        b
        ))).#bang()
      (
        Void unused6=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (error This2.Guard.Operation.#apply(text:(
          This2.S.Continue rcv66=(
            This2.S rcv67=This2.S.#from(builder:(
              mut This2.S.SBuilder b0=This2.S.#builder()
              Void unused7=b0.#N()
              Void unused8=b0.#e()
              Void unused9=b0.#s()
              Void unused10=b0.#t()
              Void unused11=b0.#e()
              Void unused12=b0.#d()
              Void unused13=b0.#C()
              Void unused14=b0.#l()
              Void unused15=b0.#a()
              Void unused16=b0.#s()
              Void unused17=b0.#s()
              Void unused18=b0.#dot()
              Void unused19=b0.#e()
              Void unused20=b0.#x()
              Void unused21=b0.#t()
              Void unused22=b0.#e()
              Void unused23=b0.#r()
              Void unused24=b0.#n()
              Void unused25=b0.#a()
              Void unused26=b0.#l()
              Void unused27=b0.#T()
              Void unused28=b0.#y()
              Void unused29=b0.#p()
              Void unused30=b0.#e()
              Void unused31=b0.#oRound()
              Void unused32=b0.#cRound()
              Void unused33=b0.#space()
              Void unused34=b0.#T()
              Void unused35=b0.#h()
              Void unused36=b0.#e()
              Void unused37=b0.#space()
              Void unused38=b0.#N()
              Void unused39=b0.#e()
              Void unused40=b0.#s()
              Void unused41=b0.#t()
              Void unused42=b0.#e()
              Void unused43=b0.#d()
              Void unused44=b0.#C()
              Void unused45=b0.#l()
              Void unused46=b0.#a()
              Void unused47=b0.#s()
              Void unused48=b0.#s()
              Void unused49=b0.#space()
              Void unused50=b0.#O()
              Void unused51=b0.#b()
              Void unused52=b0.#j()
              Void unused53=b0.#e()
              Void unused54=b0.#c()
              Void unused55=b0.#t()
              Void unused56=b0.#space()
              Void unused57=b0.#r()
              Void unused58=b0.#e()
              Void unused59=b0.#f()
              Void unused60=b0.#e()
              Void unused61=b0.#r()
              Void unused62=b0.#s()
              Void unused63=b0.#space()
              Void unused64=b0.#t()
              Void unused65=b0.#o()
              Void unused66=b0.#space()
              b0
              ))
            rcv67.#from(seqBuilder:(
              mut This2.S.SConcat b1=rcv67.#seqBuilder()
              Void unused67=b1.#add(that:this.path())
              b1
              ))
            )
          rcv66.#from(builder:(
            mut This2.S.SBuilder b2=rcv66.#builder()
            b2
            ))
          )))
        )
      )
    Void unused1=(
      This1.MirrorPr mirror=this.mirror()
      (
        This1.MirrorPr.Class mirror1=(
          Void unused68=return mirror
          
          catch return This1.MirrorPr.Class casted0 casted0
          
          catch return Any casted0 exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched9 (
          This1.MirrorPr.Lib mirror0=(
            Void unused69=return mirror
            
            catch return This1.MirrorPr.Lib casted casted
            
            catch return Any casted exception void
            
            error  {/*@stringU
CastT-Should be unreachable code
*/}
            )
          
          catch exception Void catched11 error This2.X.#from(builder:(
            mut This2.S.SBuilder b3=This2.X.#builder()
            Void unused70=b3.#N()
            Void unused71=b3.#e()
            Void unused72=b3.#s()
            Void unused73=b3.#t()
            Void unused74=b3.#e()
            Void unused75=b3.#d()
            Void unused76=b3.#C()
            Void unused77=b3.#l()
            Void unused78=b3.#a()
            Void unused79=b3.#s()
            Void unused80=b3.#s()
            Void unused81=b3.#1()
            b3
            ))
          
          (
            Void unused82=error This2.Guard.Operation.#from(builder:(
              mut This2.S.SBuilder b4=This2.Guard.Operation.#builder()
              Void unused83=b4.#N()
              Void unused84=b4.#e()
              Void unused85=b4.#s()
              Void unused86=b4.#t()
              Void unused87=b4.#e()
              Void unused88=b4.#d()
              Void unused89=b4.#C()
              Void unused90=b4.#l()
              Void unused91=b4.#a()
              Void unused92=b4.#s()
              Void unused93=b4.#s()
              Void unused94=b4.#dot()
              Void unused95=b4.#e()
              Void unused96=b4.#x()
              Void unused97=b4.#t()
              Void unused98=b4.#e()
              Void unused99=b4.#r()
              Void unused100=b4.#n()
              Void unused101=b4.#a()
              Void unused102=b4.#l()
              Void unused103=b4.#T()
              Void unused104=b4.#y()
              Void unused105=b4.#p()
              Void unused106=b4.#e()
              Void unused107=b4.#oRound()
              Void unused108=b4.#cRound()
              Void unused109=b4.#space()
              Void unused110=b4.#T()
              Void unused111=b4.#h()
              Void unused112=b4.#e()
              Void unused113=b4.#space()
              Void unused114=b4.#N()
              Void unused115=b4.#e()
              Void unused116=b4.#s()
              Void unused117=b4.#t()
              Void unused118=b4.#e()
              Void unused119=b4.#d()
              Void unused120=b4.#C()
              Void unused121=b4.#l()
              Void unused122=b4.#a()
              Void unused123=b4.#s()
              Void unused124=b4.#s()
              Void unused125=b4.#space()
              Void unused126=b4.#O()
              Void unused127=b4.#b()
              Void unused128=b4.#j()
              Void unused129=b4.#e()
              Void unused130=b4.#c()
              Void unused131=b4.#t()
              Void unused132=b4.#space()
              Void unused133=b4.#i()
              Void unused134=b4.#s()
              Void unused135=b4.#space()
              Void unused136=b4.#u()
              Void unused137=b4.#n()
              Void unused138=b4.#b()
              Void unused139=b4.#o()
              Void unused140=b4.#u()
              Void unused141=b4.#n()
              Void unused142=b4.#d()
              b4
              ))
            void
            )
          )
        
        (
          Void unused143=return mirror1.lib()
          void
          )
        )
      )
    void
    )
  
  catch return class Any result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.S externalTypeToS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.path().#equalequal(that:This2.Path.#from(builder:(
        mut This2.S.SBuilder b=This2.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        ))).#bang()
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (error This2.Guard.Operation.#apply(text:(
          This2.S.Continue rcv68=(
            This2.S rcv69=This2.S.#from(builder:(
              mut This2.S.SBuilder b0=This2.S.#builder()
              Void unused8=b0.#N()
              Void unused9=b0.#e()
              Void unused10=b0.#s()
              Void unused11=b0.#t()
              Void unused12=b0.#e()
              Void unused13=b0.#d()
              Void unused14=b0.#C()
              Void unused15=b0.#l()
              Void unused16=b0.#a()
              Void unused17=b0.#s()
              Void unused18=b0.#s()
              Void unused19=b0.#dot()
              Void unused20=b0.#e()
              Void unused21=b0.#x()
              Void unused22=b0.#t()
              Void unused23=b0.#e()
              Void unused24=b0.#r()
              Void unused25=b0.#n()
              Void unused26=b0.#a()
              Void unused27=b0.#l()
              Void unused28=b0.#T()
              Void unused29=b0.#y()
              Void unused30=b0.#p()
              Void unused31=b0.#e()
              Void unused32=b0.#T()
              Void unused33=b0.#o()
              Void unused34=b0.#S()
              Void unused35=b0.#oRound()
              Void unused36=b0.#cRound()
              Void unused37=b0.#space()
              Void unused38=b0.#T()
              Void unused39=b0.#h()
              Void unused40=b0.#e()
              Void unused41=b0.#space()
              Void unused42=b0.#N()
              Void unused43=b0.#e()
              Void unused44=b0.#s()
              Void unused45=b0.#t()
              Void unused46=b0.#e()
              Void unused47=b0.#d()
              Void unused48=b0.#C()
              Void unused49=b0.#l()
              Void unused50=b0.#a()
              Void unused51=b0.#s()
              Void unused52=b0.#s()
              Void unused53=b0.#space()
              Void unused54=b0.#O()
              Void unused55=b0.#b()
              Void unused56=b0.#j()
              Void unused57=b0.#e()
              Void unused58=b0.#c()
              Void unused59=b0.#t()
              Void unused60=b0.#space()
              Void unused61=b0.#r()
              Void unused62=b0.#e()
              Void unused63=b0.#f()
              Void unused64=b0.#e()
              Void unused65=b0.#r()
              Void unused66=b0.#s()
              Void unused67=b0.#space()
              Void unused68=b0.#t()
              Void unused69=b0.#o()
              Void unused70=b0.#space()
              b0
              ))
            rcv69.#from(seqBuilder:(
              mut This2.S.SConcat b1=rcv69.#seqBuilder()
              Void unused71=b1.#add(that:this.path())
              b1
              ))
            )
          rcv68.#from(builder:(
            mut This2.S.SBuilder b2=rcv68.#builder()
            b2
            ))
          )))
        )
      )
    This1.Doc doc=this.record().docOf(path:This2.Path.#from(builder:(
      mut This2.S.SBuilder b3=This2.Path.#builder()
      Void unused72=b3.#M()
      Void unused73=b3.#y()
      Void unused74=b3.#C()
      Void unused75=b3.#l()
      Void unused76=b3.#a()
      Void unused77=b3.#s()
      Void unused78=b3.#s()
      b3
      )))
    This2.S nameAndPrefix=doc.annotations().left().toS()
    This2.Size sep=nameAndPrefix.indexOfLeft(val:This2.S.#from(builder:(
      mut This2.S.SBuilder b4=This2.S.#builder()
      Void unused79=b4.#dot()
      b4
      )))
    This2.S name=nameAndPrefix.#apply(start:sep.#plus(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b5=This2.Size.#builder()
      Void unused80=b5.#1()
      b5
      ))))
    This2.Size prefix=(//4Size== S"This".size()
//X[prefix>0Size]
This2.Size.fromS(that:nameAndPrefix.#apply(start:This2.Size.#from(builder:(
      mut This2.S.SBuilder b6=This2.Size.#builder()
      Void unused81=b6.#4()
      b6
      )), end:sep)))
    Void unused1=(
      This2.Bool cond0=prefix.#equalequal(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b7=This2.Size.#builder()
        Void unused82=b7.#1()
        b7
        )))
      (
        Void unused83=cond0.#checkTrue()
        
        catch exception Void catched13 void
        
        (return This2.S.#from(builder:(
          mut This2.S.SBuilder b8=This2.S.#builder()
          Void unused84=b8.#T()
          Void unused85=b8.#h()
          Void unused86=b8.#i()
          Void unused87=b8.#s()
          Void unused88=b8.#dot()
          b8
          )).#plusplus(that:name))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv70=(
        This2.S rcv71=This2.S.#from(builder:(
          mut This2.S.SBuilder b9=This2.S.#builder()
          Void unused89=b9.#T()
          Void unused90=b9.#h()
          Void unused91=b9.#i()
          Void unused92=b9.#s()
          b9
          ))
        rcv71.#from(seqBuilder:(
          mut This2.S.SConcat b10=rcv71.#seqBuilder()
          Void unused93=b10.#add(that:prefix.#less(that:This2.Size.#from(builder:(
            mut This2.S.SBuilder b11=This2.Size.#builder()
            Void unused94=b11.#1()
            b11
            ))))
          b10
          ))
        )
      rcv70.#from(builder:(
        mut This2.S.SBuilder b12=rcv70.#builder()
        Void unused95=b12.#dot()
        b12
        ))
      ).#plusplus(that:name)
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.ClassKind classKind() This1.ClassKind.fromS(that:(
  This1.Record rcv72=this.record()
  rcv72.#from(builder:(
    mut This2.S.SBuilder b=rcv72.#builder()
    Void unused=b.#C()
    Void unused0=b.#l()
    Void unused1=b.#a()
    Void unused2=b.#s()
    Void unused3=b.#s()
    Void unused4=b.#K()
    Void unused5=b.#i()
    Void unused6=b.#n()
    Void unused7=b.#d()
    b
    ))
  ))
method 
This2.S allAsString() (//just the library literal
(
  This1.Record rcv73=this.record()
  rcv73.#from(builder:(
    mut This2.S.SBuilder b=rcv73.#builder()
    Void unused=b.#A()
    Void unused0=b.#l()
    Void unused1=b.#l()
    Void unused2=b.#A()
    Void unused3=b.#s()
    Void unused4=b.#S()
    Void unused5=b.#t()
    Void unused6=b.#r()
    Void unused7=b.#i()
    Void unused8=b.#n()
    Void unused9=b.#g()
    b
    ))
  ))
method 
This1.Members members() (//TODO: this method goes in loop for private members.
//different result with compiled or bigstep see test introspection5
(
  mut This1.Members result=This1.Members.empty()
  This2.Size mN=This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))
  mut This0.VarmN__86_0 varmN=This0.VarmN__86_0.#apply(inner:mN)
  Void unused=(
    Void unused1=loop (
      Void unused2=This2.Bool.true().#checkTrue()
      (/* to be able to break
Debug(S"Iteration "[mN]"")
*/
        Void unused3=(//this was a private member
result.add(right:this.mirror().introspectReportMember(root:this, path:this.path(), memberN:varmN.#inner())))
        
        catch exception This2.MetaGuard.MemberUnavailable catched1 exception void
        
        varmN.inner(that:varmN.#inner().#plus(that:This2.Size.#from(builder:(
          mut This2.S.SBuilder b0=This2.Size.#builder()
          Void unused4=b0.#1()
          b0
          ))))
        )
      )
    
    catch exception Void catched3 void
    
    void
    )
  result
  ))
method 
This1.Methods methods() This1.Methods.#from(seqBuilder:(
  mut This1.Methods b=This1.Methods.#seqBuilder()
  Void unused=(
    lent This1.Members.IteratorVal m=this.members().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=m.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=m.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.Method m0=(
                Void unused6=return m.#inner()
                
                catch return This1.Method casted casted
                
                catch return Any casted exception void
                
                error  {/*@stringU
CastT-Should be unreachable code
*/}
                )
              
              catch exception Void catched4 void
              
              (
                Void unused7=(
                  Void unused8=b.#add(that:m0)
                  void
                  )
                void
                )
              ))
            )
          
          catch exception Void catched7 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused9=m.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused10=m.#close()
        return propagated0
        )
      
      m.#close()
      )
    )
  b
  ))
method 
This1.NestedClasses nestedClasses() This1.NestedClasses.#from(seqBuilder:(
  mut This1.NestedClasses b=This1.NestedClasses.#seqBuilder()
  Void unused=(
    lent This1.Members.IteratorVal m=this.members().vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=m.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=m.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This1.NestedClass m0=(
                Void unused6=return m.#inner()
                
                catch return This1.NestedClass casted casted
                
                catch return Any casted exception void
                
                error  {/*@stringU
CastT-Should be unreachable code
*/}
                )
              
              catch exception Void catched4 void
              
              (
                Void unused7=(
                  Void unused8=b.#add(that:m0)
                  void
                  )
                void
                )
              ))
            )
          
          catch exception Void catched7 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused9=m.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused10=m.#close()
        return propagated0
        )
      
      m.#close()
      )
    )
  b
  ))
method 
This1.NestedClasses transitivelyNestedClasses() This1.NestedClasses.#from(seqBuilder:(
  mut This1.NestedClasses b0=This1.NestedClasses.#seqBuilder()
  Void unused=b0.#add(that:this)
  b0
  )).#plusplus(that:This1.NestedClasses.#from(seqBuilder:(
  mut This1.NestedClasses b=This1.NestedClasses.#seqBuilder()
  Void unused0=(
    lent This1.NestedClasses.IteratorVal nc=this.nestedClasses().vals()
    (
      Void unused1=(
        Void unused2=(
          Void unused3=loop (
            Void unused4=nc.#next()
            
            catch exception Void catched1 (
              Void unused5=(
                Void unused6=nc.#checkEnd()
                
                catch exception Void catched2 void
                
                void
                )
              exception void
              )
            
            ((
              lent This1.NestedClasses.IteratorVal nci=nc.#inner().transitivelyNestedClasses().vals()
              (
                Void unused7=(
                  Void unused8=(
                    Void unused9=loop (
                      Void unused10=nci.#next()
                      
                      catch exception Void catched5 (
                        Void unused11=(
                          Void unused12=nci.#checkEnd()
                          
                          catch exception Void catched6 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        Void unused13=b.#add(that:nci.#inner())
                        void
                        ))
                      )
                    
                    catch exception Void catched9 void
                    
                    void
                    )
                  
                  catch exception Any propagated (
                    Void unused14=nci.#close()
                    exception propagated
                    )
                  
                  void
                  )
                
                catch return Any propagated0 (
                  Void unused15=nci.#close()
                  return propagated0
                  )
                
                nci.#close()
                )
              ))
            )
          
          catch exception Void catched14 void
          
          void
          )
        
        catch exception Any propagated1 (
          Void unused16=nc.#close()
          exception propagated1
          )
        
        void
        )
      
      catch return Any propagated2 (
        Void unused17=nc.#close()
        return propagated2
        )
      
      nc.#close()
      )
    )
  b
  )))
method 
This1.Types implementedInterfaces() (
  mut This1.Types result=This1.Types.empty()
  This2.Size tN=This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused0=b.#1()
    b
    ))
  mut This0.VartN__87_0 vartN=This0.VartN__87_0.#apply(inner:tN)
  Void unused=(
    Void unused1=loop (
      Void unused2=This2.Bool.true().#checkTrue()
      (/* to be able to break
*/
        This1.Type ti=(//X[with sr=ti.strRepr() (
//  use[sr!=S"This";sr!=S""]
//  )]
this.mirror().introspectReportType(root:this, path:this.path(), memberN:This2.Size.#from(builder:(
          mut This2.S.SBuilder b0=This2.Size.#builder()
          Void unused4=b0.#0()
          b0
          )), typeN:vartN.#inner()))
        This2.S sr=(//X[sr!=S"@.This";sr!=S"This";sr!=S""]
ti.strRepr())
        Void unused3=result.add(right:ti)
        vartN.inner(that:vartN.#inner().#plus(that:This2.Size.#from(builder:(
          mut This2.S.SBuilder b1=This2.Size.#builder()
          Void unused5=b1.#1()
          b1
          ))))
        )
      )
    
    catch exception Void catched4 void
    
    void
    )
  
  catch exception This2.MetaGuard.MemberUnavailable x error (
    This2.X.AssertionFail rcv74=This2.X.#from(builder:(
      mut This2.S.SBuilder b2=This2.X.#builder()
      Void unused6=b2.#N()
      Void unused7=b2.#e()
      Void unused8=b2.#s()
      Void unused9=b2.#t()
      Void unused10=b2.#e()
      Void unused11=b2.#d()
      Void unused12=b2.#C()
      Void unused13=b2.#l()
      Void unused14=b2.#a()
      Void unused15=b2.#s()
      Void unused16=b2.#s()
      Void unused17=b2.#3()
      b2
      ))
    rcv74.#apply(that:x)
    )
  
  result
  )
method 
This1.Types transitivelyImplementedInterfaces() (
  Void unused=(
    This1.Types result=this.removeDup__44_0(that:this.implementedInterfaces())
    This1.Types new=result
    mut This0.Varresult__89_0 varresult=This0.Varresult__89_0.#apply(inner:result)
    mut This0.Varnew__88_0 varnew=This0.Varnew__88_0.#apply(inner:new)
    Void unused0=loop (
      This1.Types extra=This1.Types.#from(seqBuilder:(
        mut This1.Types b=This1.Types.#seqBuilder()
        b
        ))
      mut This0.Varextra__90_0 varextra=This0.Varextra__90_0.#apply(inner:extra)
      Void unused1=(
        lent This1.Types.IteratorVal t=varnew.#inner().vals()
        (
          Void unused4=(
            Void unused5=(
              Void unused6=loop (
                Void unused7=t.#next()
                
                catch exception Void catched1 (
                  Void unused8=(
                    Void unused9=t.#checkEnd()
                    
                    catch exception Void catched2 void
                    
                    void
                    )
                  exception void
                  )
                
                (
                  This1.Types impl=t.#inner().referencedPath().implementedInterfaces()
                  varextra.inner(that:varextra.#inner().#plusplus(that:this.remove__46_0(that:impl, from:varresult.#inner())))
                  )
                )
              
              catch exception Void catched5 void
              
              void
              )
            
            catch exception Any propagated (
              Void unused10=t.#close()
              exception propagated
              )
            
            void
            )
          
          catch return This1.Types propagated0 (
            Void unused11=t.#close()
            return propagated0
            )
          
          t.#close()
          )
        )
      Void unused2=(
        This2.Bool cond=varextra.#inner().isEmpty()
        (
          Void unused12=cond.#checkTrue()
          
          catch exception Void catched11 void
          
          (return varresult.#inner())
          )
        )
      Void unused3=varnew.inner(that:varextra.#inner())
      varresult.inner(that:varresult.#inner().#plusplus(that:varextra.#inner()))
      )
    void
    )
  
  catch return This1.Types result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool implements(This0 that) (
  Void unused=(
    Void unused0=(
      lent This1.Types.IteratorVal ti=this.transitivelyImplementedInterfaces().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ti.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=ti.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=ti.#inner().referencedPath().#equalequal(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=ti.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=ti.#close()
          return propagated0
          )
        
        ti.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*@private
*/This1.Types removeDup__44_0(This1.Types that) (
  mut This1.Types result=(//can not use [with since we need to check in results
This1.Types.empty())
  Void unused=(
    lent This1.Types.IteratorVal t=that.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=t.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=t.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=this.select__45_0(that:t.#inner(), from:result)
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                (result.add(right:t.#inner()))
                )
              ))
            )
          
          catch exception Void catched5 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused7=t.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused8=t.#close()
        return propagated0
        )
      
      t.#close()
      )
    )
  mut This0.Varresult0__91_0 varresult0=This0.Varresult0__91_0.#apply(inner:result)
  varresult0.#inner()
  )
method /*@private
*/This2.Bool select__45_0(This1.Type that, read This1.Types from) (
  This1.NestedClass rp=that.referencedPath()
  This2.Count.#from(seqBuilder:(
    mut This2.Count b=This2.Count.#seqBuilder()
    Void unused=(
      lent This1.Types.IteratorVal t=from.vals()
      (
        Void unused0=(
          Void unused1=(
            Void unused2=loop (
              Void unused3=t.#next()
              
              catch exception Void catched1 (
                Void unused4=(
                  Void unused5=t.#checkEnd()
                  
                  catch exception Void catched2 void
                  
                  void
                  )
                exception void
                )
              
              ((
                Void unused6=b.#add(that:t.#inner().referencedPath().#equalequal(that:rp))
                void
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused7=t.#close()
            exception propagated
            )
          
          void
          )
        
        catch return Any propagated0 (
          Void unused8=t.#close()
          return propagated0
          )
        
        t.#close()
        )
      )
    b
    )).#equalequal(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b0=This2.Size.#builder()
    Void unused9=b0.#0()
    b0
    )))
  )
method /*@private
*/This1.Types remove__46_0(This1.Types that, This1.Types from) This1.Types.#from(seqBuilder:(
  mut This1.Types b=This1.Types.#seqBuilder()
  Void unused=(
    lent This1.Types.IteratorVal t=that.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=t.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=t.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=this.select__45_0(that:t.#inner(), from:from)
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:t.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=t.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=t.#close()
        return propagated0
        )
      
      t.#close()
      )
    )
  b
  ))
method 
This1.Methods stateCandidate() (
  Void unused=(
    This2.Bool havePrivate=This2.Bool.false()
    mut This0.VarhavePrivate__92_0 varhavePrivate=This0.VarhavePrivate__92_0.#apply(inner:havePrivate)
    mut This1.Methods absMethods=This1.Methods.#from(seqBuilder:(
      mut This1.Methods b=This1.Methods.#seqBuilder()
      Void unused2=(
        lent This1.Methods.IteratorVal m=this.methods().vals()
        (
          Void unused3=(
            Void unused4=(
              Void unused5=loop (
                Void unused6=m.#next()
                
                catch exception Void catched0 (
                  Void unused7=(
                    Void unused8=m.#checkEnd()
                    
                    catch exception Void catched1 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  This2.Bool cond=(
                    This1.MethodKind rcv75=m.#inner().methodKind()
                    rcv75.equals(that:rcv75.class()._AbstractMethod())
                    )
                  (
                    Void unused9=cond.#checkTrue()
                    
                    catch exception Void catched5 void
                    
                    (
                      Void unused10=varhavePrivate.inner(that:varhavePrivate.#inner().#or(that:m.#inner().isPrivate()))
                      (
                        Void unused11=b.#add(that:m.#inner())
                        void
                        )
                      )
                    )
                  ))
                )
              
              catch exception Void catched8 void
              
              void
              )
            
            catch exception Any propagated (
              Void unused12=m.#close()
              exception propagated
              )
            
            void
            )
          
          catch return This1.Methods propagated0 (
            Void unused13=m.#close()
            return propagated0
            )
          
          m.#close()
          )
        )
      b
      ))
    Void unused0=(
      This2.Bool cond0=varhavePrivate.#inner().#bang()
      (
        Void unused14=cond0.#checkTrue()
        
        catch exception Void catched15 void
        
        (return absMethods)
        )
      )
    Void unused1=return This1.Methods.#from(seqBuilder:(
      mut This1.Methods b0=This1.Methods.#seqBuilder()
      Void unused15=(
        lent This1.Methods.IteratorVal a=absMethods.vals()
        (
          Void unused16=(
            Void unused17=(
              Void unused18=loop (
                Void unused19=a.#next()
                
                catch exception Void catched17 (
                  Void unused20=(
                    Void unused21=a.#checkEnd()
                    
                    catch exception Void catched18 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  This2.Bool cond1=a.#inner().isPrivate()
                  (
                    Void unused22=cond1.#checkTrue()
                    
                    catch exception Void catched21 void
                    
                    ((
                      Void unused23=b0.#add(that:a.#inner())
                      void
                      ))
                    )
                  ))
                )
              
              catch exception Void catched23 void
              
              void
              )
            
            catch exception Any propagated1 (
              Void unused24=a.#close()
              exception propagated1
              )
            
            void
            )
          
          catch return This1.Methods propagated2 (
            Void unused25=a.#close()
            return propagated2
            )
          
          a.#close()
          )
        )
      b0
      ))
    void
    )
  
  catch return This1.Methods result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Methods state() (
  Void unused=(
    This1.Methods stateCandidate=this.stateCandidate()
    mut This1.Methods classMethods=This1.Methods.#from(seqBuilder:(
      mut This1.Methods b=This1.Methods.#seqBuilder()
      Void unused4=(
        lent This1.Methods.IteratorVal m=stateCandidate.vals()
        (
          Void unused5=(
            Void unused6=(
              Void unused7=loop (
                Void unused8=m.#next()
                
                catch exception Void catched0 (
                  Void unused9=(
                    Void unused10=m.#checkEnd()
                    
                    catch exception Void catched1 void
                    
                    void
                    )
                  exception void
                  )
                
                ((
                  This2.Bool cond=m.#inner().thisMdf().#equalequal(that:This1.Mdf._Class())
                  (
                    Void unused11=cond.#checkTrue()
                    
                    catch exception Void catched4 void
                    
                    ((
                      Void unused12=b.#add(that:m.#inner())
                      void
                      ))
                    )
                  ))
                )
              
              catch exception Void catched6 void
              
              void
              )
            
            catch exception Any propagated (
              Void unused13=m.#close()
              exception propagated
              )
            
            void
            )
          
          catch return This1.Methods propagated0 (
            Void unused14=m.#close()
            return propagated0
            )
          
          m.#close()
          )
        )
      b
      ))
    Void unused0=(
      This2.Bool cond0=classMethods.isEmpty()
      (
        Void unused15=cond0.#checkTrue()
        
        catch exception Void catched13 void
        
        (return This1.Methods.empty())
        )
      )
    This2.Strings names=(//the first constructor names
//check that all constr have the same names.
//We do not check same types, that would be part of coherent
classMethods.left().selector().names())
    mut This1.Methods result=This1.Methods.empty()
    Void unused1=(
      lent This1.Methods.IteratorVal c=classMethods.vals()
      (
        Void unused16=(
          Void unused17=(
            Void unused18=loop (
              Void unused19=c.#next()
              
              catch exception Void catched15 (
                Void unused20=(
                  Void unused21=c.#checkEnd()
                  
                  catch exception Void catched16 void
                  
                  void
                  )
                exception void
                )
              
              (
                Void unused22=(
                  This2.Bool cond1=names.#equalequal(that:c.#inner().selector().names()).#bang()
                  (
                    Void unused23=cond1.#checkTrue()
                    
                    catch exception Void catched19 void
                    
                    (return This1.Methods.empty())
                    )
                  )
                result.add(right:c.#inner())
                )
              )
            
            catch exception Void catched21 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused24=c.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This1.Methods propagated2 (
          Void unused25=c.#close()
          return propagated2
          )
        
        c.#close()
        )
      )
    Void unused2=(
      lent This2.Strings.IteratorVal name=names.vals()
      (
        Void unused26=(
          Void unused27=(
            Void unused28=loop (
              Void unused29=name.#next()
              
              catch exception Void catched27 (
                Void unused30=(
                  Void unused31=name.#checkEnd()
                  
                  catch exception Void catched28 void
                  
                  void
                  )
                exception void
                )
              
              (
                This2.Selector getter=This2.Selector.fromS(that:name.#inner().#plusplus(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b0=This2.S.#builder()
                  Void unused32=b0.#oRound()
                  Void unused33=b0.#cRound()
                  b0
                  ))))
                This2.Selector exposer=This2.Selector.fromS(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b1=This2.S.#builder()
                  Void unused34=b1.#hash()
                  b1
                  )).#plusplus(that:name.#inner().#plusplus(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b2=This2.S.#builder()
                  Void unused35=b2.#oRound()
                  Void unused36=b2.#cRound()
                  b2
                  )))))
                This2.Selector setter=This2.Selector.fromS(that:name.#inner().#plusplus(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b3=This2.S.#builder()
                  Void unused37=b3.#oRound()
                  Void unused38=b3.#t()
                  Void unused39=b3.#h()
                  Void unused40=b3.#a()
                  Void unused41=b3.#t()
                  Void unused42=b3.#cRound()
                  b3
                  ))))
                (
                  lent This1.Methods.IteratorVal f=stateCandidate.vals()
                  (
                    Void unused43=(
                      Void unused44=(
                        Void unused45=loop (
                          Void unused46=f.#next()
                          
                          catch exception Void catched36 (
                            Void unused47=(
                              Void unused48=f.#checkEnd()
                              
                              catch exception Void catched37 void
                              
                              void
                              )
                            exception void
                            )
                          
                          ((
                            This2.Bool cond2=f.#inner().selector().#equalequal(that:getter).#or(that:f.#inner().selector().#equalequal(that:exposer)).#or(that:f.#inner().selector().#equalequal(that:setter))
                            (
                              Void unused49=cond2.#checkTrue()
                              
                              catch exception Void catched40 void
                              
                              (result.add(right:f.#inner()))
                              )
                            ))
                          )
                        
                        catch exception Void catched41 void
                        
                        void
                        )
                      
                      catch exception Any propagated3 (
                        Void unused50=f.#close()
                        exception propagated3
                        )
                      
                      void
                      )
                    
                    catch return This1.Methods propagated4 (
                      Void unused51=f.#close()
                      return propagated4
                      )
                    
                    f.#close()
                    )
                  )
                )
              )
            
            catch exception Void catched46 void
            
            void
            )
          
          catch exception Any propagated5 (
            Void unused52=name.#close()
            exception propagated5
            )
          
          void
          )
        
        catch return This1.Methods propagated6 (
          Void unused53=name.#close()
          return propagated6
          )
        
        name.#close()
        )
      )
    Void unused3=return result
    void
    )
  
  catch return This1.Methods result0 result0
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Method method(This2.Selector that) exception This2.MetaGuard.MethodUnavailable (
  Void unused=(
    Void unused0=(
      lent This1.Methods.IteratorVal meth=this.methods().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=meth.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=meth.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=meth.#inner().selector().#equalequal(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return meth.#inner())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=meth.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This1.Method propagated0 (
          Void unused10=meth.#close()
          return propagated0
          )
        
        meth.#close()
        )
      )
    Void unused1=exception (//note: it can return a private method
This2.MetaGuard.MethodUnavailable.#apply(path:this.pathFromRoot(), selector:that, isPrivate:This2.Bool.false()))
    void
    )
  
  catch return This1.Method result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool has(This2.Selector selector) (
  Void unused0=(
    This1.Method unused=this.method(that:selector)
    
    catch exception This2.MetaGuard.MemberUnavailable catched return This2.Bool.false()
    
    (
      Void unused1=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.NestedClass nestedClassFromRoot(This2.Path that) exception This2.MetaGuard.NestedClassUnavailable (
  Void unused=(
    Void unused0=(
      This2.Bool cond=that.#equalequal(that:This2.Path.#from(builder:(
        mut This2.S.SBuilder b=This2.Path.#builder()
        Void unused3=b.#T()
        Void unused4=b.#h()
        Void unused5=b.#i()
        Void unused6=b.#s()
        b
        )))
      (
        Void unused7=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.root())
        )
      )
    This1.Doc.Annotation myClass=this.record().docOf(path:This2.Path.#from(builder:(
      mut This2.S.SBuilder b0=This2.Path.#builder()
      Void unused8=b0.#M()
      Void unused9=b0.#y()
      Void unused10=b0.#C()
      Void unused11=b0.#l()
      Void unused12=b0.#a()
      Void unused13=b0.#s()
      Void unused14=b0.#s()
      b0
      ))).annotations().left()
    Void unused1=(
      This2.Bool cond0=myClass.hasReferredClass().#bang()
      (
        Void unused15=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return this.mirror().introspectReport(root:this.root(), path:that))
        )
      )
    Void unused2=return This2.Introspection.#apply(clazz:myClass.referredClass(), path:that)
    void
    )
  
  catch return This1.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool has(This2.Path fromRoot) (
  This1.NestedClass unused=this.nestedClassFromRoot(that:fromRoot)
  
  catch exception This2.MetaGuard.MemberUnavailable catched This2.Bool.false()
  
  This2.Bool.true()
  )
method 
This2.Bool isPrivate() (
  Void unused=(
    Void unused0=(
      lent This1.Doc.Annotations.IteratorVal ann=this.nestedDoc().annotations().vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=ann.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=ann.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=ann.#inner().toS().#equalequal(that:This2.S.#from(builder:(
                  mut This2.S.SBuilder b=This2.S.#builder()
                  Void unused8=b.#p()
                  Void unused9=b.#r()
                  Void unused10=b.#i()
                  Void unused11=b.#v()
                  Void unused12=b.#a()
                  Void unused13=b.#t()
                  Void unused14=b.#e()
                  b
                  )))
                (
                  Void unused15=cond.#checkTrue()
                  
                  catch exception Void catched5 void
                  
                  (return This2.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched6 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused16=ann.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused17=ann.#close()
          return propagated0
          )
        
        ann.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
VarmN__86_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
VartN__87_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varnew__88_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Types inner) 
class method 
mut This0 #apply(This2.Types inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types that) 
mut method 
This2.Types #inner() 
read method 
This2.Types inner() }
Varresult__89_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Types inner) 
class method 
mut This0 #apply(This2.Types inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types that) 
mut method 
This2.Types #inner() 
read method 
This2.Types inner() }
Varextra__90_0:/*@private*/ {
class method 
mut This0 #mutK(This2.Types inner) 
class method 
mut This0 #apply(This2.Types inner) This0.#mutK(inner:inner)
mut method 
Void inner(This2.Types that) 
mut method 
This2.Types #inner() 
read method 
This2.Types inner() }
Varresult0__91_0:/*@private*/ {
class method 
mut This0 #mutK(mut This2.Types inner) 
class method 
mut This0 #apply(mut This2.Types inner) This0.#mutK(inner:inner)
mut method 
Void inner(mut This2.Types that) 
mut method 
mut This2.Types #inner() 
read method 
read This2.Types inner() }
VarhavePrivate__92_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Bool inner) 
class method 
mut This0 #apply(This3.Bool inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Bool that) 
mut method 
This3.Bool #inner() 
read method 
This3.Bool inner() }}
NestedClasses: {implements This2.Concept.ToS, This2.Concept.Classable, This2.Concept.Equals
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.NestedClass that) this.add(right:that)
class method 
This1.NestedClass cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.NestedClass that0=(
      Void unused0=return that
      
      catch return This1.NestedClass casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.NestedClass val(This2.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.NestedClass left() This0.cast(that:this.inner().val(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.NestedClass right() (//#################MUT METHODS
This0.cast(that:(
  read This2.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.NestedClass val) (
  mut This2.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.NestedClass that) (
  mut This2.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.NestedClass that) (
  mut This2.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.NestedClass val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.NestedClass right) (
  mut This2.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.NestedClass left) this.#inner().add(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.NestedClass that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.NestedClass val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.NestedClass that) this.with(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.NestedClass that) (//insertion
this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.NestedClass val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.NestedClass that) this.withAlso(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.NestedClass that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.NestedClass filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.NestedClass filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.NestedClass filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.NestedClass filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
read method 
This2.Bool contains(This1.NestedClass that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1.NestedClass that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This2.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This2.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This2.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This2.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This2.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This2.Bool.true()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #right(This1.NestedClass that) this.contains(that:that)
read method 
This2.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This2.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This2.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This2.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This2.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This2.Collections.IterationFailure catched21 (return This2.Bool.false())
    
    (
      Void unused23=return This2.Bool.true()
      void
      )
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfLeft(This1.NestedClass val) (
  Void unused=(
    This2.Size size=this.size()
    This2.Size pos=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%23_0__93_0 varpos=This0.Varpos_$%23_0__93_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This2.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b1=This2.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Size indexOfRight(This1.NestedClass val) (
  Void unused=(
    This2.Size pos=this.size().#less(that:This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%24_0__94_0 varpos0=This0.Varpos0_$%24_0__94_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This2.Bool cond0=(
          This2.Size opNorm=varpos0.#inner()
          This2.Size.#from(builder:(
            mut This2.S.SBuilder b0=This2.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This2.Size.#from(builder:(
            mut This2.S.SBuilder b1=This2.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b2=This2.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This2.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1.NestedClass val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1.NestedClass val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1.NestedClass val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This2.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1.NestedClass val) (
  Void unused=(
    This2.Size pos=This2.Size.#from(builder:(
      mut This2.S.SBuilder b=This2.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%25_0__95_0 varpos1=This0.Varpos1_$%25_0__95_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This2.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This2.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This2.Size.#from(builder:(
        mut This2.S.SBuilder b0=This2.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1.NestedClass val) (
  Void unused=(
    This2.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1.NestedClass val) (
  Void unused=(
    This2.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This2.Bool cond=(
        This2.Size opNorm=pos
        This2.Size.#from(builder:(
          mut This2.S.SBuilder b=This2.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.NestedClass filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.NestedClass #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.NestedClass filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.NestedClass #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() }
IteratorValFill: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.true()
read method 
This2.NestedClass filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.NestedClass #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.NestedClass filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.NestedClass filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
This2.NestedClass #filled() }
IteratorVar: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.NestedClass filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.NestedClass #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Void inner(This2.NestedClass that) (
  mut This3.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%23_0__93_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varpos0_$%24_0__94_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }
Varpos1_$%25_0__95_0:/*@private*/ {
class method 
mut This0 #mutK(This3.Size inner) 
class method 
mut This0 #apply(This3.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.Size that) 
mut method 
This3.Size #inner() 
read method 
This3.Size inner() }}
Type: {implements This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #mutK(fwd This1.NestedClass root, This2.Path path, This2.Size memberN, This2.Size typeN, This1.Record record) 
class method 
This0 #apply(fwd This1.NestedClass root, This2.Path path, This2.Size memberN, This2.Size typeN, This1.Record record) This0.#mutK(root:root, path:path, memberN:memberN, typeN:typeN, record:record)
mut method 
This1.NestedClass #root() 
read method 
This1.NestedClass root() 
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Size #memberN() 
read method 
This2.Size memberN() 
mut method 
This2.Size #typeN() 
read method 
This2.Size typeN() 
mut method 
This1.Record #record() 
read method 
This1.Record record() 
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.S toS() This0.readableName().#plusplus(that:(
  This2.S.Continue rcv76=(
    This2.S rcv77=This2.S.#from(builder:(
      mut This2.S.SBuilder b=This2.S.#builder()
      Void unused=b.#oSquare()
      b
      ))
    rcv77.#from(seqBuilder:(
      mut This2.S.SConcat b0=rcv77.#seqBuilder()
      Void unused0=b0.#add(that:this.allAsString())
      b0
      ))
    )
  rcv76.#from(builder:(
    mut This2.S.SBuilder b1=rcv76.#builder()
    Void unused1=b1.#cSquare()
    b1
    ))
  ))
method 
This2.S allAsString() (//just the library literal
(
  This1.Record rcv78=this.record()
  rcv78.#from(builder:(
    mut This2.S.SBuilder b=rcv78.#builder()
    Void unused=b.#A()
    Void unused0=b.#l()
    Void unused1=b.#l()
    Void unused2=b.#A()
    Void unused3=b.#s()
    Void unused4=b.#S()
    Void unused5=b.#t()
    Void unused6=b.#r()
    Void unused7=b.#i()
    Void unused8=b.#n()
    Void unused9=b.#g()
    b
    ))
  ))
method 
This2.S strRepr() (
  Void unused=(/*should become toS? is toS ok?
*/
    This1.NestedClass n=this.referencedPath()
    This2.S s=(
      Void unused1=(
        Void unused2=(
          This2.Bool cond=n.hasExternalType()
          (
            Void unused4=cond.#checkTrue()
            
            catch exception Void catched0 void
            
            (return n.externalTypeToS())
            )
          )
        Void unused3=return (
          This2.S.Continue rcv79=(
            This2.S rcv80=This2.S.#from(builder:(
              mut This2.S.SBuilder b=This2.S.#builder()
              Void unused5=b.#at()
              Void unused6=b.#dot()
              b
              ))
            rcv80.#from(seqBuilder:(
              mut This2.S.SConcat b0=rcv80.#seqBuilder()
              Void unused7=b0.#add(that:n.pathFromRoot())
              b0
              ))
            )
          rcv79.#from(builder:(
            mut This2.S.SBuilder b1=rcv79.#builder()
            b1
            ))
          )
        void
        )
      
      catch return This2.S result0 result0
      
      error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
      )
    Void unused0=return this.mdf().toS().#plusplus(that:This2.S.#from(builder:(
      mut This2.S.SBuilder b2=This2.S.#builder()
      Void unused8=b2.#space()
      b2
      )).#plusplus(that:s))
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.TypeKind typeKind() (//{Normal,Alias,AliasUnresolvable}
This1.TypeKind.fromS(that:(
  This1.Record rcv81=this.record()
  rcv81.#from(builder:(
    mut This2.S.SBuilder b=rcv81.#builder()
    Void unused=b.#T()
    Void unused0=b.#y()
    Void unused1=b.#p()
    Void unused2=b.#e()
    Void unused3=b.#K()
    Void unused4=b.#i()
    Void unused5=b.#n()
    Void unused6=b.#d()
    b
    ))
  )))
method 
This1.Mdf mdf() (
  Void unused=(/*error on AliasUnresolvable
*/
    Void unused0=(
      This2.Bool cond=((
        This1.TypeKind rcv82=this.typeKind()
        rcv82.equals(that:rcv82.class()._AliasUnresolvable())
        )).#bang()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.Mdf.fromS(that:(
          This1.Record rcv83=this.record()
          rcv83.#from(builder:(
            mut This2.S.SBuilder b=rcv83.#builder()
            Void unused3=b.#M()
            Void unused4=b.#d()
            Void unused5=b.#f()
            b
            ))
          )))
        )
      )
    Void unused1=error This2.Guard.Operation.#from(builder:(
      mut This2.S.SBuilder b0=This2.Guard.Operation.#builder()
      Void unused6=b0.#A()
      Void unused7=b0.#l()
      Void unused8=b0.#i()
      Void unused9=b0.#a()
      Void unused10=b0.#s()
      Void unused11=b0.#U()
      Void unused12=b0.#n()
      Void unused13=b0.#r()
      Void unused14=b0.#e()
      Void unused15=b0.#s()
      Void unused16=b0.#o()
      Void unused17=b0.#l()
      Void unused18=b0.#v()
      Void unused19=b0.#a()
      Void unused20=b0.#b()
      Void unused21=b0.#l()
      Void unused22=b0.#e()
      Void unused23=b0.#space()
      Void unused24=b0.#c()
      Void unused25=b0.#l()
      Void unused26=b0.#a()
      Void unused27=b0.#s()
      Void unused28=b0.#s()
      Void unused29=b0.#comma()
      Void unused30=b0.#space()
      Void unused31=b0.#m()
      Void unused32=b0.#d()
      Void unused33=b0.#f()
      Void unused34=b0.#space()
      Void unused35=b0.#u()
      Void unused36=b0.#n()
      Void unused37=b0.#k()
      Void unused38=b0.#n()
      Void unused39=b0.#o()
      Void unused40=b0.#w()
      Void unused41=b0.#n()
      b0
      ))
    void
    )
  
  catch return This1.Mdf result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method /*@private
*/This1.NestedClass referencedPath__47_0(This1.Doc.Annotation ann) (
  Void unused=(
    Void unused0=(
      This2.Bool cond=ann.hasReferredClass()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This2.Introspection.#apply(clazz:ann.referredClass()))
        )
      )
    This2.S sPath=(
      This2.S rcv84=ann.toS()
      rcv84.#apply(start:This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused4=b.#1()
        b
        )))
      )
    Void unused1=(
      This2.Bool cond0=sPath.#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b0=This2.S.#builder()
        b0
        )))
      (
        Void unused5=cond0.#checkTrue()
        
        catch exception Void catched5 void
        
        (return this.root())
        )
      )
    This2.Path path=This2.Path.fromS(that:sPath)
    Void unused2=return this.root().nestedClassFromRoot(that:path)
    
    catch exception This2.MetaGuard.NestedClassUnavailable x error This2.X.#from(builder:(
      mut This2.S.SBuilder b1=This2.X.#builder()
      Void unused6=b1.#T()
      Void unused7=b1.#y()
      Void unused8=b1.#p()
      Void unused9=b1.#e()
      Void unused10=b1.#space()
      Void unused11=b1.#r()
      Void unused12=b1.#e()
      Void unused13=b1.#f()
      Void unused14=b1.#e()
      Void unused15=b1.#r()
      Void unused16=b1.#s()
      Void unused17=b1.#space()
      Void unused18=b1.#t()
      Void unused19=b1.#o()
      Void unused20=b1.#space()
      Void unused21=b1.#u()
      Void unused22=b1.#n()
      Void unused23=b1.#e()
      Void unused24=b1.#x()
      Void unused25=b1.#i()
      Void unused26=b1.#s()
      Void unused27=b1.#t()
      Void unused28=b1.#e()
      Void unused29=b1.#n()
      Void unused30=b1.#t()
      Void unused31=b1.#space()
      Void unused32=b1.#p()
      Void unused33=b1.#a()
      Void unused34=b1.#t()
      Void unused35=b1.#h()
      b1
      ))
    
    void
    )
  
  catch return This1.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.NestedClass referencedPath() this.referencedPath__47_0(ann:this.record().docOf(path:This2.Path.#from(builder:(
  mut This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#t()
  Void unused2=b.#h()
  b
  ))).annotations().left())
method 
This1.NestedClass resolvedReferencedPath() (
  Void unused=(/*error on AliasUnresolvable
*/
    Void unused0=(
      This2.Bool cond=((
        This1.TypeKind rcv85=this.typeKind()
        rcv85.equals(that:rcv85.class()._AliasUnresolvable())
        )).#bang()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.referencedPath__47_0(ann:this.record().docOf(path:This2.Path.#from(builder:(
          mut This2.S.SBuilder b=This2.Path.#builder()
          Void unused3=b.#R()
          Void unused4=b.#e()
          Void unused5=b.#s()
          Void unused6=b.#o()
          Void unused7=b.#l()
          Void unused8=b.#v()
          Void unused9=b.#e()
          Void unused10=b.#d()
          Void unused11=b.#P()
          Void unused12=b.#a()
          Void unused13=b.#t()
          Void unused14=b.#h()
          b
          ))).annotations().left()))
        )
      )
    Void unused1=error This2.Guard.Operation.#from(builder:(
      mut This2.S.SBuilder b0=This2.Guard.Operation.#builder()
      Void unused15=b0.#A()
      Void unused16=b0.#l()
      Void unused17=b0.#i()
      Void unused18=b0.#a()
      Void unused19=b0.#s()
      Void unused20=b0.#U()
      Void unused21=b0.#n()
      Void unused22=b0.#r()
      Void unused23=b0.#e()
      Void unused24=b0.#s()
      Void unused25=b0.#o()
      Void unused26=b0.#l()
      Void unused27=b0.#v()
      Void unused28=b0.#a()
      Void unused29=b0.#b()
      Void unused30=b0.#l()
      Void unused31=b0.#e()
      Void unused32=b0.#space()
      Void unused33=b0.#c()
      Void unused34=b0.#l()
      Void unused35=b0.#a()
      Void unused36=b0.#s()
      Void unused37=b0.#s()
      Void unused38=b0.#comma()
      Void unused39=b0.#space()
      Void unused40=b0.#m()
      Void unused41=b0.#d()
      Void unused42=b0.#f()
      Void unused43=b0.#space()
      Void unused44=b0.#u()
      Void unused45=b0.#n()
      Void unused46=b0.#k()
      Void unused47=b0.#n()
      Void unused48=b0.#o()
      Void unused49=b0.#w()
      Void unused50=b0.#n()
      b0
      ))
    void
    )
  
  catch return This1.NestedClass result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool partial() (
  This1.Record rcv86=this.record()
  rcv86.#from(builder:(
    mut This2.S.SBuilder b=rcv86.#builder()
    Void unused=b.#P()
    Void unused0=b.#h()
    b
    ))
  ).#equalequal(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b0=This2.S.#builder()
  Void unused1=b0.#t()
  Void unused2=b0.#r()
  Void unused3=b0.#u()
  Void unused4=b0.#e()
  b0
  )))
method 
This2.Bool resolvedPartial() (
  This1.Record rcv87=this.record()
  rcv87.#from(builder:(
    mut This2.S.SBuilder b=rcv87.#builder()
    Void unused=b.#R()
    Void unused0=b.#e()
    Void unused1=b.#s()
    Void unused2=b.#o()
    Void unused3=b.#l()
    Void unused4=b.#v()
    Void unused5=b.#e()
    Void unused6=b.#d()
    Void unused7=b.#P()
    Void unused8=b.#h()
    b
    ))
  ).#equalequal(that:(//error on Normal? or the same of partial()
This2.S.#from(builder:(
  mut This2.S.SBuilder b0=This2.S.#builder()
  Void unused9=b0.#t()
  Void unused10=b0.#r()
  Void unused11=b0.#u()
  Void unused12=b0.#e()
  b0
  ))))
method 
This2.S suffix() (
  Void unused=(/*error on Normal
*/
    Void unused0=(
      This2.Bool cond=(
        This1.TypeKind rcv88=this.typeKind()
        rcv88.equals(that:rcv88.class()._Normal())
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (error This2.Guard.Operation.#from(builder:(
          mut This2.S.SBuilder b=This2.Guard.Operation.#builder()
          Void unused3=b.#N()
          Void unused4=b.#o()
          Void unused5=b.#r()
          Void unused6=b.#m()
          Void unused7=b.#a()
          Void unused8=b.#l()
          Void unused9=b.#space()
          Void unused10=b.#t()
          Void unused11=b.#y()
          Void unused12=b.#p()
          Void unused13=b.#e()
          Void unused14=b.#s()
          Void unused15=b.#space()
          Void unused16=b.#h()
          Void unused17=b.#a()
          Void unused18=b.#v()
          Void unused19=b.#e()
          Void unused20=b.#space()
          Void unused21=b.#n()
          Void unused22=b.#o()
          Void unused23=b.#space()
          Void unused24=b.#s()
          Void unused25=b.#u()
          Void unused26=b.#f()
          Void unused27=b.#f()
          Void unused28=b.#i()
          Void unused29=b.#x()
          b
          )))
        )
      )
    Void unused1=return (
      This1.Record rcv89=this.record()
      rcv89.#from(builder:(
        mut This2.S.SBuilder b0=rcv89.#builder()
        Void unused30=b0.#P()
        Void unused31=b0.#h()
        b0
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This1.Doc doc() this.record().docOf(path:This2.Path.#from(builder:(
  mut This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#D()
  Void unused0=b.#o()
  Void unused1=b.#c()
  b
  )))
method 
This2.Bool isInterface() (
  Void unused=(
    This2.S str=this.allAsString()
    Void unused0=(
      This2.Bool cond=str.contains(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        Void unused4=b.#V()
        Void unused5=b.#o()
        Void unused6=b.#i()
        Void unused7=b.#d()
        b
        )))
      (
        Void unused8=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.Bool.false())
        )
      )
    Void unused1=(
      This2.Bool cond0=str.contains(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b0=This2.S.#builder()
        Void unused9=b0.#A()
        Void unused10=b0.#n()
        Void unused11=b0.#y()
        b0
        )))
      (
        Void unused12=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This2.Bool.true())
        )
      )
    Void unused2=(
      This2.Bool cond1=str.contains(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b1=This2.S.#builder()
        Void unused13=b1.#L()
        Void unused14=b1.#i()
        Void unused15=b1.#b()
        Void unused16=b1.#r()
        Void unused17=b1.#a()
        Void unused18=b1.#r()
        Void unused19=b1.#y()
        b1
        )))
      (
        Void unused20=cond1.#checkTrue()
        
        catch exception Void catched7 void
        
        (return This2.Bool.false())
        )
      )
    This1.NestedClass nc=this.referencedPath()
    Void unused3=return (
      This1.ClassKind rcv90=nc.classKind()
      rcv90.equals(that:rcv90.class()._Interface())
      )
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool isAny() this.allAsString().contains(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#A()
  Void unused0=b.#n()
  Void unused1=b.#y()
  b
  )))
method 
This2.Bool isVoid() this.allAsString().contains(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#V()
  Void unused0=b.#o()
  Void unused1=b.#i()
  Void unused2=b.#d()
  b
  )))
method 
This2.Bool isLibrary() this.allAsString().contains(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#L()
  Void unused0=b.#i()
  Void unused1=b.#b()
  Void unused2=b.#r()
  Void unused3=b.#a()
  Void unused4=b.#r()
  Void unused5=b.#y()
  b
  )))
method 
This2.Bool isPrimitive() (
  This2.S str=this.allAsString()
  str.contains(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b=This2.S.#builder()
    Void unused=b.#V()
    Void unused0=b.#o()
    Void unused1=b.#i()
    Void unused2=b.#d()
    b
    ))).#or(that:str.contains(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b0=This2.S.#builder()
    Void unused3=b0.#A()
    Void unused4=b0.#n()
    Void unused5=b0.#y()
    b0
    )))).#or(that:str.contains(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b1=This2.S.#builder()
    Void unused6=b1.#L()
    Void unused7=b1.#i()
    Void unused8=b1.#b()
    Void unused9=b1.#r()
    Void unused10=b1.#a()
    Void unused11=b1.#r()
    Void unused12=b1.#y()
    b1
    ))))
  )}
Types: {implements This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.Type that) this.add(right:that)
class method 
This1.Type cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.Type that0=(
      Void unused0=return that
      
      catch return This1.Type casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.Type result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.Type val(This2.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.Type left() This0.cast(that:this.inner().val(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.Type right() (//#################MUT METHODS
This0.cast(that:(
  read This2.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.Type val) (
  mut This2.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.Type that) (
  mut This2.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.Type that) (
  mut This2.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.Type val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.Type right) (
  mut This2.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.Type left) this.#inner().add(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.Type that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.Type val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.Type that) this.with(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.Type that) (//insertion
this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.Type val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.Type that) this.withAlso(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.Type that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.Type filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.Type filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.Type filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.Type filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.Type filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.Type #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.Type result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Type filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Type #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Type result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() }
IteratorValFill: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.true()
read method 
This2.Type filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Type #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Type result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Type filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.Type filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
This2.Type #filled() }
IteratorVar: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.Type filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.Type #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.Type result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Void inner(This2.Type that) (
  mut This3.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}}
Mdf: {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This2.Concept.Equals, This2.Concept.Classable, This2.Concept.ToS
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) this.inner().#equalequal(that:that.inner())
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This2.Size inner() 
class method 
This0 #apply(This2.Size inner) 
method 
This2.S name() This0.names().val(that:this.inner())
class method 
This2.Strings names() This2.Strings.#from(seqBuilder:(
  mut This2.Strings b=This2.Strings.#seqBuilder()
  Void unused=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b0=This2.S.#builder()
    Void unused5=b0.#C()
    Void unused6=b0.#a()
    Void unused7=b0.#p()
    Void unused8=b0.#s()
    Void unused9=b0.#u()
    Void unused10=b0.#l()
    Void unused11=b0.#e()
    b0
    )))
  Void unused0=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b1=This2.S.#builder()
    Void unused12=b1.#M()
    Void unused13=b1.#u()
    Void unused14=b1.#t()
    Void unused15=b1.#a()
    Void unused16=b1.#b()
    Void unused17=b1.#l()
    Void unused18=b1.#e()
    b1
    )))
  Void unused1=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b2=This2.S.#builder()
    Void unused19=b2.#L()
    Void unused20=b2.#e()
    Void unused21=b2.#n()
    Void unused22=b2.#t()
    b2
    )))
  Void unused2=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b3=This2.S.#builder()
    Void unused23=b3.#R()
    Void unused24=b3.#e()
    Void unused25=b3.#a()
    Void unused26=b3.#d()
    Void unused27=b3.#a()
    Void unused28=b3.#b()
    Void unused29=b3.#l()
    Void unused30=b3.#e()
    b3
    )))
  Void unused3=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b4=This2.S.#builder()
    Void unused31=b4.#I()
    Void unused32=b4.#m()
    Void unused33=b4.#m()
    Void unused34=b4.#u()
    Void unused35=b4.#t()
    Void unused36=b4.#a()
    Void unused37=b4.#b()
    Void unused38=b4.#l()
    Void unused39=b4.#e()
    b4
    )))
  Void unused4=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b5=This2.S.#builder()
    Void unused40=b5.#C()
    Void unused41=b5.#l()
    Void unused42=b5.#a()
    Void unused43=b5.#s()
    Void unused44=b5.#s()
    b5
    )))
  b
  ))
class method 
This0 fromS(This2.S that) (
  Void unused=(
    Void unused0=(
      mut This2.Size.Iterator n=This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        Void unused3=(
          Void unused4=(
            lent This2.Strings.IteratorVal d=This0.names().vals()
            (
              Void unused5=(
                Void unused6=(
                  Void unused7=loop (
                    Void unused8=n.#next()
                    
                    catch exception Void catched2 (
                      Void unused9=(
                        Void unused12=d.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused10=(
                        Void unused13=n.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused11=(
                        Void unused14=d.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused15=d.#next()
                      
                      catch exception Void catched7 (
                        Void unused16=(
                          Void unused18=n.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused17=(
                          Void unused19=d.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        This2.Bool cond=d.#inner().#equalequal(that:that)
                        (
                          Void unused20=cond.#checkTrue()
                          
                          catch exception Void catched12 void
                          
                          return This0.#apply(inner:n.#inner())
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched13 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused21=d.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This0 propagated0 (
                Void unused22=d.#close()
                return propagated0
                )
              
              d.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused23=n.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused24=n.#close()
          return propagated2
          )
        
        n.#close()
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv46=(
        This0.ParseFail rcv47=This0.ParseFail.#from(builder:(
          mut This2.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused25=b0.#T()
          Void unused26=b0.#h()
          Void unused27=b0.#e()
          Void unused28=b0.#space()
          Void unused29=b0.#p()
          Void unused30=b0.#r()
          Void unused31=b0.#o()
          Void unused32=b0.#v()
          Void unused33=b0.#i()
          Void unused34=b0.#d()
          Void unused35=b0.#e()
          Void unused36=b0.#d()
          Void unused37=b0.#space()
          Void unused38=b0.#s()
          Void unused39=b0.#t()
          Void unused40=b0.#r()
          Void unused41=b0.#i()
          Void unused42=b0.#n()
          Void unused43=b0.#g()
          Void unused44=b0.#space()
          Void unused45=b0.#i()
          Void unused46=b0.#s()
          Void unused47=b0.#space()
          Void unused48=b0.#n()
          Void unused49=b0.#o()
          Void unused50=b0.#t()
          Void unused51=b0.#space()
          Void unused52=b0.#v()
          Void unused53=b0.#a()
          Void unused54=b0.#l()
          Void unused55=b0.#i()
          Void unused56=b0.#d()
          Void unused57=b0.#colon()
          Void unused58=b0.#space()
          b0
          ))
        rcv47.#from(seqBuilder:(
          mut This2.S.SConcat b1=rcv47.#seqBuilder()
          Void unused59=b1.#add(that:that)
          b1
          ))
        )
      rcv46.#from(builder:(
        mut This2.S.SBuilder b2=rcv46.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 _Capsule() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This0 _Mutable() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
class method 
This0 _Lent() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
class method 
This0 _Readable() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#3()
  b
  )))
class method 
This0 _Immutable() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#4()
  b
  )))
class method 
This0 _Class() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#5()
  b
  )))
method 
This2.Bool isCapsule() this.inner().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This2.Bool isMutable() this.inner().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
method 
This2.Bool isLent() this.inner().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
method 
This2.Bool isReadable() this.inner().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#3()
  b
  )))
method 
This2.Bool isImmutable() this.inner().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#4()
  b
  )))
method 
This2.Bool isClass() this.inner().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#5()
  b
  )))
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%10_0__96_0 varres=This0.Varres_$%10_0__96_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%10_0__96_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
class method 
This1 cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1 that0=(
      Void unused0=return that
      
      catch return This1 casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1 val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1 left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() (//#################MUT METHODS
This0.cast(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
read method 
This3.Bool contains(This1 that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This3.Collections.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%11_0__97_0 varpos=This0.Varpos_$%11_0__97_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%12_0__98_0 varpos0=This0.Varpos0_$%12_0__98_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1 val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%13_0__99_0 varpos1=This0.Varpos1_$%13_0__99_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This2 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This2 #filled() }
IteratorVar: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%11_0__97_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0_$%12_0__98_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1_$%13_0__99_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }}}
MethodKind: {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This2.Concept.Equals, This2.Concept.Classable, This2.Concept.ToS
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) this.inner().#equalequal(that:that.inner())
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This2.Size inner() 
class method 
This0 #apply(This2.Size inner) 
method 
This2.S name() This0.names().val(that:this.inner())
class method 
This2.Strings names() This2.Strings.#from(seqBuilder:(
  mut This2.Strings b=This2.Strings.#seqBuilder()
  Void unused=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b0=This2.S.#builder()
    Void unused2=b0.#I()
    Void unused3=b0.#n()
    Void unused4=b0.#t()
    Void unused5=b0.#e()
    Void unused6=b0.#r()
    Void unused7=b0.#f()
    Void unused8=b0.#a()
    Void unused9=b0.#c()
    Void unused10=b0.#e()
    Void unused11=b0.#I()
    Void unused12=b0.#m()
    Void unused13=b0.#p()
    Void unused14=b0.#l()
    Void unused15=b0.#e()
    Void unused16=b0.#m()
    Void unused17=b0.#e()
    Void unused18=b0.#n()
    Void unused19=b0.#t()
    Void unused20=b0.#e()
    Void unused21=b0.#d()
    Void unused22=b0.#M()
    Void unused23=b0.#e()
    Void unused24=b0.#t()
    Void unused25=b0.#h()
    Void unused26=b0.#o()
    Void unused27=b0.#d()
    b0
    )))
  Void unused0=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b1=This2.S.#builder()
    Void unused28=b1.#I()
    Void unused29=b1.#m()
    Void unused30=b1.#p()
    Void unused31=b1.#l()
    Void unused32=b1.#e()
    Void unused33=b1.#m()
    Void unused34=b1.#e()
    Void unused35=b1.#n()
    Void unused36=b1.#t()
    Void unused37=b1.#e()
    Void unused38=b1.#d()
    Void unused39=b1.#M()
    Void unused40=b1.#e()
    Void unused41=b1.#t()
    Void unused42=b1.#h()
    Void unused43=b1.#o()
    Void unused44=b1.#d()
    b1
    )))
  Void unused1=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b2=This2.S.#builder()
    Void unused45=b2.#A()
    Void unused46=b2.#b()
    Void unused47=b2.#s()
    Void unused48=b2.#t()
    Void unused49=b2.#r()
    Void unused50=b2.#a()
    Void unused51=b2.#c()
    Void unused52=b2.#t()
    Void unused53=b2.#M()
    Void unused54=b2.#e()
    Void unused55=b2.#t()
    Void unused56=b2.#h()
    Void unused57=b2.#o()
    Void unused58=b2.#d()
    b2
    )))
  b
  ))
class method 
This0 fromS(This2.S that) (
  Void unused=(
    Void unused0=(
      mut This2.Size.Iterator n=This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        Void unused3=(
          Void unused4=(
            lent This2.Strings.IteratorVal d=This0.names().vals()
            (
              Void unused5=(
                Void unused6=(
                  Void unused7=loop (
                    Void unused8=n.#next()
                    
                    catch exception Void catched2 (
                      Void unused9=(
                        Void unused12=d.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused10=(
                        Void unused13=n.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused11=(
                        Void unused14=d.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused15=d.#next()
                      
                      catch exception Void catched7 (
                        Void unused16=(
                          Void unused18=n.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused17=(
                          Void unused19=d.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        This2.Bool cond=d.#inner().#equalequal(that:that)
                        (
                          Void unused20=cond.#checkTrue()
                          
                          catch exception Void catched12 void
                          
                          return This0.#apply(inner:n.#inner())
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched13 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused21=d.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This0 propagated0 (
                Void unused22=d.#close()
                return propagated0
                )
              
              d.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused23=n.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused24=n.#close()
          return propagated2
          )
        
        n.#close()
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv46=(
        This0.ParseFail rcv47=This0.ParseFail.#from(builder:(
          mut This2.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused25=b0.#T()
          Void unused26=b0.#h()
          Void unused27=b0.#e()
          Void unused28=b0.#space()
          Void unused29=b0.#p()
          Void unused30=b0.#r()
          Void unused31=b0.#o()
          Void unused32=b0.#v()
          Void unused33=b0.#i()
          Void unused34=b0.#d()
          Void unused35=b0.#e()
          Void unused36=b0.#d()
          Void unused37=b0.#space()
          Void unused38=b0.#s()
          Void unused39=b0.#t()
          Void unused40=b0.#r()
          Void unused41=b0.#i()
          Void unused42=b0.#n()
          Void unused43=b0.#g()
          Void unused44=b0.#space()
          Void unused45=b0.#i()
          Void unused46=b0.#s()
          Void unused47=b0.#space()
          Void unused48=b0.#n()
          Void unused49=b0.#o()
          Void unused50=b0.#t()
          Void unused51=b0.#space()
          Void unused52=b0.#v()
          Void unused53=b0.#a()
          Void unused54=b0.#l()
          Void unused55=b0.#i()
          Void unused56=b0.#d()
          Void unused57=b0.#colon()
          Void unused58=b0.#space()
          b0
          ))
        rcv47.#from(seqBuilder:(
          mut This2.S.SConcat b1=rcv47.#seqBuilder()
          Void unused59=b1.#add(that:that)
          b1
          ))
        )
      rcv46.#from(builder:(
        mut This2.S.SBuilder b2=rcv46.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 _InterfaceImplementedMethod() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This0 _ImplementedMethod() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
class method 
This0 _AbstractMethod() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%10_0__100_0 varres=This0.Varres_$%10_0__100_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%10_0__100_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
class method 
This1 cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1 that0=(
      Void unused0=return that
      
      catch return This1 casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1 val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1 left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() (//#################MUT METHODS
This0.cast(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
read method 
This3.Bool contains(This1 that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This3.Collections.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%11_0__101_0 varpos=This0.Varpos_$%11_0__101_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%12_0__102_0 varpos0=This0.Varpos0_$%12_0__102_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1 val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%13_0__103_0 varpos1=This0.Varpos1_$%13_0__103_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This2 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This2 #filled() }
IteratorVar: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%11_0__101_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0_$%12_0__102_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1_$%13_0__103_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }}}
ClassKind: {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
*/implements This2.Concept.Equals, This2.Concept.Classable, This2.Concept.ToS
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) this.inner().#equalequal(that:that.inner())
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This2.Size inner() 
class method 
This0 #apply(This2.Size inner) 
method 
This2.S name() This0.names().val(that:this.inner())
class method 
This2.Strings names() This2.Strings.#from(seqBuilder:(
  mut This2.Strings b=This2.Strings.#seqBuilder()
  Void unused=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b0=This2.S.#builder()
    Void unused4=b0.#I()
    Void unused5=b0.#n()
    Void unused6=b0.#t()
    Void unused7=b0.#e()
    Void unused8=b0.#r()
    Void unused9=b0.#f()
    Void unused10=b0.#a()
    Void unused11=b0.#c()
    Void unused12=b0.#e()
    b0
    )))
  Void unused0=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b1=This2.S.#builder()
    Void unused13=b1.#C()
    Void unused14=b1.#l()
    Void unused15=b1.#o()
    Void unused16=b1.#s()
    Void unused17=b1.#e()
    Void unused18=b1.#d()
    Void unused19=b1.#C()
    Void unused20=b1.#l()
    Void unused21=b1.#a()
    Void unused22=b1.#s()
    Void unused23=b1.#s()
    b1
    )))
  Void unused1=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b2=This2.S.#builder()
    Void unused24=b2.#O()
    Void unused25=b2.#p()
    Void unused26=b2.#e()
    Void unused27=b2.#n()
    Void unused28=b2.#C()
    Void unused29=b2.#l()
    Void unused30=b2.#a()
    Void unused31=b2.#s()
    Void unused32=b2.#s()
    b2
    )))
  Void unused2=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b3=This2.S.#builder()
    Void unused33=b3.#T()
    Void unused34=b3.#e()
    Void unused35=b3.#m()
    Void unused36=b3.#p()
    Void unused37=b3.#l()
    Void unused38=b3.#a()
    Void unused39=b3.#t()
    Void unused40=b3.#e()
    b3
    )))
  Void unused3=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b4=This2.S.#builder()
    Void unused41=b4.#F()
    Void unused42=b4.#r()
    Void unused43=b4.#e()
    Void unused44=b4.#e()
    Void unused45=b4.#T()
    Void unused46=b4.#e()
    Void unused47=b4.#m()
    Void unused48=b4.#p()
    Void unused49=b4.#l()
    Void unused50=b4.#a()
    Void unused51=b4.#t()
    Void unused52=b4.#e()
    b4
    )))
  b
  ))
class method 
This0 fromS(This2.S that) (
  Void unused=(
    Void unused0=(
      mut This2.Size.Iterator n=This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        Void unused3=(
          Void unused4=(
            lent This2.Strings.IteratorVal d=This0.names().vals()
            (
              Void unused5=(
                Void unused6=(
                  Void unused7=loop (
                    Void unused8=n.#next()
                    
                    catch exception Void catched2 (
                      Void unused9=(
                        Void unused12=d.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused10=(
                        Void unused13=n.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused11=(
                        Void unused14=d.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused15=d.#next()
                      
                      catch exception Void catched7 (
                        Void unused16=(
                          Void unused18=n.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused17=(
                          Void unused19=d.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        This2.Bool cond=d.#inner().#equalequal(that:that)
                        (
                          Void unused20=cond.#checkTrue()
                          
                          catch exception Void catched12 void
                          
                          return This0.#apply(inner:n.#inner())
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched13 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused21=d.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This0 propagated0 (
                Void unused22=d.#close()
                return propagated0
                )
              
              d.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused23=n.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused24=n.#close()
          return propagated2
          )
        
        n.#close()
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv46=(
        This0.ParseFail rcv47=This0.ParseFail.#from(builder:(
          mut This2.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused25=b0.#T()
          Void unused26=b0.#h()
          Void unused27=b0.#e()
          Void unused28=b0.#space()
          Void unused29=b0.#p()
          Void unused30=b0.#r()
          Void unused31=b0.#o()
          Void unused32=b0.#v()
          Void unused33=b0.#i()
          Void unused34=b0.#d()
          Void unused35=b0.#e()
          Void unused36=b0.#d()
          Void unused37=b0.#space()
          Void unused38=b0.#s()
          Void unused39=b0.#t()
          Void unused40=b0.#r()
          Void unused41=b0.#i()
          Void unused42=b0.#n()
          Void unused43=b0.#g()
          Void unused44=b0.#space()
          Void unused45=b0.#i()
          Void unused46=b0.#s()
          Void unused47=b0.#space()
          Void unused48=b0.#n()
          Void unused49=b0.#o()
          Void unused50=b0.#t()
          Void unused51=b0.#space()
          Void unused52=b0.#v()
          Void unused53=b0.#a()
          Void unused54=b0.#l()
          Void unused55=b0.#i()
          Void unused56=b0.#d()
          Void unused57=b0.#colon()
          Void unused58=b0.#space()
          b0
          ))
        rcv47.#from(seqBuilder:(
          mut This2.S.SConcat b1=rcv47.#seqBuilder()
          Void unused59=b1.#add(that:that)
          b1
          ))
        )
      rcv46.#from(builder:(
        mut This2.S.SBuilder b2=rcv46.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 _Interface() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This0 _ClosedClass() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
class method 
This0 _OpenClass() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
class method 
This0 _Template() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#3()
  b
  )))
class method 
This0 _FreeTemplate() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#4()
  b
  )))
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%10_0__104_0 varres=This0.Varres_$%10_0__104_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%10_0__104_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
class method 
This1 cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1 that0=(
      Void unused0=return that
      
      catch return This1 casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1 val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1 left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() (//#################MUT METHODS
This0.cast(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
read method 
This3.Bool contains(This1 that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This3.Collections.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%11_0__105_0 varpos=This0.Varpos_$%11_0__105_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%12_0__106_0 varpos0=This0.Varpos0_$%12_0__106_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1 val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%13_0__107_0 varpos1=This0.Varpos1_$%13_0__107_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This2 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This2 #filled() }
IteratorVar: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%11_0__105_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0_$%12_0__106_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1_$%13_0__107_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }}}
TypeKind: {/*Data is more than Solid, and Liquid, Gas, Plasma can be good methafores
may disappear
*/implements This2.Concept.Equals, This2.Concept.Classable, This2.Concept.ToS
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return that0.#equalequal(that:this)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This2.Bool #equalequal(read This0 that) this.inner().#equalequal(that:that.inner())
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#dot()
  b
  )).#plusplus(that:this.name()))
read method 
This2.Size inner() 
class method 
This0 #apply(This2.Size inner) 
method 
This2.S name() This0.names().val(that:this.inner())
class method 
This2.Strings names() This2.Strings.#from(seqBuilder:(
  mut This2.Strings b=This2.Strings.#seqBuilder()
  Void unused=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b0=This2.S.#builder()
    Void unused2=b0.#N()
    Void unused3=b0.#o()
    Void unused4=b0.#r()
    Void unused5=b0.#m()
    Void unused6=b0.#a()
    Void unused7=b0.#l()
    b0
    )))
  Void unused0=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b1=This2.S.#builder()
    Void unused8=b1.#A()
    Void unused9=b1.#l()
    Void unused10=b1.#i()
    Void unused11=b1.#a()
    Void unused12=b1.#s()
    b1
    )))
  Void unused1=b.#add(that:This2.S.#from(builder:(
    mut This2.S.SBuilder b2=This2.S.#builder()
    Void unused13=b2.#A()
    Void unused14=b2.#l()
    Void unused15=b2.#i()
    Void unused16=b2.#a()
    Void unused17=b2.#s()
    Void unused18=b2.#U()
    Void unused19=b2.#n()
    Void unused20=b2.#r()
    Void unused21=b2.#e()
    Void unused22=b2.#s()
    Void unused23=b2.#o()
    Void unused24=b2.#l()
    Void unused25=b2.#v()
    Void unused26=b2.#a()
    Void unused27=b2.#b()
    Void unused28=b2.#l()
    Void unused29=b2.#e()
    b2
    )))
  b
  ))
class method 
This0 fromS(This2.S that) (
  Void unused=(
    Void unused0=(
      mut This2.Size.Iterator n=This2.Size.#from(builder:(
        mut This2.S.SBuilder b=This2.Size.#builder()
        Void unused2=b.#0()
        b
        )).vals()
      (
        Void unused3=(
          Void unused4=(
            lent This2.Strings.IteratorVal d=This0.names().vals()
            (
              Void unused5=(
                Void unused6=(
                  Void unused7=loop (
                    Void unused8=n.#next()
                    
                    catch exception Void catched2 (
                      Void unused9=(
                        Void unused12=d.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused10=(
                        Void unused13=n.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused11=(
                        Void unused14=d.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused15=d.#next()
                      
                      catch exception Void catched7 (
                        Void unused16=(
                          Void unused18=n.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused17=(
                          Void unused19=d.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        This2.Bool cond=d.#inner().#equalequal(that:that)
                        (
                          Void unused20=cond.#checkTrue()
                          
                          catch exception Void catched12 void
                          
                          return This0.#apply(inner:n.#inner())
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched13 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused21=d.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This0 propagated0 (
                Void unused22=d.#close()
                return propagated0
                )
              
              d.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused23=n.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused24=n.#close()
          return propagated2
          )
        
        n.#close()
        )
      )
    Void unused1=error (
      This0.ParseFail.Continue rcv46=(
        This0.ParseFail rcv47=This0.ParseFail.#from(builder:(
          mut This2.S.SBuilder b0=This0.ParseFail.#builder()
          Void unused25=b0.#T()
          Void unused26=b0.#h()
          Void unused27=b0.#e()
          Void unused28=b0.#space()
          Void unused29=b0.#p()
          Void unused30=b0.#r()
          Void unused31=b0.#o()
          Void unused32=b0.#v()
          Void unused33=b0.#i()
          Void unused34=b0.#d()
          Void unused35=b0.#e()
          Void unused36=b0.#d()
          Void unused37=b0.#space()
          Void unused38=b0.#s()
          Void unused39=b0.#t()
          Void unused40=b0.#r()
          Void unused41=b0.#i()
          Void unused42=b0.#n()
          Void unused43=b0.#g()
          Void unused44=b0.#space()
          Void unused45=b0.#i()
          Void unused46=b0.#s()
          Void unused47=b0.#space()
          Void unused48=b0.#n()
          Void unused49=b0.#o()
          Void unused50=b0.#t()
          Void unused51=b0.#space()
          Void unused52=b0.#v()
          Void unused53=b0.#a()
          Void unused54=b0.#l()
          Void unused55=b0.#i()
          Void unused56=b0.#d()
          Void unused57=b0.#colon()
          Void unused58=b0.#space()
          b0
          ))
        rcv47.#from(seqBuilder:(
          mut This2.S.SConcat b1=rcv47.#seqBuilder()
          Void unused59=b1.#add(that:that)
          b1
          ))
        )
      rcv46.#from(builder:(
        mut This2.S.SBuilder b2=rcv46.#builder()
        b2
        ))
      )
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 _Normal() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
class method 
This0 _Alias() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))
class method 
This0 _AliasUnresolvable() This0.#apply(inner:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#2()
  b
  )))
ParseFail: {implements This3.Guard.ParseFail, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%10_0__108_0 varres=This0.Varres_$%10_0__108_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%10_0__108_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}
List: {implements This3.Concept.ToS, This3.Concept.Classable, This3.Concept.Equals
class method 
mut This0 #mutK(mut This3.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This3.Collections.MutListAny #inner() 
read method 
read This3.Collections.MutListAny inner() 
class method 
This0 #immK(This3.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This3.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1 that) this.add(right:that)
class method 
This1 cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1 that0=(
      Void unused0=return that
      
      catch return This1 casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This3.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This3.Size size() this.inner().size()
read method 
This3.Bool isEmpty() this.size().#equalequal(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1 val(This3.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1 left() This0.cast(that:this.inner().val(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1 right() (//#################MUT METHODS
This0.cast(that:(
  read This3.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This3.Size that, This1 val) (
  mut This3.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1 that) (
  mut This3.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1 that) (
  mut This3.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This3.Size that, This1 val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1 right) (
  mut This3.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1 left) this.#inner().add(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method /*from VectorTrait
*/Void remove(This3.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1 that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This3.Size that, This1 val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1 that) this.with(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1 that) (//insertion
this.with(that:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This3.Size that, This1 val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1 that) this.withAlso(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1 that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method /*from VectorTrait
*/This0 without(This3.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size minTo) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This3.Size from, This3.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size maxTo, This3.Size minTo, This1 filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size minTo, This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This3.Size from, This3.Size to, This1 filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1 filled) this.vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size maxTo, This3.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size minTo) this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This3.Size from, This3.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This3.Size.#from(builder:(
  mut This3.S.SBuilder b=This3.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This3.Size.#from(builder:(
  mut This3.S.SBuilder b0=This3.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This3.Size.#from(builder:(
  mut This3.S.SBuilder b1=This3.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This3.S toS() this.inner().toS()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
read method 
This3.Bool contains(This1 that) (//################# operators
(
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=e.#inner().equals(that:that)
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.true())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 #less(This1 that) this.withoutAll(val:that)
method 
This0 #lessless(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=that.contains(that:e.#inner()).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
method 
This0 #and(This0 that) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal v=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=v.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=v.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=(that.#right(that:v.#inner()))
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:v.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=v.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=v.#close()
        return propagated0
        )
      
      v.#close()
      )
    )
  b
  ))
method 
This3.Bool #rightright(This0 that) this.#rightrightequal(that:that).#and(that:(that.#rightrightequal(that:this)).#bang())
method 
This3.Bool #rightrightequal(This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused2=(
          Void unused3=(
            Void unused4=loop (
              Void unused5=e.#next()
              
              catch exception Void catched0 (
                Void unused6=(
                  Void unused7=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              ((
                This3.Bool cond=(this.#right(that:e.#inner())).#bang()
                (
                  Void unused8=cond.#checkTrue()
                  
                  catch exception Void catched4 void
                  
                  (return This3.Bool.false())
                  )
                ))
              )
            
            catch exception Void catched5 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This3.Bool propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=return This3.Bool.true()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This3.Bool #right(This1 that) this.contains(that:that)
read method 
This3.Bool #equalequal(read This0 that) (
  Void unused=(
    Void unused0=(
      lent This0.IteratorVal e1=this.vals()
      (
        Void unused1=(
          Void unused2=(
            lent This0.IteratorVal e2=that.vals()
            (
              Void unused3=(
                Void unused4=(
                  Void unused5=loop (
                    Void unused6=e1.#next()
                    
                    catch exception Void catched1 (
                      Void unused7=(
                        Void unused10=e2.#next()
                        
                        catch exception Void catched2 void
                        
                        void
                        )
                      Void unused8=(
                        Void unused11=e1.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused9=(
                        Void unused12=e2.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused13=e2.#next()
                      
                      catch exception Void catched6 (
                        Void unused14=(
                          Void unused16=e1.#checkEnd()
                          
                          catch exception Void catched7 void
                          
                          void
                          )
                        Void unused15=(
                          Void unused17=e2.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        exception void
                        )
                      
                      ((
                        This3.Bool cond=e1.#inner().equals(that:e2.#inner()).#bang()
                        (
                          Void unused18=cond.#checkTrue()
                          
                          catch exception Void catched11 void
                          
                          (return This3.Bool.false())
                          )
                        ))
                      )
                    )
                  
                  catch exception Void catched12 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused19=e2.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return This3.Bool propagated0 (
                Void unused20=e2.#close()
                return propagated0
                )
              
              e2.#close()
              )
            )
          
          catch exception Any propagated1 (
            Void unused21=e1.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This3.Bool propagated2 (
          Void unused22=e1.#close()
          return propagated2
          )
        
        e1.#close()
        )
      )
    
    catch error This3.Collections.IterationFailure catched21 (return This3.Bool.false())
    
    (
      Void unused23=return This3.Bool.true()
      void
      )
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      read This0 that0=(
        Void unused2=return that
        
        catch return read This0 casted casted
        
        catch return read Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfLeft(This1 val) (
  Void unused=(
    This3.Size size=this.size()
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos_$%11_0__109_0 varpos=This0.Varpos_$%11_0__109_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos.#inner().#rightequal(that:size)
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused6=b0.#less()
            Void unused7=b0.#1()
            b0
            )))
          )
        )
      varpos.inner(that:varpos.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b1=This3.Size.#builder()
        Void unused8=b1.#1()
        b1
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
This3.Size indexOfRight(This1 val) (
  Void unused=(
    This3.Size pos=this.size().#less(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#1()
      b
      )))
    mut This0.Varpos0_$%12_0__110_0 varpos0=This0.Varpos0_$%12_0__110_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos0.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (return varpos0.#inner())
          )
        )
      Void unused3=(
        This3.Bool cond0=(
          This3.Size opNorm=varpos0.#inner()
          This3.Size.#from(builder:(
            mut This3.S.SBuilder b0=This3.Size.#builder()
            Void unused5=b0.#0()
            b0
            )).#rightequal(that:opNorm)
          )
        (
          Void unused6=cond0.#checkTrue()
          
          catch exception Void catched5 void
          
          (return This3.Size.#from(builder:(
            mut This3.S.SBuilder b1=This3.Size.#builder()
            Void unused7=b1.#less()
            Void unused8=b1.#1()
            b1
            )))
          )
        )
      varpos0.inner(that:varpos0.#inner().#less(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b2=This3.Size.#builder()
        Void unused9=b2.#1()
        b2
        ))))
      )
    void
    )
  
  catch return This3.Size result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return this)
        )
      )
    Void unused1=return this.without(index:pos)
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 withoutAll(This1 val) This0.#from(seqBuilder:(
  mut This0 b=This0.#seqBuilder()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            ((
              This3.Bool cond=e.#inner().equals(that:val).#bang()
              (
                Void unused6=cond.#checkTrue()
                
                catch exception Void catched4 void
                
                ((
                  Void unused7=b.#add(that:e.#inner())
                  void
                  ))
                )
              ))
            )
          
          catch exception Void catched6 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused8=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused9=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  b
  ))
mut method 
Void removeAll(This1 val) (
  Void unused=(
    This3.Size pos=This3.Size.#from(builder:(
      mut This3.S.SBuilder b=This3.Size.#builder()
      Void unused1=b.#0()
      b
      ))
    mut This0.Varpos1_$%13_0__111_0 varpos1=This0.Varpos1_$%13_0__111_0.#apply(inner:pos)
    Void unused0=loop (
      Void unused2=(
        This3.Bool cond=this.val(that:varpos1.#inner()).equals(that:val)
        (
          Void unused4=cond.#checkTrue()
          
          catch exception Void catched1 void
          
          (this.remove(that:varpos1.#inner()))
          )
        )
      Void unused3=(
        This3.Bool cond0=varpos1.#inner().#rightequal(that:this.size())
        (
          Void unused5=cond0.#checkTrue()
          
          catch exception Void catched3 void
          
          (return void)
          )
        )
      varpos1.inner(that:varpos1.#inner().#plus(that:This3.Size.#from(builder:(
        mut This3.S.SBuilder b0=This3.Size.#builder()
        Void unused6=b0.#1()
        b0
        ))))
      )
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeLeft(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfLeft(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
mut method 
Void removeRight(This1 val) (
  Void unused=(
    This3.Size pos=this.indexOfRight(val:val)
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=pos
        This3.Size.#from(builder:(
          mut This3.S.SBuilder b=This3.Size.#builder()
          Void unused2=b.#0()
          b
          )).#right(that:opNorm)
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched2 void
        
        (return void)
        )
      )
    Void unused1=return this.remove(that:pos)
    void
    )
  
  catch return Void result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This5.Collections.MutListAny that() 
read method 
This5.Size from() 
mut method 
Void from(This5.Size that) 
read method 
This5.Size maxTo() 
read method 
This5.Size minTo() 
read method 
This5.Bool isFill() 
read method 
This3 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This5.Size.#from(builder:(
    mut This5.S.SBuilder b=This5.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This5.Bool cond=this.maxTo().#right(that:This5.Size.#from(builder:(
      mut This5.S.SBuilder b0=This5.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This5.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This5.Bool cond=(
    This5.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This5.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3 #inner() (
  Void unused=(
    Void unused0=(
      This5.Bool cond=(
        This5.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() }
IteratorValFill: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.true()
read method 
This2 filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) 
class method 
lent This0 #apply(read This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo, This2 filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
This2 #filled() }
IteratorVar: {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() This4.Bool.false()
read method 
This2 filled() error This4.X.#from(builder:(
  mut This4.S.SBuilder b=This4.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2 #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) 
class method 
mut This0 #apply(mut This4.Collections.MutListAny that, This4.Size from, This4.Size maxTo, This4.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This4.Collections.MutListAny #that() 
mut method 
This4.Size #from() 
mut method 
This4.Size #maxTo() 
mut method 
This4.Size #minTo() 
mut method 
Void inner(This2 that) (
  mut This4.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}
Varpos_$%11_0__109_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos0_$%12_0__110_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }
Varpos1_$%13_0__111_0:/*@private*/ {
class method 
mut This0 #mutK(This4.Size inner) 
class method 
mut This0 #apply(This4.Size inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.Size that) 
mut method 
This4.Size #inner() 
read method 
This4.Size inner() }}}}
MetaGuard: {interface implements This1.Guard, This1.Message, This1.Concept.ToS, This1.Concept.Equals, This1.Concept.Classable
refine class method 
This1.S kind() 
refine method 
This1.S text() 
refine method 
This1.Message.Opt responseOf() 
refine read method 
class This1.Message class() 
refine read method 
This1.S toS() 
refine read method 
This1.Bool equals(read Any that) 
refine class method 
This1.S readableName() 
refine class method 
This1.Bool is(class Any subtype) 
RecordWrapper:/* can not be private, I need to Patch it.
*/ {
class method 
This2.S libToS(Library that) This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#T()
  Void unused0=b.#O()
  Void unused1=b.#space()
  Void unused2=b.#F()
  Void unused3=b.#I()
  Void unused4=b.#X()
  b
  ))
class method 
Library recordWrapperToSTrait()  {implements This3.MetaGuard, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine read method 
This3.S toS() This0.readableName().#plusplus(that:This1.libToS(that:this.lib()))
method 
Library lib() 
refine class method 
This3.S kind() 
refine method 
This3.S text() 
refine method 
This3.Message.Opt responseOf() 
refine read method 
class This3.Message class() 
refine read method 
This3.Bool equals(read Any that) 
refine class method 
This3.S readableName() 
refine class method 
This3.Bool is(class Any subtype) }
class method 
Library recordWrapperTrait()  {implements This3.MetaGuard, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() This0.readableName()
refine method 
This3.S text() This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  ))
refine method 
This3.Message.Opt responseOf() This3.Message.Opt.#apply()
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This3.Message class() This0
class method 
This0 #apply(This3.Introspection.Record record, Library lib) 
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This3.S libName() 
class method 
Void #apply(Library lift) exception This0 (
  This3.Introspection.Record record=This3.Introspection.Record.#apply(lib:lift)
  This3.S x=record.#from(builder:(
    mut This3.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This3.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This3.S toS() }
class method 
Library #leftrightleft(Library that) (/*either that provides a toS, or I have a default impl, that requires lib()
*/
  Library res=This2.SafeOperatorsAccess.compose(left:that, right:This0.recordWrapperTrait())
  Library open=(
    Void unused=(
      Void unused0=return This2.SafeOperatorsAccess.compose(left:res, right:This0.recordWrapperToSTrait())
      
      catch error Library catched return res
      
      void
      )
    
    catch return Library result result
    
    error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
    )
  (
    Void unused1=(
      Void unused2=return This2.SafeOperatorsAccess.compose(left:open, right: {
      class method 
      mut This0 #mut(fwd This3.Introspection.Record record, fwd Library lib) 
      class method 
      This0 #apply(This3.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)})
      
      catch error Library catched2 return open
      
      void
      )
    
    catch return Library result0 result0
    
    error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
    )
  )}
SourceUnfit: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#S()
  Void unused0=b.#o()
  Void unused1=b.#u()
  Void unused2=b.#r()
  Void unused3=b.#c()
  Void unused4=b.#e()
  Void unused5=b.#U()
  Void unused6=b.#n()
  Void unused7=b.#f()
  Void unused8=b.#i()
  Void unused9=b.#t()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
IncoherentRedirectMapping: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#I()
  Void unused0=b.#n()
  Void unused1=b.#c()
  Void unused2=b.#o()
  Void unused3=b.#h()
  Void unused4=b.#e()
  Void unused5=b.#r()
  Void unused6=b.#e()
  Void unused7=b.#n()
  Void unused8=b.#t()
  Void unused9=b.#R()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#i()
  Void unused13=b.#r()
  Void unused14=b.#e()
  Void unused15=b.#c()
  Void unused16=b.#t()
  Void unused17=b.#M()
  Void unused18=b.#a()
  Void unused19=b.#p()
  Void unused20=b.#p()
  Void unused21=b.#i()
  Void unused22=b.#n()
  Void unused23=b.#g()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
ClassClash: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#C()
  Void unused0=b.#l()
  Void unused1=b.#a()
  Void unused2=b.#s()
  Void unused3=b.#s()
  Void unused4=b.#C()
  Void unused5=b.#l()
  Void unused6=b.#a()
  Void unused7=b.#s()
  Void unused8=b.#h()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
MethodClash: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#t()
  Void unused2=b.#h()
  Void unused3=b.#o()
  Void unused4=b.#d()
  Void unused5=b.#C()
  Void unused6=b.#l()
  Void unused7=b.#a()
  Void unused8=b.#s()
  Void unused9=b.#h()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
InvalidOnTopLevel: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#I()
  Void unused0=b.#n()
  Void unused1=b.#v()
  Void unused2=b.#a()
  Void unused3=b.#l()
  Void unused4=b.#i()
  Void unused5=b.#d()
  Void unused6=b.#O()
  Void unused7=b.#n()
  Void unused8=b.#T()
  Void unused9=b.#o()
  Void unused10=b.#p()
  Void unused11=b.#L()
  Void unused12=b.#e()
  Void unused13=b.#v()
  Void unused14=b.#e()
  Void unused15=b.#l()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
PrivacyCoupuled: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#P()
  Void unused0=b.#r()
  Void unused1=b.#i()
  Void unused2=b.#v()
  Void unused3=b.#a()
  Void unused4=b.#c()
  Void unused5=b.#y()
  Void unused6=b.#C()
  Void unused7=b.#o()
  Void unused8=b.#u()
  Void unused9=b.#p()
  Void unused10=b.#u()
  Void unused11=b.#l()
  Void unused12=b.#e()
  Void unused13=b.#d()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
ParameterMismatch: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#r()
  Void unused2=b.#a()
  Void unused3=b.#m()
  Void unused4=b.#e()
  Void unused5=b.#t()
  Void unused6=b.#e()
  Void unused7=b.#r()
  Void unused8=b.#M()
  Void unused9=b.#i()
  Void unused10=b.#s()
  Void unused11=b.#m()
  Void unused12=b.#a()
  Void unused13=b.#t()
  Void unused14=b.#c()
  Void unused15=b.#h()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This2.Message class() This0
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#mut(record:record, lib:lib)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )
refine read method 
This2.S toS() This0.readableName().#plusplus(that:This1.RecordWrapper.libToS(that:this.lib()))
method 
Library lib() 
class method 
mut This0 #mut(fwd This2.Introspection.Record record, fwd Library lib) }
MemberUnavailable: {interface implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() 
refine method 
This2.S text() 
refine method 
This2.Message.Opt responseOf() 
refine read method 
class This2.Message class() 
refine read method 
This2.S toS() 
refine read method 
This2.Bool equals(read Any that) 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) }
DispatchMemberUnavailable: {
class method 
Void #apply(Library that) exception This1.MemberUnavailable (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:that)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This2.S.#from(builder:(
      mut This2.S.SBuilder b0=This2.S.#builder()
      Void unused3=b0.#M()
      Void unused4=b0.#e()
      Void unused5=b0.#m()
      Void unused6=b0.#b()
      Void unused7=b0.#e()
      Void unused8=b0.#r()
      Void unused9=b0.#U()
      Void unused10=b0.#n()
      Void unused11=b0.#a()
      Void unused12=b0.#v()
      Void unused13=b0.#a()
      Void unused14=b0.#i()
      Void unused15=b0.#l()
      Void unused16=b0.#a()
      Void unused17=b0.#b()
      Void unused18=b0.#l()
      Void unused19=b0.#e()
      b0
      )))
    (
      Void unused20=cond.#checkTrue()
      
      catch exception Void catched3 void
      
      (
        Void unused21=(
          This2.Bool cond0=record.#from(builder:(
            mut This2.S.SBuilder b1=record.#builder()
            Void unused22=b1.#I()
            Void unused23=b1.#n()
            Void unused24=b1.#v()
            Void unused25=b1.#a()
            Void unused26=b1.#l()
            Void unused27=b1.#i()
            Void unused28=b1.#d()
            Void unused29=b1.#K()
            Void unused30=b1.#i()
            Void unused31=b1.#n()
            Void unused32=b1.#d()
            b1
            )).contains(that:This2.S.#from(builder:(
            mut This2.S.SBuilder b2=This2.S.#builder()
            Void unused33=b2.#M()
            Void unused34=b2.#e()
            Void unused35=b2.#t()
            Void unused36=b2.#h()
            Void unused37=b2.#o()
            Void unused38=b2.#d()
            b2
            )))
          (
            Void unused39=cond0.#checkTrue()
            
            catch exception Void catched7 void
            
            (exception This1.MethodUnavailable.#apply(record:record, lib:that))
            )
          )
        exception This1.NestedClassUnavailable.#apply(record:record, lib:that)
        )
      )
    )
  )}
NestedClassUnavailable: {implements This1.MemberUnavailable, This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.Path path, This2.Bool isPrivate) 
class method 
This0 #apply(This2.Path path, This2.Bool isPrivate) This0.#mutK(path:path, isPrivate:isPrivate)
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Bool #isPrivate() 
read method 
This2.Bool isPrivate() 
refine read method 
This2.S toS() This0.readableName().#plusplus(that:(
  This2.S.Continue rcv91=(
    This2.S rcv92=(
      This2.S.Continue rcv93=(
        This2.S rcv94=This2.S.#from(builder:(
          mut This2.S.SBuilder b=This2.S.#builder()
          Void unused=b.#oSquare()
          Void unused0=b.#p()
          Void unused1=b.#a()
          Void unused2=b.#t()
          Void unused3=b.#h()
          Void unused4=b.#colon()
          b
          ))
        rcv94.#from(seqBuilder:(
          mut This2.S.SConcat b0=rcv94.#seqBuilder()
          Void unused5=b0.#add(that:this.path())
          b0
          ))
        )
      rcv93.#from(builder:(
        mut This2.S.SBuilder b1=rcv93.#builder()
        Void unused6=b1.#comma()
        Void unused7=b1.#i()
        Void unused8=b1.#s()
        Void unused9=b1.#P()
        Void unused10=b1.#r()
        Void unused11=b1.#i()
        Void unused12=b1.#v()
        Void unused13=b1.#a()
        Void unused14=b1.#t()
        Void unused15=b1.#e()
        Void unused16=b1.#colon()
        b1
        ))
      )
    rcv92.#from(seqBuilder:(
      mut This2.S.SConcat b2=rcv92.#seqBuilder()
      Void unused17=b2.#add(that:this.isPrivate())
      b2
      ))
    )
  rcv91.#from(builder:(
    mut This2.S.SBuilder b3=rcv91.#builder()
    Void unused18=b3.#cSquare()
    b3
    ))
  ))
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#apply(path:This2.Path.fromDocInternalizedS(that:record.#from(builder:(
  mut This2.S.SBuilder b=record.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#t()
  Void unused2=b.#h()
  b
  ))), isPrivate:This2.Bool.fromS(that:record.#from(builder:(
  mut This2.S.SBuilder b0=record.#builder()
  Void unused3=b0.#I()
  Void unused4=b0.#s()
  Void unused5=b0.#P()
  Void unused6=b0.#r()
  Void unused7=b0.#i()
  Void unused8=b0.#v()
  Void unused9=b0.#a()
  Void unused10=b0.#t()
  Void unused11=b0.#e()
  b0
  ))))
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#m()
  Void unused2=b.#b()
  Void unused3=b.#e()
  Void unused4=b.#r()
  Void unused5=b.#U()
  Void unused6=b.#n()
  Void unused7=b.#a()
  Void unused8=b.#v()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  Void unused12=b.#a()
  Void unused13=b.#b()
  Void unused14=b.#l()
  Void unused15=b.#e()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
class This2.Message class() This0
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )}
MethodUnavailable: {implements This1.MemberUnavailable, This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
class method 
mut This0 #mutK(This2.Path path, This2.Selector selector, This2.Bool isPrivate) 
class method 
This0 #apply(This2.Path path, This2.Selector selector, This2.Bool isPrivate) This0.#mutK(path:path, selector:selector, isPrivate:isPrivate)
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Selector #selector() 
read method 
This2.Selector selector() 
mut method 
This2.Bool #isPrivate() 
read method 
This2.Bool isPrivate() 
refine read method 
This2.S toS() This0.readableName().#plusplus(that:(
  This2.S.Continue rcv95=(
    This2.S rcv96=(
      This2.S.Continue rcv97=(
        This2.S rcv98=(
          This2.S.Continue rcv99=(
            This2.S rcv100=This2.S.#from(builder:(
              mut This2.S.SBuilder b=This2.S.#builder()
              Void unused=b.#oSquare()
              Void unused0=b.#p()
              Void unused1=b.#a()
              Void unused2=b.#t()
              Void unused3=b.#h()
              Void unused4=b.#colon()
              b
              ))
            rcv100.#from(seqBuilder:(
              mut This2.S.SConcat b0=rcv100.#seqBuilder()
              Void unused5=b0.#add(that:this.path())
              b0
              ))
            )
          rcv99.#from(builder:(
            mut This2.S.SBuilder b1=rcv99.#builder()
            Void unused6=b1.#comma()
            Void unused7=b1.#space()
            Void unused8=b1.#s()
            Void unused9=b1.#e()
            Void unused10=b1.#l()
            Void unused11=b1.#e()
            Void unused12=b1.#c()
            Void unused13=b1.#t()
            Void unused14=b1.#o()
            Void unused15=b1.#r()
            Void unused16=b1.#colon()
            b1
            ))
          )
        rcv98.#from(seqBuilder:(
          mut This2.S.SConcat b2=rcv98.#seqBuilder()
          Void unused17=b2.#add(that:this.selector())
          b2
          ))
        )
      rcv97.#from(builder:(
        mut This2.S.SBuilder b3=rcv97.#builder()
        Void unused18=b3.#comma()
        Void unused19=b3.#i()
        Void unused20=b3.#s()
        Void unused21=b3.#P()
        Void unused22=b3.#r()
        Void unused23=b3.#i()
        Void unused24=b3.#v()
        Void unused25=b3.#a()
        Void unused26=b3.#t()
        Void unused27=b3.#e()
        Void unused28=b3.#colon()
        b3
        ))
      )
    rcv96.#from(seqBuilder:(
      mut This2.S.SConcat b4=rcv96.#seqBuilder()
      Void unused29=b4.#add(that:this.isPrivate())
      b4
      ))
    )
  rcv95.#from(builder:(
    mut This2.S.SBuilder b5=rcv95.#builder()
    Void unused30=b5.#cSquare()
    b5
    ))
  ))
class method 
This0 #apply(This2.Introspection.Record record, Library lib) This0.#apply(path:This2.Path.fromDocInternalizedS(that:record.#from(builder:(
  mut This2.S.SBuilder b=record.#builder()
  Void unused=b.#P()
  Void unused0=b.#a()
  Void unused1=b.#t()
  Void unused2=b.#h()
  b
  ))), selector:This2.Selector.fromS(that:record.#from(builder:(
  mut This2.S.SBuilder b0=record.#builder()
  Void unused3=b0.#S()
  Void unused4=b0.#e()
  Void unused5=b0.#l()
  Void unused6=b0.#e()
  Void unused7=b0.#c()
  Void unused8=b0.#t()
  Void unused9=b0.#o()
  Void unused10=b0.#r()
  b0
  ))), isPrivate:This2.Bool.fromS(that:record.#from(builder:(
  mut This2.S.SBuilder b1=record.#builder()
  Void unused11=b1.#I()
  Void unused12=b1.#s()
  Void unused13=b1.#P()
  Void unused14=b1.#r()
  Void unused15=b1.#i()
  Void unused16=b1.#v()
  Void unused17=b1.#a()
  Void unused18=b1.#t()
  Void unused19=b1.#e()
  b1
  ))))
class method 
This2.S libName() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  Void unused=b.#M()
  Void unused0=b.#e()
  Void unused1=b.#m()
  Void unused2=b.#b()
  Void unused3=b.#e()
  Void unused4=b.#r()
  Void unused5=b.#U()
  Void unused6=b.#n()
  Void unused7=b.#a()
  Void unused8=b.#v()
  Void unused9=b.#a()
  Void unused10=b.#i()
  Void unused11=b.#l()
  Void unused12=b.#a()
  Void unused13=b.#b()
  Void unused14=b.#l()
  Void unused15=b.#e()
  b
  ))
refine class method 
This2.S kind() This0.readableName()
refine method 
This2.S text() This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  ))
refine method 
This2.Message.Opt responseOf() This2.Message.Opt.#apply()
refine read method 
class This2.Message class() This0
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
Void #apply(Library lift) exception This0 (
  This2.Introspection.Record record=This2.Introspection.Record.#apply(lib:lift)
  This2.S x=record.#from(builder:(
    mut This2.S.SBuilder b=record.#builder()
    Void unused=b.#K()
    Void unused0=b.#i()
    Void unused1=b.#n()
    Void unused2=b.#d()
    b
    ))
  (
    This2.Bool cond=x.#equalequal(that:This0.libName())
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception This0.#apply(record:record, lib:lift))
      )
    )
  )}}
Refactor: {
class method 
Library compose(Library left, Library right) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This1.SafeOperators.compose(left:left, right:right)
    
    catch error Library err (
      Void unused1=This1.MetaGuard.ClassClash.#apply(lift:err)
      Void unused2=This1.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Void checkTargetExists(Library that, This1.Path path) exception This1.MetaGuard.NestedClassUnavailable (
  Library unused=This0.AddDocumentationPath.#apply(that:path, doc:This1.Introspection.Doc.#from(builder:(
    mut This1.S.SBuilder b=This1.Introspection.Doc.#builder()
    Void unused0=b.#J()
    Void unused1=b.#u()
    Void unused2=b.#s()
    Void unused3=b.#t()
    Void unused4=b.#T()
    Void unused5=b.#o()
    Void unused6=b.#S()
    Void unused7=b.#e()
    Void unused8=b.#e()
    Void unused9=b.#I()
    Void unused10=b.#f()
    Void unused11=b.#I()
    Void unused12=b.#t()
    Void unused13=b.#I()
    Void unused14=b.#s()
    Void unused15=b.#T()
    Void unused16=b.#h()
    Void unused17=b.#e()
    Void unused18=b.#r()
    Void unused19=b.#e()
    b
    ))).#leftrightleft(that:that)
  
  catch exception This1.MetaGuard.InvalidOnTopLevel x error This1.X.#from(builder:(
    mut This1.S.SBuilder b0=This1.X.#builder()
    Void unused20=b0.#R()
    Void unused21=b0.#e()
    Void unused22=b0.#f()
    Void unused23=b0.#a()
    Void unused24=b0.#c()
    Void unused25=b0.#t()
    Void unused26=b0.#o()
    Void unused27=b0.#r()
    Void unused28=b0.#4()
    b0
    ))
  
  void
  )
RedirectType: {
class method 
mut This0 #mutK(This2.Path that, This2.Introspection.Type to) 
class method 
This0 #apply(This2.Path that, This2.Introspection.Type to) This0.#mutK(that:that, to:to)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
This2.Introspection.Type #to() 
read method 
This2.Introspection.Type to() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.InvalidOnTopLevel, This2.MetaGuard.SourceUnfit, This2.MetaGuard.MethodClash, This2.MetaGuard.ClassClash, This2.MetaGuard.IncoherentRedirectMapping (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.to().isVoid()
      (
        Void unused5=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.Redirect.#apply(that:this.that(), to:Void).#leftrightleft(that:that))
        )
      )
    Void unused1=(
      This2.Bool cond0=this.to().isAny()
      (
        Void unused6=cond0.#checkTrue()
        
        catch exception Void catched2 void
        
        (return This1.Redirect.#apply(that:this.that(), to:Any).#leftrightleft(that:that))
        )
      )
    Void unused2=(
      This2.Bool cond1=this.to().isLibrary()
      (
        Void unused7=cond1.#checkTrue()
        
        catch exception Void catched4 void
        
        (return This1.Redirect.#apply(that:this.that(), to:Library).#leftrightleft(that:that))
        )
      )
    This2.Introspection.NestedClass nc=this.to().referencedPath()
    Void unused3=(
      This2.Bool cond2=nc.hasExternalType()
      (
        Void unused8=cond2.#checkTrue()
        
        catch exception Void catched6 void
        
        (return This1.Redirect.#apply(that:this.that(), to:nc.externalType()).#leftrightleft(that:that))
        )
      )
    Void unused4=return This1.RenamePath.#apply(that:this.that(), to:nc.pathFromRoot()).#leftrightleft(that:that)
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Redirect: {
class method 
mut This0 #mutK(This2.Path that, class Any to) 
class method 
This0 #apply(This2.Path that, class Any to) This0.#mutK(that:that, to:to)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
class Any #to() 
read method 
class Any to() 
class method 
This1.RedirectType #apply(This2.Path that, This2.Introspection.Type toType) This1.RedirectType.#apply(that:that, to:toType)
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.InvalidOnTopLevel, This2.MetaGuard.SourceUnfit, This2.MetaGuard.MethodClash, This2.MetaGuard.IncoherentRedirectMapping (
  Void unused=(
    Void unused0=return This2.SafeOperators.redirect(that:that, src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.InvalidOnTopLevel.#apply(lift:err)
      Void unused3=This2.MetaGuard.SourceUnfit.#apply(lift:err)
      Void unused4=This2.MetaGuard.MethodClash.#apply(lift:err)
      Void unused5=This2.MetaGuard.IncoherentRedirectMapping.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
RenameSelector: {
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Selector to) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Selector to) This0.#mutK(that:that, of:of, to:to)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Selector #to() 
read method 
This2.Selector to() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.renameMethod(that:that, path:this.of(), src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
RenamePath: {
class method 
mut This0 #mutK(This2.Path that, This2.Path to) 
class method 
This0 #apply(This2.Path that, This2.Path to) This0.#mutK(that:that, to:to)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
This2.Path #to() 
read method 
This2.Path to() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.MethodClash, This2.MetaGuard.ClassClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.renameClass(that:that, src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      Void unused3=This2.MetaGuard.ClassClash.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
RemoveImplementationSelector: {
class method 
mut This0 #mutK(This2.Selector that, This2.Path of) 
class method 
This0 #apply(This2.Selector that, This2.Path of) This0.#mutK(that:that, of:of)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable (
  Void unused=(
    Void unused0=return This2.SafeOperators.removeImplementation(that:that, path:this.of(), selector:this.that())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
MoveImplementationSelector: {
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Selector to) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Selector to) This0.#mutK(that:that, of:of, to:to)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Selector #to() 
read method 
This2.Selector to() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.moveImplementation(that:that, path:this.of(), src:this.that(), dest:this.to())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
RemoveImplementationPath: {
class method 
mut This0 #mutK(This2.Path that) 
class method 
This0 #apply(This2.Path that) This0.#mutK(that:that)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.PrivacyCoupuled (
  Void unused=(
    Void unused0=return This2.SafeOperators.removeImplementation(that:that, path:this.that())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.PrivacyCoupuled.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
AddDocumentationSelector: {
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Introspection.Doc doc) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Introspection.Doc doc) This0.#mutK(that:that, of:of, doc:doc)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Introspection.Doc #doc() 
read method 
This2.Introspection.Doc doc() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable (
  Void unused=(
    Void unused0=return This2.SafeOperators.addDocumentation(that:that, path:this.of(), selector:this.that(), doc:this.doc())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
AddDocumentationPath: {
class method 
mut This0 #mutK(This2.Path that, This2.Introspection.Doc doc) 
class method 
This0 #apply(This2.Path that, This2.Introspection.Doc doc) This0.#mutK(that:that, doc:doc)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
mut method 
This2.Introspection.Doc #doc() 
read method 
This2.Introspection.Doc doc() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.InvalidOnTopLevel (
  Void unused=(
    Void unused0=return This2.SafeOperators.addDocumentation(that:that, path:this.that(), doc:this.doc())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused2=This2.MetaGuard.InvalidOnTopLevel.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
MakePrivatePath: {
class method 
mut This0 #mutK(This2.Path that) 
class method 
This0 #apply(This2.Path that) This0.#mutK(that:that)
mut method 
This2.Path #that() 
read method 
This2.Path that() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.InvalidOnTopLevel This1.AddDocumentationPath.#apply(that:this.that(), doc:This2.Introspection.Doc.#apply(that: {/*@private
*/})).#leftrightleft(that:that)}
MakePrivateSelector: {
class method 
mut This0 #mutK(This2.Selector that, This2.Path of) 
class method 
This0 #apply(This2.Selector that, This2.Path of) This0.#mutK(that:that, of:of)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable This1.AddDocumentationSelector.#apply(that:this.that(), of:this.of(), doc:This2.Introspection.Doc.#apply(that: {/*@private
*/})).#leftrightleft(that:that)}
SumMethods: {
class method 
mut This0 #mutK(This2.Selector that, This2.Selector and, This2.Path of, This2.S over, This2.Selector to) 
class method 
This0 #apply(This2.Selector that, This2.Selector and, This2.Path of, This2.S over, This2.Selector to) This0.#mutK(that:that, and:and, of:of, over:over, to:to)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Selector #and() 
read method 
This2.Selector and() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.S #over() 
read method 
This2.S over() 
mut method 
This2.Selector #to() 
read method 
This2.Selector to() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MemberUnavailable, This2.MetaGuard.MethodClash, This2.MetaGuard.ParameterMismatch (
  Void unused=(
    Void unused0=return This2.SafeOperators.sumMethods(that:that, path:this.of(), src1:this.that(), src2:this.and(), dest:this.to(), name:this.over())
    
    catch error Library err (
      Void unused1=This2.MetaGuard.DispatchMemberUnavailable.#apply(that:err)
      Void unused2=This2.MetaGuard.MethodClash.#apply(lift:err)
      Void unused3=This2.MetaGuard.ParameterMismatch.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
MakeMethod: {
class method 
mut This0 #mutK(This2.Selector that, This2.Path of, This2.Introspection.Mdf.List mdfs, This2.Size exceptionN) 
class method 
This0 #apply(This2.Selector that, This2.Path of, This2.Introspection.Mdf.List mdfs, This2.Size exceptionN) This0.#mutK(that:that, of:of, mdfs:mdfs, exceptionN:exceptionN)
mut method 
This2.Selector #that() 
read method 
This2.Selector that() 
mut method 
This2.Path #of() 
read method 
This2.Path of() 
mut method 
This2.Introspection.Mdf.List #mdfs() 
read method 
This2.Introspection.Mdf.List mdfs() 
mut method 
This2.Size #exceptionN() 
read method 
This2.Size exceptionN() 
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.NestedClassUnavailable, This2.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=return This2.SafeOperators.makeMethod(that:that, path:this.of(), selector:this.that(), mdfs:(
      This2.S.Continue rcv101=(
        This2.S rcv102=This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          b0
          ))
        rcv102.#from(seqBuilder:(
          mut This2.S.SConcat b=rcv102.#seqBuilder()
          Void unused1=(
            lent This2.Introspection.Mdf.List.IteratorVal m=this.mdfs().vals()
            (
              Void unused2=(
                Void unused3=(
                  Void unused4=loop (
                    Void unused5=m.#next()
                    
                    catch exception Void catched2 (
                      Void unused6=(
                        Void unused7=m.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      exception void
                      )
                    
                    ((
                      Void unused8=b.#add(that:m.#inner().name(), sep:This2.S.#from(builder:(
                        mut This2.S.SBuilder b1=This2.S.#builder()
                        Void unused9=b1.#space()
                        b1
                        )))
                      void
                      ))
                    )
                  
                  catch exception Void catched7 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused10=m.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return Library propagated0 (
                Void unused11=m.#close()
                return propagated0
                )
              
              m.#close()
              )
            )
          b
          ))
        )
      rcv101.#from(builder:(
        mut This2.S.SBuilder b2=rcv101.#builder()
        b2
        ))
      ), exceptionN:this.exceptionN())
    
    catch error Library err (
      Void unused12=This2.MetaGuard.NestedClassUnavailable.#apply(lift:err)
      Void unused13=This2.MetaGuard.MethodClash.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Tools: {
class method 
This2.S getToSOrName(read Any that) (
  Void unused=(
    This2.Concept.ToS that1=(
      Void unused0=return that
      
      catch return This2.Concept.ToS casted0 casted0
      
      catch return Any casted0 exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 (
      This2.Concept.Classable that0=(
        Void unused1=return that
        
        catch return This2.Concept.Classable casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched2 return This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        Void unused2=b.#i()
        Void unused3=b.#n()
        Void unused4=b.#s()
        Void unused5=b.#t()
        Void unused6=b.#a()
        Void unused7=b.#n()
        Void unused8=b.#c()
        Void unused9=b.#e()
        Void unused10=b.#space()
        Void unused11=b.#n()
        Void unused12=b.#o()
        Void unused13=b.#t()
        Void unused14=b.#space()
        Void unused15=b.#T()
        Void unused16=b.#o()
        Void unused17=b.#S()
        Void unused18=b.#space()
        Void unused19=b.#o()
        Void unused20=b.#r()
        Void unused21=b.#space()
        Void unused22=b.#C()
        Void unused23=b.#l()
        Void unused24=b.#a()
        Void unused25=b.#s()
        Void unused26=b.#s()
        Void unused27=b.#a()
        Void unused28=b.#b()
        Void unused29=b.#l()
        Void unused30=b.#e()
        b
        ))
      
      (
        Void unused31=return This2.GetMyName.#apply(that:that0.class()).#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused32=b0.#space()
          Void unused33=b0.#i()
          Void unused34=b0.#n()
          Void unused35=b0.#s()
          Void unused36=b0.#t()
          Void unused37=b0.#a()
          Void unused38=b0.#n()
          Void unused39=b0.#c()
          Void unused40=b0.#e()
          b0
          )))
        void
        )
      )
    
    (
      Void unused41=return that1.toS()
      void
      )
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library specializeField(This2.Selector selector, This2.Introspection.Type type, Library forReadable, Library forClass) exception This0.CanNotSpecializeOperation (
  Void unused=(
    Void unused0=(
      This2.Bool cond=(
        This2.Introspection.Mdf rcv103=type.mdf()
        rcv103.equals(that:rcv103.class()._Class())
        )
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return this.specialize(that:forClass, selector:selector, type:type))
        )
      )
    Void unused1=(
      This2.Bool cond0=(
        This2.Introspection.Mdf rcv104=type.mdf()
        rcv104.equals(that:rcv104.class()._Immutable())
        )
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched4 void
        
        (return this.specialize(that:this.readToImm(that:forReadable), selector:selector, type:type))
        )
      )
    Void unused2=return this.specialize(that:forReadable, selector:selector, type:type)
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method /* maybe private
*/Library specialize(Library that, This2.Selector selector, This2.Introspection.Type type) exception This0.CanNotSpecializeOperation (
  Void unused=(
    Void unused0=return This2.Refactor.Redirect.#apply(that:This2.Path.#from(builder:(
      mut This2.S.SBuilder b=This2.Path.#builder()
      Void unused1=b.#T()
      b
      )), toType:type).#leftrightleft(that:This2.Refactor.RenameSelector.#apply(that:This2.Selector.#from(builder:(
      mut This2.S.SBuilder b0=This2.Selector.#builder()
      Void unused2=b0.#f()
      Void unused3=b0.#oRound()
      Void unused4=b0.#cRound()
      b0
      )), of:This2.Path.#from(builder:(
      mut This2.S.SBuilder b1=This2.Path.#builder()
      Void unused5=b1.#T()
      Void unused6=b1.#h()
      Void unused7=b1.#i()
      Void unused8=b1.#s()
      b1
      )), to:selector).#leftrightleft(that:that))
    
    catch exception This2.MetaGuard catched2 exception This0.CanNotSpecializeOperation.#from(builder:(
      mut This2.S.SBuilder b2=This0.CanNotSpecializeOperation.#builder()
      Void unused9=b2.#U()
      Void unused10=b2.#n()
      Void unused11=b2.#f()
      Void unused12=b2.#i()
      Void unused13=b2.#t()
      Void unused14=b2.#space()
      Void unused15=b2.#o()
      Void unused16=b2.#p()
      Void unused17=b2.#e()
      Void unused18=b2.#r()
      Void unused19=b2.#a()
      Void unused20=b2.#t()
      Void unused21=b2.#i()
      Void unused22=b2.#o()
      Void unused23=b2.#n()
      b2
      )).#apply(that:catched2)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method /* maybe private
*/Library readToImm(Library that) exception This0.CanNotSpecializeOperation (
  Void unused=(
    Library res= {
    read method 
    read This0.T f() this.#0f()
    read method 
    This0.T #0f() 
    T: {}}
    mut This0.Varres0__112_0 varres0=This0.Varres0__112_0.#apply(inner:res)
    Void unused0=varres0.inner(that:This2.Refactor.compose(left:varres0.#inner(), right:that))
    Void unused1=varres0.inner(that:This2.Refactor.MakePrivateSelector.#apply(that:This2.Selector.#from(builder:(
      mut This2.S.SBuilder b=This2.Selector.#builder()
      Void unused3=b.#f()
      Void unused4=b.#oRound()
      Void unused5=b.#cRound()
      b
      )), of:This2.Path.#from(builder:(
      mut This2.S.SBuilder b0=This2.Path.#builder()
      Void unused6=b0.#T()
      Void unused7=b0.#h()
      Void unused8=b0.#i()
      Void unused9=b0.#s()
      b0
      ))).#leftrightleft(that:varres0.#inner()))
    Void unused2=varres0.inner(that:This2.Refactor.RenameSelector.#apply(that:This2.Selector.#from(builder:(
      mut This2.S.SBuilder b1=This2.Selector.#builder()
      Void unused10=b1.#hash()
      Void unused11=b1.#0()
      Void unused12=b1.#f()
      Void unused13=b1.#oRound()
      Void unused14=b1.#cRound()
      b1
      )), of:This2.Path.#from(builder:(
      mut This2.S.SBuilder b2=This2.Path.#builder()
      Void unused15=b2.#T()
      Void unused16=b2.#h()
      Void unused17=b2.#i()
      Void unused18=b2.#s()
      b2
      )), to:This2.Selector.#from(builder:(
      mut This2.S.SBuilder b3=This2.Selector.#builder()
      Void unused19=b3.#f()
      Void unused20=b3.#oRound()
      Void unused21=b3.#cRound()
      b3
      ))).#leftrightleft(that:varres0.#inner()))
    
    catch exception This2.MetaGuard catched4 exception This0.CanNotSpecializeOperation.#from(builder:(
      mut This2.S.SBuilder b4=This0.CanNotSpecializeOperation.#builder()
      Void unused22=b4.#U()
      Void unused23=b4.#n()
      Void unused24=b4.#f()
      Void unused25=b4.#i()
      Void unused26=b4.#t()
      Void unused27=b4.#space()
      Void unused28=b4.#o()
      Void unused29=b4.#p()
      Void unused30=b4.#e()
      Void unused31=b4.#r()
      Void unused32=b4.#a()
      Void unused33=b4.#t()
      Void unused34=b4.#i()
      Void unused35=b4.#o()
      Void unused36=b4.#n()
      b4
      )).#apply(that:catched4)
    
    (
      Void unused37=return varres0.#inner()
      void
      )
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varres0__112_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
CanNotSpecializeOperation: {implements This3.MetaGuard, This3.Guard, This3.Message, This3.Concept.ToS, This3.Concept.Equals, This3.Concept.Classable
refine class method 
This3.S kind() this.readableName()
refine method 
This3.S text() this._text()
refine method 
This3.Message.Opt responseOf() this.cause()
refine read method 
class This3.Message class() This0
refine read method 
This3.S toS() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote()))))
        )
      )
    This3.S res=This0.kind()
    mut This0.Varres_$%29_0__113_0 varres=This0.Varres_$%29_0__113_0.#apply(inner:res)
    Void unused1=(
      This3.Bool cond0=this.text().#equalequal(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b=This3.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b0=This3.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b1=This3.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This3.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This3.S.doubleQuote().#plusplus(that:This3.S.#from(builder:(
          mut This3.S.SBuilder b2=This3.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This3.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This3.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This3.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This3.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This3.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This3.S _text, This3.Message.Opt cause) 
class method 
This0 #apply(This3.S _text, This3.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This3.S #_text() 
read method 
This3.S _text() 
mut method 
This3.Message.Opt #cause() 
read method 
This3.Message.Opt cause() 
method 
This0 #apply(This3.Message that) This0.#apply(text:this.text(), cause:that)
method 
This3.Bool #equalequal(This0 that) This3.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This3.S text) This0.#apply(_text:text, cause:This3.Message.Opt.#apply())
class method 
This0 #apply(This3.S text, This3.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This3.Message.Opt.#apply(that:cause)))
class method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
class method 
This0 #from(This3.S.SBuilder builder) This0.#apply(text:This3.S.#from(builder:builder))
method 
This0.Continue #from(This3.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This3.S.SConcat #seqBuilder() This3.S.SConcat.#apply(old:this.text(), accumulator:This3.S.#from(builder:(
  mut This3.S.SBuilder b=This3.S.#builder()
  b
  )))
Varres_$%29_0__113_0:/*@private*/ {
class method 
mut This0 #mutK(This4.S inner) 
class method 
mut This0 #apply(This4.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This4.S that) 
mut method 
This4.S #inner() 
read method 
This4.S inner() }
Continue: {
class method 
mut This0 #mutK(This4.S that) 
class method 
This0 #apply(This4.S that) This0.#mutK(that:that)
mut method 
This4.S #that() 
read method 
This4.S that() 
method 
mut This4.S.SBuilder #builder() This4.S.SBuilder.empty()
method 
This1 #from(This4.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This4.S.#from(builder:builder)))}}}
Rename: {
class method 
This1.RenamePath path(This2.Path that, This2.Path to) This1.RenamePath.#apply(that:that, to:to)
class method 
class This2.Path #default#path(Void that) This2.Path
class method 
class This2.Path #default#path(Void to) This2.Path
class method 
This1.RenameSelector selector(This2.Selector that, This2.Path of, This2.Selector to) This1.RenameSelector.#apply(that:that, of:of, to:to)
class method 
This1.RenameSelector selector(This2.Selector that, This2.Selector to) (//still throw general exceptions
This1.RenameSelector.#apply(that:that, of:This2.Path.#from(builder:(
  mut This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  Void unused3=b.#0()
  b
  )), to:to))
class method 
class This2.Selector #default#selector(Void that) This2.Selector
class method 
class This2.Selector #default#selector(Void to) This2.Selector
class method 
class This2.Path #default#selector(Void of) This2.Path}
Hide: {
class method 
This1.MakePrivateSelector selector(This2.Selector that, This2.Path of) This1.MakePrivateSelector.#apply(that:that, of:of)
class method 
This1.MakePrivateSelector selector(This2.Selector that) This1.MakePrivateSelector.#apply(that:that, of:This2.Path.#from(builder:(
  mut This2.S.SBuilder b=This2.Path.#builder()
  Void unused=b.#T()
  Void unused0=b.#h()
  Void unused1=b.#i()
  Void unused2=b.#s()
  Void unused3=b.#0()
  b
  )))
class method 
class This2.Selector #default#selector(Void that) This2.Selector
class method 
class This2.Path #default#selector(Void of) This2.Path}}
PrW: {/*private wrapper
@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator
*/
class method 
Library #leftrightleft(Library that) use This0 check #main(_1_Library:that) error void}
Refactor2: {
Fail: {interface implements This2.Concept.ToS, This2.Concept.Classable
method 
This2.S text() 
refine read method 
This2.S toS() 
refine read method 
class This2.Concept.Classable class() 
refine class method 
This2.S readableName() 
refine class method 
This2.Bool is(class Any subtype) }
ErrorW: {
class method 
Library trait()  {/*@plugin is.L42.connected.withSafeOperators
*/implements This2.Fail, This3.Concept.ToS, This3.Concept.Classable
refine read method 
This3.S toS() (
  This3.S.Continue rcv105=(
    This3.S rcv106=This0.readableName()
    rcv106.#from(seqBuilder:(
      mut This3.S.SConcat b=rcv106.#seqBuilder()
      Void unused=b.#add(that:This3.S.#from(builder:(
        mut This3.S.SBuilder b0=This3.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This3.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv105.#from(builder:(
    mut This3.S.SBuilder b1=rcv105.#builder()
    b1
    ))
  )
refine read method 
class This0 class() This0
refine class method 
This3.S readableName() This3.GetMyName.#apply(that:This0)
refine class method 
This3.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This3.Bool.true()
        void
        )
      )
    Void unused1=return This3.Bool.false()
    void
    )
  
  catch return This3.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine method 
This3.S text() }
class method 
Library #leftrightleft(Library that) This2.SafeOperatorsAccess.compose(left:that, right:This0.trait())}
JavaImport: {/*@plugin is.L42.connected.withSafeOperators
@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator
*/
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
class method 
Library #leftrightleft(Library that) exception This1.UnresolvedOverloading, This1.ClassUnfit, This1.MethodUnfit This0.main(that:that)
class method 
Library main(Library that) exception This1.UnresolvedOverloading, This1.ClassUnfit, This1.MethodUnfit (
  Library res=use This0 check #main(_1_ast%ExpCore$ClassB:that) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator\u000amethod name: main(that)\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.PlgWrapperGenerator.#main(_1_ast%ExpCore$ClassB)\u000a
*/})
  
  catch error Library x (
    Void unused0=This1.UnresolvedOverloading.#exceptionIf(binaryRepr:x)
    Void unused1=This1.ClassUnfit.#exceptionIf(binaryRepr:x)
    Void unused2=This1.MethodUnfit.#exceptionIf(binaryRepr:x)
    error x
    )
  
  res
  )}
UnresolvedOverloading: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
refine read method 
This2.S toS() (
  This2.S.Continue rcv105=(
    This2.S rcv106=This0.readableName()
    rcv106.#from(seqBuilder:(
      mut This2.S.SConcat b=rcv106.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv105.#from(builder:(
    mut This2.S.SBuilder b1=rcv105.#builder()
    b1
    ))
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$UnresolvedOverloading.text(_this)\u000a
*/})
  res
  ))}
ClassUnfit: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
refine read method 
This2.S toS() (
  This2.S.Continue rcv105=(
    This2.S rcv106=This0.readableName()
    rcv106.#from(seqBuilder:(
      mut This2.S.SConcat b=rcv106.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv105.#from(builder:(
    mut This2.S.SBuilder b1=rcv105.#builder()
    b1
    ))
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$ClassUnfit.text(_this)\u000a
*/})
  res
  ))}
MethodUnfit: {/*@pluginPart is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit
@plugin is.L42.connected.withSafeOperators
*/implements This1.Fail, This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #from(Library binaryRepr) 
read method 
Library #binaryRepr() 
class method 
Void #exceptionIf(Library binaryRepr) exception This0 use This0 check instanceof(_this:binaryRepr) exception This0.#from(binaryRepr:binaryRepr)
refine read method 
This2.S toS() (
  This2.S.Continue rcv105=(
    This2.S rcv106=This0.readableName()
    rcv106.#from(seqBuilder:(
      mut This2.S.SConcat b=rcv106.#seqBuilder()
      Void unused=b.#add(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b0=This2.S.#builder()
        Void unused2=b0.#colon()
        Void unused3=b0.#space()
        b0
        )))
      Void unused0=b.#add(that:This2.S.nl())
      Void unused1=b.#add(that:this.text().as42MultilineString())
      b
      ))
    )
  rcv105.#from(builder:(
    mut This2.S.SBuilder b1=rcv105.#builder()
    b1
    ))
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library #pluginUnresponsive(Library binaryRepr) binaryRepr
refine method 
This2.S text() This2.S.#from(binaryRepr:(
  Library res=use This0 check text(_this:this.#binaryRepr()) error This0.#pluginUnresponsive(binaryRepr: {/*@stringU
plugin string: is.L42.connected.withSafeOperators\u000aplugin part: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit\u000amethod name: text()\u000ajava method: is.L42.connected.withSafeOperators.pluginWrapper.RefactorErrors$MethodUnfit.text(_this)\u000a
*/})
  res
  ))}}
Opt: {
class method 
Library #apply(class Any that) This1.SafeOperators.redirect(that: {
class method 
mut This0 #mutK(This0.TOpt that) 
class method 
This0 #new(This0.TOpt that) This0.#mutK(that:that)
mut method 
This0.TOpt #that() 
read method 
This0.TOpt that() 
method 
This0.T get() exception This2.Guard.Operation (
  Void unused=(
    Void unused0=return this.#get()
    
    catch error This2.Guard.Operation err exception err
    
    void
    )
  
  catch return This0.T result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0.T #get() this.that().get()
method 
This2.Bool isPresent() (
  Void unused=(
    Void unused0=(
      This0.TOpt cell=this.that()
      (
        This0.TOf cell0=(
          Void unused2=return cell
          
          catch return This0.TOf casted casted
          
          catch return Any casted exception void
          
          error  {/*@stringU
CastT-Should be unreachable code
*/}
          )
        
        catch exception Void catched1 void
        
        (
          Void unused3=return This2.Bool.true()
          void
          )
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This0 #apply() This0.#new(that:This0.TEmpty.#apply())
class method 
This0 #apply(This0.T that) This0.#new(that:This0.TOf.#apply(that:that))
T: {}
TOpt: {interface 
method 
This1.T get() }
TEmpty: {implements This1.TOpt
class method 
mut This0 #mutK() 
class method 
This0 #apply() This0.#mutK()
refine method 
This1.T get() error This3.Guard.Operation.#from(builder:(
  mut This3.S.SBuilder b=This3.Guard.Operation.#builder()
  Void unused=b.#T()
  Void unused0=b.#E()
  Void unused1=b.#m()
  Void unused2=b.#p()
  Void unused3=b.#t()
  Void unused4=b.#y()
  Void unused5=b.#dot()
  Void unused6=b.#g()
  Void unused7=b.#e()
  Void unused8=b.#t()
  Void unused9=b.#oRound()
  Void unused10=b.#cRound()
  Void unused11=b.#space()
  Void unused12=b.#V()
  Void unused13=b.#a()
  Void unused14=b.#l()
  Void unused15=b.#u()
  Void unused16=b.#e()
  Void unused17=b.#space()
  Void unused18=b.#n()
  Void unused19=b.#o()
  Void unused20=b.#t()
  Void unused21=b.#space()
  Void unused22=b.#p()
  Void unused23=b.#r()
  Void unused24=b.#e()
  Void unused25=b.#s()
  Void unused26=b.#e()
  Void unused27=b.#n()
  Void unused28=b.#t()
  Void unused29=b.#space()
  Void unused30=b.#i()
  Void unused31=b.#n()
  Void unused32=b.#space()
  Void unused33=b.#O()
  Void unused34=b.#p()
  Void unused35=b.#t()
  Void unused36=b.#i()
  Void unused37=b.#o()
  Void unused38=b.#n()
  Void unused39=b.#a()
  Void unused40=b.#l()
  b
  ))}
TOf: {implements This1.TOpt
class method 
mut This0 #mutK(This1.T that) 
class method 
This0 #apply(This1.T that) This0.#mutK(that:that)
mut method 
This1.T #that() 
read method 
This1.T that() 
refine method 
This1.T get() this.that()}}, src:This1.Path.#from(builder:(
  mut This1.S.SBuilder b=This1.Path.#builder()
  Void unused=b.#T()
  b
  )), dest:that)}
PreferentialComposition: {/*members of PreferentialComposition
*/
class method /*@private
*/This0.SrcDests renameMap__48_0(Library that, This1.S prefix, This1.Introspection.NestedClasses intros) This0.SrcDests.#from(seqBuilder:(
  mut This0.SrcDests b=This0.SrcDests.#seqBuilder()
  Void unused=(
    lent This1.Introspection.NestedClasses.IteratorVal intro=intros.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=intro.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=intro.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (
              This0.SrcDests round=this.renameMap(that:that, prefix:prefix, path:intro.#inner().pathFromRoot(), ms:intro.#inner().methods())
              (
                lent This0.SrcDests.IteratorVal r=round.vals()
                (
                  Void unused6=(
                    Void unused7=(
                      Void unused8=loop (
                        Void unused9=r.#next()
                        
                        catch exception Void catched5 (
                          Void unused10=(
                            Void unused11=r.#checkEnd()
                            
                            catch exception Void catched6 void
                            
                            void
                            )
                          exception void
                          )
                        
                        ((
                          Void unused12=b.#add(that:r.#inner())
                          void
                          ))
                        )
                      
                      catch exception Void catched9 void
                      
                      void
                      )
                    
                    catch exception Any propagated (
                      Void unused13=r.#close()
                      exception propagated
                      )
                    
                    void
                    )
                  
                  catch return Any propagated0 (
                    Void unused14=r.#close()
                    return propagated0
                    )
                  
                  r.#close()
                  )
                )
              )
            )
          
          catch exception Void catched14 void
          
          void
          )
        
        catch exception Any propagated1 (
          Void unused15=intro.#close()
          exception propagated1
          )
        
        void
        )
      
      catch return Any propagated2 (
        Void unused16=intro.#close()
        return propagated2
        )
      
      intro.#close()
      )
    )
  b
  ))
class method 
This0.SrcDests renameMap(Library that, This1.S prefix, This1.Path path, This1.Introspection.Methods ms) (
  Void unused=(
    This1.Introspection.NestedClass thatI=This1.Introspection.#apply(lib:that, path:path)
    
    catch exception This1.MetaGuard.MemberUnavailable catched return This0.SrcDests.#from(seqBuilder:(
      mut This0.SrcDests b0=This0.SrcDests.#seqBuilder()
      b0
      ))
    
    (
      Void unused0=return This0.SrcDests.#from(seqBuilder:(
        mut This0.SrcDests b=This0.SrcDests.#seqBuilder()
        Void unused1=(
          lent This1.Introspection.Methods.IteratorVal meth=ms.vals()
          (
            Void unused2=(
              Void unused3=(
                Void unused4=loop (
                  Void unused5=meth.#next()
                  
                  catch exception Void catched2 (
                    Void unused6=(
                      Void unused7=meth.#checkEnd()
                      
                      catch exception Void catched3 void
                      
                      void
                      )
                    exception void
                    )
                  
                  ((
                    This1.Bool cond=this.needRename(that:thatI, meth:meth.#inner())
                    (
                      Void unused8=cond.#checkTrue()
                      
                      catch exception Void catched6 void
                      
                      (
                        This1.Selector destSel=This1.Selector.fromS(that:prefix.#plusplus(that:meth.#inner().selector().toS()))
                        (
                          Void unused9=b.#add(that:This0.SrcDest.#apply(path:path, src:meth.#inner().selector(), dest:destSel))
                          void
                          )
                        )
                      )
                    ))
                  )
                
                catch exception Void catched9 void
                
                void
                )
              
              catch exception Any propagated (
                Void unused10=meth.#close()
                exception propagated
                )
              
              void
              )
            
            catch return This0.SrcDests propagated0 (
              Void unused11=meth.#close()
              return propagated0
              )
            
            meth.#close()
            )
          )
        b
        ))
      void
      )
    )
  
  catch return This0.SrcDests result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
This1.Bool needRename(This1.Introspection.NestedClass that, This1.Introspection.Method meth) (
  Void unused=(
    Void unused0=(
      This1.Bool cond=meth.isPrivate()
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This1.Bool.false())
        )
      )
    Void unused1=(
      This1.Bool cond0=(
        This1.Introspection.MethodKind rcv107=meth.methodKind()
        rcv107.equals(that:rcv107.class()._AbstractMethod())
        )
      (
        Void unused3=cond0.#checkTrue()
        
        catch exception Void catched3 void
        
        (return This1.Bool.false())
        )
      )
    This1.Introspection.Method meth2=that.method(that:meth.selector())
    
    catch exception This1.MetaGuard.MemberUnavailable catched4 return This1.Bool.false()
    
    (
      Void unused4=(
        This1.Bool cond1=meth2.isPrivate()
        (
          Void unused7=cond1.#checkTrue()
          
          catch exception Void catched6 void
          
          (return This1.Bool.false())
          )
        )
      Void unused5=(
        This1.Bool cond2=(
          This1.Introspection.MethodKind rcv108=meth2.methodKind()
          rcv108.equals(that:rcv108.class()._AbstractMethod())
          )
        (
          Void unused8=cond2.#checkTrue()
          
          catch exception Void catched9 void
          
          (return This1.Bool.false())
          )
        )
      Void unused6=return This1.Bool.true()
      void
      )
    )
  
  catch return This1.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
Library #leftrightleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash This1.Refactor.compose(left:that, right: {/*members of each produced class
*/implements This1.$
class method 
mut This0 #mutK(This1.Libs myLibs) 
class method 
This0 #apply(This1.Libs myLibs) This0.#mutK(myLibs:myLibs)
mut method 
This1.Libs #myLibs() 
read method 
This1.Libs myLibs() 
class method 
mut This1.Libs #seqBuilder() This1.Libs.empty()
class method 
This0 #from(This1.Libs seqBuilder) This0.#apply(myLibs:seqBuilder)
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.ClassClash, This2.MetaGuard.MethodClash (
  Void unused=(
    This2.Introspection.NestedClass i=This2.Introspection.#apply(lib:that)
    mut This1.SrcDests map=This1.SrcDests.empty()
    Library acc= {}
    mut This0.Varacc__114_0 varacc=This0.Varacc__114_0.#apply(inner:acc)
    Void unused0=(
      lent This1.Libs.IteratorVal lib=this.myLibs().vals()
      (
        Void unused4=(
          Void unused5=(
            mut This2.Size.Iterator index=This2.Size.#from(builder:(
              mut This2.S.SBuilder b=This2.Size.#builder()
              Void unused6=b.#1()
              b
              )).vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=lib.#next()
                    
                    catch exception Void catched2 (
                      Void unused11=(
                        Void unused14=index.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused12=(
                        Void unused15=lib.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused13=(
                        Void unused16=index.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused17=index.#next()
                      
                      catch exception Void catched7 (
                        Void unused18=(
                          Void unused20=lib.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused19=(
                          Void unused21=index.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        Library libi=lib.#inner()
                        This1.SrcDests rens=This1.renameMap__48_0(that:lib.#inner(), prefix:(
                          This2.S.Continue rcv109=(
                            This2.S rcv110=This2.S.#from(builder:(
                              mut This2.S.SBuilder b0=This2.S.#builder()
                              Void unused23=b0.#hash()
                              b0
                              ))
                            rcv110.#from(seqBuilder:(
                              mut This2.S.SConcat b1=rcv110.#seqBuilder()
                              Void unused24=b1.#add(that:index.#inner())
                              b1
                              ))
                            )
                          rcv109.#from(builder:(
                            mut This2.S.SBuilder b2=rcv109.#builder()
                            b2
                            ))
                          ), intros:i.transitivelyNestedClasses())
                        mut This0.Varlibi__115_0 varlibi=This0.Varlibi__115_0.#apply(inner:libi)
                        Void unused22=(
                          lent This1.SrcDests.IteratorVal ren=rens.vals()
                          (
                            Void unused25=(
                              Void unused26=(
                                Void unused27=loop (
                                  Void unused28=ren.#next()
                                  
                                  catch exception Void catched17 (
                                    Void unused29=(
                                      Void unused30=ren.#checkEnd()
                                      
                                      catch exception Void catched18 void
                                      
                                      void
                                      )
                                    exception void
                                    )
                                  
                                  (
                                    Void unused31=map.add(right:ren.#inner())
                                    varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    )
                                  )
                                
                                catch exception Void catched21 void
                                
                                void
                                )
                              
                              catch exception Any propagated (
                                Void unused32=ren.#close()
                                exception propagated
                                )
                              
                              void
                              )
                            
                            catch return Library propagated0 (
                              Void unused33=ren.#close()
                              return propagated0
                              )
                            
                            ren.#close()
                            )
                          )
                        varacc.inner(that:This2.Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  
                  catch exception Void catched27 void
                  
                  void
                  )
                
                catch exception Any propagated1 (
                  Void unused34=index.#close()
                  exception propagated1
                  )
                
                void
                )
              
              catch return Library propagated2 (
                Void unused35=index.#close()
                return propagated2
                )
              
              index.#close()
              )
            )
          
          catch exception Any propagated3 (
            Void unused36=lib.#close()
            exception propagated3
            )
          
          void
          )
        
        catch return Library propagated4 (
          Void unused37=lib.#close()
          return propagated4
          )
        
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:This2.Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      lent This1.SrcDests.IteratorVal mapi=map.vals()
      (
        Void unused38=(
          Void unused39=(
            Void unused40=loop (
              Void unused41=mapi.#next()
              
              catch exception Void catched37 (
                Void unused42=(
                  Void unused43=mapi.#checkEnd()
                  
                  catch exception Void catched38 void
                  
                  void
                  )
                exception void
                )
              
              (varacc.inner(that:This2.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftrightleft(that:varacc.#inner())))
              )
            
            catch exception Void catched40 void
            
            void
            )
          
          catch exception Any propagated5 (
            Void unused44=mapi.#close()
            exception propagated5
            )
          
          void
          )
        
        catch return Library propagated6 (
          Void unused45=mapi.#close()
          return propagated6
          )
        
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This2.MetaGuard.MemberUnavailable catched45 error This2.X.#from(builder:(
      mut This2.S.SBuilder b3=This2.X.#builder()
      Void unused46=b3.#P()
      Void unused47=b3.#r()
      Void unused48=b3.#e()
      Void unused49=b3.#f()
      Void unused50=b3.#e()
      Void unused51=b3.#r()
      Void unused52=b3.#e()
      Void unused53=b3.#n()
      Void unused54=b3.#t()
      Void unused55=b3.#i()
      Void unused56=b3.#a()
      Void unused57=b3.#l()
      Void unused58=b3.#C()
      Void unused59=b3.#o()
      Void unused60=b3.#m()
      Void unused61=b3.#p()
      Void unused62=b3.#o()
      Void unused63=b3.#s()
      Void unused64=b3.#i()
      Void unused65=b3.#t()
      Void unused66=b3.#i()
      Void unused67=b3.#o()
      Void unused68=b3.#n()
      Void unused69=b3.#1()
      b3
      )).#apply(that:catched45)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #plusplus(This0 that) This0.#apply(myLibs:this.myLibs().#plusplus(that:that.myLibs()))
method 
Library foldLeft(Library resolver) exception This2.MetaGuard.ClassClash, This2.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.myLibs().isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return  {})
        )
      )
    Library res=this.myLibs().left()
    mut This0.Varres1__116_0 varres1=This0.Varres1__116_0.#apply(inner:res)
    Void unused1=(
      lent This1.Libs.IteratorVal libi=this.myLibs().withoutLeft().vals()
      (
        Void unused4=(
          Void unused5=(
            Void unused6=loop (
              Void unused7=libi.#next()
              
              catch exception Void catched2 (
                Void unused8=(
                  Void unused9=libi.#checkEnd()
                  
                  catch exception Void catched3 void
                  
                  void
                  )
                exception void
                )
              
              (varres1.inner(that:This0.#from(seqBuilder:(
                mut This1.Libs b=This0.#seqBuilder()
                Void unused10=b.#add(that:varres1.#inner())
                Void unused11=b.#add(that:libi.#inner())
                b
                )).#leftrightleft(that:resolver)))
              )
            
            catch exception Void catched6 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused12=libi.#close()
            exception propagated
            )
          
          void
          )
        
        catch return Library propagated0 (
          Void unused13=libi.#close()
          return propagated0
          )
        
        libi.#close()
        )
      )
    Void unused2=return varres1.#inner()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine method 
Library solveConflict(Library that, This1.SrcDest location) 
Varacc__114_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varlibi__115_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varres1__116_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }})
$: {interface 
method 
Library solveConflict(Library that, This1.SrcDest location) }
SrcDest: {
class method 
mut This0 #mutK(This2.Path path, This2.Selector src, This2.Selector dest) 
class method 
This0 #apply(This2.Path path, This2.Selector src, This2.Selector dest) This0.#mutK(path:path, src:src, dest:dest)
mut method 
This2.Path #path() 
read method 
This2.Path path() 
mut method 
This2.Selector #src() 
read method 
This2.Selector src() 
mut method 
This2.Selector #dest() 
read method 
This2.Selector dest() }
SrcDests: {implements This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(This1.SrcDest that) this.add(right:that)
class method 
This1.SrcDest cast(Any that) (//#################READ METHODS
(
  Void unused=(
    This1.SrcDest that0=(
      Void unused0=return that
      
      catch return This1.SrcDest casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return This1.SrcDest result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
This1.SrcDest val(This2.Size that) This0.cast(that:this.inner().val(that:that))
read method 
This1.SrcDest left() This0.cast(that:this.inner().val(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
This1.SrcDest right() (//#################MUT METHODS
This0.cast(that:(
  read This2.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, This1.SrcDest val) (
  mut This2.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(This1.SrcDest that) (
  mut This2.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(This1.SrcDest that) (
  mut This2.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, This1.SrcDest val) this.#inner().add(that:that, val:val)
mut method 
Void add(This1.SrcDest right) (
  mut This2.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(This1.SrcDest left) this.#inner().add(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(This1.SrcDest that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, This1.SrcDest val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(This1.SrcDest that) this.with(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(This1.SrcDest that) (//insertion
this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, This1.SrcDest val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(This1.SrcDest that) this.withAlso(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(This1.SrcDest that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, This1.SrcDest filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, This1.SrcDest filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, This1.SrcDest filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(This1.SrcDest filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
This3.SrcDest filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This3.SrcDest #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This3.SrcDest result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.SrcDest filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.SrcDest #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.SrcDest result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() }
IteratorValFill: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.true()
read method 
This2.SrcDest filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.SrcDest #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.SrcDest result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.SrcDest filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, This2.SrcDest filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
This2.SrcDest #filled() }
IteratorVar: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
This2.SrcDest filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
This2.SrcDest #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return This2.SrcDest result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Void inner(This2.SrcDest that) (
  mut This3.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}}
Libs: {implements This2.Concept.ToS, This2.Concept.Classable
class method 
mut This0 #mutK(mut This2.Collections.MutListAny inner) 
class method 
mut This0 #apply(mut This2.Collections.MutListAny inner) This0.#mutK(inner:inner)
mut method 
mut This2.Collections.MutListAny #inner() 
read method 
read This2.Collections.MutListAny inner() 
class method 
This0 #immK(This2.Collections.MutListAny inner) 
class method 
mut This0 empty() This0.#apply(inner:This2.Collections.MutListAny.empty())
class method 
mut This0 #seqBuilder() this.empty()
class method 
mut This0 #from(mut This0 seqBuilder) seqBuilder
mut method 
Void #add(Library that) this.add(right:that)
class method 
Library cast(Any that) (//#################READ METHODS
(
  Void unused=(
    Library that0=(
      Void unused0=return that
      
      catch return Library casted casted
      
      catch return Any casted exception void
      
      error  {/*@stringU
CastT-Should be unreachable code
*/}
      )
    
    catch exception Void catched0 error This2.Collections.CollectionErrors.cast()
    
    (
      Void unused1=return that0
      void
      )
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
read method 
mut This0 reverse() (
  mut This0 result=This0.empty()
  Void unused=(
    lent This0.IteratorVal e=this.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=e.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=e.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (result.add(left:e.#inner()))
            )
          
          catch exception Void catched3 void
          
          void
          )
        
        catch exception Any propagated (
          Void unused6=e.#close()
          exception propagated
          )
        
        void
        )
      
      catch return Any propagated0 (
        Void unused7=e.#close()
        return propagated0
        )
      
      e.#close()
      )
    )
  result
  )
read method 
This2.Size size() this.inner().size()
read method 
This2.Bool isEmpty() this.size().#equalequal(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
read method 
Library val(This2.Size that) This0.cast(that:this.inner().val(that:that))
read method 
Library left() This0.cast(that:this.inner().val(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  ))))
read method 
Library right() (//#################MUT METHODS
This0.cast(that:(
  read This2.Collections.MutListAny rcv27=this.inner()
  rcv27.val(that:rcv27.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))))
  )))
mut method 
Void #apply(This2.Size that, Library val) (
  mut This2.Collections.MutListAny rcv28=this.#inner()
  rcv28.#apply(that:that, val:val)
  )
mut method 
Void left(Library that) (
  mut This2.Collections.MutListAny rcv29=this.#inner()
  rcv29.#apply(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#0()
    b
    )), val:that)
  )
mut method 
Void right(Library that) (
  mut This2.Collections.MutListAny rcv30=this.#inner()
  rcv30.#apply(that:rcv30.size().#less(that:This2.Size.#from(builder:(
    mut This2.S.SBuilder b=This2.Size.#builder()
    Void unused=b.#1()
    b
    ))), val:that)
  )
mut method 
Void add(This2.Size that, Library val) this.#inner().add(that:that, val:val)
mut method 
Void add(Library right) (
  mut This2.Collections.MutListAny rcv31=this.#inner()
  rcv31.add(that:rcv31.size(), val:right)
  )
mut method 
Void add(Library left) this.#inner().add(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:left)
mut method 
Void remove(This2.Size that) this.#inner().remove(that:that)
mut method 
Void removeLeft() this.remove(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
mut method 
Void removeRight() (//#################OPERATORS
this.remove(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
method 
This0 #plus(Library that) this.withAlso(that:this.size(), val:that)
method 
This0 #plusplus(This0 that) (//#################Withs
(
  Void unused=(
    mut This0 res=This0.empty()
    Void unused0=(
      lent This0.IteratorVal e=this.vals()
      (
        Void unused3=(
          Void unused4=(
            Void unused5=loop (
              Void unused6=e.#next()
              
              catch exception Void catched0 (
                Void unused7=(
                  Void unused8=e.#checkEnd()
                  
                  catch exception Void catched1 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched3 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused9=e.#close()
            exception propagated
            )
          
          void
          )
        
        catch return This0 propagated0 (
          Void unused10=e.#close()
          return propagated0
          )
        
        e.#close()
        )
      )
    Void unused1=(
      lent This0.IteratorVal e=that.vals()
      (
        Void unused11=(
          Void unused12=(
            Void unused13=loop (
              Void unused14=e.#next()
              
              catch exception Void catched9 (
                Void unused15=(
                  Void unused16=e.#checkEnd()
                  
                  catch exception Void catched10 void
                  
                  void
                  )
                exception void
                )
              
              (res.add(right:e.#inner()))
              )
            
            catch exception Void catched12 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused17=e.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return This0 propagated2 (
          Void unused18=e.#close()
          return propagated2
          )
        
        e.#close()
        )
      )
    Void unused2=return res
    void
    )
  
  catch return This0 result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  ))
method 
This0 with(This2.Size that, Library val) This0.#immK(inner:this.inner().with(that:that, val:val))
method 
This0 withLeft(Library that) this.with(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withRight(Library that) (//insertion
this.with(that:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  ))), val:that))
method 
This0 withAlso(This2.Size that, Library val) This0.#immK(inner:this.inner().withAlso(that:that, val:val))
method 
This0 withAlsoLeft(Library that) this.withAlso(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )), val:that)
method 
This0 withAlsoRight(Library that) (//skipping/filtering
this.withAlso(that:this.size(), val:that))
method 
This0 without(This2.Size index) This0.#immK(inner:this.inner().without(that:index))
method 
This0 withoutLeft() this.without(index:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )))
method 
This0 withoutRight() (//################# Iterators
this.without(index:this.size().#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#1()
  b
  )))))
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVal.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size minTo) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
read method 
lent This0.IteratorVal vals(This2.Size from, This2.Size to) this.vals(from:from, maxTo:to, minTo:this.inner().size())
read method 
lent This0.IteratorVal vals() this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size())
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size maxTo, This2.Size minTo, Library filled) This0.IteratorValFill.#apply(that:this.inner(), from:from, maxTo:maxTo, minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size minTo, Library filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo, filled:filled)
read method 
lent This0.IteratorValFill vals(This2.Size from, This2.Size to, Library filled) this.vals(from:from, maxTo:to, minTo:this.inner().size(), filled:filled)
read method 
lent This0.IteratorValFill vals(Library filled) this.vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:this.inner().size(), filled:filled)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size maxTo, This2.Size minTo) This0.IteratorVar.#apply(that:this.#inner(), from:from, maxTo:maxTo, minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size minTo) this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#less()
  Void unused0=b.#1()
  b
  )), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused1=b0.#less()
  Void unused2=b0.#2()
  b0
  )), minTo:minTo)
mut method 
lent This0.IteratorVar #vals(This2.Size from, This2.Size to) this.#vals(from:from, maxTo:to, minTo:this.inner().size())
mut method 
lent This0.IteratorVar #vals() this.#vals(from:This2.Size.#from(builder:(
  mut This2.S.SBuilder b=This2.Size.#builder()
  Void unused=b.#0()
  b
  )).#less(that:This2.Size.#from(builder:(
  mut This2.S.SBuilder b0=This2.Size.#builder()
  Void unused0=b0.#1()
  b0
  ))), maxTo:This2.Size.#from(builder:(
  mut This2.S.SBuilder b1=This2.Size.#builder()
  Void unused1=b1.#less()
  Void unused2=b1.#2()
  b1
  )), minTo:this.inner().size())
refine read method 
This2.S toS() this.inner().toS()
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
class This0 class() This0
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
IteratorTrait: {
class method 
Library #apply()  {
read method 
read This4.Collections.MutListAny that() 
read method 
This4.Size from() 
mut method 
Void from(This4.Size that) 
read method 
This4.Size maxTo() 
read method 
This4.Size minTo() 
read method 
This4.Bool isFill() 
read method 
Library filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This4.Size.#from(builder:(
    mut This4.S.SBuilder b=This4.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This4.Bool cond=this.maxTo().#right(that:This4.Size.#from(builder:(
      mut This4.S.SBuilder b0=This4.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This4.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This4.Bool cond=(
    This4.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This4.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This4.Bool cond=(
        This4.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This2.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void}}
IteratorVal: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
Library filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() }
IteratorValFill: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.true()
read method 
Library filled() 
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
lent This0 #lentK(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, Library filled) 
class method 
lent This0 #apply(read This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo, Library filled) This0.#lentK(that:that, from:from, maxTo:maxTo, minTo:minTo, filled:filled)
mut method 
read This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Library #filled() }
IteratorVar: {
read method 
read This3.Collections.MutListAny that() 
read method 
This3.Size from() 
mut method 
Void from(This3.Size that) 
read method 
This3.Size maxTo() 
read method 
This3.Size minTo() 
read method 
This3.Bool isFill() This3.Bool.false()
read method 
Library filled() error This3.X.#from(builder:(
  mut This3.S.SBuilder b=This3.X.#builder()
  Void unused=b.#F()
  Void unused0=b.#i()
  Void unused1=b.#l()
  Void unused2=b.#l()
  Void unused3=b.#e()
  Void unused4=b.#d()
  Void unused5=b.#space()
  Void unused6=b.#c()
  Void unused7=b.#a()
  Void unused8=b.#l()
  Void unused9=b.#l()
  Void unused10=b.#e()
  Void unused11=b.#d()
  Void unused12=b.#space()
  Void unused13=b.#o()
  Void unused14=b.#n()
  Void unused15=b.#space()
  Void unused16=b.#n()
  Void unused17=b.#o()
  Void unused18=b.#t()
  Void unused19=b.#space()
  Void unused20=b.#f()
  Void unused21=b.#i()
  Void unused22=b.#l()
  Void unused23=b.#l()
  Void unused24=b.#space()
  Void unused25=b.#i()
  Void unused26=b.#t()
  Void unused27=b.#e()
  Void unused28=b.#r()
  Void unused29=b.#a()
  Void unused30=b.#t()
  Void unused31=b.#o()
  Void unused32=b.#r()
  Void unused33=b.#comma()
  Void unused34=b.#space()
  Void unused35=b.#s()
  Void unused36=b.#h()
  Void unused37=b.#o()
  Void unused38=b.#u()
  Void unused39=b.#l()
  Void unused40=b.#d()
  Void unused41=b.#space()
  Void unused42=b.#n()
  Void unused43=b.#e()
  Void unused44=b.#v()
  Void unused45=b.#e()
  Void unused46=b.#r()
  Void unused47=b.#space()
  Void unused48=b.#h()
  Void unused49=b.#a()
  Void unused50=b.#p()
  Void unused51=b.#p()
  Void unused52=b.#e()
  Void unused53=b.#n()
  b
  ))
mut method 
Void #next() exception Void (
  Void unused=this.from(that:this.from().#plus(that:This3.Size.#from(builder:(
    mut This3.S.SBuilder b=This3.Size.#builder()
    Void unused1=b.#1()
    b
    ))))
  Void unused0=(
    This3.Bool cond=this.maxTo().#right(that:This3.Size.#from(builder:(
      mut This3.S.SBuilder b0=This3.Size.#builder()
      Void unused2=b0.#0()
      b0
      ))).#and(that:this.from().#rightequal(that:this.maxTo()))
    (
      Void unused3=cond.#checkTrue()
      
      catch exception Void catched2 void
      
      (exception void)
      )
    )
  (
    This3.Bool cond0=this.isFill().#bang().#and(that:this.from().#rightequal(that:this.that().size()))
    (
      Void unused4=cond0.#checkTrue()
      
      catch exception Void catched5 void
      
      (exception void)
      )
    )
  )
read method 
Void #checkEnd() (
  This3.Bool cond=(
    This3.Size opNorm=this.from()
    this.minTo().#right(that:opNorm)
    )
  (
    Void unused=cond.#checkTrue()
    
    catch exception Void catched1 void
    
    (error This3.Collections.CollectionErrors.iterationTermination(from:this.from(), minTo:this.minTo(), size:this.that().size()))
    )
  )
read method 
Library #inner() (
  Void unused=(
    Void unused0=(
      This3.Bool cond=(
        This3.Size opNorm=this.from()
        this.that().size().#right(that:opNorm)
        )
      (
        Void unused2=cond.#checkTrue()
        
        catch exception Void catched1 void
        
        (return This1.cast(that:this.that().val(that:this.from())))
        )
      )
    Void unused1=return this.filled()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
read method 
Void #close() void
class method 
mut This0 #mutK(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) 
class method 
mut This0 #apply(mut This3.Collections.MutListAny that, This3.Size from, This3.Size maxTo, This3.Size minTo) This0.#mutK(that:that, from:from, maxTo:maxTo, minTo:minTo)
mut method 
mut This3.Collections.MutListAny #that() 
mut method 
This3.Size #from() 
mut method 
This3.Size #maxTo() 
mut method 
This3.Size #minTo() 
mut method 
Void inner(Library that) (
  mut This3.Collections.MutListAny rcv32=this.#that()
  rcv32.#apply(that:this.from(), val:that)
  )}}}
Extends: {/*members of each produced class
*/implements This1.PreferentialComposition.$
refine method 
Library solveConflict(Library that, This1.PreferentialComposition.SrcDest location) (
  Void unused=(
    Void unused0=return This1.Refactor.MoveImplementationSelector.#apply(that:location.src(), of:location.path(), to:location.dest()).#leftrightleft(that:that)
    
    catch exception This1.MetaGuard catched error This1.X.#from(builder:(
      mut This1.S.SBuilder b=This1.X.#builder()
      b
      )).#apply(that:catched)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This1.PreferentialComposition.Libs myLibs) 
class method 
This0 #apply(This1.PreferentialComposition.Libs myLibs) This0.#mutK(myLibs:myLibs)
mut method 
This1.PreferentialComposition.Libs #myLibs() 
read method 
This1.PreferentialComposition.Libs myLibs() 
class method 
mut This1.PreferentialComposition.Libs #seqBuilder() This1.PreferentialComposition.Libs.empty()
class method 
This0 #from(This1.PreferentialComposition.Libs seqBuilder) This0.#apply(myLibs:seqBuilder)
method 
Library #leftrightleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    This1.Introspection.NestedClass i=This1.Introspection.#apply(lib:that)
    mut This1.PreferentialComposition.SrcDests map=This1.PreferentialComposition.SrcDests.empty()
    Library acc= {}
    mut This0.Varacc_$%36_0__117_0 varacc=This0.Varacc_$%36_0__117_0.#apply(inner:acc)
    Void unused0=(
      lent This1.PreferentialComposition.Libs.IteratorVal lib=this.myLibs().vals()
      (
        Void unused4=(
          Void unused5=(
            mut This1.Size.Iterator index=This1.Size.#from(builder:(
              mut This1.S.SBuilder b=This1.Size.#builder()
              Void unused6=b.#1()
              b
              )).vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=lib.#next()
                    
                    catch exception Void catched2 (
                      Void unused11=(
                        Void unused14=index.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused12=(
                        Void unused15=lib.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused13=(
                        Void unused16=index.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused17=index.#next()
                      
                      catch exception Void catched7 (
                        Void unused18=(
                          Void unused20=lib.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused19=(
                          Void unused21=index.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        Library libi=lib.#inner()
                        This1.PreferentialComposition.SrcDests rens=This1.PreferentialComposition.renameMap__48_0(that:lib.#inner(), prefix:(
                          This1.S.Continue rcv109=(
                            This1.S rcv110=This1.S.#from(builder:(
                              mut This1.S.SBuilder b0=This1.S.#builder()
                              Void unused23=b0.#hash()
                              b0
                              ))
                            rcv110.#from(seqBuilder:(
                              mut This1.S.SConcat b1=rcv110.#seqBuilder()
                              Void unused24=b1.#add(that:index.#inner())
                              b1
                              ))
                            )
                          rcv109.#from(builder:(
                            mut This1.S.SBuilder b2=rcv109.#builder()
                            b2
                            ))
                          ), intros:i.transitivelyNestedClasses())
                        mut This0.Varlibi_$%37_0__118_0 varlibi=This0.Varlibi_$%37_0__118_0.#apply(inner:libi)
                        Void unused22=(
                          lent This1.PreferentialComposition.SrcDests.IteratorVal ren=rens.vals()
                          (
                            Void unused25=(
                              Void unused26=(
                                Void unused27=loop (
                                  Void unused28=ren.#next()
                                  
                                  catch exception Void catched17 (
                                    Void unused29=(
                                      Void unused30=ren.#checkEnd()
                                      
                                      catch exception Void catched18 void
                                      
                                      void
                                      )
                                    exception void
                                    )
                                  
                                  (
                                    Void unused31=map.add(right:ren.#inner())
                                    varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    )
                                  )
                                
                                catch exception Void catched21 void
                                
                                void
                                )
                              
                              catch exception Any propagated (
                                Void unused32=ren.#close()
                                exception propagated
                                )
                              
                              void
                              )
                            
                            catch return Library propagated0 (
                              Void unused33=ren.#close()
                              return propagated0
                              )
                            
                            ren.#close()
                            )
                          )
                        varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  
                  catch exception Void catched27 void
                  
                  void
                  )
                
                catch exception Any propagated1 (
                  Void unused34=index.#close()
                  exception propagated1
                  )
                
                void
                )
              
              catch return Library propagated2 (
                Void unused35=index.#close()
                return propagated2
                )
              
              index.#close()
              )
            )
          
          catch exception Any propagated3 (
            Void unused36=lib.#close()
            exception propagated3
            )
          
          void
          )
        
        catch return Library propagated4 (
          Void unused37=lib.#close()
          return propagated4
          )
        
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      lent This1.PreferentialComposition.SrcDests.IteratorVal mapi=map.vals()
      (
        Void unused38=(
          Void unused39=(
            Void unused40=loop (
              Void unused41=mapi.#next()
              
              catch exception Void catched37 (
                Void unused42=(
                  Void unused43=mapi.#checkEnd()
                  
                  catch exception Void catched38 void
                  
                  void
                  )
                exception void
                )
              
              (varacc.inner(that:This1.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftrightleft(that:varacc.#inner())))
              )
            
            catch exception Void catched40 void
            
            void
            )
          
          catch exception Any propagated5 (
            Void unused44=mapi.#close()
            exception propagated5
            )
          
          void
          )
        
        catch return Library propagated6 (
          Void unused45=mapi.#close()
          return propagated6
          )
        
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This1.MetaGuard.MemberUnavailable catched45 error This1.X.#from(builder:(
      mut This1.S.SBuilder b3=This1.X.#builder()
      Void unused46=b3.#P()
      Void unused47=b3.#r()
      Void unused48=b3.#e()
      Void unused49=b3.#f()
      Void unused50=b3.#e()
      Void unused51=b3.#r()
      Void unused52=b3.#e()
      Void unused53=b3.#n()
      Void unused54=b3.#t()
      Void unused55=b3.#i()
      Void unused56=b3.#a()
      Void unused57=b3.#l()
      Void unused58=b3.#C()
      Void unused59=b3.#o()
      Void unused60=b3.#m()
      Void unused61=b3.#p()
      Void unused62=b3.#o()
      Void unused63=b3.#s()
      Void unused64=b3.#i()
      Void unused65=b3.#t()
      Void unused66=b3.#i()
      Void unused67=b3.#o()
      Void unused68=b3.#n()
      Void unused69=b3.#1()
      b3
      )).#apply(that:catched45)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #plusplus(This0 that) This0.#apply(myLibs:this.myLibs().#plusplus(that:that.myLibs()))
method 
Library foldLeft(Library resolver) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.myLibs().isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return  {})
        )
      )
    Library res=this.myLibs().left()
    mut This0.Varres1_$%38_0__119_0 varres1=This0.Varres1_$%38_0__119_0.#apply(inner:res)
    Void unused1=(
      lent This1.PreferentialComposition.Libs.IteratorVal libi=this.myLibs().withoutLeft().vals()
      (
        Void unused4=(
          Void unused5=(
            Void unused6=loop (
              Void unused7=libi.#next()
              
              catch exception Void catched2 (
                Void unused8=(
                  Void unused9=libi.#checkEnd()
                  
                  catch exception Void catched3 void
                  
                  void
                  )
                exception void
                )
              
              (varres1.inner(that:This0.#from(seqBuilder:(
                mut This1.PreferentialComposition.Libs b=This0.#seqBuilder()
                Void unused10=b.#add(that:varres1.#inner())
                Void unused11=b.#add(that:libi.#inner())
                b
                )).#leftrightleft(that:resolver)))
              )
            
            catch exception Void catched6 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused12=libi.#close()
            exception propagated
            )
          
          void
          )
        
        catch return Library propagated0 (
          Void unused13=libi.#close()
          return propagated0
          )
        
        libi.#close()
        )
      )
    Void unused2=return varres1.#inner()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varacc_$%36_0__117_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varlibi_$%37_0__118_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varres1_$%38_0__119_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }}
Use: {/*members of each produced class
*/implements This1.PreferentialComposition.$
refine method 
Library solveConflict(Library that, This1.PreferentialComposition.SrcDest location) (
  Void unused=(
    Void unused0=return This1.Refactor.RenameSelector.#apply(that:location.src(), of:location.path(), to:location.dest()).#leftrightleft(that:that)
    
    catch exception This1.MetaGuard catched error This1.X.#from(builder:(
      mut This1.S.SBuilder b=This1.X.#builder()
      b
      )).#apply(that:catched)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This1.PreferentialComposition.Libs myLibs) 
class method 
This0 #apply(This1.PreferentialComposition.Libs myLibs) This0.#mutK(myLibs:myLibs)
mut method 
This1.PreferentialComposition.Libs #myLibs() 
read method 
This1.PreferentialComposition.Libs myLibs() 
class method 
mut This1.PreferentialComposition.Libs #seqBuilder() This1.PreferentialComposition.Libs.empty()
class method 
This0 #from(This1.PreferentialComposition.Libs seqBuilder) This0.#apply(myLibs:seqBuilder)
method 
Library #leftrightleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    This1.Introspection.NestedClass i=This1.Introspection.#apply(lib:that)
    mut This1.PreferentialComposition.SrcDests map=This1.PreferentialComposition.SrcDests.empty()
    Library acc= {}
    mut This0.Varacc_$%39_0__120_0 varacc=This0.Varacc_$%39_0__120_0.#apply(inner:acc)
    Void unused0=(
      lent This1.PreferentialComposition.Libs.IteratorVal lib=this.myLibs().vals()
      (
        Void unused4=(
          Void unused5=(
            mut This1.Size.Iterator index=This1.Size.#from(builder:(
              mut This1.S.SBuilder b=This1.Size.#builder()
              Void unused6=b.#1()
              b
              )).vals()
            (
              Void unused7=(
                Void unused8=(
                  Void unused9=loop (
                    Void unused10=lib.#next()
                    
                    catch exception Void catched2 (
                      Void unused11=(
                        Void unused14=index.#next()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      Void unused12=(
                        Void unused15=lib.#checkEnd()
                        
                        catch exception Void catched4 void
                        
                        void
                        )
                      Void unused13=(
                        Void unused16=index.#checkEnd()
                        
                        catch exception Void catched5 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      Void unused17=index.#next()
                      
                      catch exception Void catched7 (
                        Void unused18=(
                          Void unused20=lib.#checkEnd()
                          
                          catch exception Void catched8 void
                          
                          void
                          )
                        Void unused19=(
                          Void unused21=index.#checkEnd()
                          
                          catch exception Void catched9 void
                          
                          void
                          )
                        exception void
                        )
                      
                      (
                        Library libi=lib.#inner()
                        This1.PreferentialComposition.SrcDests rens=This1.PreferentialComposition.renameMap__48_0(that:lib.#inner(), prefix:(
                          This1.S.Continue rcv109=(
                            This1.S rcv110=This1.S.#from(builder:(
                              mut This1.S.SBuilder b0=This1.S.#builder()
                              Void unused23=b0.#hash()
                              b0
                              ))
                            rcv110.#from(seqBuilder:(
                              mut This1.S.SConcat b1=rcv110.#seqBuilder()
                              Void unused24=b1.#add(that:index.#inner())
                              b1
                              ))
                            )
                          rcv109.#from(builder:(
                            mut This1.S.SBuilder b2=rcv109.#builder()
                            b2
                            ))
                          ), intros:i.transitivelyNestedClasses())
                        mut This0.Varlibi_$%40_0__121_0 varlibi=This0.Varlibi_$%40_0__121_0.#apply(inner:libi)
                        Void unused22=(
                          lent This1.PreferentialComposition.SrcDests.IteratorVal ren=rens.vals()
                          (
                            Void unused25=(
                              Void unused26=(
                                Void unused27=loop (
                                  Void unused28=ren.#next()
                                  
                                  catch exception Void catched17 (
                                    Void unused29=(
                                      Void unused30=ren.#checkEnd()
                                      
                                      catch exception Void catched18 void
                                      
                                      void
                                      )
                                    exception void
                                    )
                                  
                                  (
                                    Void unused31=map.add(right:ren.#inner())
                                    varlibi.inner(that:this.solveConflict(that:varlibi.#inner(), location:ren.#inner()))
                                    )
                                  )
                                
                                catch exception Void catched21 void
                                
                                void
                                )
                              
                              catch exception Any propagated (
                                Void unused32=ren.#close()
                                exception propagated
                                )
                              
                              void
                              )
                            
                            catch return Library propagated0 (
                              Void unused33=ren.#close()
                              return propagated0
                              )
                            
                            ren.#close()
                            )
                          )
                        varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:varlibi.#inner()))
                        )
                      )
                    )
                  
                  catch exception Void catched27 void
                  
                  void
                  )
                
                catch exception Any propagated1 (
                  Void unused34=index.#close()
                  exception propagated1
                  )
                
                void
                )
              
              catch return Library propagated2 (
                Void unused35=index.#close()
                return propagated2
                )
              
              index.#close()
              )
            )
          
          catch exception Any propagated3 (
            Void unused36=lib.#close()
            exception propagated3
            )
          
          void
          )
        
        catch return Library propagated4 (
          Void unused37=lib.#close()
          return propagated4
          )
        
        lib.#close()
        )
      )
    Void unused1=varacc.inner(that:This1.Refactor.compose(left:varacc.#inner(), right:that))
    Void unused2=(
      lent This1.PreferentialComposition.SrcDests.IteratorVal mapi=map.vals()
      (
        Void unused38=(
          Void unused39=(
            Void unused40=loop (
              Void unused41=mapi.#next()
              
              catch exception Void catched37 (
                Void unused42=(
                  Void unused43=mapi.#checkEnd()
                  
                  catch exception Void catched38 void
                  
                  void
                  )
                exception void
                )
              
              (varacc.inner(that:This1.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftrightleft(that:varacc.#inner())))
              )
            
            catch exception Void catched40 void
            
            void
            )
          
          catch exception Any propagated5 (
            Void unused44=mapi.#close()
            exception propagated5
            )
          
          void
          )
        
        catch return Library propagated6 (
          Void unused45=mapi.#close()
          return propagated6
          )
        
        mapi.#close()
        )
      )
    Void unused3=return varacc.#inner()
    
    catch exception This1.MetaGuard.MemberUnavailable catched45 error This1.X.#from(builder:(
      mut This1.S.SBuilder b3=This1.X.#builder()
      Void unused46=b3.#P()
      Void unused47=b3.#r()
      Void unused48=b3.#e()
      Void unused49=b3.#f()
      Void unused50=b3.#e()
      Void unused51=b3.#r()
      Void unused52=b3.#e()
      Void unused53=b3.#n()
      Void unused54=b3.#t()
      Void unused55=b3.#i()
      Void unused56=b3.#a()
      Void unused57=b3.#l()
      Void unused58=b3.#C()
      Void unused59=b3.#o()
      Void unused60=b3.#m()
      Void unused61=b3.#p()
      Void unused62=b3.#o()
      Void unused63=b3.#s()
      Void unused64=b3.#i()
      Void unused65=b3.#t()
      Void unused66=b3.#i()
      Void unused67=b3.#o()
      Void unused68=b3.#n()
      Void unused69=b3.#1()
      b3
      )).#apply(that:catched45)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
method 
This0 #plusplus(This0 that) This0.#apply(myLibs:this.myLibs().#plusplus(that:that.myLibs()))
method 
Library foldLeft(Library resolver) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    Void unused0=(
      This1.Bool cond=this.myLibs().isEmpty()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return  {})
        )
      )
    Library res=this.myLibs().left()
    mut This0.Varres1_$%41_0__122_0 varres1=This0.Varres1_$%41_0__122_0.#apply(inner:res)
    Void unused1=(
      lent This1.PreferentialComposition.Libs.IteratorVal libi=this.myLibs().withoutLeft().vals()
      (
        Void unused4=(
          Void unused5=(
            Void unused6=loop (
              Void unused7=libi.#next()
              
              catch exception Void catched2 (
                Void unused8=(
                  Void unused9=libi.#checkEnd()
                  
                  catch exception Void catched3 void
                  
                  void
                  )
                exception void
                )
              
              (varres1.inner(that:This0.#from(seqBuilder:(
                mut This1.PreferentialComposition.Libs b=This0.#seqBuilder()
                Void unused10=b.#add(that:varres1.#inner())
                Void unused11=b.#add(that:libi.#inner())
                b
                )).#leftrightleft(that:resolver)))
              )
            
            catch exception Void catched6 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused12=libi.#close()
            exception propagated
            )
          
          void
          )
        
        catch return Library propagated0 (
          Void unused13=libi.#close()
          return propagated0
          )
        
        libi.#close()
        )
      )
    Void unused2=return varres1.#inner()
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
Varacc_$%39_0__120_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varlibi_$%40_0__121_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }
Varres1_$%41_0__122_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }}
Patch: {
class method 
mut This0 #mutK(This1.Path that) 
class method 
This0 #apply(This1.Path that) This0.#mutK(that:that)
mut method 
This1.Path #that() 
read method 
This1.Path that() 
method 
Library #leftrightleft(Library that) exception This1.MetaGuard.ClassClash, This1.MetaGuard.MethodClash (
  Void unused=(
    This1.Introspection.NestedClass ip=This1.Introspection.#apply(lib:that, path:this.that())
    This1.Introspection.NestedClasses itr=ip.transitivelyNestedClasses()
    This1.PreferentialComposition.SrcDests rens=This0.renameMap__49_0(that:that, prefix:This1.S.#from(builder:(
      mut This1.S.SBuilder b=This1.S.#builder()
      Void unused4=b.#hash()
      Void unused5=b.#1()
      b
      )), intros:itr)
    mut This1.PreferentialComposition.SrcDests map=This1.PreferentialComposition.SrcDests.empty()
    Library acc=that
    mut This0.Varacc0__123_0 varacc0=This0.Varacc0__123_0.#apply(inner:acc)
    Void unused0=(
      lent This1.PreferentialComposition.SrcDests.IteratorVal ren=rens.vals()
      (
        Void unused6=(
          Void unused7=(
            Void unused8=loop (
              Void unused9=ren.#next()
              
              catch exception Void catched1 (
                Void unused10=(
                  Void unused11=ren.#checkEnd()
                  
                  catch exception Void catched2 void
                  
                  void
                  )
                exception void
                )
              
              (
                Void unused12=map.add(right:ren.#inner())
                Void unused13=varacc0.inner(that:This1.Refactor.MoveImplementationSelector.#apply(that:ren.#inner().src(), of:ren.#inner().path(), to:ren.#inner().dest()).#leftrightleft(that:varacc0.#inner()))
                
                catch exception This1.MetaGuard err error (
                  This1.X.AssertionFail rcv111=This1.X.#from(builder:(
                    mut This1.S.SBuilder b0=This1.X.#builder()
                    Void unused14=b0.#P()
                    Void unused15=b0.#a()
                    Void unused16=b0.#t()
                    Void unused17=b0.#h()
                    Void unused18=b0.#dot()
                    Void unused19=b0.#hash()
                    Void unused20=b0.#l()
                    Void unused21=b0.#e()
                    Void unused22=b0.#s()
                    Void unused23=b0.#s()
                    Void unused24=b0.#l()
                    Void unused25=b0.#e()
                    Void unused26=b0.#s()
                    Void unused27=b0.#s()
                    Void unused28=b0.#oRound()
                    Void unused29=b0.#t()
                    Void unused30=b0.#h()
                    Void unused31=b0.#a()
                    Void unused32=b0.#t()
                    Void unused33=b0.#cRound()
                    b0
                    ))
                  rcv111.#apply(that:err)
                  )
                
                void
                )
              )
            
            catch exception Void catched7 void
            
            void
            )
          
          catch exception Any propagated (
            Void unused34=ren.#close()
            exception propagated
            )
          
          void
          )
        
        catch return Library propagated0 (
          Void unused35=ren.#close()
          return propagated0
          )
        
        ren.#close()
        )
      )
    Void unused1=varacc0.inner(that:This1.Refactor.RenamePath.#apply(that:this.that(), to:This1.Path.#from(builder:(
      mut This1.S.SBuilder b1=This1.Path.#builder()
      Void unused36=b1.#T()
      Void unused37=b1.#h()
      Void unused38=b1.#i()
      Void unused39=b1.#s()
      b1
      ))).#leftrightleft(that:varacc0.#inner()))
    Void unused2=(
      lent This1.PreferentialComposition.SrcDests.IteratorVal mapi=map.vals()
      (
        Void unused40=(
          Void unused41=(
            Void unused42=loop (
              Void unused43=mapi.#next()
              
              catch exception Void catched14 (
                Void unused44=(
                  Void unused45=mapi.#checkEnd()
                  
                  catch exception Void catched15 void
                  
                  void
                  )
                exception void
                )
              
              (varacc0.inner(that:This1.Refactor.MakePrivateSelector.#apply(that:mapi.#inner().dest(), of:mapi.#inner().path()).#leftrightleft(that:varacc0.#inner())))
              )
            
            catch exception Void catched17 void
            
            void
            )
          
          catch exception Any propagated1 (
            Void unused46=mapi.#close()
            exception propagated1
            )
          
          void
          )
        
        catch return Library propagated2 (
          Void unused47=mapi.#close()
          return propagated2
          )
        
        mapi.#close()
        )
      )
    Void unused3=return varacc0.#inner()
    
    catch exception This1.MetaGuard.MemberUnavailable err error (
      This1.X.AssertionFail rcv112=This1.X.#from(builder:(
        mut This1.S.SBuilder b2=This1.X.#builder()
        Void unused48=b2.#P()
        Void unused49=b2.#a()
        Void unused50=b2.#t()
        Void unused51=b2.#h()
        Void unused52=b2.#2()
        b2
        ))
      rcv112.#apply(that:err)
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method /*@private
*/This1.PreferentialComposition.SrcDests renameMap__49_0(Library that, This1.S prefix, This1.Introspection.NestedClasses intros) This1.PreferentialComposition.SrcDests.#from(seqBuilder:(
  mut This1.PreferentialComposition.SrcDests b=This1.PreferentialComposition.SrcDests.#seqBuilder()
  Void unused=(
    lent This1.Introspection.NestedClasses.IteratorVal intro=intros.vals()
    (
      Void unused0=(
        Void unused1=(
          Void unused2=loop (
            Void unused3=intro.#next()
            
            catch exception Void catched0 (
              Void unused4=(
                Void unused5=intro.#checkEnd()
                
                catch exception Void catched1 void
                
                void
                )
              exception void
              )
            
            (
              This1.Strings ns=(//X[!ns.isEmpty()]
intro.#inner().pathFromRoot().names())
              This1.PreferentialComposition.SrcDests round=This1.PreferentialComposition.renameMap(that:that, prefix:prefix, path:This1.Path.from(names:ns.withoutLeft()), ms:intro.#inner().methods())
              (
                lent This1.PreferentialComposition.SrcDests.IteratorVal r=round.vals()
                (
                  Void unused6=(
                    Void unused7=(
                      Void unused8=loop (
                        Void unused9=r.#next()
                        
                        catch exception Void catched5 (
                          Void unused10=(
                            Void unused11=r.#checkEnd()
                            
                            catch exception Void catched6 void
                            
                            void
                            )
                          exception void
                          )
                        
                        ((
                          Void unused12=b.#add(that:r.#inner())
                          void
                          ))
                        )
                      
                      catch exception Void catched9 void
                      
                      void
                      )
                    
                    catch exception Any propagated (
                      Void unused13=r.#close()
                      exception propagated
                      )
                    
                    void
                    )
                  
                  catch return Any propagated0 (
                    Void unused14=r.#close()
                    return propagated0
                    )
                  
                  r.#close()
                  )
                )
              )
            )
          
          catch exception Void catched14 void
          
          void
          )
        
        catch exception Any propagated1 (
          Void unused15=intro.#close()
          exception propagated1
          )
        
        void
        )
      
      catch return Any propagated2 (
        Void unused16=intro.#close()
        return propagated2
        )
      
      intro.#close()
      )
    )
  b
  ))
Varacc0__123_0:/*@private*/ {
class method 
mut This0 #mutK(Library inner) 
class method 
mut This0 #apply(Library inner) This0.#mutK(inner:inner)
mut method 
Void inner(Library that) 
mut method 
Library #inner() 
read method 
Library inner() }}
Default: {
DecorationUnfeasable: {implements This2.MetaGuard, This2.Guard, This2.Message, This2.Concept.ToS, This2.Concept.Equals, This2.Concept.Classable
refine class method 
This2.S kind() this.readableName()
refine method 
This2.S text() this._text()
refine method 
This2.Message.Opt responseOf() this.cause()
refine read method 
class This2.Message class() This0
refine read method 
This2.S toS() (
  Void unused=(
    Void unused0=(
      This2.Bool cond=this.cause().isPresent().#bang()
      (
        Void unused3=cond.#checkTrue()
        
        catch exception Void catched0 void
        
        (return This0.kind().#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote()))))
        )
      )
    This2.S res=This0.kind()
    mut This0.Varres_$%42_0__124_0 varres=This0.Varres_$%42_0__124_0.#apply(inner:res)
    Void unused1=(
      This2.Bool cond0=this.text().#equalequal(that:This2.S.#from(builder:(
        mut This2.S.SBuilder b=This2.S.#builder()
        b
        ))).#bang()
      (
        Void unused4=cond0.#checkTrue()
        
        catch exception Void catched3 (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b0=This2.S.#builder()
          Void unused5=b0.#oSquare()
          b0
          )))))
        
        (varres.inner(that:varres.#inner().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b1=This2.S.#builder()
          Void unused6=b1.#oSquare()
          Void unused7=b1.#t()
          Void unused8=b1.#e()
          Void unused9=b1.#x()
          Void unused10=b1.#t()
          Void unused11=b1.#colon()
          b1
          )).#plusplus(that:This2.S.doubleQuote().#plusplus(that:this.text().#plusplus(that:This2.S.doubleQuote().#plusplus(that:This2.S.#from(builder:(
          mut This2.S.SBuilder b2=This2.S.#builder()
          Void unused12=b2.#comma()
          Void unused13=b2.#space()
          Void unused14=b2.#c()
          Void unused15=b2.#a()
          Void unused16=b2.#u()
          Void unused17=b2.#s()
          Void unused18=b2.#e()
          Void unused19=b2.#colon()
          b2
          )))))))))
        )
      )
    Void unused2=return (
      This2.S.Continue rcv14=varres.#inner().#from(seqBuilder:(
        mut This2.S.SConcat b3=varres.#inner().#seqBuilder()
        Void unused20=b3.#add(that:this.cause().#get())
        b3
        ))
      rcv14.#from(builder:(
        mut This2.S.SBuilder b4=rcv14.#builder()
        Void unused21=b4.#cSquare()
        b4
        ))
      )
    void
    )
  
  catch return This2.S result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine read method 
This2.Bool equals(read Any that) (
  Void unused=(
    Void unused0=(
      This0 that0=(
        Void unused2=return that
        
        catch return This0 casted casted
        
        catch return Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return this.#equalequal(that:that0)
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
refine class method 
This2.S readableName() This2.GetMyName.#apply(that:This0)
refine class method 
This2.Bool is(class Any subtype) (
  Void unused=(
    Void unused0=(
      class This0 subtype0=(
        Void unused2=return subtype
        
        catch return class This0 casted casted
        
        catch return class Any casted exception void
        
        error  {/*@stringU
CastT-Should be unreachable code
*/}
        )
      
      catch exception Void catched0 void
      
      (
        Void unused3=return This2.Bool.true()
        void
        )
      )
    Void unused1=return This2.Bool.false()
    void
    )
  
  catch return This2.Bool result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
class method 
mut This0 #mutK(This2.S _text, This2.Message.Opt cause) 
class method 
This0 #apply(This2.S _text, This2.Message.Opt cause) This0.#mutK(_text:_text, cause:cause)
mut method 
This2.S #_text() 
read method 
This2.S _text() 
mut method 
This2.Message.Opt #cause() 
read method 
This2.Message.Opt cause() 
method 
This0 #apply(This2.Message that) This0.#apply(text:this.text(), cause:that)
method 
This2.Bool #equalequal(This0 that) This2.Message.EqualMessages.#apply(that:this, other:that)
class method 
This0 #apply(This2.S text) This0.#apply(_text:text, cause:This2.Message.Opt.#apply())
class method 
This0 #apply(This2.S text, This2.Message cause) (//next part could become a trait on its own (but S must keep its version)
This0.#apply(_text:text, cause:This2.Message.Opt.#apply(that:cause)))
class method 
mut This2.S.SBuilder #builder() This2.S.SBuilder.empty()
class method 
This0 #from(This2.S.SBuilder builder) This0.#apply(text:This2.S.#from(builder:builder))
method 
This0.Continue #from(This2.S.SConcat seqBuilder) This0.Continue.#apply(that:seqBuilder.old().#plusplus(that:seqBuilder.accumulator()))
method 
mut This2.S.SConcat #seqBuilder() This2.S.SConcat.#apply(old:this.text(), accumulator:This2.S.#from(builder:(
  mut This2.S.SBuilder b=This2.S.#builder()
  b
  )))
Varres_$%42_0__124_0:/*@private*/ {
class method 
mut This0 #mutK(This3.S inner) 
class method 
mut This0 #apply(This3.S inner) This0.#mutK(inner:inner)
mut method 
Void inner(This3.S that) 
mut method 
This3.S #inner() 
read method 
This3.S inner() }
Continue: {
class method 
mut This0 #mutK(This3.S that) 
class method 
This0 #apply(This3.S that) This0.#mutK(that:that)
mut method 
This3.S #that() 
read method 
This3.S that() 
method 
mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()
method 
This1 #from(This3.S.SBuilder builder) This1.#apply(text:this.that().#plusplus(that:This3.S.#from(builder:builder)))}}
Parsable: {
class method 
Library #leftrightleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#from(seqBuilder:(
      mut This2.PreferentialComposition.Libs b=This2.Extends.#seqBuilder()
      Void unused1=b.#add(that: {/*ParseFailure:Message:S[]<><{ implements Guard} no need, related to invariant?
*/
      class method /* if you do not implement it, it is a constructor?
*/This0 fromS(This3.Concept.ToS that) 
      class method 
      This0 #from(This3.S.SBuilder builder) This0.fromS(that:This3.S.#from(binaryRepr:builder.binaryRepr()))
      class method 
      mut This3.S.SBuilder #builder() This3.S.SBuilder.empty()})
      b
      )).#leftrightleft(that:that)
    
    catch exception This2.MetaGuard catched0 exception This1.DecorationUnfeasable.#from(builder:(
      mut This2.S.SBuilder b0=This1.DecorationUnfeasable.#builder()
      Void unused2=b0.#P()
      Void unused3=b0.#a()
      Void unused4=b0.#r()
      Void unused5=b0.#s()
      Void unused6=b0.#a()
      Void unused7=b0.#b()
      Void unused8=b0.#l()
      Void unused9=b0.#e()
      b0
      )).#apply(that:catched0)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
SealState: {/* how to specify which factory to keep out? what getters
*/
class method 
Library #leftrightleft(Library that) (
  Void unused=(
    This2.Introspection.NestedClass i=This2.Introspection.#apply(lib:that)
    Void unused0=return that
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
DataFromToS: {/* in the future we can add also hashCode and > =>
*/
class method 
Library #leftrightleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#from(seqBuilder:(
      mut This2.PreferentialComposition.Libs b=This2.Extends.#seqBuilder()
      Void unused1=b.#add(that: {implements This3.Concept.ToS
      read method 
      This3.Bool #equalequal(read This0 that) this.toS().#equalequal(that:that.toS())
      refine read method 
      This3.S toS() })
      b
      )).#leftrightleft(that:This1.Equals.#leftrightleft(that:that))
    
    catch exception This1.DecorationUnfeasable mg exception mg
    
    catch exception This2.MetaGuard catched0 exception This1.DecorationUnfeasable.#from(builder:(
      mut This2.S.SBuilder b0=This1.DecorationUnfeasable.#builder()
      b0
      )).#apply(that:catched0)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}
Equals: {
class method 
Library #leftrightleft(Library that) exception This1.DecorationUnfeasable (
  Void unused=(
    Void unused0=return This2.Extends.#from(seqBuilder:(
      mut This2.PreferentialComposition.Libs b=This2.Extends.#seqBuilder()
      Void unused1=b.#add(that: {implements This3.Concept.Equals
      refine read method 
      This3.Bool equals(read Any that) (
        Void unused=(
          Void unused0=(
            This0 that0=(
              Void unused2=return that
              
              catch return This0 casted casted
              
              catch return Any casted exception void
              
              error  {/*@stringU
CastT-Should be unreachable code
*/}
              )
            
            catch exception Void catched0 void
            
            (
              Void unused3=return this.#equalequal(that:that0)
              void
              )
            )
          Void unused1=return This3.Bool.false()
          void
          )
        
        catch return This3.Bool result result
        
        error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
        )
      read method 
      This3.Bool #equalequal(read This0 that) })
      b
      )).#leftrightleft(that:that)
    
    catch exception This2.MetaGuard catched0 exception This1.DecorationUnfeasable.#from(builder:(
      mut This2.S.SBuilder b0=This1.DecorationUnfeasable.#builder()
      Void unused2=b0.#E()
      Void unused3=b0.#q()
      Void unused4=b0.#u()
      Void unused5=b0.#a()
      Void unused6=b0.#l()
      Void unused7=b0.#s()
      b0
      )).#apply(that:catched0)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}}
Url: {/*ParseFailure:Message:S[]<><{ implements Guard} no need, related to invariant?
*/implements This1.Concept.ToS
class method /* if you do not implement it, it is a constructor?
*/This0 fromS(This1.Concept.ToS that) This0.#apply(inner:that.toS())
class method 
This0 #from(This1.S.SBuilder builder) This0.fromS(that:This1.S.#from(binaryRepr:builder.binaryRepr()))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
mut This0 #mutK(This1.S inner) 
class method 
This0 #apply(This1.S inner) This0.#mutK(inner:inner)
mut method 
This1.S #inner() 
read method 
This1.S inner() 
refine read method 
This1.S toS() this.inner()
method 
Library binaryRepr() this.inner().binaryRepr()}
DeployTowel: {
class method 
mut This0 #mutK(This1.Url fileName) 
class method 
This0 #apply(This1.Url fileName) This0.#mutK(fileName:fileName)
mut method 
This1.Url #fileName() 
read method 
This1.Url fileName() 
class method 
Library binaryReprFrom(Library lib) (
  Library norm=use This0.SafeOperatorsAccess__125_0 check privateNormalize(that:lib) error  {
  class method 
  mut This0 #mutK() 
  class method 
  This0 privateNormalize() This0.#mutK()}
  Library record=use This0.SafeOperatorsAccess__125_0 check introspectLibraryReport(that:norm, path: {/*@stringU
This
*/}) error  {
  class method 
  mut This0 #mutK() 
  class method 
  This0 introspectLibraryReport() This0.#mutK()}
  use This0.SafeOperatorsAccess__125_0 check introspectLibraryDocAsString(that:record, path: {/*@stringU
AllAsString
*/}, annotationN: {/*@int32
0
*/}) error  {
  class method 
  mut This0 #mutK() 
  class method 
  This0 introspectLibraryDocAsString() This0.#mutK()}
  )
method 
Library #leftrightleft(Library that) (
  Void unused=use This1.Alu check fileDebug(fileName:this.fileName().binaryRepr(), content:This0.binaryReprFrom(lib:that)) error  {
  class method 
  mut This0 #mutK() 
  class method 
  This0 fileDebug() This0.#mutK()}
  This1.ExitCode.normal()
  )
SafeOperatorsAccess__125_0:/*@private
*/ {/*@plugin
L42.is/connected/withSafeOperators
*/}}
K: {
class method 
This0.$#from(This1.S.SBuilder builder) This0.$.#apply(names:This1.S.#from(builder:builder), isFwd:This1.Bool.false(), mutK:This1.S.#from(builder:(
  mut This1.S.SBuilder b=This1.S.#builder()
  Void unused=b.#hash()
  Void unused0=b.#a()
  Void unused1=b.#p()
  Void unused2=b.#p()
  Void unused3=b.#l()
  Void unused4=b.#y()
  b
  )), lentK:This1.S.#from(builder:(
  mut This1.S.SBuilder b0=This1.S.#builder()
  Void unused5=b0.#l()
  Void unused6=b0.#e()
  Void unused7=b0.#n()
  Void unused8=b0.#t()
  Void unused9=b0.#K()
  b0
  )), readK:This1.S.#from(builder:(
  mut This1.S.SBuilder b1=This1.S.#builder()
  Void unused10=b1.#r()
  Void unused11=b1.#e()
  Void unused12=b1.#a()
  Void unused13=b1.#d()
  Void unused14=b1.#K()
  b1
  )), immK:This1.S.#from(builder:(
  mut This1.S.SBuilder b2=This1.S.#builder()
  Void unused15=b2.#i()
  Void unused16=b2.#m()
  Void unused17=b2.#m()
  Void unused18=b2.#K()
  b2
  )))
class method 
mut This1.S.SBuilder #builder() This1.S.SBuilder.empty()
class method 
Library #leftrightleft(Library that) (
  Void unused=(/*compute names
*/
    This1.Introspection.NestedClass i=This1.Introspection.#apply(lib:that)
    This1.S names=(//just submit mutK...immK, if already there, they are not produced by the operator.
(
      This1.S.Continue rcv113=(
        This1.S rcv114=This1.S.#from(builder:(
          mut This1.S.SBuilder b0=This1.S.#builder()
          b0
          ))
        rcv114.#from(seqBuilder:(
          mut This1.S.SConcat b=rcv114.#seqBuilder()
          Void unused1=(
            lent This1.Introspection.Methods.IteratorVal m=i.methods().vals()
            (
              Void unused2=(
                Void unused3=(
                  Void unused4=loop (
                    Void unused5=m.#next()
                    
                    catch exception Void catched2 (
                      Void unused6=(
                        Void unused7=m.#checkEnd()
                        
                        catch exception Void catched3 void
                        
                        void
                        )
                      exception void
                      )
                    
                    (
                      This1.Selector sel=m.#inner().selector()
                      This1.Bool isAbs=(
                        This1.Introspection.MethodKind rcv115=m.#inner().methodKind()
                        rcv115.equals(that:rcv115.class()._AbstractMethod())
                        )
                      This1.Bool isVis=m.#inner().isPrivate().#bang()
                      This1.Bool isNoArg=sel.names().isEmpty()
                      (
                        This1.Bool cond=isAbs.#and(that:isVis).#and(that:isNoArg)
                        (
                          Void unused8=cond.#checkTrue()
                          
                          catch exception Void catched8 void
                          
                          ((
                            Void unused9=b.#add(that:sel.nameAsField(), sep:This1.S.#from(builder:(
                              mut This1.S.SBuilder b1=This1.S.#builder()
                              Void unused10=b1.#comma()
                              b1
                              )))
                            void
                            ))
                          )
                        )
                      )
                    )
                  
                  catch exception Void catched11 void
                  
                  void
                  )
                
                catch exception Any propagated (
                  Void unused11=m.#close()
                  exception propagated
                  )
                
                void
                )
              
              catch return Library propagated0 (
                Void unused12=m.#close()
                return propagated0
                )
              
              m.#close()
              )
            )
          b
          ))
        )
      rcv113.#from(builder:(
        mut This1.S.SBuilder b2=rcv113.#builder()
        b2
        ))
      ))
    Void unused0=return This0.$.#apply(names:names, isFwd:This1.Bool.false(), mutK:This1.S.#from(builder:(
      mut This1.S.SBuilder b3=This1.S.#builder()
      Void unused13=b3.#hash()
      Void unused14=b3.#a()
      Void unused15=b3.#p()
      Void unused16=b3.#p()
      Void unused17=b3.#l()
      Void unused18=b3.#y()
      b3
      )), lentK:This1.S.#from(builder:(
      mut This1.S.SBuilder b4=This1.S.#builder()
      Void unused19=b4.#l()
      Void unused20=b4.#e()
      Void unused21=b4.#n()
      Void unused22=b4.#t()
      Void unused23=b4.#K()
      b4
      )), readK:This1.S.#from(builder:(
      mut This1.S.SBuilder b5=This1.S.#builder()
      Void unused24=b5.#r()
      Void unused25=b5.#e()
      Void unused26=b5.#a()
      Void unused27=b5.#d()
      Void unused28=b5.#K()
      b5
      )), immK:This1.S.#from(builder:(
      mut This1.S.SBuilder b6=This1.S.#builder()
      Void unused29=b6.#i()
      Void unused30=b6.#m()
      Void unused31=b6.#m()
      Void unused32=b6.#K()
      b6
      ))).#leftrightleft(that:that)
    
    catch exception This1.MetaGuard.MethodUnavailable catched23 error This1.X.#from(builder:(
      mut This1.S.SBuilder b7=This1.X.#builder()
      b7
      )).#apply(that:catched23)
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )
$: {
class method 
mut This0 #mutK(This2.S names, This2.Bool isFwd, This2.S mutK, This2.S lentK, This2.S readK, This2.S immK) 
class method 
This0 #apply(This2.S names, This2.Bool isFwd, This2.S mutK, This2.S lentK, This2.S readK, This2.S immK) This0.#mutK(names:names, isFwd:isFwd, mutK:mutK, lentK:lentK, readK:readK, immK:immK)
mut method 
This2.S #names() 
read method 
This2.S names() 
mut method 
This2.Bool #isFwd() 
read method 
This2.Bool isFwd() 
mut method 
This2.S #mutK() 
read method 
This2.S mutK() 
mut method 
This2.S #lentK() 
read method 
This2.S lentK() 
mut method 
This2.S #readK() 
read method 
This2.S readK() 
mut method 
This2.S #immK() 
read method 
This2.S immK() 
method 
This0 fwd() This0.#apply(names:this.names(), isFwd:This2.Bool.true(), mutK:this.mutK(), lentK:this.lentK(), readK:this.readK(), immK:this.immK())
method 
Library #leftrightleft(Library that) exception This2.MetaGuard.MethodUnavailable (
  Void unused=(
    Void unused0=return This2.SafeOperators.addKs(that:that, path:This2.Path.#from(builder:(
      mut This2.S.SBuilder b=This2.Path.#builder()
      Void unused1=b.#T()
      Void unused2=b.#h()
      Void unused3=b.#i()
      Void unused4=b.#s()
      b
      )), fields:(//add parameter for path?
this.names()), mutK:this.mutK(), lentK:this.lentK(), readK:this.readK(), immK:this.immK(), isFwd:this.isFwd())
    
    catch error Library err (/*MetaGuard.NestedClassUnavailable(lift:err)
*/
      Void unused5=This2.MetaGuard.MethodUnavailable.#apply(lift:err)
      error err
      )
    
    void
    )
  
  catch return Library result result
  
  error  {/*@stringU
CurlyBlock-Should be unreachable code
*/}
  )}}}