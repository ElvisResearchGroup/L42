<?xml version="1.0" encoding="UTF-8"?>
<project name="l42" default="all">
  
  
  <property file="l42.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.oracle_1.8" value="${jdk.home.oracle_1.8}/bin"/>
  <path id="jdk.classpath.oracle_1.8">
    <fileset dir="${jdk.home.oracle_1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="../../share/java/hamcrest/core.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.oracle_1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.oracle_1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.oracle_1.8"/>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module L42_Main -->
  
  <dirname property="module.l42_main.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.l42_main" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.l42_main" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.l42_main" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.l42_main" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="l42_main.output.dir" value="${module.l42_main.basedir}/Main/bin"/>
  <property name="l42_main.testoutput.dir" value="${module.l42_main.basedir}/Main/bin"/>
  
  <path id="l42_main.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="l42_main.module.production.classpath">
    <path refid="${module.jdk.classpath.l42_main}"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  <path id="l42_main.runtime.production.module.classpath">
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  <path id="l42_main.module.classpath">
    <pathelement location="${l42_main.output.dir}"/>
    <path refid="${module.jdk.classpath.l42_main}"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  <path id="l42_main.runtime.module.classpath">
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.l42_main">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.l42_main">
    <patternset refid="excluded.from.module.l42_main"/>
  </patternset>
  
  <path id="l42_main.module.sourcepath">
    <dirset dir="${module.l42_main.basedir}/Main">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.l42_main" depends="compile.module.l42_main.production,compile.module.l42_main.tests" description="Compile module L42_Main"/>
  
  <target name="compile.module.l42_main.production" depends="register.custom.compilers" description="Compile module L42_Main; production classes">
    <mkdir dir="${l42_main.output.dir}"/>
    <javac2 destdir="${l42_main.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.l42_main}/javac">
      <compilerarg line="${compiler.args.l42_main}"/>
      <bootclasspath refid="l42_main.module.bootclasspath"/>
      <classpath refid="l42_main.module.production.classpath"/>
      <src refid="l42_main.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.l42_main"/>
    </javac2>
    
    <copy todir="${l42_main.output.dir}">
      <fileset dir="${module.l42_main.basedir}/Main/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.l42_main.tests" depends="register.custom.compilers,compile.module.l42_main.production" description="compile module L42_Main; test classes" unless="skip.tests"/>
  
  <target name="clean.module.l42_main" description="cleanup module">
    <delete dir="${l42_main.output.dir}"/>
    <delete dir="${l42_main.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgAlu -->
  
  <dirname property="module.plgalu.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plgalu" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plgalu" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plgalu" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plgalu" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plgalu.output.dir" value="${module.plgalu.basedir}/PlgAlu/bin"/>
  <property name="plgalu.testoutput.dir" value="${module.plgalu.basedir}/PlgAlu/bin"/>
  
  <path id="plgalu.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plgalu.module.production.classpath">
    <path refid="${module.jdk.classpath.plgalu}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plgalu.runtime.production.module.classpath">
    <pathelement location="${plgalu.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
  </path>
  
  <path id="plgalu.module.classpath">
    <pathelement location="${plgalu.output.dir}"/>
    <path refid="${module.jdk.classpath.plgalu}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plgalu.runtime.module.classpath">
    <pathelement location="${plgalu.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.plgalu">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plgalu">
    <patternset refid="excluded.from.module.plgalu"/>
  </patternset>
  
  <path id="plgalu.module.sourcepath">
    <dirset dir="${module.plgalu.basedir}/PlgAlu">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plgalu" depends="compile.module.plgalu.production,compile.module.plgalu.tests" description="Compile module PlgAlu"/>
  
  <target name="compile.module.plgalu.production" depends="register.custom.compilers,compile.module.l42_main" description="Compile module PlgAlu; production classes">
    <mkdir dir="${plgalu.output.dir}"/>
    <javac2 destdir="${plgalu.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plgalu}/javac">
      <compilerarg line="${compiler.args.plgalu}"/>
      <bootclasspath refid="plgalu.module.bootclasspath"/>
      <classpath refid="plgalu.module.production.classpath"/>
      <src refid="plgalu.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plgalu"/>
    </javac2>
    
    <copy todir="${plgalu.output.dir}">
      <fileset dir="${module.plgalu.basedir}/PlgAlu/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plgalu.tests" depends="register.custom.compilers,compile.module.plgalu.production" description="compile module PlgAlu; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plgalu" description="cleanup module">
    <delete dir="${plgalu.output.dir}"/>
    <delete dir="${plgalu.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgDatabase -->
  
  <dirname property="module.plgdatabase.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plgdatabase" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plgdatabase" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plgdatabase" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plgdatabase" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plgdatabase.output.dir" value="${module.plgdatabase.basedir}/PlgDatabase/bin"/>
  <property name="plgdatabase.testoutput.dir" value="${module.plgdatabase.basedir}/PlgDatabase/bin"/>
  
  <path id="plgdatabase.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plgdatabase.module.production.classpath">
    <path refid="${module.jdk.classpath.plgdatabase}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derby.jar"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derbyclient.jar"/>
  </path>
  
  <path id="plgdatabase.runtime.production.module.classpath">
    <pathelement location="${plgdatabase.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derby.jar"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derbyclient.jar"/>
  </path>
  
  <path id="plgdatabase.module.classpath">
    <pathelement location="${plgdatabase.output.dir}"/>
    <path refid="${module.jdk.classpath.plgdatabase}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derby.jar"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derbyclient.jar"/>
  </path>
  
  <path id="plgdatabase.runtime.module.classpath">
    <pathelement location="${plgdatabase.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derby.jar"/>
    <pathelement location="${basedir}/PlgDatabase/lib/derbyclient.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.plgdatabase">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plgdatabase">
    <patternset refid="excluded.from.module.plgdatabase"/>
  </patternset>
  
  <path id="plgdatabase.module.sourcepath">
    <dirset dir="${module.plgdatabase.basedir}/PlgDatabase">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plgdatabase" depends="compile.module.plgdatabase.production,compile.module.plgdatabase.tests" description="Compile module PlgDatabase"/>
  
  <target name="compile.module.plgdatabase.production" depends="register.custom.compilers,compile.module.l42_main" description="Compile module PlgDatabase; production classes">
    <mkdir dir="${plgdatabase.output.dir}"/>
    <javac2 destdir="${plgdatabase.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plgdatabase}/javac">
      <compilerarg line="${compiler.args.plgdatabase}"/>
      <bootclasspath refid="plgdatabase.module.bootclasspath"/>
      <classpath refid="plgdatabase.module.production.classpath"/>
      <src refid="plgdatabase.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plgdatabase"/>
    </javac2>
    
    <copy todir="${plgdatabase.output.dir}">
      <fileset dir="${module.plgdatabase.basedir}/PlgDatabase/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plgdatabase.tests" depends="register.custom.compilers,compile.module.plgdatabase.production" description="compile module PlgDatabase; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plgdatabase" description="cleanup module">
    <delete dir="${plgdatabase.output.dir}"/>
    <delete dir="${plgdatabase.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgGui -->
  
  <dirname property="module.plggui.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plggui" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plggui" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plggui" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plggui" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plggui.output.dir" value="${module.plggui.basedir}/PlgGui/bin"/>
  <property name="plggui.testoutput.dir" value="${module.plggui.basedir}/PlgGui/bin"/>
  
  <path id="plggui.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plggui.module.production.classpath">
    <path refid="${module.jdk.classpath.plggui}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plggui.runtime.production.module.classpath">
    <pathelement location="${plggui.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
  </path>
  
  <path id="plggui.module.classpath">
    <pathelement location="${plggui.output.dir}"/>
    <path refid="${module.jdk.classpath.plggui}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plggui.runtime.module.classpath">
    <pathelement location="${plggui.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.plggui">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plggui">
    <patternset refid="excluded.from.module.plggui"/>
  </patternset>
  
  <path id="plggui.module.sourcepath">
    <dirset dir="${module.plggui.basedir}/PlgGui">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plggui" depends="compile.module.plggui.production,compile.module.plggui.tests" description="Compile module PlgGui"/>
  
  <target name="compile.module.plggui.production" depends="register.custom.compilers,compile.module.l42_main" description="Compile module PlgGui; production classes">
    <mkdir dir="${plggui.output.dir}"/>
    <javac2 destdir="${plggui.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plggui}/javac">
      <compilerarg line="${compiler.args.plggui}"/>
      <bootclasspath refid="plggui.module.bootclasspath"/>
      <classpath refid="plggui.module.production.classpath"/>
      <src refid="plggui.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plggui"/>
    </javac2>
    
    <copy todir="${plggui.output.dir}">
      <fileset dir="${module.plggui.basedir}/PlgGui/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plggui.tests" depends="register.custom.compilers,compile.module.plggui.production" description="compile module PlgGui; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plggui" description="cleanup module">
    <delete dir="${plggui.output.dir}"/>
    <delete dir="${plggui.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgLimitations -->
  
  <dirname property="module.plglimitations.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plglimitations" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plglimitations" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plglimitations" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plglimitations" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plglimitations.output.dir" value="${module.plglimitations.basedir}/PlgLimitations/bin"/>
  <property name="plglimitations.testoutput.dir" value="${module.plglimitations.basedir}/PlgLimitations/bin"/>
  
  <path id="plglimitations.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plglimitations.module.production.classpath">
    <path refid="${module.jdk.classpath.plglimitations}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plglimitations.runtime.production.module.classpath">
    <pathelement location="${plglimitations.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
  </path>
  
  <path id="plglimitations.module.classpath">
    <pathelement location="${plglimitations.output.dir}"/>
    <path refid="${module.jdk.classpath.plglimitations}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plglimitations.runtime.module.classpath">
    <pathelement location="${plglimitations.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.plglimitations">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plglimitations">
    <patternset refid="excluded.from.module.plglimitations"/>
  </patternset>
  
  <path id="plglimitations.module.sourcepath">
    <dirset dir="${module.plglimitations.basedir}/PlgLimitations">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plglimitations" depends="compile.module.plglimitations.production,compile.module.plglimitations.tests" description="Compile module PlgLimitations"/>
  
  <target name="compile.module.plglimitations.production" depends="register.custom.compilers,compile.module.l42_main" description="Compile module PlgLimitations; production classes">
    <mkdir dir="${plglimitations.output.dir}"/>
    <javac2 destdir="${plglimitations.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plglimitations}/javac">
      <compilerarg line="${compiler.args.plglimitations}"/>
      <bootclasspath refid="plglimitations.module.bootclasspath"/>
      <classpath refid="plglimitations.module.production.classpath"/>
      <src refid="plglimitations.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plglimitations"/>
    </javac2>
    
    <copy todir="${plglimitations.output.dir}">
      <fileset dir="${module.plglimitations.basedir}/PlgLimitations/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plglimitations.tests" depends="register.custom.compilers,compile.module.plglimitations.production" description="compile module PlgLimitations; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plglimitations" description="cleanup module">
    <delete dir="${plglimitations.output.dir}"/>
    <delete dir="${plglimitations.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgNumbers -->
  
  <dirname property="module.plgnumbers.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plgnumbers" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plgnumbers" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plgnumbers" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plgnumbers" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plgnumbers.output.dir" value="${module.plgnumbers.basedir}/PlgNumbers/bin"/>
  <property name="plgnumbers.testoutput.dir" value="${module.plgnumbers.basedir}/PlgNumbers/bin"/>
  
  <path id="plgnumbers.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plgnumbers.module.production.classpath">
    <path refid="${module.jdk.classpath.plgnumbers}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plgnumbers.runtime.production.module.classpath">
    <pathelement location="${plgnumbers.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
  </path>
  
  <path id="plgnumbers.module.classpath">
    <pathelement location="${plgnumbers.output.dir}"/>
    <path refid="${module.jdk.classpath.plgnumbers}"/>
    <pathelement location="${l42_main.output.dir}"/>
  </path>
  
  <path id="plgnumbers.runtime.module.classpath">
    <pathelement location="${plgnumbers.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.plgnumbers">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plgnumbers">
    <patternset refid="excluded.from.module.plgnumbers"/>
  </patternset>
  
  <path id="plgnumbers.module.sourcepath">
    <dirset dir="${module.plgnumbers.basedir}/PlgNumbers">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plgnumbers" depends="compile.module.plgnumbers.production,compile.module.plgnumbers.tests" description="Compile module PlgNumbers"/>
  
  <target name="compile.module.plgnumbers.production" depends="register.custom.compilers,compile.module.l42_main" description="Compile module PlgNumbers; production classes">
    <mkdir dir="${plgnumbers.output.dir}"/>
    <javac2 destdir="${plgnumbers.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plgnumbers}/javac">
      <compilerarg line="${compiler.args.plgnumbers}"/>
      <bootclasspath refid="plgnumbers.module.bootclasspath"/>
      <classpath refid="plgnumbers.module.production.classpath"/>
      <src refid="plgnumbers.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plgnumbers"/>
    </javac2>
    
    <copy todir="${plgnumbers.output.dir}">
      <fileset dir="${module.plgnumbers.basedir}/PlgNumbers/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plgnumbers.tests" depends="register.custom.compilers,compile.module.plgnumbers.production" description="compile module PlgNumbers; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plgnumbers" description="cleanup module">
    <delete dir="${plgnumbers.output.dir}"/>
    <delete dir="${plgnumbers.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgSafeOperators -->
  
  <dirname property="module.plgsafeoperators.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plgsafeoperators" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plgsafeoperators" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plgsafeoperators" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plgsafeoperators" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plgsafeoperators.output.dir" value="${module.plgsafeoperators.basedir}/PlgSafeOperators/bin"/>
  <property name="plgsafeoperators.testoutput.dir" value="${module.plgsafeoperators.basedir}/PlgSafeOperators/bin"/>
  
  <path id="plgsafeoperators.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plgsafeoperators.module.production.classpath">
    <pathelement location="${l42_main.output.dir}"/>
    <path refid="${module.jdk.classpath.plgsafeoperators}"/>
  </path>
  
  <path id="plgsafeoperators.runtime.production.module.classpath">
    <pathelement location="${plgsafeoperators.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
  </path>
  
  <path id="plgsafeoperators.module.classpath">
    <pathelement location="${plgsafeoperators.output.dir}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <path refid="${module.jdk.classpath.plgsafeoperators}"/>
  </path>
  
  <path id="plgsafeoperators.runtime.module.classpath">
    <pathelement location="${plgsafeoperators.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.plgsafeoperators">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plgsafeoperators">
    <patternset refid="excluded.from.module.plgsafeoperators"/>
  </patternset>
  
  <path id="plgsafeoperators.module.sourcepath">
    <dirset dir="${module.plgsafeoperators.basedir}/PlgSafeOperators">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plgsafeoperators" depends="compile.module.plgsafeoperators.production,compile.module.plgsafeoperators.tests" description="Compile module PlgSafeOperators"/>
  
  <target name="compile.module.plgsafeoperators.production" depends="register.custom.compilers,compile.module.l42_main" description="Compile module PlgSafeOperators; production classes">
    <mkdir dir="${plgsafeoperators.output.dir}"/>
    <javac2 destdir="${plgsafeoperators.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plgsafeoperators}/javac">
      <compilerarg line="${compiler.args.plgsafeoperators}"/>
      <bootclasspath refid="plgsafeoperators.module.bootclasspath"/>
      <classpath refid="plgsafeoperators.module.production.classpath"/>
      <src refid="plgsafeoperators.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plgsafeoperators"/>
    </javac2>
    
    <copy todir="${plgsafeoperators.output.dir}">
      <fileset dir="${module.plgsafeoperators.basedir}/PlgSafeOperators/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plgsafeoperators.tests" depends="register.custom.compilers,compile.module.plgsafeoperators.production" description="compile module PlgSafeOperators; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plgsafeoperators" description="cleanup module">
    <delete dir="${plgsafeoperators.output.dir}"/>
    <delete dir="${plgsafeoperators.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PlgFileSystem -->
  
  <dirname property="module.plgfilesystem.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.plgfilesystem" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.plgfilesystem" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.plgfilesystem" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.plgfilesystem" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="plgfilesystem.output.dir" value="${module.plgfilesystem.basedir}/PlgFileSystem/bin"/>
  <property name="plgfilesystem.testoutput.dir" value="${module.plgfilesystem.basedir}/PlgFileSystem/bin"/>
  
  <path id="plgfilesystem.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="plgfilesystem.module.production.classpath">
    <pathelement location="${l42_main.output.dir}"/>
    <path refid="${module.jdk.classpath.plgfilesystem}"/>
    <pathelement location="${plgsafeoperators.output.dir}"/>
  </path>
  
  <path id="plgfilesystem.runtime.production.module.classpath">
    <pathelement location="${plgfilesystem.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
    <path refid="plgsafeoperators.runtime.production.module.classpath"/>
  </path>
  
  <path id="plgfilesystem.module.classpath">
    <pathelement location="${plgfilesystem.output.dir}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <path refid="${module.jdk.classpath.plgfilesystem}"/>
    <pathelement location="${plgsafeoperators.output.dir}"/>
  </path>
  
  <path id="plgfilesystem.runtime.module.classpath">
    <pathelement location="${plgfilesystem.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
    <path refid="plgsafeoperators.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.plgfilesystem">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.plgfilesystem">
    <patternset refid="excluded.from.module.plgfilesystem"/>
  </patternset>
  
  <path id="plgfilesystem.module.sourcepath">
    <dirset dir="${module.plgfilesystem.basedir}/PlgFileSystem">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.plgfilesystem" depends="compile.module.plgfilesystem.production,compile.module.plgfilesystem.tests" description="Compile module PlgFileSystem"/>
  
  <target name="compile.module.plgfilesystem.production" depends="register.custom.compilers,compile.module.l42_main,compile.module.plgsafeoperators" description="Compile module PlgFileSystem; production classes">
    <mkdir dir="${plgfilesystem.output.dir}"/>
    <javac2 destdir="${plgfilesystem.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.plgfilesystem}/javac">
      <compilerarg line="${compiler.args.plgfilesystem}"/>
      <bootclasspath refid="plgfilesystem.module.bootclasspath"/>
      <classpath refid="plgfilesystem.module.production.classpath"/>
      <src refid="plgfilesystem.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.plgfilesystem"/>
    </javac2>
    
    <copy todir="${plgfilesystem.output.dir}">
      <fileset dir="${module.plgfilesystem.basedir}/PlgFileSystem/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.plgfilesystem.tests" depends="register.custom.compilers,compile.module.plgfilesystem.production" description="compile module PlgFileSystem; test classes" unless="skip.tests"/>
  
  <target name="clean.module.plgfilesystem" description="cleanup module">
    <delete dir="${plgfilesystem.output.dir}"/>
    <delete dir="${plgfilesystem.testoutput.dir}"/>
  </target>
  
  
  <!-- Module L42 -->
  
  <dirname property="module.l42.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.l42" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.l42" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.l42" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.l42" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="l42.output.dir" value="${module.l42.basedir}/bin"/>
  <property name="l42.testoutput.dir" value="${module.l42.basedir}/bin"/>
  
  <path id="l42.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="l42.module.production.classpath">
    <path refid="${module.jdk.classpath.l42}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${plgalu.output.dir}"/>
    <pathelement location="${plgfilesystem.output.dir}"/>
    <pathelement location="${plggui.output.dir}"/>
    <pathelement location="${plgnumbers.output.dir}"/>
    <pathelement location="${plgsafeoperators.output.dir}"/>
  </path>
  
  <path id="l42.runtime.production.module.classpath">
    <pathelement location="${l42.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
    <path refid="plgalu.runtime.production.module.classpath"/>
    <path refid="plgfilesystem.runtime.production.module.classpath"/>
    <path refid="plggui.runtime.production.module.classpath"/>
    <path refid="plgnumbers.runtime.production.module.classpath"/>
    <path refid="plgsafeoperators.runtime.production.module.classpath"/>
  </path>
  
  <path id="l42.module.classpath">
    <pathelement location="${l42.output.dir}"/>
    <path refid="${module.jdk.classpath.l42}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${plgalu.output.dir}"/>
    <pathelement location="${plgfilesystem.output.dir}"/>
    <pathelement location="${plggui.output.dir}"/>
    <pathelement location="${plgnumbers.output.dir}"/>
    <pathelement location="${plgsafeoperators.output.dir}"/>
  </path>
  
  <path id="l42.runtime.module.classpath">
    <pathelement location="${l42.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
    <path refid="plgalu.runtime.module.classpath"/>
    <path refid="plgfilesystem.runtime.module.classpath"/>
    <path refid="plggui.runtime.module.classpath"/>
    <path refid="plgnumbers.runtime.module.classpath"/>
    <path refid="plgsafeoperators.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.l42">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.l42">
    <patternset refid="excluded.from.module.l42"/>
  </patternset>
  
  
  <target name="compile.module.l42" depends="compile.module.l42.production,compile.module.l42.tests" description="Compile module L42"/>
  
  <target name="compile.module.l42.production" depends="register.custom.compilers,compile.module.l42_main,compile.module.plgalu,compile.module.plgfilesystem,compile.module.plggui,compile.module.plgnumbers,compile.module.plgsafeoperators" description="Compile module L42; production classes"/>
  
  <target name="compile.module.l42.tests" depends="register.custom.compilers,compile.module.l42.production" description="compile module L42; test classes" unless="skip.tests"/>
  
  <target name="clean.module.l42" description="cleanup module">
    <delete dir="${l42.output.dir}"/>
    <delete dir="${l42.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Tests -->
  
  <dirname property="module.tests.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.tests" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.tests" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.tests" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.tests" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="tests.output.dir" value="${module.tests.basedir}/Tests/bin"/>
  <property name="tests.testoutput.dir" value="${module.tests.basedir}/Tests/bin"/>
  
  <path id="tests.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="tests.module.production.classpath">
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${plgalu.output.dir}"/>
    <pathelement location="${plggui.output.dir}"/>
    <pathelement location="${plglimitations.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${plgsafeoperators.output.dir}"/>
    <path refid="${module.jdk.classpath.tests}"/>
    <pathelement location="${plgnumbers.output.dir}"/>
    <pathelement location="${plgdatabase.output.dir}"/>
    <pathelement location="${plgfilesystem.output.dir}"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  <path id="tests.runtime.production.module.classpath">
    <pathelement location="${tests.output.dir}"/>
    <path refid="l42_main.runtime.production.module.classpath"/>
    <path refid="plgalu.runtime.production.module.classpath"/>
    <path refid="plggui.runtime.production.module.classpath"/>
    <path refid="plglimitations.runtime.production.module.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="plgsafeoperators.runtime.production.module.classpath"/>
    <path refid="plgnumbers.runtime.production.module.classpath"/>
    <path refid="plgdatabase.runtime.production.module.classpath"/>
    <path refid="plgfilesystem.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  <path id="tests.module.classpath">
    <pathelement location="${tests.output.dir}"/>
    <pathelement location="${l42_main.output.dir}"/>
    <pathelement location="${plgalu.output.dir}"/>
    <pathelement location="${plggui.output.dir}"/>
    <pathelement location="${plglimitations.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${plgsafeoperators.output.dir}"/>
    <path refid="${module.jdk.classpath.tests}"/>
    <pathelement location="${plgnumbers.output.dir}"/>
    <pathelement location="${plgdatabase.output.dir}"/>
    <pathelement location="${plgfilesystem.output.dir}"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  <path id="tests.runtime.module.classpath">
    <pathelement location="${tests.output.dir}"/>
    <path refid="l42_main.runtime.module.classpath"/>
    <path refid="plgalu.runtime.module.classpath"/>
    <path refid="plggui.runtime.module.classpath"/>
    <path refid="plglimitations.runtime.module.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="plgsafeoperators.runtime.module.classpath"/>
    <path refid="plgnumbers.runtime.module.classpath"/>
    <path refid="plgdatabase.runtime.module.classpath"/>
    <path refid="plgfilesystem.runtime.module.classpath"/>
    <pathelement location="${basedir}/Main/antlr-4.2.2-complete.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.tests">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.tests">
    <patternset refid="excluded.from.module.tests"/>
  </patternset>
  
  <path id="tests.module.sourcepath">
    <dirset dir="${module.tests.basedir}/Tests">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.tests" depends="compile.module.tests.production,compile.module.tests.tests" description="Compile module Tests"/>
  
  <target name="compile.module.tests.production" depends="register.custom.compilers,compile.module.l42_main,compile.module.plgalu,compile.module.plggui,compile.module.plglimitations,compile.module.plgsafeoperators,compile.module.plgnumbers,compile.module.plgdatabase,compile.module.plgfilesystem" description="Compile module Tests; production classes">
    <mkdir dir="${tests.output.dir}"/>
    <javac2 destdir="${tests.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.tests}/javac">
      <compilerarg line="${compiler.args.tests}"/>
      <bootclasspath refid="tests.module.bootclasspath"/>
      <classpath refid="tests.module.production.classpath"/>
      <src refid="tests.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.tests"/>
    </javac2>
    
    <copy todir="${tests.output.dir}">
      <fileset dir="${module.tests.basedir}/Tests/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.tests.tests" depends="register.custom.compilers,compile.module.tests.production" description="compile module Tests; test classes" unless="skip.tests"/>
  
  <target name="clean.module.tests" description="cleanup module">
    <delete dir="${tests.output.dir}"/>
    <delete dir="${tests.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.l42_main, clean.module.plgalu, clean.module.plgdatabase, clean.module.plggui, clean.module.plglimitations, clean.module.plgnumbers, clean.module.plgsafeoperators, clean.module.plgfilesystem, clean.module.l42, clean.module.tests, clean.artifact.l42:jar" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.l42_main, compile.module.plgalu, compile.module.plgdatabase, compile.module.plggui, compile.module.plglimitations, compile.module.plgnumbers, compile.module.plgsafeoperators, compile.module.plgfilesystem, compile.module.l42, compile.module.tests" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.l42:jar" value="${basedir}/Main/papers/Programming2019/Artifact"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.L42.jar" value="${artifacts.temp.dir}/L42.jar"/>
  </target>
  
  <target name="clean.artifact.l42:jar" description="clean L42:jar artifact output">
    <delete dir="${artifact.output.l42:jar}"/>
  </target>
  
  <target name="artifact.l42:jar" depends="init.artifacts, compile.module.l42_main, compile.module.plgalu, compile.module.plgfilesystem, compile.module.plgsafeoperators, compile.module.plggui, compile.module.plgnumbers" description="Build &#39;L42:jar&#39; artifact">
    <mkdir dir="${artifact.output.l42:jar}"/>
    <jar destfile="${temp.jar.path.L42.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset file="${basedir}/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${l42_main.output.dir}"/>
      <zipfileset dir="${plgalu.output.dir}"/>
      <zipfileset dir="${plgfilesystem.output.dir}"/>
      <zipfileset dir="${plgsafeoperators.output.dir}"/>
      <zipfileset dir="${plggui.output.dir}"/>
      <zipfileset dir="${plgnumbers.output.dir}"/>
      <zipfileset src="${basedir}/Main/antlr-4.2.2-complete.jar"/>
    </jar>
    <copy file="${temp.jar.path.L42.jar}" tofile="${artifact.output.l42:jar}/L42.jar"/>
    <mkdir dir="${artifact.output.l42:jar}/localhost"/>
    <copy todir="${artifact.output.l42:jar}/localhost">
      <fileset dir="${basedir}/Tests/localhost"/>
    </copy>
    <copy file="${basedir}/Tests/src/widgetGui/libProject/This.L42" tofile="${artifact.output.l42:jar}/WidgetGui.L42"/>
    <copy file="${basedir}/Tests/src/widgetGui/libTests/SafeMovable.L42" tofile="${artifact.output.l42:jar}/SafeMovable.L42"/>
    <mkdir dir="${artifact.output.l42:jar}/Spec#"/>
    <copy file="${basedir}/Validation/Spec#/Debug.ssc" tofile="${artifact.output.l42:jar}/Spec#/Debug.ssc"/>
    <copy file="${basedir}/Validation/Spec#/GuiLib.ssc" tofile="${artifact.output.l42:jar}/Spec#/GuiLib.ssc"/>
    <copy file="${basedir}/Validation/Spec#/Main.ssc" tofile="${artifact.output.l42:jar}/Spec#/Main.ssc"/>
    <copy file="${basedir}/Validation/Spec#/SafeMovable.ssc" tofile="${artifact.output.l42:jar}/Spec#/SafeMovable.ssc"/>
    <copy file="${basedir}/Validation/Spec#/Validation.sln" tofile="${artifact.output.l42:jar}/Spec#/Validation.sln"/>
    <copy file="${basedir}/Validation/Spec#/Validation.sscproj" tofile="${artifact.output.l42:jar}/Spec#/Validation.sscproj"/>
    <copy file="${basedir}/Validation/Spec#/WidgetGuiAuxLib.ssc" tofile="${artifact.output.l42:jar}/Spec#/WidgetGuiAuxLib.ssc"/>
    <copy file="${basedir}/Validation/Spec#/WidgetGuiLib.ssc" tofile="${artifact.output.l42:jar}/Spec#/WidgetGuiLib.ssc"/>
    <mkdir dir="${artifact.output.l42:jar}/examples"/>
    <mkdir dir="${artifact.output.l42:jar}/examples/resources"/>
    <copy file="${basedir}/Tests/examples/resources/down.png" tofile="${artifact.output.l42:jar}/examples/resources/down.png"/>
    <copy file="${basedir}/Tests/examples/resources/left.png" tofile="${artifact.output.l42:jar}/examples/resources/left.png"/>
    <copy file="${basedir}/Tests/examples/resources/right.png" tofile="${artifact.output.l42:jar}/examples/resources/right.png"/>
    <copy file="${basedir}/Tests/examples/resources/up.png" tofile="${artifact.output.l42:jar}/examples/resources/up.png"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.l42:jar" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>