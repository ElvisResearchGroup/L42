using Microsoft.Contracts;

class Rectangle {
  internal int x1, y1, x2, y2;
  model int height {
    satisfies height == y2 - y1;
  }

  public Rectangle() 
    ensures height == 10;
  {
    x2 = 10;
    y2 = 10;
  } 
  
  public void DoubleHeight( )
    modifies y2, height;
    ensures height == old(height) * 2;
  {
    expose(this) {
      y2 = (y2 - y1) * 2 + y1;
    }
  }
}

class Legend {
  [Rep] protected Rectangle! box1 = new Rectangle();  
  [Rep] protected Rectangle! box2 = new Rectangle();  
  invariant box1.height == box2.height;
  protected int font = 5;
  invariant font > 0;
  
  model int mc {
    satisfies mc == box1.height / font;
  }
  
  public void Demo()
    modifies mc;
  {
    expose(this) {
      box1.DoubleHeight();
      box2.DoubleHeight();
    }
  }
}
