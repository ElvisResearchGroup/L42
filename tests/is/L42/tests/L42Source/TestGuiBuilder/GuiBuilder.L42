J={
  Fail={}
  mut method Void loadCode(S fullName,S code)[Fail]
  }
JavaCode={...}
mut J j
S package
S imports
S name
I x
I y
I ping
class method S defaultImports()=JavaCode.defaultImports()
class method mut This (mut J j,S package,S imports,S name,I x,I y)=
  This(j=j,package=package,imports=imports,name=name,x=x,y=y,ping=I"-1")
class method mut This (mut J j,S package,S name,I x,I y,I ping)=
  This(j=j,package=package,imports=This.defaultImports(),name=name,x=x,y=y,ping=ping)
class method mut This (mut J j,S package,S name,I x,I y)=
  This(j=j,package=package,imports=This.defaultImports(),name=name,x=x,y=y,ping=I"-1")
read method S toSwing(S that)=(
  h=S"package %this.package();"
  i=this.imports()
  S o={
    if this.ping()>0I return JavaCode.openingPing(
       name=this.name(),x=this.x(),y=this.y(),pingDelay=this.ping())
    return JavaCode.openingNoPing(name=this.name(),x=this.x(),y=this.y())
    }
  c=JavaCode.closing()
  h++S.nl()++i++S.nl()++o++S.nl()++that++S.nl()++c++S.nl()
  )
mut method Void #from(S.StringBuilder stringLiteral)[J.Fail]=(
  code=this.toSwing(stringLiteral.toS())
  this.#j().loadCode(fullName=this.package()++S"."++this.name(),code=code)
  )
//UTILS
read method S button(S id,S msg,S text)=S"""%
  |JButton %id = new JButton("%text");{
  |  %(id).addActionListener(e->event.submitEvent("%this.name()","%id","%msg"));
  |  }
  """