[This1.HasToS]
class method This false()
class method This true()=(This false=this.false() false.not())
method This #if()=this
method Void #checkTrue()[Void]=native{trusted:checkTrue} error void
method This not()=native{trusted:OP!} error void
method This #bang0()=this.not()
method This and(This0 that)=native{trusted:OP&} error void
method This or(This0 that)=native{trusted:OP|} error void
method This #shortCircut#andand()=this.not()
method This #shortResult#andand(This that)=this
method This #shortProcess#andand(This that,This other)=other
method This #shortCircut#oror()=this
method This #shortResult#oror(This that)=this
method This #shortProcess#oror(This that,This other)=other
method This #shortCircut#minusgt()=this.not()
method This #shortResult#minusgt(This that)=that
method This #shortProcess#minusgt(This that,This other)=other
  
read method This1.S toS()=native{trusted:toS} error void

read method This readEquality(read This that)=native{trusted:OP==} error void
method This #equalequal0(This that)=this.readEquality(that=that)
method This #bangequal0(This that)=(This tmp=this.#equalequal0(that=that) tmp.not())

#norm{nativeKind=Bool
  typeDep=This,This1.S,This1.HasToS,This1.AbstractTowel
  coherentDep=This,This1.S
  refined=toS()
  }
@This1.AbstractTowel{bool}