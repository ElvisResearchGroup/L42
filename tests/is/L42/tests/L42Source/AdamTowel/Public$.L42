//TODO: import the code needed to make after$ work, delete it from Organize, and search for all occurences of Organize
method Trait after$(Trait that, I max)[Data.Close$Fail,Trait$InvalidName,Trait$InvalidMap,Trait$ClassClash,Trait$MethodClash,CacheCall$Fail]=(
  var res=that
  res:=CloseAll(res)
  (var lev=0I while lev<max (//range will come later
    lev+=1I
    i=Introspection.Nested.from(library=res.code())//trait.introspection() will come later
    res:=res(squareBuilder=this.mapHide(Trait.Acc(Name$Mapping()),n=i,level=max-lev))
    ))
  catch error S$ParseError e exception Trait$InvalidName(e.text())
  CacheCall:res
  )