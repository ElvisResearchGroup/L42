reuse [AdamsTowel]

Secret = {...}//THIS FILE IS NOT COMMITTED. You have to fill it with you git access token, as in
//class method S #$of()=S"ghp_..."

GW = Load:{reuse[L42.is/GitWriter]}
LoadDeploy = Load:{reuse[L42.is/Deploy]}
DeployGit = LoadDeploy.with(writer=GW)
FSLib = Trait:{...}
TaskDeployFS = DeployGit.module(FSLib['FileSystem$Real=>'FileSystem.Real]
  name='FileSystem
  on=Url"github.com/Language42/is/FileSystem.L42"
  writer=GW.#$of(
    token=Secret.#$of(),
    message=S"File System"++S" automatic release 42V0.95"
  ))

FS = Load:{reuse[#$L42.is/FileSystem]}
Main = (
  f = FS.Real.#$of()
  //S s = f.read(Url"file:///C:.. works.. but is not a portable test..L42Source/TestFileSystem/ExampleInputFile.txt")
  S s = f.read(Url"ExampleInputFile.txt")
  Debug(S"[[%s]]")
  {}:Test"OnDisk"(actual=s expected=S"This is some text in a file")
  _ = f.write(on=Url"Example1.txt",content=S"SomeContent")
  S s0 = f.read(Url"Example1.txt")
  Debug(S"[[%s0]]")
  {}:Test"NovelData"(actual=s0 expected=S"SomeContent")
  _ = f.delete(Url"Example1.txt")
  ( f2 = FS.Real.#$of()
    S s1 = f2.read(Url"Example1.txt")
    catch FS.Fail pe (
      Debug(S"{{%pe}}")
      {}:Test"NovelDataDeleted"(actual=pe expected=
        S"Message This.FS.Fail([###])[###]'Example1.txt'[###]existing files are:[###]")
      )
    Debug(S"[[%s1]]")
    {}:Test"NovelDataDeletedFail"(Bool.false())
    )
  )
/*
ExampleToDeploy=Trait:{reuse [AdamsTowel] method S foo()=S"hi"}
Main2 = (
  Debug(S"gggg")
  f=FS.Real.#$of()
  f.write(fileName=S"c/d/testToSTowel.L42" content=S"hi")
  FS.Deploy.towel(ExampleToDeploy.code() on=\"file://a/b/testToSTowel.L42")(f)
  )
*/