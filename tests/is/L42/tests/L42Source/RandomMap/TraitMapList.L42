[HasToS]
E=Class.Relax:TraitE
L=Class.Relax:Trait(Collection.list(E))[clear='This]
I side
read method I coords(I x,I y)=(x*this.side())+y
mut L cells
class method mut L #default#cells(I side)=
  L()( for i in Range(side*side) \add(E.base()) )
read method Bool inRange(I x,I y)=this.inRange(x) && this.inRange(y)
read method Bool inRange(I that)=that>=0I && that<this.side()
read method E (I x,I y)=this.cells().val(this.coords(x=x,y=y))
mut method Void (I x,I y,E val)=this.#cells().set(this.coords(x=x,y=y),val=val)
read method E (Point that)=this(x=that.x(),y=that.y())
mut method Void (Point that,E val)=this(x=that.x(),y=that.y(), val=val)
read method I x(I coord)=coord.mod(this.side()) 
read method I y(I coord)=coord/this.side()
read method S toS()=(
  var res=S""
  for y in Range(this.side()) (
    res++=S.nl()
    for x in Range(this.side()) (
      e=this(x=x,y=y)
      if e==E.base() (res++=S"@")
      else (res++=e.toS().subString(0\ to=1\))
      )
    )
    res
  )