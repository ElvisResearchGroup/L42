Extra=Trait:{[HasToS,Message,Message$Guard]
  read method S text()
  class method mut This (S that)
  class method This #from(S$StringBuilder stringLiteral)
    =This(stringLiteral.toS())
  method toS()=Introspection$Nested(This).msgTitle(text=this.text())
  method Message #whoopsed(Library atPos)=This(
    S"""%
      |%this.text()
      |Whoopsed in position:
      |  %Introspection$Nested(library=atPos).position()
      """
    )
  }
Lazy=Extra:{
  class method This #apply()
  class method mut This #apply(This2.S that)=native{trusted:lazyMessageK} error void
  read method This2.S text()=native{trusted:get}error void
  mut method Void text(This2.S that)=native{trusted:setMsg}error void
  #norm{nativeKind=LazyMessage
    typeDep=This,This2.S
    coherentDep=This,This2.S
    }
  }
NonDeterministic=Extra:{
  class method This #apply()
  class method mut This #apply(This2.S that)=native{trusted:nonDeterministicErrorK} error void
  read method This2.S text()=native{trusted:get}error void
  mut method Void text(This2.S that)=native{trusted:setMsg}error void
  #norm{nativeKind=NonDeterministicError
    typeDep=This,This2.S
    coherentDep=This,This2.S
    }
  }