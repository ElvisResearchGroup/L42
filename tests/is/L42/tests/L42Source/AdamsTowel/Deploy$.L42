@Public class method Trait extractModule(Library that,Name name)[_]
  =(
  at=Name"AbstractTowel"
  top=Introspection.Nested(library=that)
  i=top.nested(name=at)
  acc=Trait.Acc(Name$Mapping())
  for nc in top.nesteds() {
    name0=nc.nameFromRoot()
    if name0==name || name0==at return void
    annotated=nc.innerDoc().annotation(nested=i)
    if annotated return acc.#squareAdd(name0=>at.toS()++name0)
    return acc.#squareAdd(hide=name0)
    }
  Trait(that)(squareBuilder=acc)[clear=at;name=>'This]
  )