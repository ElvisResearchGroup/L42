$ = Organize:{...}
//Map2D and Map3D

Iterator2D = {
  class method This ()
  method Void #close(I that) = void
  method Bool #incomplete(I that) = that < $.Margin.layerSize()
  method $.Cell2D #elem#default(I that) = \(x=$.Coords.x2(that), y=$.Coords.y2(that))
  method Bool #hasElem(I that) = that < $.Margin.layerSize()
  method I #startIndex() = 0I
  }
Iterator3D = {
  class method This ()
  method Void #close(I that) = void
  method Bool #incomplete(I that) = that < $.Margin.layerSize() * $.Margin.maxZ()
  method $.Cell3D #elem#default(I that) = \(x=$.Coords.x3(that), y=$.Coords.y3(that), z=$.Coords.z3(that))
  method Bool #hasElem(I that) = that < $.Margin.layerSize() * $.Margin.maxZ()
  }

Map2DTrait = Trait : {...}
class method Trait map2D(class Any that)[_] = 
  Map2DTrait['L=>that;'E=>that*'val(that)]
Map3DTrait = Trait : {...}
class method Trait map3D(class Any that)[_] = 
  Map3DTrait['L=>that;'E=>that*'val(that)]

CellBoundingBox = Data : {...}

Cilinder = Data : {...}

Physics = Organize:Trait({...})['TopBox=>'CellsMap.Box]