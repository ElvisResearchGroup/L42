reuse [AdamsTowel]
Point=Data:{Num x, Num y}
Points=Collection.list(Point)
Person=Data:{
  S name
  var Point location
  mut Points jobs
  }
Main0=(
  //_=Log"foo".#$reader()
  imm Point p=Point(x=42Num, y=0Num)
  mut Points ps=Points[p;p;p]
  Debug(S"Hello world %p")
  Debug(S"Hello world %ps")
  mut Person bob=Person(name=S"Bob" location=p, jobs=ps)
  Void myVoid=bob.location(p) //setter
  _=bob.location() //getter
  //bob.jobs(sss)//wrong-- no setter, final field
  read Points bob_ps=bob.jobs()//read Points
  mut Points bob_p2Mut=bob.#jobs()//mut points
  bob.#jobs().add(Point(x=2Num,y=3Num))
  Debug(S"Hello bob=%bob")
  )
Util={
  class method mut Person bob(Point that)={
    mut Points ps=Points[that;that;that]
    mut Person bob=Person(name=S"Bob" location=that, jobs=ps)
    return bob
    }
  }
Main1=(
  _=Log"foo".#$reader()
  Point p=Point(x=42Num, y=0Num)
  capsule Person immBob=Util.bob(p)
  Debug(S"Hello bob=%immBob")
  )
Sifo={/*...*/ 
  class method Library :(Library that)=that
  ClassOperators={class method class This1 ()=This1}
  }
//---------------------------
SecurityLevel={/*...*/
  class method Library :(Library that)=that
  ClassOperators={class method class This1 ()=This1}
  }
Left=SecurityLevel:{interface}
Right=SecurityLevel:{interface}
Top=SecurityLevel:{[Left,Right]}
BoBSL=SecurityLevel:{interface}
SerSL=SecurityLevel:{interface}
TopSL=SecurityLevel:{[BoBSL,SerSL]}
MySifoProgram=Sifo:{...}
Main=MySifoProgram.main()//call it from 42
