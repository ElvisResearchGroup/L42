interface
$={interface method Void accept(Visitor that)}
Visitor={interface
  mut method Void visitP(P$ that)
//  mut method Void visitH1(H1$ that)
//  mut method Void visitDiv(Div$ that)
//  mut method Void visitHead(Head$ that)
//  mut method Void visitBody(Body$ that)
//  mut method Void visitHtml(Html$ that)
//  mut method Void visitA(A$ that)
  }
P$={}//,H1$={},Div$={},Head$={},Body$={},Html$={},A$={}

Case=AstCase(top=$,visitor=Visitor)

List=Collection.list($)
P=Case(P$):{S text}
//H1=Case(H1$):{S text}
//Div=Case(Div$):{List nodes}
//Div$List=Collection.list(Div)
//Head=Case(Head$):{}
//Body=Case(Body$):{Div$List divs}
//Html=Case(Html$):{Head head,Body body}
//A=Case(A$):{S href, S text}