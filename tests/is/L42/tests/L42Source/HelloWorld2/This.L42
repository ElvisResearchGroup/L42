reuse [L42.is/AdamsTowel]
Point = Data:{Num x, Num y}
Point2 = Data:{Num x, Num y}
MM = (
  d=4Double
  {}:Test""(actual=Math.nan() expected=S"NaN")
  {}:Test""(actual=Math.minusZero() expected=S"-0.0")
  {}:Test""(actual=Math.minusInfinty() expected=S"-Infinity")
  {}:Test""(actual=Math.plusInfinty() expected=S"Infinity")
  {}:Test""(actual=Math.maxI() expected=S"2147483647")
  {}:Test""(actual=Math.minI() expected=S"-2147483648")
  {}:Test""(actual=Math.maxLong() expected=S"9223372036854775807")
  {}:Test""(actual=Math.minLong() expected=S"-9223372036854775808")
  
  {}:Test""(expected=Math.nan() actual=Math.nan()*d)
  {}:Test""(expected=d actual=Math.minusZero()+d)
  {}:Test""(expected=d actual=Math.minusZero()+d)
  {}:Test""(Math.minusZero().toS()!=(0Double).toS())
  {}:Test""(Math.minusInfinty()!=Math.plusInfinty())
  {}:Test""(expected=Math.minusInfinty() actual=Math.minusInfinty()+d)
  {}:Test""(expected=Math.plusInfinty() actual=Math.plusInfinty()+d)
  Debug(Math.minusInfinty())
  Debug(Math.plusInfinty())
  Debug(Math.maxI())
  Debug(Math.minI())
  Debug(Math.maxLong())
  Debug(Math.minLong())

  //for i in Range(forvever) Debug(i)
for k in Range.endless() i in Range(3I to=50I).reverse() Debug(S"%i %k")
 )