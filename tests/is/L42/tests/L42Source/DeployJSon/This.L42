reuse [AdamsTowel]
JsonLibTrait = Trait:{reuse [AdamsTowel]
  Json=Class:Trait(Organize:{
    Parse = Trait:{...}
    JsonBase = Trait:{...}
    JsonSeal = Trait:{...}
    ToJson =(JsonSeal:Organize:{...})[hide='Value.sealed()]
    $ = Class:ToJson
    ParseJson = Public:Class:Parse:{...}
    class method $.Value #from(S.StringBuilder stringLiteral) = ParseJson(stringLiteral.toS())
    })[
  clear='String.toS();
  clear='Number.toS();
  clear='Bool.True.toS();
  clear='Bool.False.toS();
  clear='Null.toS();
  clear='Object.toS();
  clear='Array.toS();
  ]['Value.toJson()=>'Value.toS()]
  }
Json = Load:Class.Relax:System.extractModule(JsonLibTrait.code(),name='Json)

TestJSon = (
  Json.Value v=Json"""
    |[{ "a":12, "b":true, "c":["a","k"] },
    |" hello ",
    | 123456,
    |-123456,
    |" \n foo \uAABB hi! "
    |]
    """
  {}:Test""(actual=v, expected=S"""
    |[{"a": 12, "b": true, "c": ["a", "k"]}, " hello ", 123456, -123456, " \n foo \uAABB hi! "]
    """.trim())
  )


//THIS FILE IS NOT COMMITTED. You have to fill it with you git access token, as in
//class method S #$of()=S"ghp_..."
Secret = Trait({...}):{class method S name()='Json}
Web = Class:Secret:Load:{reuse [L42.is/WebIntegrated42Lib]}
TaskDeployJson = Web.#$of().deployModule(JsonLibTrait(), nestedName='Json)

JS=Load:{reuse [#$L42.is/Json]}
  
TaskDeployJSonDocs = ~Web.#$of().deployDocs(\"Doc.c")
  .overview(JS key=S"OVERVIEW_HERE")

TestJSonDeployed = (
  JS.Value v=JS"""
    |[{ "a":12, "b":true, "c":["a","k"] },
    |" hello ",
    | 123456,
    |-123456,
    |" \n foo \uAABB hi! "
    |]
    """
  {}:Test""(actual=v, expected=S"""
    |[{"a": 12, "b": true, "c": ["a", "k"]}, " hello ", 123456, -123456, " \n foo \uAABB hi! "]
    """.trim())
  )


/*
value::= object | array | string | number | "true" | "false" | "null"
object::= '{' ws members '}' ///why this instead of ws in members
members::=member | member ',' ws members
member::= string ws ':' element
array::='[' ws elements ']'
elements::= element | element ',' ws elements
element::= ws value ws
string::= '"' characters '"'
characters::=""| character characters
character::= '0020' . '10FFFF' - '"' - '\' | '\' escape
escape::='"'|'\'|'/'|'b'|'f'|'n'|'r'|'t'|'u' hex hex hex hex
hex::=digit | 'A' . 'F' | 'a' . 'f'
number::= integer fraction exponent
integer::= digit | onenine digits | '-' digit | '-' onenine digits
digits::= digit | digit digits
digit::= '0' | onenine
onenine ::= '1' . '9'
fraction ::= "" | '.' digits
exponent ::= "" | 'E' sign digits | 'e' sign digits
sign ::= "" | '+' | '-'
ws::="" | '0020' ws | '000A' ws | '000D' ws | '0009' ws

*/