class method S ()=S"""
  |package iql42;
  |import is.L42.platformSpecific.javaEvents.Event;
  |import java.util.List;
  |import java.util.Map;
  |import java.util.ArrayList;
  |public class IQL42{
  |  List<Map<String,String>> res=List.of();
  |  ArrayList<String> keys=new ArrayList<>();
  |  int index=-1;
  |  static interface Ask{String of(String msg);}
  |  public IQL42(Event event){
  |    Map<String,Ask> hm=Map.of(
  |      "execute(query)",this::execute,
  |      "executeQuery(query)",this::executeQuery,
  |      "next()",this::next,
  |      "val(label)",this::get,
  |      "findColumn(label)",this::findColumn,
  |      "val(that)",this::getIndex,
  |      "kill()",this::kill
  |      );
  |    event.registerAskEvent("IQL42",(k,id,msg)->{
  |      try{return hm.get(id).of(msg);}
  |      catch(NullPointerException npe){throw new RuntimeException("Invalid id: "+id);}
  |      });
  |    }
  |  void runQuery(String query){
  |    res=iql.IQL.run(query);
  |    keys.clear();
  |    keys.addAll(res.get(0).keySet());
  |    java.util.Collections.sort(keys);
  |    if (res.size()==1){
  |      var emptyShape=res.get(0) instanceof iql.IQL.EmptyEntriesMap;
  |      if(emptyShape){res=List.of();}
  |      }
  |    index=-1;
  |    }
  |  String execute(String query){runQuery(query);return "";}
  |  String executeQuery(String query){runQuery(query);return "";}
  |  String next(String empty){
  |    if(res.isEmpty()){return "false";}
  |    index+=1;
  |    return index<res.size()?"true":"false";
  |    }
  |  String get(String field){
  |    if(index==-1 || !keys.contains(field)){return "";}
  |    return res.get(index).get(field);
  |    }
  |  String findColumn(String field){
  |    if(res.isEmpty()){return "";}
  |    return keys.indexOf(field)+"";
  |    }
  |  String getIndex(String that){
  |    String key;try{key=keys.get(Integer.parseInt(that));}
  |    catch(Exception e){return "";}
  |    return get(key);
  |    }
  |  String kill(String empty){
  |    System.exit(0);
  |    return "";//unreachable
  |    }
  |  }
"""