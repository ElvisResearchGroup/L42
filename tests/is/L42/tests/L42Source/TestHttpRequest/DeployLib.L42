reuse [AdamsTowel]
LoadDeploy = {
  class method Library with(class Any writer)[_] = Class:DeployTrait['Writer=>writer]
  DeployTrait=Trait:{
    Writer={
      Fail={}
      mut method Void write(Url on, S contentBase64)[Fail]
      }
    class method Void towel(Trait that, Url on, mut Writer writer)[_] = (
      res=Cache.Call:that.removeUnusedCode()
      content=System.towelToS(res.code(),fauxName=on.toS())
      _=writer.write(on=on, contentBase64=content)
      void
      )
    class method Void module(Trait that, Name name, Url on, mut Writer writer)[_] = 
      This.towel(System.extractModule(that.code(),name=name), on=on, writer=writer)
    class method Void jar(Trait that,Url on, mut Writer writer)[_] = (
      content=System.jarToS(that.code(),fauxName=on.toS())
      _=writer.write(on=on, contentBase64=content)
      void
      )
    }
  }