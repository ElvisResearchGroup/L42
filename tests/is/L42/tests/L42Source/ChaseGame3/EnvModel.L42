$=Organize:{
  $={}//Can not drop this nesting since we need to declare Entity methods in $
  Entity={interface
    mut $ model
    Bool solid
    Vector pos
    Vector speed
    Double radius
    Double break
    mut method Void ping()
    read method S paint()
    }
  Entity$Opt=Collection.optional(Entity)
  Entity$List=Collection.list(Entity)
  mut Entity.List es
  Margin margin
  mut method Bool sameEntity(mut Entity a, mut Entity b)
  mut method Void bulletKill(mut Entity that)
  mut method Void playerIsHit()
  mut method Void remove(mut Entity that)
  }
Impact={class method Bool (read $.Entity a, read $.Entity b)=(
  dx=a.pos().x()-b.pos().x()
  dy=a.pos().y()-b.pos().y()
  r=a.radius()+b.radius()
  (dx*dx)+(dy*dy) <= r*r
  )}
EntityTrait=Trait:{...}
PulseAI=Trait:{...}
ChaseAI=Trait:{...}

Rat=Class:Data:EntityTrait:ChaseAI:{...}
mut method mut Rat rat(S text,Double x,Double y)=
  \(model=this,pos=\(x=x,y=y),speed=\(x=0\,y=0\),text=text)

Bullet=Class:Data:EntityTrait:ChaseAI:{...}
mut method mut Bullet bullet(S text,Double x,Double y)=
  \(model=this,pos=\(x=x,y=y),speed=\(x=0\,y=0\),text=text)

Player=Class:Data:EntityTrait:PulseAI:{...}

mut Player player
var mut $.Entity.List es
mut $.Entity.List removeQueue
mut Math.Random r
mut JServer j
var I points
var I pings
var Bool running
class method mut This #$of()=(
  p=Player(
    model=res
    pos=\(x=35\,y=100\),speed=\(x=0\,y=0\),text=S"",
    left=\.false(),right=\.false(),up=\.false(),down=\.false()
    )
  res=This(
    player=p
    es=$.Entity.List(),
    removeQueue=$.Entity.List(),
    r=Math.Random.#$random(),
    j=JServer.#$of(),
    points=0I,
    pings=0I,
    running=Bool.false()
    )
  res
  )
mut method Void remove(mut $.Entity that)=this.#removeQueue().#add(right=that)
mut method Void clearRemoveQueue()=(
  r=this.#removeQueue()
  for mut e in r ( this.removeQueue(e) )
  while !r.isEmpty() ( r.removeRight() )
  )
mut method Void removeQueue(mut $.Entity that)=(
  es=this.#es()
  for i in Range(es.size()), mut e in es (
    if this.sameEntity(a=that,b=e) Break(es.remove(i))
    )
  )
@JServer.Handler mut method Void reset(S msg)=
  this.#player().pos(\(x=20\,y=75\))

@JServer.Handler mut method Void typed(S msg)=(
  if msg==S.nl() (
    text=this.#player().text()
    x=this.#player().pos().x()
    y=this.#player().pos().y()
    this.#es().#add(right=this.bullet(text=text,x=x,y=y))
    )
  this.#player().input(msg=msg)
  )
@JServer.Handler mut method Void pressed(S msg)=
  this.#player().input(msg=msg,pressed=Bool.true())
@JServer.Handler mut method Void released(S msg)=
  this.#player().input(msg=msg,pressed=Bool.false())

@Cache.Lazy class method S.List names()=\[
  S"reuse [AdamsTowel]";
  S"Debug(S%S.dq()Hello World%S.dq())";
  S"Main=Debug(S%S.dq()Hello World%S.dq())";
  S"Bob(age=23\)";
  S"bob.age(\age+1\)";
  S"text.subString(4\ to=\size)";
  S"I.List[1\;2\;3\]";
  S"for a in as, var b in bs (b+=a)";
  S"Person=Data:{S name,I age}";
  S"Task={}:Test%S.dq()Test1%(S.dq())(expected=42I, actual=40I+2I)";
  S"MyTrait['A=>'B]";
  S"Top=Public:Organize:Data:{...}";
  ]
@JServer.Handler mut method Void ping(S msg)=
  if this.running() this.runningPing(msg=msg)
mut method Void runningPing(S msg)=(
  speed=230I
  this.clearRemoveQueue()
  this.pings(\pings+1\)
  es=this.#es()
  newRat=(this.pings()/speed)*speed==this.pings()
  if newRat (
    xr=Double(num=this.#r().nextInRange(0\ to=500\).toNum(denominator=1I))
    yr=Double(num=this.#r().nextInRange(0\ to=500\).toNum(denominator=1I))
    last=This.names().size()-1I
    current=(this.pings()/speed)-1I
    text=This.names().val(current.min(last))
    r=this.rat(text=text,x=0\,y=0\)
    es.#add(right=r)
    )
  var res=S""
  for mut e in es (
    e.ping()
    res++=e.paint()++S.nl() 
    )
  this.#j().submitEvent(key='Example.RefreshEntities, id=S"base", msg=res)
  whoops JServer.Fail
  )
mut method Void bulletKill(mut $.Entity that)=(
  this.remove(that)
  this.points(\points+1\)
  this.#j().submitEvent(key='Example.ChangeScreen, id='Game,msg=this.points().toS())
  whoops Message.Guard
  )
mut method Bool sameEntity(mut $.Entity a, mut $.Entity b)=
  System.mutReferenceEquality(a,and=b)
mut method Void playerIsHit()=(
  this.running(\.false())
  p=this.#player()
  p.left(\.false())
  p.right(\.false())
  p.up(\.false())
  p.down(\.false())
  p.text(\"")
  this.#j().submitEvent(key='Example.ChangeScreen, id='Start, msg=S"Last Score:%this.points()")
  whoops JServer.Fail
  )
read method Margin margin()=
  \(minX=10\,minY=10\,maxX=700\ maxY=500\)

@JServer.Handler mut method Void start(S msg)=(
  this.#j().submitEvent(key='Example.ChangeScreen, id='Game, msg=S"0")
  this.pings(0\)
  this.running(\.true())
  this.es($.Entity.List[
    mutVal=this.#player();
    mutVal=this.rat(text=S"Apollo",x=140\, y=230\);
    mutVal=this.rat(text=S"Zeus",x=240\, y=130\);
    mutVal=this.rat(text=S"Minerva",x=540\, y=530\);])
  whoops JServer.Fail
  )