\begin{thebibliography}{10}
\expandafter\ifx\csname url\endcsname\relax
  \def\url#1{\texttt{#1}}\fi
\expandafter\ifx\csname urlprefix\endcsname\relax\def\urlprefix{URL }\fi
\expandafter\ifx\csname href\endcsname\relax
  \def\href#1#2{#2} \def\path#1{#1}\fi

\bibitem{DBLP:conf/sigada/Leino12}
K.~R.~M. Leino, Developing verified programs with dafny, in: Proceedings of the
  2012 {ACM} Conference on High Integrity Language Technology, {HILT} '12,
  December 2-6, 2012, Boston, Massachusetts, {USA}, 2012, pp. 9--10.
\newblock \href {https://doi.org/10.1145/2402676.2402682}
  {\path{doi:10.1145/2402676.2402682}}.

\bibitem{Meyer:1988:OSC:534929}
B.~Meyer, Object-Oriented Software Construction, 1st Edition, Prentice-Hall,
  Inc., Upper Saddle River, NJ, USA, 1988.

\bibitem{DBLP:journals/jot/BarnettDFLS04}
M.~Barnett, R.~DeLine, M.~F{\"{a}}hndrich, K.~R.~M. Leino, W.~Schulte,
  Verification of object-oriented programs with invariants, Journal of Object
  Technology 3~(6) (2004) 27--56.
\newblock \href {https://doi.org/10.5381/jot.2004.3.6.a2}
  {\path{doi:10.5381/jot.2004.3.6.a2}}.

\bibitem{Bolz:2011:ARP:1929501.1929508}
C.~F. Bolz, A.~Cuni, M.~FijaBkowski, M.~Leuschel, S.~Pedroni, A.~Rigo,
  \href{http://doi.acm.org/10.1145/1929501.1929508}{Allocation removal by
  partial evaluation in a tracing jit}, in: Proceedings of the 20th ACM SIGPLAN
  Workshop on Partial Evaluation and Program Manipulation, PEPM '11, ACM, New
  York, NY, USA, 2011, pp. 43--52.
\newblock \href {https://doi.org/10.1145/1929501.1929508}
  {\path{doi:10.1145/1929501.1929508}}.
\newline\urlprefix\url{http://doi.acm.org/10.1145/1929501.1929508}

\bibitem{Gopinathan:2008:RMO:1483018.1483028}
M.~Gopinathan, S.~K. Rajamani, Runtime verification, Springer-Verlag, Berlin,
  Heidelberg, 2008, Ch. Runtime Monitoring of Object Invariants with Guarantee,
  pp. 158--172.
\newblock \href {https://doi.org/10.1007/978-3-540-89247-2_10}
  {\path{doi:10.1007/978-3-540-89247-2_10}}.

\bibitem{ServettoZucca15}
M.~Servetto, E.~Zucca, Aliasing control in an imperative pure calculus, in:
  X.~Feng, S.~Park (Eds.), Programming Languages and Systems - 13th Asian
  Symposium (APLAS), Vol. 9458 of Lecture Notes in Computer Science, Springer,
  2015, pp. 208--228.
\newblock \href {https://doi.org/10.1007/978-3-319-26529-2_12}
  {\path{doi:10.1007/978-3-319-26529-2_12}}.

\bibitem{ServettoEtAl13a}
M.~Servetto, D.~J. Pearce, L.~Groves, A.~Potanin, Balloon types for safe
  parallelisation over arbitrary object graphs, in: WODET 2014 - Workshop on
  Determinism and Correctness in Parallel Programming, 2013.
\newblock \href {https://doi.org/doi=10.1.1.353.2449}
  {\path{doi:doi=10.1.1.353.2449}}.

\bibitem{JOT:issue_2011_01/article1}
G.~Lagorio, M.~Servetto, Strong exception-safety for checked and unchecked
  exceptions, Journal of Object Technology 10 (2011) 1:1--20.
\newblock \href {https://doi.org/10.5381/jot.2011.10.1.a1}
  {\path{doi:10.5381/jot.2011.10.1.a1}}.

\bibitem{GianniniEtAl16}
P.~Giannini, M.~Servetto, E.~Zucca,
  \href{http://ceur-ws.org/Vol-1720/full5.pdf}{Types for immutability and
  aliasing control}, in: ICTCS'16 - Italian Conf. on Theoretical Computer
  Science, Vol. 1720 of {CEUR} Workshop Proceedings, CEUR-WS.org, 2016, pp.
  62--74.
\newline\urlprefix\url{http://ceur-ws.org/Vol-1720/full5.pdf}

\bibitem{clebsch2015deny}
S.~Clebsch, S.~Drossopoulou, S.~Blessing, A.~McNeil, Deny capabilities for
  safe, fast actors, in: Proceedings of the 5th International Workshop on
  Programming Based on Actors, Agents, and Decentralized Control, ACM, 2015,
  pp. 1--12.
\newblock \href {https://doi.org/10.1145/2824815.2824816}
  {\path{doi:10.1145/2824815.2824816}}.

\bibitem{clebsch2017orca}
S.~Clebsch, J.~Franco, S.~Drossopoulou, A.~M. Yang, T.~Wrigstad, J.~Vitek,
  Orca: Gc and type system co-design for actor languages, Proceedings of the
  ACM on Programming Languages 1~(OOPSLA) (2017) 72.
\newblock \href {https://doi.org/10.1145/3133896} {\path{doi:10.1145/3133896}}.

\bibitem{GordonEtAl12}
C.~S. Gordon, M.~J. Parkinson, J.~Parsons, A.~Bromfield, J.~Duffy, Uniqueness
  and reference immutability for safe parallelism, in: ACM SIGPLAN Conference
  on Object-Oriented Programming, Systems, Languages and Applications (OOPSLA
  2012), ACM Press, 2012, pp. 21--40.
\newblock \href {https://doi.org/10.1145/2384616.2384619}
  {\path{doi:10.1145/2384616.2384619}}.

\bibitem{TschantzErnst05}
M.~S. Tschantz, M.~D. Ernst, Javari: Adding reference immutability to {J}ava,
  in: ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages
  and Applications (OOPSLA 2005), ACM Press, 2005, pp. 211--230.
\newblock \href {https://doi.org/10.1145/1094811.1094828}
  {\path{doi:10.1145/1094811.1094828}}.

\bibitem{BirkaErnst04}
A.~Birka, M.~D. Ernst, A practical type system and language for reference
  immutability, in: ACM SIGPLAN Conference on Object-Oriented Programming,
  Systems, Languages and Applications (OOPSLA 2004), 2004, pp. 35--49.
\newblock \href {https://doi.org/10.1145/1035292.1028980}
  {\path{doi:10.1145/1035292.1028980}}.

\bibitem{OstlundEtAl08}
J.~{\"{O}}stlund, T.~Wrigstad, D.~Clarke, B.~{\AA}kerblom, Ownership,
  uniqueness, and immutability, in: R.~F. Paige, B.~Meyer (Eds.), International
  Conference on Objects, Components, Models and Patterns, Vol.~11 of Lecture
  Notes in Computer Science, Springer, 2008, pp. 178--197.
\newblock \href {https://doi.org/10.1007/978-3-540-69824-1_11}
  {\path{doi:10.1007/978-3-540-69824-1_11}}.

\bibitem{ZibinEtAl10}
Y.~Zibin, A.~Potanin, P.~Li, M.~Ali, M.~D. Ernst, Ownership and immutability in
  generic {J}ava, in: ACM SIGPLAN Conference on Object-Oriented
  Programming,Systems, Languages and Applications (OOPSLA 2010), 2010, pp.
  598--617.
\newblock \href {https://doi.org/10.1145/1869459.1869509}
  {\path{doi:10.1145/1869459.1869509}}.

\bibitem{Potanin2013}
A.~Potanin, J.~{\"O}stlund, Y.~Zibin, M.~D. Ernst, Immutability, Springer
  Berlin Heidelberg, Berlin, Heidelberg, 2013, pp. 233--269.
\newblock \href {https://doi.org/10.1007/978-3-642-36946-9_9}
  {\path{doi:10.1007/978-3-642-36946-9_9}}.

\bibitem{boyland2001alias}
J.~Boyland, Alias burying: Unique variables without destructive reads,
  Software: Practice and Experience 31~(6) (2001) 533--553.
\newblock \href {https://doi.org/10.1002/spe.370} {\path{doi:10.1002/spe.370}}.

\bibitem{GIANNINI2019145}
P.~Giannini, M.~Servetto, E.~Zucca, J.~Cone, Flexible recovery of uniqueness
  and immutability, Theoretical Computer Science 764 (2019) 145 -- 172.
\newblock \href {https://doi.org/10.1016/j.tcs.2018.09.001}
  {\path{doi:10.1016/j.tcs.2018.09.001}}.

\bibitem{ClarkeWrigstad03}
D.~Clarke, T.~Wrigstad, External uniqueness is unique enough, in: ECOOP'03 -
  Object-Oriented Programming, Vol. 2473 of Lecture Notes in Computer Science,
  Springer, 2003, pp. 176--200.
\newblock \href {https://doi.org/10.1007/978-3-540-45070-2_9}
  {\path{doi:10.1007/978-3-540-45070-2_9}}.

\bibitem{HallerOdersky10}
P.~Haller, M.~Odersky, Capabilities for uniqueness and borrowing, in:
  T.~D'Hondt (Ed.), ECOOP'10 - Object-Oriented Programming, Vol. 6183 of
  Lecture Notes in Computer Science, Springer, 2010, pp. 354--378.
\newblock \href {https://doi.org/10.1007/978-3-642-14107-2_17}
  {\path{doi:10.1007/978-3-642-14107-2_17}}.

\bibitem{Abrahams2000}
D.~Abrahams, Exception-Safety in Generic Components, Springer Berlin
  Heidelberg, Berlin, Heidelberg, 2000, pp. 69--79.
\newblock \href {https://doi.org/10.1007/3-540-39953-4_6}
  {\path{doi:10.1007/3-540-39953-4_6}}.

\bibitem{miller2003capability}
M.~S. Miller, K.-P. Yee, J.~Shapiro, et~al., Capability myths demolished, Tech.
  rep., Technical Report SRL2003-02, Johns Hopkins University Systems Research
  Laboratory, 2003. http://www. erights. org/elib/capability/duals (2003).

\bibitem{noble2016abstract}
J.~Noble, S.~Drossopoulou, M.~S. Miller, T.~Murray, A.~Potanin, Abstract data
  types in object-capability systems (2016).

\bibitem{karger1988improving}
P.~A. Karger, Improving security and performance for capability systems, Ph.D.
  thesis, Citeseer (1988).

\bibitem{RobustComposition}
M.~S. Miller, Robust composition: Towards a unified approach to access control
  and concurrency control, Ph.D. thesis, Johns Hopkins University, Baltimore,
  Maryland, USA (May 2006).

\bibitem{finifter2008verifiable}
M.~Finifter, A.~Mettler, N.~Sastry, D.~Wagner, Verifiable functional purity in
  java, in: Proceedings of the 15th ACM conference on Computer and
  communications security, ACM, 2008, pp. 161--174.
\newblock \href {https://doi.org/10.1145/1455770.1455793}
  {\path{doi:10.1145/1455770.1455793}}.

\bibitem{DBLP:conf/mpc/BarnettN04}
M.~Barnett, D.~A. Naumann, Friends need a bit more: Maintaining invariants over
  shared state, in: Mathematics of Program Construction, 7th International
  Conference, {MPC} 2004, Stirling, Scotland, UK, July 12-14, 2004,
  Proceedings, 2004, pp. 54--84.
\newblock \href {https://doi.org/10.1007/978-3-540-27764-4\_5}
  {\path{doi:10.1007/978-3-540-27764-4\_5}}.

\bibitem{Dietl05universes:lightweight}
W.~Dietl, P.~M{\"u}ller, Universes: Lightweight ownership for jml, JOURNAL OF
  OBJECT TECHNOLOGY 4~(8) (2005) 5--32.

\bibitem{10.1007/978-3-540-92188-2_4}
D.~Cunningham, W.~Dietl, S.~Drossopoulou, A.~Francalanza, P.~M{\"u}ller, A.~J.
  Summers, Universe types for topology and encapsulation, in: Formal Methods
  for Components and Objects, 2008, pp. 72--112.

\bibitem{DietlEtAl07}
W.~Dietl, S.~Drossopoulou, P.~M{\"u}ller, Generic universe types, in: ECOOP'07
  - Object-Oriented Programming, Vol. 4609 of Lecture Notes in Computer
  Science, Springer, 2007, pp. 28--53.
\newblock \href {https://doi.org/10.1007/978-3-540-73589-2_3}
  {\path{doi:10.1007/978-3-540-73589-2_3}}.

\bibitem{feldman2006jose}
Y.~A. Feldman, O.~Barzilay, S.~Tyszberowicz, Jose: Aspects for design by
  contract, in: Software Engineering and Formal Methods, 2006. SEFM 2006.
  Fourth IEEE International Conference on, IEEE, 2006, pp. 80--89.
\newblock \href {https://doi.org/10.1109/SEFM.2006.26}
  {\path{doi:10.1109/SEFM.2006.26}}.

\bibitem{matsakis2014rust}
N.~D. Matsakis, F.~S. Klock~II, The rust language, in: ACM SIGAda Ada Letters,
  Vol.~34, ACM, 2014, pp. 103--104.
\newblock \href {https://doi.org/10.1145/2663171.2663188}
  {\path{doi:10.1145/2663171.2663188}}.

\bibitem{Bloch08}
J.~Bloch, Effective {J}ava (2Nd Edition) (The Java Series), 2nd Edition,
  Prentice Hall PTR, 2008.

\bibitem{Detlefs98wrestlingwith}
D.~L. Detlefs, K.~R.~M. Leino, G.~Nelson, Wrestling with rep exposure (1998).

\bibitem{IgarashiEtAl01}
A.~Igarashi, B.~C. Pierce, P.~Wadler, Featherweight {J}ava: a minimal core
  calculus for {J}ava and {GJ}, ACM Transactions on Programming Languages and
  Systems 23~(3) (2001) 396--450.

\bibitem{pierce2002types}
B.~C. Pierce, Types and programming languages, MIT press, 2002.

\bibitem{10.1016/j.tcs.2013.08.017}
R.~N.~S. Rowe, S.~J. Van~Bakel,
  \href{https://doi.org/10.1016/j.tcs.2013.08.017}{Semantic types and
  approximation for featherweight java}, Theor. Comput. Sci. 517 (2014)
  34–74.
\newblock \href {https://doi.org/10.1016/j.tcs.2013.08.017}
  {\path{doi:10.1016/j.tcs.2013.08.017}}.
\newline\urlprefix\url{https://doi.org/10.1016/j.tcs.2013.08.017}

\bibitem{Alexandrescu:2010:DPL:1875434}
A.~Alexandrescu, The D Programming Language, 1st Edition, Addison-Wesley
  Professional, 2010.

\bibitem{Meyer:1992:EL:129093}
B.~Meyer, Eiffel: The Language, Prentice-Hall, Inc., Upper Saddle River, NJ,
  USA, 1992.

\bibitem{DBLP:conf/fmco/BarnettCDJL05}
M.~Barnett, B.~E. Chang, R.~DeLine, B.~Jacobs, K.~R.~M. Leino, Boogie: {A}
  modular reusable verifier for object-oriented programs, in: Formal Methods
  for Components and Objects, 4th International Symposium, {FMCO} 2005,
  Amsterdam, The Netherlands, November 1-4, 2005, Revised Lectures, 2005, pp.
  364--387.
\newblock \href {https://doi.org/10.1007/11804192\_17}
  {\path{doi:10.1007/11804192\_17}}.

\bibitem{DBLP:conf/sac/FahndrichBL10}
M.~F{\"{a}}hndrich, M.~Barnett, F.~Logozzo, Embedded contract languages, in:
  Proceedings of the 2010 {ACM} Symposium on Applied Computing (SAC), Sierre,
  Switzerland, March 22-26, 2010, 2010, pp. 2103--2110.
\newblock \href {https://doi.org/10.1145/1774088.1774531}
  {\path{doi:10.1145/1774088.1774531}}.

\bibitem{barnett2011specification}
M.~Barnett, M.~F{\"a}hndrich, K.~R.~M. Leino, P.~M{\"u}ller, W.~Schulte,
  H.~Venter, Specification and verification: the spec\# experience,
  Communications of the ACM 54~(6) (2011) 81--91.
\newblock \href {https://doi.org/10.1145/1953122.1953145}
  {\path{doi:10.1145/1953122.1953145}}.

\bibitem{DBLP:conf/vstte/LeinoMW08}
K.~R.~M. Leino, P.~M{\"{u}}ller, A.~Wallenburg, Flexible immutability with
  frozen objects, in: Verified Software: Theories, Tools, Experiments, Second
  International Conference, {VSTTE} 2008, Toronto, Canada, October 6-9, 2008.
  Proceedings, 2008, pp. 192--208.
\newblock \href {https://doi.org/10.1007/978-3-540-87873-5\_17}
  {\path{doi:10.1007/978-3-540-87873-5\_17}}.

\bibitem{leino2004object}
K.~R.~M. Leino, P.~M{\"u}ller, Object invariants in dynamic contexts, in:
  European Conference on Object-Oriented Programming, Springer, 2004, pp.
  491--515.
\newblock \href {https://doi.org/10.1007/978-3-540-24851-4_22}
  {\path{doi:10.1007/978-3-540-24851-4_22}}.

\bibitem{Summers:2009:NFO:1562154.1562160}
A.~J. Summers, S.~Drossopoulou, P.~M\"{u}ller,
  \href{http://doi.acm.org/10.1145/1562154.1562160}{The need for flexible
  object invariants}, in: International Workshop on Aliasing, Confinement and
  Ownership in Object-Oriented Programming, IWACO '09, ACM, New York, NY, USA,
  2009, pp. 6:1--6:9.
\newblock \href {https://doi.org/10.1145/1562154.1562160}
  {\path{doi:10.1145/1562154.1562160}}.
\newline\urlprefix\url{http://doi.acm.org/10.1145/1562154.1562160}

\bibitem{ponythesis}
S.~Clebsch, Pony: co-designing a type system and a runtime, Ph.D. thesis
  (2017).

\bibitem{Boyland10}
J.~Boyland, Semantics of fractional permissions with nesting, ACM Transactions
  on Programming Languages and Systems 32~(6) (2010).
\newblock \href {https://doi.org/10.1145/1749608.1749611}
  {\path{doi:10.1145/1749608.1749611}}.

\bibitem{boyland2003checking}
J.~Boyland, Checking interference with fractional permissions, in:
  International Static Analysis Symposium, Springer, 2003, pp. 55--72.

\bibitem{Hogg91}
J.~Hogg, Islands: Aliasing protection in object-oriented languages, in: ACM
  Symp. on Object-Oriented Programming: Systems, Languages and Applications
  1991, ACM Press, 1991, pp. 271--285.

\bibitem{Smith:2000:AT:645394.651903}
F.~Smith, D.~Walker, J.~G. Morrisett,
  \href{http://dl.acm.org/citation.cfm?id=645394.651903}{Alias types}, in:
  Proceedings of the 9th European Symposium on Programming Languages and
  Systems, ESOP '00, Springer-Verlag, London, UK, UK, 2000, pp. 366--381.
\newline\urlprefix\url{http://dl.acm.org/citation.cfm?id=645394.651903}

\bibitem{DBLP:conf/pldi/AikenFKT03}
A.~Aiken, J.~S. Foster, J.~Kodumal, T.~Terauchi, Checking and inferring local
  non-aliasing, in: Proceedings of the {ACM} {SIGPLAN} 2003 Conference on
  Programming Language Design and Implementation 2003, San Diego, California,
  USA, June 9-11, 2003, 2003, pp. 129--140.
\newblock \href {https://doi.org/10.1145/781131.781146}
  {\path{doi:10.1145/781131.781146}}.

\bibitem{Boyland06}
J.~Boyland, Why we should not add readonly to {J}ava (yet), Journal of Object
  Technology 5~(5) (2006) 5--29.
\newblock \href {https://doi.org/10.5381/jot.2006.5.5.a1}
  {\path{doi:10.5381/jot.2006.5.5.a1}}.

\bibitem{ClarkeEtAl13}
D.~Clarke, J.~{\"{O}}stlund, I.~Sergey, T.~Wrigstad, Ownership types: {A}
  survey, in: D.~Clarke, J.~Noble, T.~Wrigstad (Eds.), Aliasing in
  Object-Oriented Programming. Types, Analysis and Verification, Vol. 7850 of
  Lecture Notes in Computer Science, Springer, 2013, pp. 15--58.
\newblock \href {https://doi.org/10.1007/978-3-642-36946-9_3}
  {\path{doi:10.1007/978-3-642-36946-9_3}}.

\bibitem{muller2002modular}
P.~M{\"u}ller, Modular specification and verification of object-oriented
  programs, Springer-Verlag, 2002.
\newblock \href {https://doi.org/10.1007/3-540-45651-1}
  {\path{doi:10.1007/3-540-45651-1}}.

\bibitem{drossopoulou2008unified}
S.~Drossopoulou, A.~Francalanza, P.~M{\"u}ller, A.~J. Summers, A unified
  framework for verification techniques for object invariants, in: European
  Conference on Object-Oriented Programming, Springer, 2008, pp. 412--437.
\newblock \href {https://doi.org/10.1007/978-3-540-70592-5_18}
  {\path{doi:10.1007/978-3-540-70592-5_18}}.

\bibitem{meyer2016class}
B.~Meyer, Class invariants: Concepts, problems, solutions, arXiv preprint
  arXiv:1608.07637 (2016).

\bibitem{Burdy2005}
L.~Burdy, Y.~Cheon, D.~R. Cok, M.~D. Ernst, J.~R. Kiniry, G.~T. Leavens,
  K.~R.~M. Leino, E.~Poll, An overview of jml tools and applications,
  International Journal on Software Tools for Technology Transfer 7~(3) (2005)
  212--232.
\newblock \href {https://doi.org/10.1007/s10009-004-0167-4}
  {\path{doi:10.1007/s10009-004-0167-4}}.

\bibitem{DBLP:journals/scp/MullerPL06}
P.~M{\"{u}}ller, A.~Poetzsch{-}Heffter, G.~T. Leavens,
  \href{https://doi.org/10.1016/j.scico.2006.03.001}{Modular invariants for
  layered object structures}, Sci. Comput. Program. 62~(3) (2006) 253--286.
\newblock \href {https://doi.org/10.1016/j.scico.2006.03.001}
  {\path{doi:10.1016/j.scico.2006.03.001}}.
\newline\urlprefix\url{https://doi.org/10.1016/j.scico.2006.03.001}

\bibitem{JML}
{Gary T. Leavens, Erik Poll, Curtis Clifton, Yoonsik Cheon, Clyde Ruby, David
  Cok, Peter Muller, Joseph Kiniry, Patrice Chalin, Daniel M. Zimmerman, Werner
  Dietl},
  \href{http://www.eecs.ucf.edu/~leavens/JML//refman/jmlrefman.pdf}{{JML
  Reference Manual}} (2013).
\newline\urlprefix\url{http://www.eecs.ucf.edu/~leavens/JML//refman/jmlrefman.pdf}

\bibitem{ACSL}
P.~Baudin, P.~Cuoq, J.-C. Filliâtre, C.~Marché, B.~Monate, Y.~Moy,
  V.~Prevosto, \href{https://www.frama-c.com/download/acsl.pdf}{Acsl: Ansi/iso
  c specification language: Version 1.16} (2020).
\newline\urlprefix\url{https://www.frama-c.com/download/acsl.pdf}

\bibitem{WhyML}
F.~Bobot, J.-C. Filliâtre, C.~Marché, G.~Melquiond, A.~Paskevich,
  \href{https://why3.lri.fr/doc/}{The why3 platform: Version 1.5} (Apr. 2022).
\newline\urlprefix\url{https://why3.lri.fr/doc/}

\bibitem{Ada}
I.~Intermetrics, I.~The MITRE~Corporation, A.~Consultants, Ada-Europe,
  \href{http://www.ada-auth.org/standards/ada12.html}{Ada reference manual:
  2012 edition} (2012).
\newline\urlprefix\url{http://www.ada-auth.org/standards/ada12.html}

\bibitem{Spark}
AdaCore, A.~U. Ltd,
  \href{https://www.adacore.com/papers/spark-2014-reference-manual-release-2020}{Spark
  2014 reference manual: Version 2020} (Apr. 2020).
\newline\urlprefix\url{https://www.adacore.com/papers/spark-2014-reference-manual-release-2020}

\bibitem{10.1145/363235.363259}
C.~A.~R. Hoare, \href{https://doi.org/10.1145/363235.363259}{An axiomatic basis
  for computer programming}, Commun. ACM 12~(10) (1969) 576–580.
\newblock \href {https://doi.org/10.1145/363235.363259}
  {\path{doi:10.1145/363235.363259}}.
\newline\urlprefix\url{https://doi.org/10.1145/363235.363259}

\bibitem{Barnett:2004:SPS:2131546.2131549}
M.~Barnett, K.~R.~M. Leino, W.~Schulte, The spec\# programming system: An
  overview, in: Proceedings of the 2004 International Conference on
  Construction and Analysis of Safe, Secure, and Interoperable Smart Devices,
  CASSIS'04, Springer-Verlag, Berlin, Heidelberg, 2005, pp. 49--69.
\newblock \href {https://doi.org/10.1007/978-3-540-30569-9_3}
  {\path{doi:10.1007/978-3-540-30569-9_3}}.

\bibitem{DBLP:conf/oopsla/TakikawaSDTF12}
A.~Takikawa, T.~S. Strickland, C.~Dimoulas, S.~Tobin{-}Hochstadt, M.~Felleisen,
  Gradual typing for first-class classes, in: Proceedings of the 27th Annual
  {ACM} {SIGPLAN} Conference on Object-Oriented Programming, Systems,
  Languages, and Applications, {OOPSLA} 2012, part of {SPLASH} 2012, Tucson,
  AZ, USA, October 21-25, 2012, 2012, pp. 793--810.
\newblock \href {https://doi.org/10.1145/2384616.2384674}
  {\path{doi:10.1145/2384616.2384674}}.

\bibitem{DBLP:conf/popl/WrigstadNLOV10}
T.~Wrigstad, F.~Z. Nardelli, S.~Lebresne, J.~{\"{O}}stlund, J.~Vitek,
  Integrating typed and untyped code in a scripting language, in: Proceedings
  of the 37th {ACM} {SIGPLAN-SIGACT} Symposium on Principles of Programming
  Languages, {POPL} 2010, Madrid, Spain, January 17-23, 2010, 2010, pp.
  377--388.
\newblock \href {https://doi.org/10.1145/1706299.1706343}
  {\path{doi:10.1145/1706299.1706343}}.

\bibitem{parkinson2007class}
M.~Parkinson, Class invariants: The end of the road?, Aliasing, Confinement and
  Ownership in Object-oriented Programming (IWACO) (2007) 9.

\bibitem{DBLP:conf/fm/PolikarpovaTFM14}
N.~Polikarpova, J.~Tschannen, C.~A. Furia, B.~Meyer, Flexible invariants
  through semantic collaboration, in: {FM} 2014: Formal Methods - 19th
  International Symposium, Singapore, May 12-16, 2014. Proceedings, 2014, pp.
  514--530.
\newblock \href {https://doi.org/10.1007/978-3-319-06410-9\_35}
  {\path{doi:10.1007/978-3-319-06410-9\_35}}.

\bibitem{DBLP:journals/tcs/NaumannB06}
D.~A. Naumann, M.~Barnett,
  \href{https://doi.org/10.1016/j.tcs.2006.07.035}{Towards imperative modules:
  Reasoning about invariants and sharing of mutable state}, Theor. Comput. Sci.
  365~(1-2) (2006) 143--168.
\newblock \href {https://doi.org/10.1016/j.tcs.2006.07.035}
  {\path{doi:10.1016/j.tcs.2006.07.035}}.
\newline\urlprefix\url{https://doi.org/10.1016/j.tcs.2006.07.035}

\bibitem{DBLP:conf/ecoop/LeinoM04}
K.~R.~M. Leino, P.~M{\"{u}}ller, Object invariants in dynamic contexts, in:
  {ECOOP} 2004 - Object-Oriented Programming, 18th European Conference, Oslo,
  Norway, June 14-18, 2004, Proceedings, 2004, pp. 491--516.
\newblock \href {https://doi.org/10.1007/978-3-540-24851-4\_22}
  {\path{doi:10.1007/978-3-540-24851-4\_22}}.

\bibitem{Leino2004ExceptionSF}
K.~R.~M. Leino, W.~Schulte, Exception safety for c\#, Proceedings of the Second
  International Conference on Software Engineering and Formal Methods, 2004.
  SEFM 2004. (2004) 218--227.

\bibitem{chalin2007logical}
P.~Chalin, Are the logical foundations of verifying compiler prototypes
  matching user expectations?, Formal Aspects of Computing 19~(2) (2007)
  139--158.
\newblock \href {https://doi.org/10.1007/s00165-006-0016-1}
  {\path{doi:10.1007/s00165-006-0016-1}}.

\bibitem{chalin2008jml}
P.~Chalin, F.~Rioux, Jml runtime assertion checking: Improved error reporting
  and efficiency using strong validity, FM 2008: Formal Methods (2008)
  246--261\href {https://doi.org/10.1007/978-3-540-68237-0_18}
  {\path{doi:10.1007/978-3-540-68237-0_18}}.

\bibitem{barnett200499}
M.~Barnett, D.~A. Naumann, W.~Schulte, Q.~Sun, 99.44\% pure: Useful
  abstractions in specifications, in: ECOOP workshop on Formal Techniques for
  Java-like Programs (FTfJP), 2004.
\newblock \href {https://doi.org/10.1.1.72.3429} {\path{doi:10.1.1.72.3429}}.

\bibitem{barnett2003runtime}
M.~Barnett, W.~Schulte, Runtime verification of .net contracts, Journal of
  Systems and Software 65~(3) (2003) 199--208.
\newblock \href {https://doi.org/10.1016/S0164-1212(02)00041-9}
  {\path{doi:10.1016/S0164-1212(02)00041-9}}.

\bibitem{Flanagan06hybridtypes}
C.~Flanagan, Hybrid types, invariants, and refinements for imperative objects,
  in: In International Workshop on Foundations and Developments of
  Object-Oriented Languages, 2006.

\bibitem{Voigt2013}
J.~Voigt, W.~Irwin, N.~Churcher, Comparing and Evaluating Existing Software
  Contract Tools, Springer Berlin Heidelberg, Berlin, Heidelberg, 2013, pp.
  49--63.
\newblock \href {https://doi.org/10.1007/978-3-642-32341-6_4}
  {\path{doi:10.1007/978-3-642-32341-6_4}}.

\bibitem{falcone:hal-01882410}
Y.~Falcone, S.~Krsti{\'c}, G.~Reger, D.~Traytel,
  \href{https://hal.inria.fr/hal-01882410}{{A Taxonomy for Classifying Runtime
  Verification Tools}}, in: {RV 2018 - 18th International Conference on Runtime
  Verification}, Limassol, Cyprus, 2018, pp. 1--18.
\newline\urlprefix\url{https://hal.inria.fr/hal-01882410}

\bibitem{meredith2012overview}
P.~O. Meredith, D.~Jin, D.~Griffith, F.~Chen, G.~Ro{\c{s}}u, An overview of the
  mop runtime verification framework, International Journal on Software Tools
  for Technology Transfer 14~(3) (2012) 249--289.
\newblock \href {https://doi.org/10.1007/s10009-011-0198-6}
  {\path{doi:10.1007/s10009-011-0198-6}}.

\bibitem{gorbovitski08efficient}
M.~Gorbovitski, T.~Rothamel, Y.~A. Liu, S.~D. Stoller, Efficient runtime
  invariant checking: A framework and case study, in: Proceedings of the 6th
  International Workshop on Dynamic Analysis (WODA 2008), ACM Press, 2008.
\newblock \href {https://doi.org/10.1145/1401827.1401837}
  {\path{doi:10.1145/1401827.1401837}}.

\bibitem{fahndrich2010embedded}
M.~F{\"a}hndrich, M.~Barnett, F.~Logozzo, Embedded contract languages, in:
  Proceedings of the 2010 ACM Symposium on Applied Computing, ACM, 2010, pp.
  2103--2110.
\newblock \href {https://doi.org/10.1145/1774088.1774531}
  {\path{doi:10.1145/1774088.1774531}}.

\bibitem{findler2001contract}
R.~B. Findler, M.~Felleisen, Contract soundness for object-oriented languages,
  in: ACM SIGPLAN Notices, Vol.~36, ACM, 2001, pp. 1--15.
\newblock \href {https://doi.org/10.1145/504311.504283}
  {\path{doi:10.1145/504311.504283}}.

\bibitem{DBLP:conf/oopsla/StricklandTFF12}
T.~S. Strickland, S.~Tobin{-}Hochstadt, R.~B. Findler, M.~Flatt, Chaperones and
  impersonators: run-time support for reasonable interposition, in: Proceedings
  of the 27th Annual {ACM} {SIGPLAN} Conference on Object-Oriented Programming,
  Systems, Languages, and Applications, {OOPSLA} 2012, part of {SPLASH} 2012,
  Tucson, AZ, USA, October 21-25, 2012, 2012, pp. 943--962.
\newblock \href {https://doi.org/10.1145/2384616.2384685}
  {\path{doi:10.1145/2384616.2384685}}.

\bibitem{takikawa2015towards}
A.~Takikawa, D.~Feltey, E.~Dean, M.~Flatt, R.~B. Findler, S.~Tobin-Hochstadt,
  M.~Felleisen, Towards practical gradual typing, in: LIPIcs-Leibniz
  International Proceedings in Informatics, Vol.~37, Schloss
  Dagstuhl-Leibniz-Zentrum fuer Informatik, 2015.
\newblock \href {https://doi.org/10.4230/LIPIcs.ECOOP.2015.4}
  {\path{doi:10.4230/LIPIcs.ECOOP.2015.4}}.

\bibitem{stephens2015beginning}
R.~Stephens, Beginning Software Engineering, Wiley, 2015.

\end{thebibliography}
