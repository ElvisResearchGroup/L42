Dear Marco, 

On behalf of the VPT 2019 Program Committee we would like to inform you that your (short) paper 

Iteratively Composing Statically Verified Traits

 presented at the Seventh International Workshop 
on Verification and Program Transformation (VPT 2019)
has been recommended for publishing in the VPT-2019 Post-Proceeding 
in EPTCS provided that the current version of the paper still should be
 corrected according to the concrete remarks given by the reviewers 
as well as the further comments listed below. 
The size of the final version of your short paper 
is allowed for reasonable increasing.

1) We recommend you, specifically, to improve the structure of the (short) paper
 by splitting it into an Introduction, a core section, and some conclusions. 
The beginning of the abstract marked by "Abstract" added by you in 
the re-uploaded version of your paper is the first step 
in improving the structure.

2) The final version of your (short) paper should include some concise, 
generic statement of your contribution. 
We recommend you to transparently label such a statement
with the following  words: “Our contribution: ...”. 
Review 1 includes a sketch for such a generic statement. 
Perhaps you could use that as a basis.

3) The final version of your (short) paper should strongly follow 
the style requirements given at the web-page: http://style.eptcs.org/
Please take into account that, particularly, 
the last paragraph on the web-page asks for the following:
“Authors may not alter the font, fontsize, textarea and margins. 
They may alter the other above design decisions only if this fits 
the paper better. Major words in the title (all but articles, prepositions,
 etc.) should be capitalised 
(unless this requirement is waived or altered by volume editors). 
Design decisions not governed by this style file, such as whether 
nontrivial words in section headers are capitalised, 
are left to the creativity of the authors.“
It seems to us that the numbering of the source code lines, 
shifted to the left margin contradicts to the requirements 
given in the last paragraph.

We ask you to upload an improved final pdf version of your paper 
(in EPTCS format), taking care of the comments of the reviewers 
and the recommendation above, by
**June 23rd**  


Best regards, 
the VPT 2019 Program Committee co-chairs.

SUBMISSION: 3
TITLE: Iteratively Composing Statically Verified Traits


----------------------- REVIEW 1 ---------------------
SUBMISSION: 3
TITLE: Iteratively Composing Statically Verified Traits
AUTHORS: Isaac Oscar Gariano, Marco Servetto, Alex Potanin and Hrshikesh Arora

----------- Overall evaluation -----------
SCORE: 1 (weak accept)
----- TEXT:
Given a recursive program P(x,y), such that each function/method of P is annotated with pre/post-conditions. Let we specialize both the program and its pre/post-conditions w.r.t. a known input argument x_0. 

Let the corresponding program specializer T based on a finite set of parameterized program templates named traits and a number of operators serving for constructing new programs from the templates, preserving the semantics. The traits are well-typed before they are used and may contain functions/methods annotated with pre/post-conditions.
This report aims at preliminary studying iterative composition of such traits allowing to generate code that is correct by construction. I.e., the authors verify only the original source code itself, and not the code produced by the specializer of interest. 

The revised version of the short preliminary report has been clarified as compared with the original submission. I recommend publishing this report provided that this version still should be corrected according to the concrete remarks listed below.

1) A very short abstract should be written to this “extended abstract”.

2) Page 2. Line 14 of the code. The curl bracket ‘}’ has to be aligned to the left of the code.

3) Page 3. 
“The compose(current,next) method starts by renaming the exp() and pow(x) methods of current”
The line above is too wide, i.e., overfull \hbox.

4) Page 4. 
“Our approach, as presented in this extended abstract, only …”
Here “extended abstract” should be replaced with “short report” or “short paper”.

5) Pages 4-5. References.
Every reference should be provided with DOI as shown in the example given in http://eptcs.web.cse.unsw.edu.au/eptcsstyle.zip



----------------------- REVIEW 2 ---------------------
SUBMISSION: 3
TITLE: Iteratively Composing Statically Verified Traits
AUTHORS: Isaac Oscar Gariano, Marco Servetto, Alex Potanin and Hrshikesh Arora

----------- Overall evaluation -----------
SCORE: 0 (borderline paper)
----- TEXT:
The extended abstract describes a way to generate object-oriented code from given "building blocks". This version is more informative than the one originally submitted, but it is also messier. There are 4 pages with text and no structure. There should be standard sections, at least with Intro, Approach, and, Conclusion. Examples need to be clearly marked, definitions should be emphasized in the text.

Minor points:

- page 1: "since static verification is undecidable...": a comma is missing after "undecidable". I would also suggest the authors to use a spell checker and correct many other punctuations errors in the paper.
- page 2: the paragraph that starts with "Now we show how ..." is overloaded with word "meta". In particular, what do the "metacircular" and the "meta language" word mean? Why "meta" is sometimes written together with the next word, and sometimes apart?



----------------------- REVIEW 3 ---------------------
SUBMISSION: 3
TITLE: Iteratively Composing Statically Verified Traits
AUTHORS: Isaac Oscar Gariano, Marco Servetto, Alex Potanin and Hrshikesh Arora

----------- Overall evaluation -----------
SCORE: -1 (weak reject)
----- TEXT:
The goal is to ensure the correctness of code generated by metaprogramming
(in this case Traits) by performing checks on the metaprogram rather than
the generated code.

The presentation has improved somewhat since the first version.

The extended abstract sketches a method, illustrated by an example.  However,
it is still unclear (to a reader not familiar with the cited works on Traits) 
what exactly is going on in the given example.

Could you state a general result, even informally, that states something
like this?  "Given Traits t1,...,tk, each of the form .... containing some "ensures" statements,
some "compose" operations" .... then assuming something about t1,...,tk, we
get some correctness results for code generated from t1,....,tk"  

I'm only guessing in the above general result, showing that I have not grasped
what is the advance that is being claimed in this abstract.

In summary, I am not convinced that this is ready for EPTCS, even as an extended abstract.



----------------------- REVIEW 4 ---------------------
SUBMISSION: 3
TITLE: Iteratively Composing Statically Verified Traits
AUTHORS: Isaac Oscar Gariano, Marco Servetto, Alex Potanin and Hrshikesh Arora

----------- Overall evaluation -----------
SCORE: 0 (borderline paper)
----- TEXT:
The abstract reports on the approach to the code verification which combines metaprogramming with a composition based verification methods utilizing so-called traits. 

The paper concentrates  on the discussion of a particular case study.  
While it has obvious advantages, showing in details the work of the proposed method, it 
lacks the generic description of the method. Such a description should be given together with the discussion of its  applicability and limitations. 
The paper should be better structured. 
Furthermore more justifications should be given to the claims on correctness preservation presented in bold  (page 3). 
It is not entirely clear whether  these claims are generic, or specific, and what are the correctness conditions covered here.

------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------

We have received additional proposals from a VPT-2019 Member, which, perhaps, may help you in improving the paper.

We recommend to take into account the suggestions below.

 

The VPT-2019 Member wrote:

 

As concerning a paper by Gariano-Servetto-Potanin-Arora,

these are my suggestions:

Before acceptance, I would suggest that the authors 

- clarify the notion of a trait vs a class vs abstract method

- clarify the use of trait composition (+) which they deal with and it seems that they never use it in the

  paper;

- clarify the relation between a "_exp()" and "exp()" and the similar expressions, that is, explain the idea of the underscore.

 

Best regards, 
the VPT 2019 Program Committee co-chairs.
