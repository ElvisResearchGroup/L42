package is.L42.generated;
import java.util.List;

public class CloneVisitor {
  C visitC(C c);
  List<C> visitCs(List<C> cs);
  Mdf visitMdf(Mdf mdf);
  Op visitOp(Op op);
  P visitP(P p);
  Pos visitPos(Pos pos);
  S visitS(S s);
  Throw visitThrow(Throw thr);
  X visitX(X x);
  List<X> visitXs(List<X> xs);

  ST.STMeth visitSTMeth(STMeth stMeth);
  ST.STOp visitSTMeth(STOp stOp);
  List<ST> visitSTz(List<ST> stz);

  Core.EX visitEX(Core.Ex x);
  Core.PCastT visitPCastT(Core.PCastT pCastT);
  Core.Evoid visitEVoid(Core.Evoid eVoid);
  Core.L visitL(Core.L l);
  Core.L.MWT visitMWT(Core.L.MWT mwt);
  List<Core.L.MWT> visitMWTs(List<Core.L.MWT> mwts);
  Core.L.NC visitNC(Core.L.NC nc);
  List<Core.L.NC> visitNCs(List<Core.L.NC> ncs);
  Core.MCall visitMCall(Core.MCall mCall);
  Core.Block visitBlock(Core.Block block);
  Core.Loop visitLoop(Core.Loop loop);
  Core.Throw visitThrow(Core.Throw thr);
  Core.OpUpdate visitOpUpdate(Core.OpUpdate opUpdate);
  Core.D visitD(Core.D d);
  List<Core.D> visitDs(List<Core.D> ds);
  Core.K visitK(Core.K k);
  List<Core.K> visitKs(List<Core.K> ks);
  Core.T visitT(Core.T t);
  List<Core.T> visitTs(List<Core.T> ts);
  Core.Doc visitDoc(Core.Doc doc);
  List<Core.Doc> visitDocs(List<Core.Doc> docs);
  Core.PathSel visitPathSel(Core.PathSel pathSel);
  Core.MH visitMH(Core.MH mh);
  
  Half.PCastT visitPCastT(Half.PCastT pCastT);
  Half.Slash visitSlash(Half.Slash slash);
  Half.BinOp visitBinOp(Half.BinOp binOp);
  Half.MCall visitMCall(Half.MCall mCall);
  Half.Block visitBlock(Half.Block block);
  Half.Loop visitLoop(Half.Loop loop);
  Half.Throw visitThrow(Half.Throw thr);
  Half.OpUpdate visitOpUpdate(Half.OpUpdate opUpdate);
  Half.D visitD(Half.D d);
  List<Half.D> visitHalfDs(List<Half.D> ds);
  Half.K visitK(Half.K k);
  List<Half.K> visitHalfKs(List<Half.K> ks);
  Half.T visitT(Half.T t);
  List<Half.T> visitHalfTs(List<Half.T> ts);

  Full.CsP visitCsP(Full.CsP csP);
  Full.L visitL(Full.L l);
  Full.Slash visitSlash(Full.Slash slash);
  Full.SlashX visitSlashX(Full.SlashX slashX);
  Full.EString visitEString(Full.EString eString);
  Full.EPathSel visitEPathSel(Full.EPathSel ePathSel);
  Full.UoP visitUoP(Full.UOp uOp);
  Full.BinOp visitBinOp(Full.BinOp binOp);
  Full.Cast visitCast(Full.Cast cast);
  Full.Call visitCall(Full.Call call);
  Full.Block visitBlock(Full.Block block);
  Full.Loop visitLoop(Full.Loop loop);
  Full.While visitWhile(Full.While sWhile);
  Full.For visitFor(Full.For sFor);
  Full.Throw visitThrow(Full.Throw thr);
  Full.OpUpdate visitOpUpdate(Full.OpUpdate opUpdate);
  Full.If visitIf(Full.If sIf);
  Full.D visitD(Full.D d);
  List<Full.D> visitFullDs(List<Full.D> ds);
  Full.VarTx visitVarTx(Full.VarTx varTx);
  List<Full.VarTx> visitFullVarTx(List<Full.VarTx> varTxs);
  Full.K visitK(Full.K k);
  List<Full.K> visitFullKs(List<Full.K> ks);
  Full.Par visitPar(Full.Par par);
  List<Full.Par> visitFullPars(List<Full.Par> pars);
  Full.T visitT(Full.T t);
  List<Full.T> visitFullT(List<Full.T> ts);
  Full.Doc visitDoc(Full.Doc doc);
  List<Full.Doc> visitFullDoc(List<Full.Doc> docs);
  Full.PathSel visitPathSel(Full.PathSel pathSel);
  Full.MH visitMH(Full.MH mh);
  }
