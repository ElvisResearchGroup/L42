// Generated by delombok at Sun Aug 25 22:59:59 PETT 2019
package is.L42.generated;

import java.util.List;
import java.util.stream.Collectors;
import is.L42.visitors.CloneVisitor;
import is.L42.visitors.CollectorVisitor;
import is.L42.visitors.Visitable;
import is.L42.common.Constants;

public class Core {

  public static interface E extends HasPos, HasWf, HasVisitable {
    Visitable<? extends E> visitable();
  }


  public static interface Leaf extends E {
  }


  public static interface Wrapper extends E {
    E e();
  }


  public static interface XP extends E {
    Visitable<? extends XP> visitable();
  }


  public static final class EX implements Leaf, Full.E, Full.Leaf, XP, Half.XP, Visitable<EX> {
    @Override
    public Visitable<EX> visitable() {
      return this;
    }

    @Override
    public EX accept(CloneVisitor cv) {
      return cv.visitEX(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitEX(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final X x;

    @java.lang.SuppressWarnings("all")
    public EX(final Pos pos, final X x) {
      this.pos = pos;
      this.x = x;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public X x() {
      return this.x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.EX)) return false;
      final Core.EX other = (Core.EX) o;
      final java.lang.Object this$x = this.x();
      final java.lang.Object other$x = other.x();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $x = this.x();
      result = result * PRIME + ($x == null ? 43 : $x.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public EX withPos(final Pos pos) {
      return this.pos == pos ? this : new EX(pos, this.x);
    }

    @java.lang.SuppressWarnings("all")
    public EX withX(final X x) {
      return this.x == x ? this : new EX(this.pos, x);
    }
  }


  public static final class PCastT implements Leaf, XP, Half.XP, Visitable<PCastT> {
    @Override
    public Visitable<PCastT> visitable() {
      return this;
    }

    @Override
    public PCastT accept(CloneVisitor cv) {
      return cv.visitPCastT(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitPCastT(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final P p;
    private final T t;

    @java.lang.SuppressWarnings("all")
    public PCastT(final Pos pos, final P p, final T t) {
      this.pos = pos;
      this.p = p;
      this.t = t;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public P p() {
      return this.p;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.PCastT)) return false;
      final Core.PCastT other = (Core.PCastT) o;
      final java.lang.Object this$p = this.p();
      final java.lang.Object other$p = other.p();
      if (this$p == null ? other$p != null : !this$p.equals(other$p)) return false;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $p = this.p();
      result = result * PRIME + ($p == null ? 43 : $p.hashCode());
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public PCastT withPos(final Pos pos) {
      return this.pos == pos ? this : new PCastT(pos, this.p, this.t);
    }

    @java.lang.SuppressWarnings("all")
    public PCastT withP(final P p) {
      return this.p == p ? this : new PCastT(this.pos, p, this.t);
    }

    @java.lang.SuppressWarnings("all")
    public PCastT withT(final T t) {
      return this.t == t ? this : new PCastT(this.pos, this.p, t);
    }
  }


  public static final class EVoid implements Leaf, Full.Leaf, Visitable<EVoid> {
    @Override
    public Visitable<EVoid> visitable() {
      return this;
    }

    @Override
    public EVoid accept(CloneVisitor cv) {
      return cv.visitEVoid(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitEVoid(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;

    @java.lang.SuppressWarnings("all")
    public EVoid(final Pos pos) {
      this.pos = pos;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.EVoid)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int result = 1;
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public EVoid withPos(final Pos pos) {
      return this.pos == pos ? this : new EVoid(pos);
    }
  }


  public static final class L implements Leaf, Full.Leaf, Half.Leaf, Visitable<L> {
    @Override
    public Visitable<L> visitable() {
      return this;
    }

    @Override
    public L accept(CloneVisitor cv) {
      return cv.visitL(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitL(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final boolean isInterface;
    private final List<T> ts;
    private final List<MWT> mwts;
    private final List<NC> ncs;
    private final Info info;
    private final List<Doc> docs;


    public static final class MWT implements HasPos, Visitable<MWT> {
      @Override
      public MWT accept(CloneVisitor cv) {
        return cv.visitMWT(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitMWT(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final Pos pos;
      private final List<Doc> docs;
      private final MH mh;
      private final String nativeUrl;
      private final E _e;

      public S key() {
        return mh.s();
      }

      @java.lang.SuppressWarnings("all")
      public MWT(final Pos pos, final List<Doc> docs, final MH mh, final String nativeUrl, final E _e) {
        this.pos = pos;
        this.docs = docs;
        this.mh = mh;
        this.nativeUrl = nativeUrl;
        this._e = _e;
      }

      @java.lang.SuppressWarnings("all")
      public Pos pos() {
        return this.pos;
      }

      @java.lang.SuppressWarnings("all")
      public List<Doc> docs() {
        return this.docs;
      }

      @java.lang.SuppressWarnings("all")
      public MH mh() {
        return this.mh;
      }

      @java.lang.SuppressWarnings("all")
      public String nativeUrl() {
        return this.nativeUrl;
      }

      @java.lang.SuppressWarnings("all")
      public E _e() {
        return this._e;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Core.L.MWT)) return false;
        final Core.L.MWT other = (Core.L.MWT) o;
        final java.lang.Object this$docs = this.docs();
        final java.lang.Object other$docs = other.docs();
        if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
        final java.lang.Object this$mh = this.mh();
        final java.lang.Object other$mh = other.mh();
        if (this$mh == null ? other$mh != null : !this$mh.equals(other$mh)) return false;
        final java.lang.Object this$nativeUrl = this.nativeUrl();
        final java.lang.Object other$nativeUrl = other.nativeUrl();
        if (this$nativeUrl == null ? other$nativeUrl != null : !this$nativeUrl.equals(other$nativeUrl)) return false;
        final java.lang.Object this$_e = this._e();
        final java.lang.Object other$_e = other._e();
        if (this$_e == null ? other$_e != null : !this$_e.equals(other$_e)) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $docs = this.docs();
        result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
        final java.lang.Object $mh = this.mh();
        result = result * PRIME + ($mh == null ? 43 : $mh.hashCode());
        final java.lang.Object $nativeUrl = this.nativeUrl();
        result = result * PRIME + ($nativeUrl == null ? 43 : $nativeUrl.hashCode());
        final java.lang.Object $_e = this._e();
        result = result * PRIME + ($_e == null ? 43 : $_e.hashCode());
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public MWT withPos(final Pos pos) {
        return this.pos == pos ? this : new MWT(pos, this.docs, this.mh, this.nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT withDocs(final List<Doc> docs) {
        return this.docs == docs ? this : new MWT(this.pos, docs, this.mh, this.nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT withMh(final MH mh) {
        return this.mh == mh ? this : new MWT(this.pos, this.docs, mh, this.nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT withNativeUrl(final String nativeUrl) {
        return this.nativeUrl == nativeUrl ? this : new MWT(this.pos, this.docs, this.mh, nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT with_e(final E _e) {
        return this._e == _e ? this : new MWT(this.pos, this.docs, this.mh, this.nativeUrl, _e);
      }
    }


    public static final class NC implements HasPos, Visitable<NC> {
      @Override
      public NC accept(CloneVisitor cv) {
        return cv.visitNC(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitNC(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final Pos pos;
      private final List<Doc> docs;
      private final C key;
      private final L l;

      @java.lang.SuppressWarnings("all")
      public NC(final Pos pos, final List<Doc> docs, final C key, final L l) {
        this.pos = pos;
        this.docs = docs;
        this.key = key;
        this.l = l;
      }

      @java.lang.SuppressWarnings("all")
      public Pos pos() {
        return this.pos;
      }

      @java.lang.SuppressWarnings("all")
      public List<Doc> docs() {
        return this.docs;
      }

      @java.lang.SuppressWarnings("all")
      public C key() {
        return this.key;
      }

      @java.lang.SuppressWarnings("all")
      public L l() {
        return this.l;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Core.L.NC)) return false;
        final Core.L.NC other = (Core.L.NC) o;
        final java.lang.Object this$docs = this.docs();
        final java.lang.Object other$docs = other.docs();
        if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
        final java.lang.Object this$key = this.key();
        final java.lang.Object other$key = other.key();
        if (this$key == null ? other$key != null : !this$key.equals(other$key)) return false;
        final java.lang.Object this$l = this.l();
        final java.lang.Object other$l = other.l();
        if (this$l == null ? other$l != null : !this$l.equals(other$l)) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $docs = this.docs();
        result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
        final java.lang.Object $key = this.key();
        result = result * PRIME + ($key == null ? 43 : $key.hashCode());
        final java.lang.Object $l = this.l();
        result = result * PRIME + ($l == null ? 43 : $l.hashCode());
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public NC withPos(final Pos pos) {
        return this.pos == pos ? this : new NC(pos, this.docs, this.key, this.l);
      }

      @java.lang.SuppressWarnings("all")
      public NC withDocs(final List<Doc> docs) {
        return this.docs == docs ? this : new NC(this.pos, docs, this.key, this.l);
      }

      @java.lang.SuppressWarnings("all")
      public NC withKey(final C key) {
        return this.key == key ? this : new NC(this.pos, this.docs, key, this.l);
      }

      @java.lang.SuppressWarnings("all")
      public NC withL(final L l) {
        return this.l == l ? this : new NC(this.pos, this.docs, this.key, l);
      }
    }


    public static final class Info implements Visitable<Info> {
      @Override
      public Info accept(CloneVisitor cv) {
        return cv.visitInfo(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitInfo(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final boolean isTyped;
      private final List<P> typeDep;
      private final List<P> coherentDep;
      private final List<P> friendsDep;
      private final List<PathSel> usedMethDep;
      private final List<P> privateImpl;
      private final List<S> refined;
      private final boolean canBeClassAny;

      @java.lang.SuppressWarnings("all")
      public Info(final boolean isTyped, final List<P> typeDep, final List<P> coherentDep, final List<P> friendsDep, final List<PathSel> usedMethDep, final List<P> privateImpl, final List<S> refined, final boolean canBeClassAny) {
        this.isTyped = isTyped;
        this.typeDep = typeDep;
        this.coherentDep = coherentDep;
        this.friendsDep = friendsDep;
        this.usedMethDep = usedMethDep;
        this.privateImpl = privateImpl;
        this.refined = refined;
        this.canBeClassAny = canBeClassAny;
      }

      @java.lang.SuppressWarnings("all")
      public boolean isTyped() {
        return this.isTyped;
      }

      @java.lang.SuppressWarnings("all")
      public List<P> typeDep() {
        return this.typeDep;
      }

      @java.lang.SuppressWarnings("all")
      public List<P> coherentDep() {
        return this.coherentDep;
      }

      @java.lang.SuppressWarnings("all")
      public List<P> friendsDep() {
        return this.friendsDep;
      }

      @java.lang.SuppressWarnings("all")
      public List<PathSel> usedMethDep() {
        return this.usedMethDep;
      }

      @java.lang.SuppressWarnings("all")
      public List<P> privateImpl() {
        return this.privateImpl;
      }

      @java.lang.SuppressWarnings("all")
      public List<S> refined() {
        return this.refined;
      }

      @java.lang.SuppressWarnings("all")
      public boolean canBeClassAny() {
        return this.canBeClassAny;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Core.L.Info)) return false;
        final Core.L.Info other = (Core.L.Info) o;
        if (this.isTyped() != other.isTyped()) return false;
        final java.lang.Object this$typeDep = this.typeDep();
        final java.lang.Object other$typeDep = other.typeDep();
        if (this$typeDep == null ? other$typeDep != null : !this$typeDep.equals(other$typeDep)) return false;
        final java.lang.Object this$coherentDep = this.coherentDep();
        final java.lang.Object other$coherentDep = other.coherentDep();
        if (this$coherentDep == null ? other$coherentDep != null : !this$coherentDep.equals(other$coherentDep)) return false;
        final java.lang.Object this$friendsDep = this.friendsDep();
        final java.lang.Object other$friendsDep = other.friendsDep();
        if (this$friendsDep == null ? other$friendsDep != null : !this$friendsDep.equals(other$friendsDep)) return false;
        final java.lang.Object this$usedMethDep = this.usedMethDep();
        final java.lang.Object other$usedMethDep = other.usedMethDep();
        if (this$usedMethDep == null ? other$usedMethDep != null : !this$usedMethDep.equals(other$usedMethDep)) return false;
        final java.lang.Object this$privateImpl = this.privateImpl();
        final java.lang.Object other$privateImpl = other.privateImpl();
        if (this$privateImpl == null ? other$privateImpl != null : !this$privateImpl.equals(other$privateImpl)) return false;
        final java.lang.Object this$refined = this.refined();
        final java.lang.Object other$refined = other.refined();
        if (this$refined == null ? other$refined != null : !this$refined.equals(other$refined)) return false;
        if (this.canBeClassAny() != other.canBeClassAny()) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + (this.isTyped() ? 79 : 97);
        final java.lang.Object $typeDep = this.typeDep();
        result = result * PRIME + ($typeDep == null ? 43 : $typeDep.hashCode());
        final java.lang.Object $coherentDep = this.coherentDep();
        result = result * PRIME + ($coherentDep == null ? 43 : $coherentDep.hashCode());
        final java.lang.Object $friendsDep = this.friendsDep();
        result = result * PRIME + ($friendsDep == null ? 43 : $friendsDep.hashCode());
        final java.lang.Object $usedMethDep = this.usedMethDep();
        result = result * PRIME + ($usedMethDep == null ? 43 : $usedMethDep.hashCode());
        final java.lang.Object $privateImpl = this.privateImpl();
        result = result * PRIME + ($privateImpl == null ? 43 : $privateImpl.hashCode());
        final java.lang.Object $refined = this.refined();
        result = result * PRIME + ($refined == null ? 43 : $refined.hashCode());
        result = result * PRIME + (this.canBeClassAny() ? 79 : 97);
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public Info withTyped(final boolean isTyped) {
        return this.isTyped == isTyped ? this : new Info(isTyped, this.typeDep, this.coherentDep, this.friendsDep, this.usedMethDep, this.privateImpl, this.refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withTypeDep(final List<P> typeDep) {
        return this.typeDep == typeDep ? this : new Info(this.isTyped, typeDep, this.coherentDep, this.friendsDep, this.usedMethDep, this.privateImpl, this.refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withCoherentDep(final List<P> coherentDep) {
        return this.coherentDep == coherentDep ? this : new Info(this.isTyped, this.typeDep, coherentDep, this.friendsDep, this.usedMethDep, this.privateImpl, this.refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withFriendsDep(final List<P> friendsDep) {
        return this.friendsDep == friendsDep ? this : new Info(this.isTyped, this.typeDep, this.coherentDep, friendsDep, this.usedMethDep, this.privateImpl, this.refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withUsedMethDep(final List<PathSel> usedMethDep) {
        return this.usedMethDep == usedMethDep ? this : new Info(this.isTyped, this.typeDep, this.coherentDep, this.friendsDep, usedMethDep, this.privateImpl, this.refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withPrivateImpl(final List<P> privateImpl) {
        return this.privateImpl == privateImpl ? this : new Info(this.isTyped, this.typeDep, this.coherentDep, this.friendsDep, this.usedMethDep, privateImpl, this.refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withRefined(final List<S> refined) {
        return this.refined == refined ? this : new Info(this.isTyped, this.typeDep, this.coherentDep, this.friendsDep, this.usedMethDep, this.privateImpl, refined, this.canBeClassAny);
      }

      @java.lang.SuppressWarnings("all")
      public Info withCanBeClassAny(final boolean canBeClassAny) {
        return this.canBeClassAny == canBeClassAny ? this : new Info(this.isTyped, this.typeDep, this.coherentDep, this.friendsDep, this.usedMethDep, this.privateImpl, this.refined, canBeClassAny);
      }
    }

    @java.lang.SuppressWarnings("all")
    public L(final Pos pos, final boolean isInterface, final List<T> ts, final List<MWT> mwts, final List<NC> ncs, final Info info, final List<Doc> docs) {
      this.pos = pos;
      this.isInterface = isInterface;
      this.ts = ts;
      this.mwts = mwts;
      this.ncs = ncs;
      this.info = info;
      this.docs = docs;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isInterface() {
      return this.isInterface;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> ts() {
      return this.ts;
    }

    @java.lang.SuppressWarnings("all")
    public List<MWT> mwts() {
      return this.mwts;
    }

    @java.lang.SuppressWarnings("all")
    public List<NC> ncs() {
      return this.ncs;
    }

    @java.lang.SuppressWarnings("all")
    public Info info() {
      return this.info;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.L)) return false;
      final Core.L other = (Core.L) o;
      if (this.isInterface() != other.isInterface()) return false;
      final java.lang.Object this$ts = this.ts();
      final java.lang.Object other$ts = other.ts();
      if (this$ts == null ? other$ts != null : !this$ts.equals(other$ts)) return false;
      final java.lang.Object this$mwts = this.mwts();
      final java.lang.Object other$mwts = other.mwts();
      if (this$mwts == null ? other$mwts != null : !this$mwts.equals(other$mwts)) return false;
      final java.lang.Object this$ncs = this.ncs();
      final java.lang.Object other$ncs = other.ncs();
      if (this$ncs == null ? other$ncs != null : !this$ncs.equals(other$ncs)) return false;
      final java.lang.Object this$info = this.info();
      final java.lang.Object other$info = other.info();
      if (this$info == null ? other$info != null : !this$info.equals(other$info)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      result = result * PRIME + (this.isInterface() ? 79 : 97);
      final java.lang.Object $ts = this.ts();
      result = result * PRIME + ($ts == null ? 43 : $ts.hashCode());
      final java.lang.Object $mwts = this.mwts();
      result = result * PRIME + ($mwts == null ? 43 : $mwts.hashCode());
      final java.lang.Object $ncs = this.ncs();
      result = result * PRIME + ($ncs == null ? 43 : $ncs.hashCode());
      final java.lang.Object $info = this.info();
      result = result * PRIME + ($info == null ? 43 : $info.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public L withPos(final Pos pos) {
      return this.pos == pos ? this : new L(pos, this.isInterface, this.ts, this.mwts, this.ncs, this.info, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withInterface(final boolean isInterface) {
      return this.isInterface == isInterface ? this : new L(this.pos, isInterface, this.ts, this.mwts, this.ncs, this.info, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withTs(final List<T> ts) {
      return this.ts == ts ? this : new L(this.pos, this.isInterface, ts, this.mwts, this.ncs, this.info, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withMwts(final List<MWT> mwts) {
      return this.mwts == mwts ? this : new L(this.pos, this.isInterface, this.ts, mwts, this.ncs, this.info, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withNcs(final List<NC> ncs) {
      return this.ncs == ncs ? this : new L(this.pos, this.isInterface, this.ts, this.mwts, ncs, this.info, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withInfo(final Info info) {
      return this.info == info ? this : new L(this.pos, this.isInterface, this.ts, this.mwts, this.ncs, info, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new L(this.pos, this.isInterface, this.ts, this.mwts, this.ncs, this.info, docs);
    }
  }


  public static final class MCall implements E, Visitable<MCall> {
    @Override
    public Visitable<MCall> visitable() {
      return this;
    }

    @Override
    public MCall accept(CloneVisitor cv) {
      return cv.visitMCall(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitMCall(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final XP xP;
    private final S s;
    private final List<E> es;

    @java.lang.SuppressWarnings("all")
    public MCall(final Pos pos, final XP xP, final S s, final List<E> es) {
      this.pos = pos;
      this.xP = xP;
      this.s = s;
      this.es = es;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public XP xP() {
      return this.xP;
    }

    @java.lang.SuppressWarnings("all")
    public S s() {
      return this.s;
    }

    @java.lang.SuppressWarnings("all")
    public List<E> es() {
      return this.es;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.MCall)) return false;
      final Core.MCall other = (Core.MCall) o;
      final java.lang.Object this$xP = this.xP();
      final java.lang.Object other$xP = other.xP();
      if (this$xP == null ? other$xP != null : !this$xP.equals(other$xP)) return false;
      final java.lang.Object this$s = this.s();
      final java.lang.Object other$s = other.s();
      if (this$s == null ? other$s != null : !this$s.equals(other$s)) return false;
      final java.lang.Object this$es = this.es();
      final java.lang.Object other$es = other.es();
      if (this$es == null ? other$es != null : !this$es.equals(other$es)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $xP = this.xP();
      result = result * PRIME + ($xP == null ? 43 : $xP.hashCode());
      final java.lang.Object $s = this.s();
      result = result * PRIME + ($s == null ? 43 : $s.hashCode());
      final java.lang.Object $es = this.es();
      result = result * PRIME + ($es == null ? 43 : $es.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public MCall withPos(final Pos pos) {
      return this.pos == pos ? this : new MCall(pos, this.xP, this.s, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public MCall withXP(final XP xP) {
      return this.xP == xP ? this : new MCall(this.pos, xP, this.s, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public MCall withS(final S s) {
      return this.s == s ? this : new MCall(this.pos, this.xP, s, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public MCall withEs(final List<E> es) {
      return this.es == es ? this : new MCall(this.pos, this.xP, this.s, es);
    }
  }


  public static final class Block implements E, Visitable<Block> {
    @Override
    public Visitable<Block> visitable() {
      return this;
    }

    @Override
    public Block accept(CloneVisitor cv) {
      return cv.visitBlock(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitBlock(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final List<D> ds;
    private final List<K> ks;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public Block(final Pos pos, final List<D> ds, final List<K> ks, final E e) {
      this.pos = pos;
      this.ds = ds;
      this.ks = ks;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public List<D> ds() {
      return this.ds;
    }

    @java.lang.SuppressWarnings("all")
    public List<K> ks() {
      return this.ks;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.Block)) return false;
      final Core.Block other = (Core.Block) o;
      final java.lang.Object this$ds = this.ds();
      final java.lang.Object other$ds = other.ds();
      if (this$ds == null ? other$ds != null : !this$ds.equals(other$ds)) return false;
      final java.lang.Object this$ks = this.ks();
      final java.lang.Object other$ks = other.ks();
      if (this$ks == null ? other$ks != null : !this$ks.equals(other$ks)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $ds = this.ds();
      result = result * PRIME + ($ds == null ? 43 : $ds.hashCode());
      final java.lang.Object $ks = this.ks();
      result = result * PRIME + ($ks == null ? 43 : $ks.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Block withPos(final Pos pos) {
      return this.pos == pos ? this : new Block(pos, this.ds, this.ks, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withDs(final List<D> ds) {
      return this.ds == ds ? this : new Block(this.pos, ds, this.ks, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withKs(final List<K> ks) {
      return this.ks == ks ? this : new Block(this.pos, this.ds, ks, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withE(final E e) {
      return this.e == e ? this : new Block(this.pos, this.ds, this.ks, e);
    }
  }


  public static final class Loop implements Wrapper, Visitable<Loop> {
    @Override
    public Visitable<Loop> visitable() {
      return this;
    }

    @Override
    public Loop accept(CloneVisitor cv) {
      return cv.visitLoop(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitLoop(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public Loop(final Pos pos, final E e) {
      this.pos = pos;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.Loop)) return false;
      final Core.Loop other = (Core.Loop) o;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Loop withPos(final Pos pos) {
      return this.pos == pos ? this : new Loop(pos, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Loop withE(final E e) {
      return this.e == e ? this : new Loop(this.pos, e);
    }
  }


  public static final class Throw implements Wrapper, Visitable<Throw> {
    @Override
    public Visitable<Throw> visitable() {
      return this;
    }

    @Override
    public Throw accept(CloneVisitor cv) {
      return cv.visitThrow(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitThrow(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final ThrowKind thr;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public Throw(final Pos pos, final ThrowKind thr, final E e) {
      this.pos = pos;
      this.thr = thr;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public ThrowKind thr() {
      return this.thr;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.Throw)) return false;
      final Core.Throw other = (Core.Throw) o;
      final java.lang.Object this$thr = this.thr();
      final java.lang.Object other$thr = other.thr();
      if (this$thr == null ? other$thr != null : !this$thr.equals(other$thr)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $thr = this.thr();
      result = result * PRIME + ($thr == null ? 43 : $thr.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Throw withPos(final Pos pos) {
      return this.pos == pos ? this : new Throw(pos, this.thr, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Throw withThr(final ThrowKind thr) {
      return this.thr == thr ? this : new Throw(this.pos, thr, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Throw withE(final E e) {
      return this.e == e ? this : new Throw(this.pos, this.thr, e);
    }
  }


  public static final class OpUpdate implements Wrapper, Visitable<OpUpdate> {
    @Override
    public Visitable<OpUpdate> visitable() {
      return this;
    }

    @Override
    public OpUpdate accept(CloneVisitor cv) {
      return cv.visitOpUpdate(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitOpUpdate(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final X x;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public OpUpdate(final Pos pos, final X x, final E e) {
      this.pos = pos;
      this.x = x;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public X x() {
      return this.x;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.OpUpdate)) return false;
      final Core.OpUpdate other = (Core.OpUpdate) o;
      final java.lang.Object this$x = this.x();
      final java.lang.Object other$x = other.x();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $x = this.x();
      result = result * PRIME + ($x == null ? 43 : $x.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withPos(final Pos pos) {
      return this.pos == pos ? this : new OpUpdate(pos, this.x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withX(final X x) {
      return this.x == x ? this : new OpUpdate(this.pos, x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withE(final E e) {
      return this.e == e ? this : new OpUpdate(this.pos, this.x, e);
    }
  }

  //---
  public static final class D implements Visitable<D> {
    @Override
    public D accept(CloneVisitor cv) {
      return cv.visitD(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitD(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final T t;
    private final X x;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public D(final T t, final X x, final E e) {
      this.t = t;
      this.x = x;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.SuppressWarnings("all")
    public X x() {
      return this.x;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.D)) return false;
      final Core.D other = (Core.D) o;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      final java.lang.Object this$x = this.x();
      final java.lang.Object other$x = other.x();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      final java.lang.Object $x = this.x();
      result = result * PRIME + ($x == null ? 43 : $x.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public D withT(final T t) {
      return this.t == t ? this : new D(t, this.x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public D withX(final X x) {
      return this.x == x ? this : new D(this.t, x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public D withE(final E e) {
      return this.e == e ? this : new D(this.t, this.x, e);
    }
  }


  public static final class K implements Visitable<K> {
    @Override
    public K accept(CloneVisitor cv) {
      return cv.visitK(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitK(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final ThrowKind thr;
    private final T t;
    private final X x;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public K(final ThrowKind thr, final T t, final X x, final E e) {
      this.thr = thr;
      this.t = t;
      this.x = x;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public ThrowKind thr() {
      return this.thr;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.SuppressWarnings("all")
    public X x() {
      return this.x;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.K)) return false;
      final Core.K other = (Core.K) o;
      final java.lang.Object this$thr = this.thr();
      final java.lang.Object other$thr = other.thr();
      if (this$thr == null ? other$thr != null : !this$thr.equals(other$thr)) return false;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      final java.lang.Object this$x = this.x();
      final java.lang.Object other$x = other.x();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $thr = this.thr();
      result = result * PRIME + ($thr == null ? 43 : $thr.hashCode());
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      final java.lang.Object $x = this.x();
      result = result * PRIME + ($x == null ? 43 : $x.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public K withThr(final ThrowKind thr) {
      return this.thr == thr ? this : new K(thr, this.t, this.x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public K withT(final T t) {
      return this.t == t ? this : new K(this.thr, t, this.x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public K withX(final X x) {
      return this.x == x ? this : new K(this.thr, this.t, x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public K withE(final E e) {
      return this.e == e ? this : new K(this.thr, this.t, this.x, e);
    }
  }


  public static final class T implements ST, Visitable<T> {
    @Override
    public Visitable<T> visitable() {
      return this;
    }

    @Override
    public T accept(CloneVisitor cv) {
      return cv.visitT(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitT(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Mdf mdf;
    private final List<Doc> docs;
    private final P p;

    @java.lang.SuppressWarnings("all")
    public T(final Mdf mdf, final List<Doc> docs, final P p) {
      this.mdf = mdf;
      this.docs = docs;
      this.p = p;
    }

    @java.lang.SuppressWarnings("all")
    public Mdf mdf() {
      return this.mdf;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.SuppressWarnings("all")
    public P p() {
      return this.p;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.T)) return false;
      final Core.T other = (Core.T) o;
      final java.lang.Object this$mdf = this.mdf();
      final java.lang.Object other$mdf = other.mdf();
      if (this$mdf == null ? other$mdf != null : !this$mdf.equals(other$mdf)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      final java.lang.Object this$p = this.p();
      final java.lang.Object other$p = other.p();
      if (this$p == null ? other$p != null : !this$p.equals(other$p)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $mdf = this.mdf();
      result = result * PRIME + ($mdf == null ? 43 : $mdf.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      final java.lang.Object $p = this.p();
      result = result * PRIME + ($p == null ? 43 : $p.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public T withMdf(final Mdf mdf) {
      return this.mdf == mdf ? this : new T(mdf, this.docs, this.p);
    }

    @java.lang.SuppressWarnings("all")
    public T withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new T(this.mdf, docs, this.p);
    }

    @java.lang.SuppressWarnings("all")
    public T withP(final P p) {
      return this.p == p ? this : new T(this.mdf, this.docs, p);
    }
  }


  public static final class Doc implements Visitable<Doc> {
    @Override
    public Doc accept(CloneVisitor cv) {
      return cv.visitDoc(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitDoc(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final PathSel _pathSel;
    private final List<String> texts;
    private final List<Doc> docs;

    @java.lang.SuppressWarnings("all")
    public Doc(final PathSel _pathSel, final List<String> texts, final List<Doc> docs) {
      this._pathSel = _pathSel;
      this.texts = texts;
      this.docs = docs;
    }

    @java.lang.SuppressWarnings("all")
    public PathSel _pathSel() {
      return this._pathSel;
    }

    @java.lang.SuppressWarnings("all")
    public List<String> texts() {
      return this.texts;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.Doc)) return false;
      final Core.Doc other = (Core.Doc) o;
      final java.lang.Object this$_pathSel = this._pathSel();
      final java.lang.Object other$_pathSel = other._pathSel();
      if (this$_pathSel == null ? other$_pathSel != null : !this$_pathSel.equals(other$_pathSel)) return false;
      final java.lang.Object this$texts = this.texts();
      final java.lang.Object other$texts = other.texts();
      if (this$texts == null ? other$texts != null : !this$texts.equals(other$texts)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_pathSel = this._pathSel();
      result = result * PRIME + ($_pathSel == null ? 43 : $_pathSel.hashCode());
      final java.lang.Object $texts = this.texts();
      result = result * PRIME + ($texts == null ? 43 : $texts.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Doc with_pathSel(final PathSel _pathSel) {
      return this._pathSel == _pathSel ? this : new Doc(_pathSel, this.texts, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public Doc withTexts(final List<String> texts) {
      return this.texts == texts ? this : new Doc(this._pathSel, texts, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public Doc withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new Doc(this._pathSel, this.texts, docs);
    }
  }


  public static final class PathSel implements Visitable<PathSel> {
    @Override
    public PathSel accept(CloneVisitor cv) {
      return cv.visitPathSel(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitPathSel(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final P p;
    private final S _s;
    private final X _x;

    @java.lang.SuppressWarnings("all")
    public PathSel(final P p, final S _s, final X _x) {
      this.p = p;
      this._s = _s;
      this._x = _x;
    }

    @java.lang.SuppressWarnings("all")
    public P p() {
      return this.p;
    }

    @java.lang.SuppressWarnings("all")
    public S _s() {
      return this._s;
    }

    @java.lang.SuppressWarnings("all")
    public X _x() {
      return this._x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.PathSel)) return false;
      final Core.PathSel other = (Core.PathSel) o;
      final java.lang.Object this$p = this.p();
      final java.lang.Object other$p = other.p();
      if (this$p == null ? other$p != null : !this$p.equals(other$p)) return false;
      final java.lang.Object this$_s = this._s();
      final java.lang.Object other$_s = other._s();
      if (this$_s == null ? other$_s != null : !this$_s.equals(other$_s)) return false;
      final java.lang.Object this$_x = this._x();
      final java.lang.Object other$_x = other._x();
      if (this$_x == null ? other$_x != null : !this$_x.equals(other$_x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $p = this.p();
      result = result * PRIME + ($p == null ? 43 : $p.hashCode());
      final java.lang.Object $_s = this._s();
      result = result * PRIME + ($_s == null ? 43 : $_s.hashCode());
      final java.lang.Object $_x = this._x();
      result = result * PRIME + ($_x == null ? 43 : $_x.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public PathSel withP(final P p) {
      return this.p == p ? this : new PathSel(p, this._s, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public PathSel with_s(final S _s) {
      return this._s == _s ? this : new PathSel(this.p, _s, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public PathSel with_x(final X _x) {
      return this._x == _x ? this : new PathSel(this.p, this._s, _x);
    }
  }


  public static final class MH implements Visitable<MH> {
    @Override
    public MH accept(CloneVisitor cv) {
      return cv.visitMH(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitMH(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Mdf mdf;
    private final List<Doc> docs;
    private final T t;
    private final S s;
    private final List<T> pars;
    private final List<T> exceptions;

    @java.lang.SuppressWarnings("all")
    public MH(final Mdf mdf, final List<Doc> docs, final T t, final S s, final List<T> pars, final List<T> exceptions) {
      this.mdf = mdf;
      this.docs = docs;
      this.t = t;
      this.s = s;
      this.pars = pars;
      this.exceptions = exceptions;
    }

    @java.lang.SuppressWarnings("all")
    public Mdf mdf() {
      return this.mdf;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.SuppressWarnings("all")
    public S s() {
      return this.s;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> pars() {
      return this.pars;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> exceptions() {
      return this.exceptions;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Core.MH)) return false;
      final Core.MH other = (Core.MH) o;
      final java.lang.Object this$mdf = this.mdf();
      final java.lang.Object other$mdf = other.mdf();
      if (this$mdf == null ? other$mdf != null : !this$mdf.equals(other$mdf)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      final java.lang.Object this$s = this.s();
      final java.lang.Object other$s = other.s();
      if (this$s == null ? other$s != null : !this$s.equals(other$s)) return false;
      final java.lang.Object this$pars = this.pars();
      final java.lang.Object other$pars = other.pars();
      if (this$pars == null ? other$pars != null : !this$pars.equals(other$pars)) return false;
      final java.lang.Object this$exceptions = this.exceptions();
      final java.lang.Object other$exceptions = other.exceptions();
      if (this$exceptions == null ? other$exceptions != null : !this$exceptions.equals(other$exceptions)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $mdf = this.mdf();
      result = result * PRIME + ($mdf == null ? 43 : $mdf.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      final java.lang.Object $s = this.s();
      result = result * PRIME + ($s == null ? 43 : $s.hashCode());
      final java.lang.Object $pars = this.pars();
      result = result * PRIME + ($pars == null ? 43 : $pars.hashCode());
      final java.lang.Object $exceptions = this.exceptions();
      result = result * PRIME + ($exceptions == null ? 43 : $exceptions.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public MH withMdf(final Mdf mdf) {
      return this.mdf == mdf ? this : new MH(mdf, this.docs, this.t, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new MH(this.mdf, docs, this.t, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withT(final T t) {
      return this.t == t ? this : new MH(this.mdf, this.docs, t, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withS(final S s) {
      return this.s == s ? this : new MH(this.mdf, this.docs, this.t, s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withPars(final List<T> pars) {
      return this.pars == pars ? this : new MH(this.mdf, this.docs, this.t, this.s, pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withExceptions(final List<T> exceptions) {
      return this.exceptions == exceptions ? this : new MH(this.mdf, this.docs, this.t, this.s, this.pars, exceptions);
    }
  }
}
