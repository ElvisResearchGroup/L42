// Generated by delombok at Thu Aug 15 20:14:14 PETT 2019
package is.L42.generated;

public final class C implements LDom {
	private final String inner;

	@java.lang.SuppressWarnings("all")
	public C(final String inner) {
		this.inner = inner;
	}

	@java.lang.SuppressWarnings("all")
	public String inner() {
		return this.inner;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof C)) return false;
		final C other = (C) o;
		final java.lang.Object this$inner = this.inner();
		final java.lang.Object other$inner = other.inner();
		if (this$inner == null ? other$inner != null : !this$inner.equals(other$inner)) return false;
		return true;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $inner = this.inner();
		result = result * PRIME + ($inner == null ? 43 : $inner.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "C(inner=" + this.inner() + ")";
	}

	@java.lang.SuppressWarnings("all")
	public C withInner(final String inner) {
		return this.inner == inner ? this : new C(inner);
	}
}
//TODO:
/*
 
 replace ctxL with C:LL
 pTail::= CORE.L | C:LL
 
C calls static{loadclass Init}
class Init static checks:
  assertions are on
  set some global variables for caching and disablyng certain
    assertions/wf checks
all ast stuff, including Half implements a single Visitable interface
  then we have a single big visitor pattern
  including visit C, visit X and visit List<C> ...
  
define Half.E and so on

all toString cutpasted as return Stuff.toS(this) this:Visitable
also, wf cutpasted as return Stuff.wf(this) and not called automatically

check why toStringVisitor was not great

all wf for C/m/P... uses the parser

subparse for string interpolation and docs
for each wf criteria, make some negative tests
*/