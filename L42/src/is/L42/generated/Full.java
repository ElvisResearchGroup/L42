// Generated by delombok at Tue Nov 19 18:07:57 NZDT 2019
package is.L42.generated;

import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;
import is.L42.visitors.CloneVisitor;
import is.L42.visitors.CollectorVisitor;
import is.L42.visitors.Visitable;
import is.L42.common.Constants;
import static is.L42.tools.General.*;

public class Full {

  public static interface E extends HasPos, HasWf, HasVisitable {
    Visitable<? extends E> visitable();
  }


  public static interface Leaf extends E {
  }


  public static interface Wrapper extends E {
    E e();
  }


  public static final class CsP implements Leaf, Visitable<CsP> {
    @Override
    public Visitable<CsP> visitable() {
      return this;
    }

    @Override
    public CsP accept(CloneVisitor cv) {
      return cv.visitCsP(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitCsP(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final List<C> cs;
    private final P _p;

    @java.lang.SuppressWarnings("all")
    public CsP(final Pos pos, final List<C> cs, final P _p) {
      this.pos = pos;
      this.cs = cs;
      this._p = _p;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public List<C> cs() {
      return this.cs;
    }

    @java.lang.SuppressWarnings("all")
    public P _p() {
      return this._p;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.CsP)) return false;
      final Full.CsP other = (Full.CsP) o;
      final java.lang.Object this$cs = this.cs();
      final java.lang.Object other$cs = other.cs();
      if (this$cs == null ? other$cs != null : !this$cs.equals(other$cs)) return false;
      final java.lang.Object this$_p = this._p();
      final java.lang.Object other$_p = other._p();
      if (this$_p == null ? other$_p != null : !this$_p.equals(other$_p)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $cs = this.cs();
      result = result * PRIME + ($cs == null ? 43 : $cs.hashCode());
      final java.lang.Object $_p = this._p();
      result = result * PRIME + ($_p == null ? 43 : $_p.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public CsP withPos(final Pos pos) {
      return this.pos == pos ? this : new CsP(pos, this.cs, this._p);
    }

    @java.lang.SuppressWarnings("all")
    public CsP withCs(final List<C> cs) {
      return this.cs == cs ? this : new CsP(this.pos, cs, this._p);
    }

    @java.lang.SuppressWarnings("all")
    public CsP with_p(final P _p) {
      return this._p == _p ? this : new CsP(this.pos, this.cs, _p);
    }
  }//when cs is empty, _p is not null


  public static final class L implements LL, Leaf, Visitable<LL> {
    @Override
    public Visitable<LL> visitable() {
      return this;
    }

    @Override
    public LL accept(CloneVisitor cv) {
      return cv.visitL(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitL(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final boolean isDots;
    private final String reuseUrl;
    private final boolean isInterface;
    private final List<T> ts;
    private final List<M> ms;
    private final List<Doc> docs;


    public static interface M extends LDom.HasKey, HasWf, HasPos, HasVisitable {
      List<Doc> docs();

      E _e();

      Visitable<? extends M> visitable();
    }

    @Override
    public L withCs(List<C> cs, Function<NC, NC> fullF, Function<Core.L.NC, Core.L.NC> coreF) {
      assert !cs.isEmpty();
      assert inDom(cs.get(0));
      return this.withMs(L(ms, d -> {
        if (!d.key().equals(cs.get(0))) {
          return d;
        }
        var nc = (NC) d;
        if (cs.size() == 1) {
          return fullF.apply(nc);
        }
        return nc.withE(((LL) nc.e).withCs(popL(cs), fullF, coreF));
      }));
    }

    @Override
    public boolean inDom(C c) {
      var res = ms.stream().anyMatch(m -> c.equals(m.key()));
      if (res) {
        return res;
      }
      assert !this.isDots && this.reuseUrl.isEmpty();
      return false;
    }

    @Override
    public List<C> domNC() {
      assert !this.isDots && this.reuseUrl.isEmpty();
      return L(ms.stream().filter(m -> m.key() instanceof C).map(m -> (C) m.key()));
    }

    @Override
    public L c(C c) {
      assert !this.isDots && this.reuseUrl.isEmpty();
      var res = LDom._elem(ms, c);
      if (res == null) {
        throw new LL.NotInDom(this, c);
      }
      return (L) res._e();
    }

    @Override
    public L cs(List<C> cs) {
      if (cs.isEmpty()) {
        return this;
      }
      if (cs.size() == 1) {
        return this.c(cs.get(0));
      }
      return this.c(cs.get(0)).cs(popL(cs));
    }


    public static final class F implements M, Visitable<F> {
      @Override
      public Visitable<F> visitable() {
        return this;
      }

      @Override
      public F accept(CloneVisitor cv) {
        return cv.visitF(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitF(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final Pos pos;
      private final List<Doc> docs;
      private final boolean isVar;
      private final T t;
      private final S key;

      public E _e() {
        return null;
      }

      @java.lang.SuppressWarnings("all")
      public F(final Pos pos, final List<Doc> docs, final boolean isVar, final T t, final S key) {
        this.pos = pos;
        this.docs = docs;
        this.isVar = isVar;
        this.t = t;
        this.key = key;
      }

      @java.lang.SuppressWarnings("all")
      public Pos pos() {
        return this.pos;
      }

      @java.lang.SuppressWarnings("all")
      public List<Doc> docs() {
        return this.docs;
      }

      @java.lang.SuppressWarnings("all")
      public boolean isVar() {
        return this.isVar;
      }

      @java.lang.SuppressWarnings("all")
      public T t() {
        return this.t;
      }

      @java.lang.SuppressWarnings("all")
      public S key() {
        return this.key;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Full.L.F)) return false;
        final Full.L.F other = (Full.L.F) o;
        final java.lang.Object this$docs = this.docs();
        final java.lang.Object other$docs = other.docs();
        if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
        if (this.isVar() != other.isVar()) return false;
        final java.lang.Object this$t = this.t();
        final java.lang.Object other$t = other.t();
        if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
        final java.lang.Object this$key = this.key();
        final java.lang.Object other$key = other.key();
        if (this$key == null ? other$key != null : !this$key.equals(other$key)) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $docs = this.docs();
        result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
        result = result * PRIME + (this.isVar() ? 79 : 97);
        final java.lang.Object $t = this.t();
        result = result * PRIME + ($t == null ? 43 : $t.hashCode());
        final java.lang.Object $key = this.key();
        result = result * PRIME + ($key == null ? 43 : $key.hashCode());
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public F withPos(final Pos pos) {
        return this.pos == pos ? this : new F(pos, this.docs, this.isVar, this.t, this.key);
      }

      @java.lang.SuppressWarnings("all")
      public F withDocs(final List<Doc> docs) {
        return this.docs == docs ? this : new F(this.pos, docs, this.isVar, this.t, this.key);
      }

      @java.lang.SuppressWarnings("all")
      public F withVar(final boolean isVar) {
        return this.isVar == isVar ? this : new F(this.pos, this.docs, isVar, this.t, this.key);
      }

      @java.lang.SuppressWarnings("all")
      public F withT(final T t) {
        return this.t == t ? this : new F(this.pos, this.docs, this.isVar, t, this.key);
      }

      @java.lang.SuppressWarnings("all")
      public F withKey(final S key) {
        return this.key == key ? this : new F(this.pos, this.docs, this.isVar, this.t, key);
      }
    }


    public static final class MI implements M, Visitable<MI> {
      @Override
      public Visitable<MI> visitable() {
        return this;
      }

      @Override
      public MI accept(CloneVisitor cv) {
        return cv.visitMI(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitMI(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final Pos pos;
      private final List<Doc> docs;
      private final Op _op;
      private final int n;
      private final S s;
      private final E e;

      public E _e() {
        return e;
      }

      public S key() {
        return is.L42.common.NameMangling.keyOf(_op, n, s);
      }

      @java.lang.SuppressWarnings("all")
      public MI(final Pos pos, final List<Doc> docs, final Op _op, final int n, final S s, final E e) {
        this.pos = pos;
        this.docs = docs;
        this._op = _op;
        this.n = n;
        this.s = s;
        this.e = e;
      }

      @java.lang.SuppressWarnings("all")
      public Pos pos() {
        return this.pos;
      }

      @java.lang.SuppressWarnings("all")
      public List<Doc> docs() {
        return this.docs;
      }

      @java.lang.SuppressWarnings("all")
      public Op _op() {
        return this._op;
      }

      @java.lang.SuppressWarnings("all")
      public int n() {
        return this.n;
      }

      @java.lang.SuppressWarnings("all")
      public S s() {
        return this.s;
      }

      @java.lang.SuppressWarnings("all")
      public E e() {
        return this.e;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Full.L.MI)) return false;
        final Full.L.MI other = (Full.L.MI) o;
        final java.lang.Object this$docs = this.docs();
        final java.lang.Object other$docs = other.docs();
        if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
        final java.lang.Object this$_op = this._op();
        final java.lang.Object other$_op = other._op();
        if (this$_op == null ? other$_op != null : !this$_op.equals(other$_op)) return false;
        if (this.n() != other.n()) return false;
        final java.lang.Object this$s = this.s();
        final java.lang.Object other$s = other.s();
        if (this$s == null ? other$s != null : !this$s.equals(other$s)) return false;
        final java.lang.Object this$e = this.e();
        final java.lang.Object other$e = other.e();
        if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $docs = this.docs();
        result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
        final java.lang.Object $_op = this._op();
        result = result * PRIME + ($_op == null ? 43 : $_op.hashCode());
        result = result * PRIME + this.n();
        final java.lang.Object $s = this.s();
        result = result * PRIME + ($s == null ? 43 : $s.hashCode());
        final java.lang.Object $e = this.e();
        result = result * PRIME + ($e == null ? 43 : $e.hashCode());
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public MI withPos(final Pos pos) {
        return this.pos == pos ? this : new MI(pos, this.docs, this._op, this.n, this.s, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public MI withDocs(final List<Doc> docs) {
        return this.docs == docs ? this : new MI(this.pos, docs, this._op, this.n, this.s, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public MI with_op(final Op _op) {
        return this._op == _op ? this : new MI(this.pos, this.docs, _op, this.n, this.s, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public MI withN(final int n) {
        return this.n == n ? this : new MI(this.pos, this.docs, this._op, n, this.s, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public MI withS(final S s) {
        return this.s == s ? this : new MI(this.pos, this.docs, this._op, this.n, s, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public MI withE(final E e) {
        return this.e == e ? this : new MI(this.pos, this.docs, this._op, this.n, this.s, e);
      }
    }


    public static final class MWT implements M, Visitable<MWT> {
      @Override
      public Visitable<MWT> visitable() {
        return this;
      }

      @Override
      public MWT accept(CloneVisitor cv) {
        return cv.visitMWT(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitMWT(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final Pos pos;
      private final List<Doc> docs;
      private final MH mh;
      private final String nativeUrl;
      private final E _e;

      public S key() {
        return mh.key();
      }

      @java.lang.SuppressWarnings("all")
      public MWT(final Pos pos, final List<Doc> docs, final MH mh, final String nativeUrl, final E _e) {
        this.pos = pos;
        this.docs = docs;
        this.mh = mh;
        this.nativeUrl = nativeUrl;
        this._e = _e;
      }

      @java.lang.SuppressWarnings("all")
      public Pos pos() {
        return this.pos;
      }

      @java.lang.SuppressWarnings("all")
      public List<Doc> docs() {
        return this.docs;
      }

      @java.lang.SuppressWarnings("all")
      public MH mh() {
        return this.mh;
      }

      @java.lang.SuppressWarnings("all")
      public String nativeUrl() {
        return this.nativeUrl;
      }

      @java.lang.SuppressWarnings("all")
      public E _e() {
        return this._e;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Full.L.MWT)) return false;
        final Full.L.MWT other = (Full.L.MWT) o;
        final java.lang.Object this$docs = this.docs();
        final java.lang.Object other$docs = other.docs();
        if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
        final java.lang.Object this$mh = this.mh();
        final java.lang.Object other$mh = other.mh();
        if (this$mh == null ? other$mh != null : !this$mh.equals(other$mh)) return false;
        final java.lang.Object this$nativeUrl = this.nativeUrl();
        final java.lang.Object other$nativeUrl = other.nativeUrl();
        if (this$nativeUrl == null ? other$nativeUrl != null : !this$nativeUrl.equals(other$nativeUrl)) return false;
        final java.lang.Object this$_e = this._e();
        final java.lang.Object other$_e = other._e();
        if (this$_e == null ? other$_e != null : !this$_e.equals(other$_e)) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $docs = this.docs();
        result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
        final java.lang.Object $mh = this.mh();
        result = result * PRIME + ($mh == null ? 43 : $mh.hashCode());
        final java.lang.Object $nativeUrl = this.nativeUrl();
        result = result * PRIME + ($nativeUrl == null ? 43 : $nativeUrl.hashCode());
        final java.lang.Object $_e = this._e();
        result = result * PRIME + ($_e == null ? 43 : $_e.hashCode());
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public MWT withPos(final Pos pos) {
        return this.pos == pos ? this : new MWT(pos, this.docs, this.mh, this.nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT withDocs(final List<Doc> docs) {
        return this.docs == docs ? this : new MWT(this.pos, docs, this.mh, this.nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT withMh(final MH mh) {
        return this.mh == mh ? this : new MWT(this.pos, this.docs, mh, this.nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT withNativeUrl(final String nativeUrl) {
        return this.nativeUrl == nativeUrl ? this : new MWT(this.pos, this.docs, this.mh, nativeUrl, this._e);
      }

      @java.lang.SuppressWarnings("all")
      public MWT with_e(final E _e) {
        return this._e == _e ? this : new MWT(this.pos, this.docs, this.mh, this.nativeUrl, _e);
      }
    }


    public static final class NC implements M, Visitable<NC> {
      @Override
      public Visitable<NC> visitable() {
        return this;
      }

      @Override
      public NC accept(CloneVisitor cv) {
        return cv.visitNC(this);
      }

      @Override
      public void accept(CollectorVisitor cv) {
        cv.visitNC(this);
      }

      @Override
      public String toString() {
        return Constants.toS.apply(this);
      }

      @Override
      public boolean wf() {
        return Constants.wf.test(this);
      }

      private final Pos pos;
      private final List<Doc> docs;
      private final C key;
      private final E e;

      public E _e() {
        return e;
      }

      @java.lang.SuppressWarnings("all")
      public NC(final Pos pos, final List<Doc> docs, final C key, final E e) {
        this.pos = pos;
        this.docs = docs;
        this.key = key;
        this.e = e;
      }

      @java.lang.SuppressWarnings("all")
      public Pos pos() {
        return this.pos;
      }

      @java.lang.SuppressWarnings("all")
      public List<Doc> docs() {
        return this.docs;
      }

      @java.lang.SuppressWarnings("all")
      public C key() {
        return this.key;
      }

      @java.lang.SuppressWarnings("all")
      public E e() {
        return this.e;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Full.L.NC)) return false;
        final Full.L.NC other = (Full.L.NC) o;
        final java.lang.Object this$docs = this.docs();
        final java.lang.Object other$docs = other.docs();
        if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
        final java.lang.Object this$key = this.key();
        final java.lang.Object other$key = other.key();
        if (this$key == null ? other$key != null : !this$key.equals(other$key)) return false;
        final java.lang.Object this$e = this.e();
        final java.lang.Object other$e = other.e();
        if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
        return true;
      }

      @java.lang.Override
      @java.lang.SuppressWarnings("all")
      public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $docs = this.docs();
        result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
        final java.lang.Object $key = this.key();
        result = result * PRIME + ($key == null ? 43 : $key.hashCode());
        final java.lang.Object $e = this.e();
        result = result * PRIME + ($e == null ? 43 : $e.hashCode());
        return result;
      }

      @java.lang.SuppressWarnings("all")
      public NC withPos(final Pos pos) {
        return this.pos == pos ? this : new NC(pos, this.docs, this.key, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public NC withDocs(final List<Doc> docs) {
        return this.docs == docs ? this : new NC(this.pos, docs, this.key, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public NC withKey(final C key) {
        return this.key == key ? this : new NC(this.pos, this.docs, key, this.e);
      }

      @java.lang.SuppressWarnings("all")
      public NC withE(final E e) {
        return this.e == e ? this : new NC(this.pos, this.docs, this.key, e);
      }
    }

    @java.lang.SuppressWarnings("all")
    public L(final Pos pos, final boolean isDots, final String reuseUrl, final boolean isInterface, final List<T> ts, final List<M> ms, final List<Doc> docs) {
      this.pos = pos;
      this.isDots = isDots;
      this.reuseUrl = reuseUrl;
      this.isInterface = isInterface;
      this.ts = ts;
      this.ms = ms;
      this.docs = docs;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isDots() {
      return this.isDots;
    }

    @java.lang.SuppressWarnings("all")
    public String reuseUrl() {
      return this.reuseUrl;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isInterface() {
      return this.isInterface;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> ts() {
      return this.ts;
    }

    @java.lang.SuppressWarnings("all")
    public List<M> ms() {
      return this.ms;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.L)) return false;
      final Full.L other = (Full.L) o;
      if (this.isDots() != other.isDots()) return false;
      final java.lang.Object this$reuseUrl = this.reuseUrl();
      final java.lang.Object other$reuseUrl = other.reuseUrl();
      if (this$reuseUrl == null ? other$reuseUrl != null : !this$reuseUrl.equals(other$reuseUrl)) return false;
      if (this.isInterface() != other.isInterface()) return false;
      final java.lang.Object this$ts = this.ts();
      final java.lang.Object other$ts = other.ts();
      if (this$ts == null ? other$ts != null : !this$ts.equals(other$ts)) return false;
      final java.lang.Object this$ms = this.ms();
      final java.lang.Object other$ms = other.ms();
      if (this$ms == null ? other$ms != null : !this$ms.equals(other$ms)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      result = result * PRIME + (this.isDots() ? 79 : 97);
      final java.lang.Object $reuseUrl = this.reuseUrl();
      result = result * PRIME + ($reuseUrl == null ? 43 : $reuseUrl.hashCode());
      result = result * PRIME + (this.isInterface() ? 79 : 97);
      final java.lang.Object $ts = this.ts();
      result = result * PRIME + ($ts == null ? 43 : $ts.hashCode());
      final java.lang.Object $ms = this.ms();
      result = result * PRIME + ($ms == null ? 43 : $ms.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public L withPos(final Pos pos) {
      return this.pos == pos ? this : new L(pos, this.isDots, this.reuseUrl, this.isInterface, this.ts, this.ms, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withDots(final boolean isDots) {
      return this.isDots == isDots ? this : new L(this.pos, isDots, this.reuseUrl, this.isInterface, this.ts, this.ms, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withReuseUrl(final String reuseUrl) {
      return this.reuseUrl == reuseUrl ? this : new L(this.pos, this.isDots, reuseUrl, this.isInterface, this.ts, this.ms, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withInterface(final boolean isInterface) {
      return this.isInterface == isInterface ? this : new L(this.pos, this.isDots, this.reuseUrl, isInterface, this.ts, this.ms, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withTs(final List<T> ts) {
      return this.ts == ts ? this : new L(this.pos, this.isDots, this.reuseUrl, this.isInterface, ts, this.ms, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withMs(final List<M> ms) {
      return this.ms == ms ? this : new L(this.pos, this.isDots, this.reuseUrl, this.isInterface, this.ts, ms, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public L withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new L(this.pos, this.isDots, this.reuseUrl, this.isInterface, this.ts, this.ms, docs);
    }
  }


  public static final class Slash implements Leaf, Visitable<Slash> {
    @Override
    public Visitable<Slash> visitable() {
      return this;
    }

    @Override
    public Slash accept(CloneVisitor cv) {
      return cv.visitSlash(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitSlash(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;

    @java.lang.SuppressWarnings("all")
    public Slash(final Pos pos) {
      this.pos = pos;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Slash)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int result = 1;
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Slash withPos(final Pos pos) {
      return this.pos == pos ? this : new Slash(pos);
    }
  }


  public static final class SlashX implements Leaf, Visitable<SlashX> {
    @Override
    public Visitable<SlashX> visitable() {
      return this;
    }

    @Override
    public SlashX accept(CloneVisitor cv) {
      return cv.visitSlashX(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitSlashX(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final X x;

    @java.lang.SuppressWarnings("all")
    public SlashX(final Pos pos, final X x) {
      this.pos = pos;
      this.x = x;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public X x() {
      return this.x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.SlashX)) return false;
      final Full.SlashX other = (Full.SlashX) o;
      final java.lang.Object this$x = this.x();
      final java.lang.Object other$x = other.x();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $x = this.x();
      result = result * PRIME + ($x == null ? 43 : $x.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public SlashX withPos(final Pos pos) {
      return this.pos == pos ? this : new SlashX(pos, this.x);
    }

    @java.lang.SuppressWarnings("all")
    public SlashX withX(final X x) {
      return this.x == x ? this : new SlashX(this.pos, x);
    }
  }


  public static final class EString implements E, Visitable<EString> {
    @Override
    public Visitable<EString> visitable() {
      return this;
    }

    @Override
    public EString accept(CloneVisitor cv) {
      return cv.visitEString(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitEString(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final List<E> es;
    private final List<String> strings;

    @java.lang.SuppressWarnings("all")
    public EString(final Pos pos, final List<E> es, final List<String> strings) {
      this.pos = pos;
      this.es = es;
      this.strings = strings;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public List<E> es() {
      return this.es;
    }

    @java.lang.SuppressWarnings("all")
    public List<String> strings() {
      return this.strings;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.EString)) return false;
      final Full.EString other = (Full.EString) o;
      final java.lang.Object this$es = this.es();
      final java.lang.Object other$es = other.es();
      if (this$es == null ? other$es != null : !this$es.equals(other$es)) return false;
      final java.lang.Object this$strings = this.strings();
      final java.lang.Object other$strings = other.strings();
      if (this$strings == null ? other$strings != null : !this$strings.equals(other$strings)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $es = this.es();
      result = result * PRIME + ($es == null ? 43 : $es.hashCode());
      final java.lang.Object $strings = this.strings();
      result = result * PRIME + ($strings == null ? 43 : $strings.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public EString withPos(final Pos pos) {
      return this.pos == pos ? this : new EString(pos, this.es, this.strings);
    }

    @java.lang.SuppressWarnings("all")
    public EString withEs(final List<E> es) {
      return this.es == es ? this : new EString(this.pos, es, this.strings);
    }

    @java.lang.SuppressWarnings("all")
    public EString withStrings(final List<String> strings) {
      return this.strings == strings ? this : new EString(this.pos, this.es, strings);
    }
  }//es(0) is the receiver


  public static final class EPathSel implements Leaf, Visitable<EPathSel> {
    @Override
    public Visitable<EPathSel> visitable() {
      return this;
    }

    @Override
    public EPathSel accept(CloneVisitor cv) {
      return cv.visitEPathSel(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitEPathSel(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final PathSel pathSel;

    @java.lang.SuppressWarnings("all")
    public EPathSel(final Pos pos, final PathSel pathSel) {
      this.pos = pos;
      this.pathSel = pathSel;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public PathSel pathSel() {
      return this.pathSel;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.EPathSel)) return false;
      final Full.EPathSel other = (Full.EPathSel) o;
      final java.lang.Object this$pathSel = this.pathSel();
      final java.lang.Object other$pathSel = other.pathSel();
      if (this$pathSel == null ? other$pathSel != null : !this$pathSel.equals(other$pathSel)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $pathSel = this.pathSel();
      result = result * PRIME + ($pathSel == null ? 43 : $pathSel.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public EPathSel withPos(final Pos pos) {
      return this.pos == pos ? this : new EPathSel(pos, this.pathSel);
    }

    @java.lang.SuppressWarnings("all")
    public EPathSel withPathSel(final PathSel pathSel) {
      return this.pathSel == pathSel ? this : new EPathSel(this.pos, pathSel);
    }
  }


  public static final class UOp implements Wrapper, Visitable<UOp> {
    @Override
    public Visitable<UOp> visitable() {
      return this;
    }

    @Override
    public UOp accept(CloneVisitor cv) {
      return cv.visitUOp(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitUOp(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final Op _op;
    private final String _num;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public UOp(final Pos pos, final Op _op, final String _num, final E e) {
      this.pos = pos;
      this._op = _op;
      this._num = _num;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public Op _op() {
      return this._op;
    }

    @java.lang.SuppressWarnings("all")
    public String _num() {
      return this._num;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.UOp)) return false;
      final Full.UOp other = (Full.UOp) o;
      final java.lang.Object this$_op = this._op();
      final java.lang.Object other$_op = other._op();
      if (this$_op == null ? other$_op != null : !this$_op.equals(other$_op)) return false;
      final java.lang.Object this$_num = this._num();
      final java.lang.Object other$_num = other._num();
      if (this$_num == null ? other$_num != null : !this$_num.equals(other$_num)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_op = this._op();
      result = result * PRIME + ($_op == null ? 43 : $_op.hashCode());
      final java.lang.Object $_num = this._num();
      result = result * PRIME + ($_num == null ? 43 : $_num.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public UOp withPos(final Pos pos) {
      return this.pos == pos ? this : new UOp(pos, this._op, this._num, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public UOp with_op(final Op _op) {
      return this._op == _op ? this : new UOp(this.pos, _op, this._num, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public UOp with_num(final String _num) {
      return this._num == _num ? this : new UOp(this.pos, this._op, _num, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public UOp withE(final E e) {
      return this.e == e ? this : new UOp(this.pos, this._op, this._num, e);
    }
  }//either _op or _num ==null


  public static final class BinOp implements E, Visitable<BinOp> {
    @Override
    public Visitable<BinOp> visitable() {
      return this;
    }

    @Override
    public BinOp accept(CloneVisitor cv) {
      return cv.visitBinOp(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitBinOp(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final Op op;
    private final List<E> es;

    @java.lang.SuppressWarnings("all")
    public BinOp(final Pos pos, final Op op, final List<E> es) {
      this.pos = pos;
      this.op = op;
      this.es = es;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public Op op() {
      return this.op;
    }

    @java.lang.SuppressWarnings("all")
    public List<E> es() {
      return this.es;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.BinOp)) return false;
      final Full.BinOp other = (Full.BinOp) o;
      final java.lang.Object this$op = this.op();
      final java.lang.Object other$op = other.op();
      if (this$op == null ? other$op != null : !this$op.equals(other$op)) return false;
      final java.lang.Object this$es = this.es();
      final java.lang.Object other$es = other.es();
      if (this$es == null ? other$es != null : !this$es.equals(other$es)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $op = this.op();
      result = result * PRIME + ($op == null ? 43 : $op.hashCode());
      final java.lang.Object $es = this.es();
      result = result * PRIME + ($es == null ? 43 : $es.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public BinOp withPos(final Pos pos) {
      return this.pos == pos ? this : new BinOp(pos, this.op, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public BinOp withOp(final Op op) {
      return this.op == op ? this : new BinOp(this.pos, op, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public BinOp withEs(final List<E> es) {
      return this.es == es ? this : new BinOp(this.pos, this.op, es);
    }
  }


  public static final class Cast implements Wrapper, Visitable<Cast> {
    @Override
    public Visitable<Cast> visitable() {
      return this;
    }

    @Override
    public Cast accept(CloneVisitor cv) {
      return cv.visitCast(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitCast(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final E e;
    private final T t;

    @java.lang.SuppressWarnings("all")
    public Cast(final Pos pos, final E e, final T t) {
      this.pos = pos;
      this.e = e;
      this.t = t;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Cast)) return false;
      final Full.Cast other = (Full.Cast) o;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Cast withPos(final Pos pos) {
      return this.pos == pos ? this : new Cast(pos, this.e, this.t);
    }

    @java.lang.SuppressWarnings("all")
    public Cast withE(final E e) {
      return this.e == e ? this : new Cast(this.pos, e, this.t);
    }

    @java.lang.SuppressWarnings("all")
    public Cast withT(final T t) {
      return this.t == t ? this : new Cast(this.pos, this.e, t);
    }
  }


  public static final class Call implements E, Visitable<Call> {
    @Override
    public Visitable<Call> visitable() {
      return this;
    }

    @Override
    public Call accept(CloneVisitor cv) {
      return cv.visitCall(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitCall(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final E e;
    private final S _s;
    private final boolean isSquare;
    private final List<Par> pars;

    @java.lang.SuppressWarnings("all")
    public Call(final Pos pos, final E e, final S _s, final boolean isSquare, final List<Par> pars) {
      this.pos = pos;
      this.e = e;
      this._s = _s;
      this.isSquare = isSquare;
      this.pars = pars;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.SuppressWarnings("all")
    public S _s() {
      return this._s;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isSquare() {
      return this.isSquare;
    }

    @java.lang.SuppressWarnings("all")
    public List<Par> pars() {
      return this.pars;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Call)) return false;
      final Full.Call other = (Full.Call) o;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      final java.lang.Object this$_s = this._s();
      final java.lang.Object other$_s = other._s();
      if (this$_s == null ? other$_s != null : !this$_s.equals(other$_s)) return false;
      if (this.isSquare() != other.isSquare()) return false;
      final java.lang.Object this$pars = this.pars();
      final java.lang.Object other$pars = other.pars();
      if (this$pars == null ? other$pars != null : !this$pars.equals(other$pars)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      final java.lang.Object $_s = this._s();
      result = result * PRIME + ($_s == null ? 43 : $_s.hashCode());
      result = result * PRIME + (this.isSquare() ? 79 : 97);
      final java.lang.Object $pars = this.pars();
      result = result * PRIME + ($pars == null ? 43 : $pars.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Call withPos(final Pos pos) {
      return this.pos == pos ? this : new Call(pos, this.e, this._s, this.isSquare, this.pars);
    }

    @java.lang.SuppressWarnings("all")
    public Call withE(final E e) {
      return this.e == e ? this : new Call(this.pos, e, this._s, this.isSquare, this.pars);
    }

    @java.lang.SuppressWarnings("all")
    public Call with_s(final S _s) {
      return this._s == _s ? this : new Call(this.pos, this.e, _s, this.isSquare, this.pars);
    }

    @java.lang.SuppressWarnings("all")
    public Call withSquare(final boolean isSquare) {
      return this.isSquare == isSquare ? this : new Call(this.pos, this.e, this._s, isSquare, this.pars);
    }

    @java.lang.SuppressWarnings("all")
    public Call withPars(final List<Par> pars) {
      return this.pars == pars ? this : new Call(this.pos, this.e, this._s, this.isSquare, pars);
    }
  }


  public static final class Block implements E, Visitable<Block> {
    @Override
    public Visitable<Block> visitable() {
      return this;
    }

    @Override
    public Block accept(CloneVisitor cv) {
      return cv.visitBlock(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitBlock(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final boolean isCurly;
    private final List<D> ds;
    private final int dsAfter;
    private final List<K> ks;
    private final List<T> whoopsed;
    private final E _e;

    @java.lang.SuppressWarnings("all")
    public Block(final Pos pos, final boolean isCurly, final List<D> ds, final int dsAfter, final List<K> ks, final List<T> whoopsed, final E _e) {
      this.pos = pos;
      this.isCurly = isCurly;
      this.ds = ds;
      this.dsAfter = dsAfter;
      this.ks = ks;
      this.whoopsed = whoopsed;
      this._e = _e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isCurly() {
      return this.isCurly;
    }

    @java.lang.SuppressWarnings("all")
    public List<D> ds() {
      return this.ds;
    }

    @java.lang.SuppressWarnings("all")
    public int dsAfter() {
      return this.dsAfter;
    }

    @java.lang.SuppressWarnings("all")
    public List<K> ks() {
      return this.ks;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> whoopsed() {
      return this.whoopsed;
    }

    @java.lang.SuppressWarnings("all")
    public E _e() {
      return this._e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Block)) return false;
      final Full.Block other = (Full.Block) o;
      if (this.isCurly() != other.isCurly()) return false;
      final java.lang.Object this$ds = this.ds();
      final java.lang.Object other$ds = other.ds();
      if (this$ds == null ? other$ds != null : !this$ds.equals(other$ds)) return false;
      if (this.dsAfter() != other.dsAfter()) return false;
      final java.lang.Object this$ks = this.ks();
      final java.lang.Object other$ks = other.ks();
      if (this$ks == null ? other$ks != null : !this$ks.equals(other$ks)) return false;
      final java.lang.Object this$whoopsed = this.whoopsed();
      final java.lang.Object other$whoopsed = other.whoopsed();
      if (this$whoopsed == null ? other$whoopsed != null : !this$whoopsed.equals(other$whoopsed)) return false;
      final java.lang.Object this$_e = this._e();
      final java.lang.Object other$_e = other._e();
      if (this$_e == null ? other$_e != null : !this$_e.equals(other$_e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      result = result * PRIME + (this.isCurly() ? 79 : 97);
      final java.lang.Object $ds = this.ds();
      result = result * PRIME + ($ds == null ? 43 : $ds.hashCode());
      result = result * PRIME + this.dsAfter();
      final java.lang.Object $ks = this.ks();
      result = result * PRIME + ($ks == null ? 43 : $ks.hashCode());
      final java.lang.Object $whoopsed = this.whoopsed();
      result = result * PRIME + ($whoopsed == null ? 43 : $whoopsed.hashCode());
      final java.lang.Object $_e = this._e();
      result = result * PRIME + ($_e == null ? 43 : $_e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Block withPos(final Pos pos) {
      return this.pos == pos ? this : new Block(pos, this.isCurly, this.ds, this.dsAfter, this.ks, this.whoopsed, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withCurly(final boolean isCurly) {
      return this.isCurly == isCurly ? this : new Block(this.pos, isCurly, this.ds, this.dsAfter, this.ks, this.whoopsed, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withDs(final List<D> ds) {
      return this.ds == ds ? this : new Block(this.pos, this.isCurly, ds, this.dsAfter, this.ks, this.whoopsed, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withDsAfter(final int dsAfter) {
      return this.dsAfter == dsAfter ? this : new Block(this.pos, this.isCurly, this.ds, dsAfter, this.ks, this.whoopsed, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withKs(final List<K> ks) {
      return this.ks == ks ? this : new Block(this.pos, this.isCurly, this.ds, this.dsAfter, ks, this.whoopsed, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public Block withWhoopsed(final List<T> whoopsed) {
      return this.whoopsed == whoopsed ? this : new Block(this.pos, this.isCurly, this.ds, this.dsAfter, this.ks, whoopsed, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public Block with_e(final E _e) {
      return this._e == _e ? this : new Block(this.pos, this.isCurly, this.ds, this.dsAfter, this.ks, this.whoopsed, _e);
    }
  }


  public static final class Loop implements Wrapper, Visitable<Loop> {
    @Override
    public Visitable<Loop> visitable() {
      return this;
    }

    @Override
    public Loop accept(CloneVisitor cv) {
      return cv.visitLoop(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitLoop(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public Loop(final Pos pos, final E e) {
      this.pos = pos;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Loop)) return false;
      final Full.Loop other = (Full.Loop) o;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Loop withPos(final Pos pos) {
      return this.pos == pos ? this : new Loop(pos, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Loop withE(final E e) {
      return this.e == e ? this : new Loop(this.pos, e);
    }
  }


  public static final class While implements E, Visitable<While> {
    @Override
    public Visitable<While> visitable() {
      return this;
    }

    @Override
    public While accept(CloneVisitor cv) {
      return cv.visitWhile(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitWhile(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final E condition;
    private final E body;

    @java.lang.SuppressWarnings("all")
    public While(final Pos pos, final E condition, final E body) {
      this.pos = pos;
      this.condition = condition;
      this.body = body;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public E condition() {
      return this.condition;
    }

    @java.lang.SuppressWarnings("all")
    public E body() {
      return this.body;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.While)) return false;
      final Full.While other = (Full.While) o;
      final java.lang.Object this$condition = this.condition();
      final java.lang.Object other$condition = other.condition();
      if (this$condition == null ? other$condition != null : !this$condition.equals(other$condition)) return false;
      final java.lang.Object this$body = this.body();
      final java.lang.Object other$body = other.body();
      if (this$body == null ? other$body != null : !this$body.equals(other$body)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $condition = this.condition();
      result = result * PRIME + ($condition == null ? 43 : $condition.hashCode());
      final java.lang.Object $body = this.body();
      result = result * PRIME + ($body == null ? 43 : $body.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public While withPos(final Pos pos) {
      return this.pos == pos ? this : new While(pos, this.condition, this.body);
    }

    @java.lang.SuppressWarnings("all")
    public While withCondition(final E condition) {
      return this.condition == condition ? this : new While(this.pos, condition, this.body);
    }

    @java.lang.SuppressWarnings("all")
    public While withBody(final E body) {
      return this.body == body ? this : new While(this.pos, this.condition, body);
    }
  }


  public static final class For implements E, Visitable<For> {
    @Override
    public Visitable<For> visitable() {
      return this;
    }

    @Override
    public For accept(CloneVisitor cv) {
      return cv.visitFor(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitFor(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final List<D> ds;
    private final E body;

    @java.lang.SuppressWarnings("all")
    public For(final Pos pos, final List<D> ds, final E body) {
      this.pos = pos;
      this.ds = ds;
      this.body = body;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public List<D> ds() {
      return this.ds;
    }

    @java.lang.SuppressWarnings("all")
    public E body() {
      return this.body;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.For)) return false;
      final Full.For other = (Full.For) o;
      final java.lang.Object this$ds = this.ds();
      final java.lang.Object other$ds = other.ds();
      if (this$ds == null ? other$ds != null : !this$ds.equals(other$ds)) return false;
      final java.lang.Object this$body = this.body();
      final java.lang.Object other$body = other.body();
      if (this$body == null ? other$body != null : !this$body.equals(other$body)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $ds = this.ds();
      result = result * PRIME + ($ds == null ? 43 : $ds.hashCode());
      final java.lang.Object $body = this.body();
      result = result * PRIME + ($body == null ? 43 : $body.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public For withPos(final Pos pos) {
      return this.pos == pos ? this : new For(pos, this.ds, this.body);
    }

    @java.lang.SuppressWarnings("all")
    public For withDs(final List<D> ds) {
      return this.ds == ds ? this : new For(this.pos, ds, this.body);
    }

    @java.lang.SuppressWarnings("all")
    public For withBody(final E body) {
      return this.body == body ? this : new For(this.pos, this.ds, body);
    }
  }


  public static final class Throw implements Wrapper, Visitable<Throw> {
    @Override
    public Visitable<Throw> visitable() {
      return this;
    }

    @Override
    public Throw accept(CloneVisitor cv) {
      return cv.visitThrow(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitThrow(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final ThrowKind thr;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public Throw(final Pos pos, final ThrowKind thr, final E e) {
      this.pos = pos;
      this.thr = thr;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public ThrowKind thr() {
      return this.thr;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Throw)) return false;
      final Full.Throw other = (Full.Throw) o;
      final java.lang.Object this$thr = this.thr();
      final java.lang.Object other$thr = other.thr();
      if (this$thr == null ? other$thr != null : !this$thr.equals(other$thr)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $thr = this.thr();
      result = result * PRIME + ($thr == null ? 43 : $thr.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Throw withPos(final Pos pos) {
      return this.pos == pos ? this : new Throw(pos, this.thr, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Throw withThr(final ThrowKind thr) {
      return this.thr == thr ? this : new Throw(this.pos, thr, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public Throw withE(final E e) {
      return this.e == e ? this : new Throw(this.pos, this.thr, e);
    }
  }


  public static final class OpUpdate implements Wrapper, Visitable<OpUpdate> {
    @Override
    public Visitable<OpUpdate> visitable() {
      return this;
    }

    @Override
    public OpUpdate accept(CloneVisitor cv) {
      return cv.visitOpUpdate(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitOpUpdate(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final X x;
    private final Op op;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public OpUpdate(final Pos pos, final X x, final Op op, final E e) {
      this.pos = pos;
      this.x = x;
      this.op = op;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public X x() {
      return this.x;
    }

    @java.lang.SuppressWarnings("all")
    public Op op() {
      return this.op;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.OpUpdate)) return false;
      final Full.OpUpdate other = (Full.OpUpdate) o;
      final java.lang.Object this$x = this.x();
      final java.lang.Object other$x = other.x();
      if (this$x == null ? other$x != null : !this$x.equals(other$x)) return false;
      final java.lang.Object this$op = this.op();
      final java.lang.Object other$op = other.op();
      if (this$op == null ? other$op != null : !this$op.equals(other$op)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $x = this.x();
      result = result * PRIME + ($x == null ? 43 : $x.hashCode());
      final java.lang.Object $op = this.op();
      result = result * PRIME + ($op == null ? 43 : $op.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withPos(final Pos pos) {
      return this.pos == pos ? this : new OpUpdate(pos, this.x, this.op, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withX(final X x) {
      return this.x == x ? this : new OpUpdate(this.pos, x, this.op, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withOp(final Op op) {
      return this.op == op ? this : new OpUpdate(this.pos, this.x, op, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public OpUpdate withE(final E e) {
      return this.e == e ? this : new OpUpdate(this.pos, this.x, this.op, e);
    }
  }


  public static final class If implements E, Visitable<If> {
    @Override
    public Visitable<If> visitable() {
      return this;
    }

    @Override
    public If accept(CloneVisitor cv) {
      return cv.visitIf(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitIf(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Pos pos;
    private final E _condition;
    private final List<D> matches;
    private final E then;
    private final E _else;

    @java.lang.SuppressWarnings("all")
    public If(final Pos pos, final E _condition, final List<D> matches, final E then, final E _else) {
      this.pos = pos;
      this._condition = _condition;
      this.matches = matches;
      this.then = then;
      this._else = _else;
    }

    @java.lang.SuppressWarnings("all")
    public Pos pos() {
      return this.pos;
    }

    @java.lang.SuppressWarnings("all")
    public E _condition() {
      return this._condition;
    }

    @java.lang.SuppressWarnings("all")
    public List<D> matches() {
      return this.matches;
    }

    @java.lang.SuppressWarnings("all")
    public E then() {
      return this.then;
    }

    @java.lang.SuppressWarnings("all")
    public E _else() {
      return this._else;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.If)) return false;
      final Full.If other = (Full.If) o;
      final java.lang.Object this$_condition = this._condition();
      final java.lang.Object other$_condition = other._condition();
      if (this$_condition == null ? other$_condition != null : !this$_condition.equals(other$_condition)) return false;
      final java.lang.Object this$matches = this.matches();
      final java.lang.Object other$matches = other.matches();
      if (this$matches == null ? other$matches != null : !this$matches.equals(other$matches)) return false;
      final java.lang.Object this$then = this.then();
      final java.lang.Object other$then = other.then();
      if (this$then == null ? other$then != null : !this$then.equals(other$then)) return false;
      final java.lang.Object this$_else = this._else();
      final java.lang.Object other$_else = other._else();
      if (this$_else == null ? other$_else != null : !this$_else.equals(other$_else)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_condition = this._condition();
      result = result * PRIME + ($_condition == null ? 43 : $_condition.hashCode());
      final java.lang.Object $matches = this.matches();
      result = result * PRIME + ($matches == null ? 43 : $matches.hashCode());
      final java.lang.Object $then = this.then();
      result = result * PRIME + ($then == null ? 43 : $then.hashCode());
      final java.lang.Object $_else = this._else();
      result = result * PRIME + ($_else == null ? 43 : $_else.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public If withPos(final Pos pos) {
      return this.pos == pos ? this : new If(pos, this._condition, this.matches, this.then, this._else);
    }

    @java.lang.SuppressWarnings("all")
    public If with_condition(final E _condition) {
      return this._condition == _condition ? this : new If(this.pos, _condition, this.matches, this.then, this._else);
    }

    @java.lang.SuppressWarnings("all")
    public If withMatches(final List<D> matches) {
      return this.matches == matches ? this : new If(this.pos, this._condition, matches, this.then, this._else);
    }

    @java.lang.SuppressWarnings("all")
    public If withThen(final E then) {
      return this.then == then ? this : new If(this.pos, this._condition, this.matches, then, this._else);
    }

    @java.lang.SuppressWarnings("all")
    public If with_else(final E _else) {
      return this._else == _else ? this : new If(this.pos, this._condition, this.matches, this.then, _else);
    }
  }

  //---
  public static final class D implements Visitable<D> {
    @Override
    public D accept(CloneVisitor cv) {
      return cv.visitD(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitD(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final VarTx _varTx;
    private final List<VarTx> varTxs;
    private final E _e;

    @java.lang.SuppressWarnings("all")
    public D(final VarTx _varTx, final List<VarTx> varTxs, final E _e) {
      this._varTx = _varTx;
      this.varTxs = varTxs;
      this._e = _e;
    }

    @java.lang.SuppressWarnings("all")
    public VarTx _varTx() {
      return this._varTx;
    }

    @java.lang.SuppressWarnings("all")
    public List<VarTx> varTxs() {
      return this.varTxs;
    }

    @java.lang.SuppressWarnings("all")
    public E _e() {
      return this._e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.D)) return false;
      final Full.D other = (Full.D) o;
      final java.lang.Object this$_varTx = this._varTx();
      final java.lang.Object other$_varTx = other._varTx();
      if (this$_varTx == null ? other$_varTx != null : !this$_varTx.equals(other$_varTx)) return false;
      final java.lang.Object this$varTxs = this.varTxs();
      final java.lang.Object other$varTxs = other.varTxs();
      if (this$varTxs == null ? other$varTxs != null : !this$varTxs.equals(other$varTxs)) return false;
      final java.lang.Object this$_e = this._e();
      final java.lang.Object other$_e = other._e();
      if (this$_e == null ? other$_e != null : !this$_e.equals(other$_e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_varTx = this._varTx();
      result = result * PRIME + ($_varTx == null ? 43 : $_varTx.hashCode());
      final java.lang.Object $varTxs = this.varTxs();
      result = result * PRIME + ($varTxs == null ? 43 : $varTxs.hashCode());
      final java.lang.Object $_e = this._e();
      result = result * PRIME + ($_e == null ? 43 : $_e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public D with_varTx(final VarTx _varTx) {
      return this._varTx == _varTx ? this : new D(_varTx, this.varTxs, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public D withVarTxs(final List<VarTx> varTxs) {
      return this.varTxs == varTxs ? this : new D(this._varTx, varTxs, this._e);
    }

    @java.lang.SuppressWarnings("all")
    public D with_e(final E _e) {
      return this._e == _e ? this : new D(this._varTx, this.varTxs, _e);
    }
  }


  public static final class VarTx implements Visitable<VarTx> {
    @Override
    public VarTx accept(CloneVisitor cv) {
      return cv.visitVarTx(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitVarTx(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final boolean isVar;
    private final T _t;
    private final Mdf _mdf;
    private final X _x;
    public static final VarTx emptyInstance = new VarTx(false, null, null, null);

    @java.lang.SuppressWarnings("all")
    public VarTx(final boolean isVar, final T _t, final Mdf _mdf, final X _x) {
      this.isVar = isVar;
      this._t = _t;
      this._mdf = _mdf;
      this._x = _x;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isVar() {
      return this.isVar;
    }

    @java.lang.SuppressWarnings("all")
    public T _t() {
      return this._t;
    }

    @java.lang.SuppressWarnings("all")
    public Mdf _mdf() {
      return this._mdf;
    }

    @java.lang.SuppressWarnings("all")
    public X _x() {
      return this._x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.VarTx)) return false;
      final Full.VarTx other = (Full.VarTx) o;
      if (this.isVar() != other.isVar()) return false;
      final java.lang.Object this$_t = this._t();
      final java.lang.Object other$_t = other._t();
      if (this$_t == null ? other$_t != null : !this$_t.equals(other$_t)) return false;
      final java.lang.Object this$_mdf = this._mdf();
      final java.lang.Object other$_mdf = other._mdf();
      if (this$_mdf == null ? other$_mdf != null : !this$_mdf.equals(other$_mdf)) return false;
      final java.lang.Object this$_x = this._x();
      final java.lang.Object other$_x = other._x();
      if (this$_x == null ? other$_x != null : !this$_x.equals(other$_x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      result = result * PRIME + (this.isVar() ? 79 : 97);
      final java.lang.Object $_t = this._t();
      result = result * PRIME + ($_t == null ? 43 : $_t.hashCode());
      final java.lang.Object $_mdf = this._mdf();
      result = result * PRIME + ($_mdf == null ? 43 : $_mdf.hashCode());
      final java.lang.Object $_x = this._x();
      result = result * PRIME + ($_x == null ? 43 : $_x.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public VarTx withVar(final boolean isVar) {
      return this.isVar == isVar ? this : new VarTx(isVar, this._t, this._mdf, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public VarTx with_t(final T _t) {
      return this._t == _t ? this : new VarTx(this.isVar, _t, this._mdf, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public VarTx with_mdf(final Mdf _mdf) {
      return this._mdf == _mdf ? this : new VarTx(this.isVar, this._t, _mdf, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public VarTx with_x(final X _x) {
      return this._x == _x ? this : new VarTx(this.isVar, this._t, this._mdf, _x);
    }
  }//mdf can be present only if _t is absent


  public static final class K implements Visitable<K> {
    @Override
    public K accept(CloneVisitor cv) {
      return cv.visitK(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitK(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final ThrowKind _thr;
    private final T t;
    private final X _x;
    private final E e;

    @java.lang.SuppressWarnings("all")
    public K(final ThrowKind _thr, final T t, final X _x, final E e) {
      this._thr = _thr;
      this.t = t;
      this._x = _x;
      this.e = e;
    }

    @java.lang.SuppressWarnings("all")
    public ThrowKind _thr() {
      return this._thr;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.SuppressWarnings("all")
    public X _x() {
      return this._x;
    }

    @java.lang.SuppressWarnings("all")
    public E e() {
      return this.e;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.K)) return false;
      final Full.K other = (Full.K) o;
      final java.lang.Object this$_thr = this._thr();
      final java.lang.Object other$_thr = other._thr();
      if (this$_thr == null ? other$_thr != null : !this$_thr.equals(other$_thr)) return false;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      final java.lang.Object this$_x = this._x();
      final java.lang.Object other$_x = other._x();
      if (this$_x == null ? other$_x != null : !this$_x.equals(other$_x)) return false;
      final java.lang.Object this$e = this.e();
      final java.lang.Object other$e = other.e();
      if (this$e == null ? other$e != null : !this$e.equals(other$e)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_thr = this._thr();
      result = result * PRIME + ($_thr == null ? 43 : $_thr.hashCode());
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      final java.lang.Object $_x = this._x();
      result = result * PRIME + ($_x == null ? 43 : $_x.hashCode());
      final java.lang.Object $e = this.e();
      result = result * PRIME + ($e == null ? 43 : $e.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public K with_thr(final ThrowKind _thr) {
      return this._thr == _thr ? this : new K(_thr, this.t, this._x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public K withT(final T t) {
      return this.t == t ? this : new K(this._thr, t, this._x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public K with_x(final X _x) {
      return this._x == _x ? this : new K(this._thr, this.t, _x, this.e);
    }

    @java.lang.SuppressWarnings("all")
    public K withE(final E e) {
      return this.e == e ? this : new K(this._thr, this.t, this._x, e);
    }
  }


  public static final class Par implements Visitable<Par> {
    @Override
    public Par accept(CloneVisitor cv) {
      return cv.visitPar(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitPar(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final E _that;
    private final List<X> xs;
    private final List<E> es;
    public static final Par empty = new Full.Par(null, L(), L());
    public static final List<Par> emptys = L(empty);

    @java.lang.SuppressWarnings("all")
    public Par(final E _that, final List<X> xs, final List<E> es) {
      this._that = _that;
      this.xs = xs;
      this.es = es;
    }

    @java.lang.SuppressWarnings("all")
    public E _that() {
      return this._that;
    }

    @java.lang.SuppressWarnings("all")
    public List<X> xs() {
      return this.xs;
    }

    @java.lang.SuppressWarnings("all")
    public List<E> es() {
      return this.es;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Par)) return false;
      final Full.Par other = (Full.Par) o;
      final java.lang.Object this$_that = this._that();
      final java.lang.Object other$_that = other._that();
      if (this$_that == null ? other$_that != null : !this$_that.equals(other$_that)) return false;
      final java.lang.Object this$xs = this.xs();
      final java.lang.Object other$xs = other.xs();
      if (this$xs == null ? other$xs != null : !this$xs.equals(other$xs)) return false;
      final java.lang.Object this$es = this.es();
      final java.lang.Object other$es = other.es();
      if (this$es == null ? other$es != null : !this$es.equals(other$es)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_that = this._that();
      result = result * PRIME + ($_that == null ? 43 : $_that.hashCode());
      final java.lang.Object $xs = this.xs();
      result = result * PRIME + ($xs == null ? 43 : $xs.hashCode());
      final java.lang.Object $es = this.es();
      result = result * PRIME + ($es == null ? 43 : $es.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Par with_that(final E _that) {
      return this._that == _that ? this : new Par(_that, this.xs, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public Par withXs(final List<X> xs) {
      return this.xs == xs ? this : new Par(this._that, xs, this.es);
    }

    @java.lang.SuppressWarnings("all")
    public Par withEs(final List<E> es) {
      return this.es == es ? this : new Par(this._that, this.xs, es);
    }
  }


  public static final class T implements Visitable<T> {
    @Override
    public T accept(CloneVisitor cv) {
      return cv.visitT(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitT(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Mdf _mdf;
    private final List<Doc> docs;
    private final List<C> cs;
    private final P _p;

    @java.lang.SuppressWarnings("all")
    public T(final Mdf _mdf, final List<Doc> docs, final List<C> cs, final P _p) {
      this._mdf = _mdf;
      this.docs = docs;
      this.cs = cs;
      this._p = _p;
    }

    @java.lang.SuppressWarnings("all")
    public Mdf _mdf() {
      return this._mdf;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.SuppressWarnings("all")
    public List<C> cs() {
      return this.cs;
    }

    @java.lang.SuppressWarnings("all")
    public P _p() {
      return this._p;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.T)) return false;
      final Full.T other = (Full.T) o;
      final java.lang.Object this$_mdf = this._mdf();
      final java.lang.Object other$_mdf = other._mdf();
      if (this$_mdf == null ? other$_mdf != null : !this$_mdf.equals(other$_mdf)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      final java.lang.Object this$cs = this.cs();
      final java.lang.Object other$cs = other.cs();
      if (this$cs == null ? other$cs != null : !this$cs.equals(other$cs)) return false;
      final java.lang.Object this$_p = this._p();
      final java.lang.Object other$_p = other._p();
      if (this$_p == null ? other$_p != null : !this$_p.equals(other$_p)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_mdf = this._mdf();
      result = result * PRIME + ($_mdf == null ? 43 : $_mdf.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      final java.lang.Object $cs = this.cs();
      result = result * PRIME + ($cs == null ? 43 : $cs.hashCode());
      final java.lang.Object $_p = this._p();
      result = result * PRIME + ($_p == null ? 43 : $_p.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public T with_mdf(final Mdf _mdf) {
      return this._mdf == _mdf ? this : new T(_mdf, this.docs, this.cs, this._p);
    }

    @java.lang.SuppressWarnings("all")
    public T withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new T(this._mdf, docs, this.cs, this._p);
    }

    @java.lang.SuppressWarnings("all")
    public T withCs(final List<C> cs) {
      return this.cs == cs ? this : new T(this._mdf, this.docs, cs, this._p);
    }

    @java.lang.SuppressWarnings("all")
    public T with_p(final P _p) {
      return this._p == _p ? this : new T(this._mdf, this.docs, this.cs, _p);
    }
  }


  public static final class Doc implements Visitable<Doc> {
    @Override
    public Doc accept(CloneVisitor cv) {
      return cv.visitDoc(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitDoc(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final PathSel _pathSel;
    private final List<String> texts;
    private final List<Doc> docs;

    @java.lang.SuppressWarnings("all")
    public Doc(final PathSel _pathSel, final List<String> texts, final List<Doc> docs) {
      this._pathSel = _pathSel;
      this.texts = texts;
      this.docs = docs;
    }

    @java.lang.SuppressWarnings("all")
    public PathSel _pathSel() {
      return this._pathSel;
    }

    @java.lang.SuppressWarnings("all")
    public List<String> texts() {
      return this.texts;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.Doc)) return false;
      final Full.Doc other = (Full.Doc) o;
      final java.lang.Object this$_pathSel = this._pathSel();
      final java.lang.Object other$_pathSel = other._pathSel();
      if (this$_pathSel == null ? other$_pathSel != null : !this$_pathSel.equals(other$_pathSel)) return false;
      final java.lang.Object this$texts = this.texts();
      final java.lang.Object other$texts = other.texts();
      if (this$texts == null ? other$texts != null : !this$texts.equals(other$texts)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_pathSel = this._pathSel();
      result = result * PRIME + ($_pathSel == null ? 43 : $_pathSel.hashCode());
      final java.lang.Object $texts = this.texts();
      result = result * PRIME + ($texts == null ? 43 : $texts.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public Doc with_pathSel(final PathSel _pathSel) {
      return this._pathSel == _pathSel ? this : new Doc(_pathSel, this.texts, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public Doc withTexts(final List<String> texts) {
      return this.texts == texts ? this : new Doc(this._pathSel, texts, this.docs);
    }

    @java.lang.SuppressWarnings("all")
    public Doc withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new Doc(this._pathSel, this.texts, docs);
    }
  }


  public static final class PathSel implements Visitable<PathSel> {
    @Override
    public PathSel accept(CloneVisitor cv) {
      return cv.visitPathSel(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitPathSel(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final List<C> cs;
    private final P _p;
    private final S _s;
    private final X _x;

    @java.lang.SuppressWarnings("all")
    public PathSel(final List<C> cs, final P _p, final S _s, final X _x) {
      this.cs = cs;
      this._p = _p;
      this._s = _s;
      this._x = _x;
    }

    @java.lang.SuppressWarnings("all")
    public List<C> cs() {
      return this.cs;
    }

    @java.lang.SuppressWarnings("all")
    public P _p() {
      return this._p;
    }

    @java.lang.SuppressWarnings("all")
    public S _s() {
      return this._s;
    }

    @java.lang.SuppressWarnings("all")
    public X _x() {
      return this._x;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.PathSel)) return false;
      final Full.PathSel other = (Full.PathSel) o;
      final java.lang.Object this$cs = this.cs();
      final java.lang.Object other$cs = other.cs();
      if (this$cs == null ? other$cs != null : !this$cs.equals(other$cs)) return false;
      final java.lang.Object this$_p = this._p();
      final java.lang.Object other$_p = other._p();
      if (this$_p == null ? other$_p != null : !this$_p.equals(other$_p)) return false;
      final java.lang.Object this$_s = this._s();
      final java.lang.Object other$_s = other._s();
      if (this$_s == null ? other$_s != null : !this$_s.equals(other$_s)) return false;
      final java.lang.Object this$_x = this._x();
      final java.lang.Object other$_x = other._x();
      if (this$_x == null ? other$_x != null : !this$_x.equals(other$_x)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $cs = this.cs();
      result = result * PRIME + ($cs == null ? 43 : $cs.hashCode());
      final java.lang.Object $_p = this._p();
      result = result * PRIME + ($_p == null ? 43 : $_p.hashCode());
      final java.lang.Object $_s = this._s();
      result = result * PRIME + ($_s == null ? 43 : $_s.hashCode());
      final java.lang.Object $_x = this._x();
      result = result * PRIME + ($_x == null ? 43 : $_x.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public PathSel withCs(final List<C> cs) {
      return this.cs == cs ? this : new PathSel(cs, this._p, this._s, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public PathSel with_p(final P _p) {
      return this._p == _p ? this : new PathSel(this.cs, _p, this._s, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public PathSel with_s(final S _s) {
      return this._s == _s ? this : new PathSel(this.cs, this._p, _s, this._x);
    }

    @java.lang.SuppressWarnings("all")
    public PathSel with_x(final X _x) {
      return this._x == _x ? this : new PathSel(this.cs, this._p, this._s, _x);
    }
  }


  public static final class MH implements LDom.HasKey, Visitable<MH> {
    @Override
    public MH accept(CloneVisitor cv) {
      return cv.visitMH(this);
    }

    @Override
    public void accept(CollectorVisitor cv) {
      cv.visitMH(this);
    }

    @Override
    public String toString() {
      return Constants.toS.apply(this);
    }

    @Override
    public boolean wf() {
      return Constants.wf.test(this);
    }

    private final Mdf _mdf;
    private final List<Doc> docs;
    private final T t;
    private final Op _op;
    private final int n;
    private final S s;
    private final List<T> pars;
    private final List<T> exceptions;

    @Override
    public S key() {
      return is.L42.common.NameMangling.keyOf(_op, n, s);
    }

    public List<T> parsWithThis() {
      return pushL(P.fullThis0.with_mdf(_mdf), pars);
    }

    @java.lang.SuppressWarnings("all")
    public MH(final Mdf _mdf, final List<Doc> docs, final T t, final Op _op, final int n, final S s, final List<T> pars, final List<T> exceptions) {
      this._mdf = _mdf;
      this.docs = docs;
      this.t = t;
      this._op = _op;
      this.n = n;
      this.s = s;
      this.pars = pars;
      this.exceptions = exceptions;
    }

    @java.lang.SuppressWarnings("all")
    public Mdf _mdf() {
      return this._mdf;
    }

    @java.lang.SuppressWarnings("all")
    public List<Doc> docs() {
      return this.docs;
    }

    @java.lang.SuppressWarnings("all")
    public T t() {
      return this.t;
    }

    @java.lang.SuppressWarnings("all")
    public Op _op() {
      return this._op;
    }

    @java.lang.SuppressWarnings("all")
    public int n() {
      return this.n;
    }

    @java.lang.SuppressWarnings("all")
    public S s() {
      return this.s;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> pars() {
      return this.pars;
    }

    @java.lang.SuppressWarnings("all")
    public List<T> exceptions() {
      return this.exceptions;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Full.MH)) return false;
      final Full.MH other = (Full.MH) o;
      final java.lang.Object this$_mdf = this._mdf();
      final java.lang.Object other$_mdf = other._mdf();
      if (this$_mdf == null ? other$_mdf != null : !this$_mdf.equals(other$_mdf)) return false;
      final java.lang.Object this$docs = this.docs();
      final java.lang.Object other$docs = other.docs();
      if (this$docs == null ? other$docs != null : !this$docs.equals(other$docs)) return false;
      final java.lang.Object this$t = this.t();
      final java.lang.Object other$t = other.t();
      if (this$t == null ? other$t != null : !this$t.equals(other$t)) return false;
      final java.lang.Object this$_op = this._op();
      final java.lang.Object other$_op = other._op();
      if (this$_op == null ? other$_op != null : !this$_op.equals(other$_op)) return false;
      if (this.n() != other.n()) return false;
      final java.lang.Object this$s = this.s();
      final java.lang.Object other$s = other.s();
      if (this$s == null ? other$s != null : !this$s.equals(other$s)) return false;
      final java.lang.Object this$pars = this.pars();
      final java.lang.Object other$pars = other.pars();
      if (this$pars == null ? other$pars != null : !this$pars.equals(other$pars)) return false;
      final java.lang.Object this$exceptions = this.exceptions();
      final java.lang.Object other$exceptions = other.exceptions();
      if (this$exceptions == null ? other$exceptions != null : !this$exceptions.equals(other$exceptions)) return false;
      return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      final java.lang.Object $_mdf = this._mdf();
      result = result * PRIME + ($_mdf == null ? 43 : $_mdf.hashCode());
      final java.lang.Object $docs = this.docs();
      result = result * PRIME + ($docs == null ? 43 : $docs.hashCode());
      final java.lang.Object $t = this.t();
      result = result * PRIME + ($t == null ? 43 : $t.hashCode());
      final java.lang.Object $_op = this._op();
      result = result * PRIME + ($_op == null ? 43 : $_op.hashCode());
      result = result * PRIME + this.n();
      final java.lang.Object $s = this.s();
      result = result * PRIME + ($s == null ? 43 : $s.hashCode());
      final java.lang.Object $pars = this.pars();
      result = result * PRIME + ($pars == null ? 43 : $pars.hashCode());
      final java.lang.Object $exceptions = this.exceptions();
      result = result * PRIME + ($exceptions == null ? 43 : $exceptions.hashCode());
      return result;
    }

    @java.lang.SuppressWarnings("all")
    public MH with_mdf(final Mdf _mdf) {
      return this._mdf == _mdf ? this : new MH(_mdf, this.docs, this.t, this._op, this.n, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withDocs(final List<Doc> docs) {
      return this.docs == docs ? this : new MH(this._mdf, docs, this.t, this._op, this.n, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withT(final T t) {
      return this.t == t ? this : new MH(this._mdf, this.docs, t, this._op, this.n, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH with_op(final Op _op) {
      return this._op == _op ? this : new MH(this._mdf, this.docs, this.t, _op, this.n, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withN(final int n) {
      return this.n == n ? this : new MH(this._mdf, this.docs, this.t, this._op, n, this.s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withS(final S s) {
      return this.s == s ? this : new MH(this._mdf, this.docs, this.t, this._op, this.n, s, this.pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withPars(final List<T> pars) {
      return this.pars == pars ? this : new MH(this._mdf, this.docs, this.t, this._op, this.n, this.s, pars, this.exceptions);
    }

    @java.lang.SuppressWarnings("all")
    public MH withExceptions(final List<T> exceptions) {
      return this.exceptions == exceptions ? this : new MH(this._mdf, this.docs, this.t, this._op, this.n, this.s, this.pars, exceptions);
    }
  }
}
