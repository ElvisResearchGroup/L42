TraitExecuteQuery=Trait:{
  mut method mut DB #db()
  mut method Void executeQuery(S sql)[DB.Fail]
    = this.#db().executeQuery(sql=sql)
  }
TraitExecute=Trait:{
  mut method mut DB #db()
  mut method Void executeQuery(S sql)[DB.Fail]
    = this.#db().execute(sql=sql)
  }
E0=Trait:{
  List={}
  mut method List collectResults()[DB.Fail]
  mut method Void executeQuery(S sql)[DB.Fail]
  class method S sql()
  mut method List ()[DB.Fail]=(
    var S sql=This.sql()
    this.executeQuery(sql=sql)
    this.collectResults()
    )
  }
E1=Trait:{
  List={}
  T0={[HasToS]}
  mut method List collectResults()[DB.Fail]
  mut method Void executeQuery(S sql)[DB.Fail]
  class method S sql()
  class method S p0()
  mut method List (T0 p0)[DB.Fail]=(
    var S sql=This.sql()
    sql:=FormatPar(sql,key=This.p0(),val=p0)
    this.executeQuery(sql=sql)
    this.collectResults()
    )
  }
E2=Trait:{
  List={}
  T0={[HasToS]}
  T1={[HasToS]}
  mut method List collectResults()[DB.Fail]
  mut method Void executeQuery(S sql)[DB.Fail]
  class method S sql()
  class method S p0()
  class method S p1()
  mut method List (T0 p0,T1 p1)[DB.Fail]=(
    var S sql=This.sql()
    sql:=FormatPar(sql,key=This.p0(),val=p0)
    sql:=FormatPar(sql,key=This.p1(),val=p1)
    this.executeQuery(sql=sql)
    this.collectResults()
    )
  }
E3=Trait:{
  List={}
  T0={[HasToS]}
  T1={[HasToS]}
  T2={[HasToS]}
  mut method List collectResults()[DB.Fail]
  mut method Void executeQuery(S sql)[DB.Fail]
  class method S sql()
  class method S p0()
  class method S p1()
  class method S p2()
  mut method List (T0 p0,T1 p1,T2 p2)[DB.Fail]=(
    var S sql=This.sql()
    sql:=FormatPar(sql,key=This.p0(),val=p0)
    sql:=FormatPar(sql,key=This.p1(),val=p1)
    sql:=FormatPar(sql,key=This.p2(),val=p2)
    this.executeQuery(sql=sql)
    this.collectResults()
    )
  }
E4=Trait:{
  List={}
  T0={[HasToS]}
  T1={[HasToS]}
  T2={[HasToS]}
  T3={[HasToS]}
  mut method List collectResults()[DB.Fail]
  mut method Void executeQuery(S sql)[DB.Fail]
  class method S sql()
  class method S p0()
  class method S p1()
  class method S p2()
  class method S p3()
  mut method List (T0 p0,T1 p1,T2 p2,T3 p3)[DB.Fail]=(
    var S sql=This.sql()
    sql:=FormatPar(sql,key=This.p0(),val=p0)
    sql:=FormatPar(sql,key=This.p1(),val=p1)
    sql:=FormatPar(sql,key=This.p2(),val=p2)
    sql:=FormatPar(sql,key=This.p3(),val=p3)
    this.executeQuery(sql=sql)
    this.collectResults()
    )
  }
E5=Trait:{
  List={}
  T0={[HasToS]}
  T1={[HasToS]}
  T2={[HasToS]}
  T3={[HasToS]}
  T4={[HasToS]}
  mut method List collectResults()[DB.Fail]
  mut method Void executeQuery(S sql)[DB.Fail]
  class method S sql()
  class method S p0()
  class method S p1()
  class method S p2()
  class method S p3()
  class method S p4()
  mut method List (T0 p0,T1 p1,T2 p2,T3 p3,T4 p4)[DB.Fail]=(
    var S sql=This.sql()
    sql:=FormatPar(sql,key=This.p0(),val=p0)
    sql:=FormatPar(sql,key=This.p1(),val=p1)
    sql:=FormatPar(sql,key=This.p2(),val=p2)
    sql:=FormatPar(sql,key=This.p3(),val=p3)
    sql:=FormatPar(sql,key=This.p4(),val=p4)
    this.executeQuery(sql=sql)
    this.collectResults()
    )
  }
class method Traits traits()=Traits[
  E0();E1();E2();E3();E4();E5();
  ]
class method Name.List names()=Name.List[
  '#apply();'#apply(p0);'#apply(p0,p1);'#apply(p0,p1,p2);
  '#apply(p0,p1,p2,p3);'#apply(p0,p1,p2,p3,p4);
  ]