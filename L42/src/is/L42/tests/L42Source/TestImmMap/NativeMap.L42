Key={}
Val={}
OVal=Collection.optional(Val)
Hi={
  class method mut This of()
  read method This3.Size size()=native{trusted:size} error void
  read method This1.Val immVal(This3.Size that)=native{trusted:immVal} error void
  read method This1.Key immKey(This3.Size that)=native{trusted:immKey} error void
  read method This1.OVal val(This1.Key key)=native{trusted:mapVal} error void
  mut method Void put(This1.Key key, This1.Val val)=native{trusted:put} error void
  mut method Void remove(This1.Key key)=native{trusted:removeKey} error void
  #norm{
    nativeKind=HIMap
    nativePar=This1.Key,This1.Val,This1.OVal,This3.Collection.OutOfBounds
    typeDep=This,This3.Size,This3.Bool,This1.Key,This1.Val,This1.OVal,This3.Collection.OutOfBounds
    coherentDep=This,This3.Size,This3.Bool,This1.Key,This1.Val,This1.OVal,This3.Collection.OutOfBounds
    watched=This3.Size,This3.Bool,This1.OVal,This3.Collection.OutOfBounds
    }
  }
Hm={
  class method mut This of()
  read method This3.Size size()=native{trusted:size} error void
  read method read This1.Val val(This3.Size that)=native{trusted:readVal} error void
  mut method mut This1.Val #val(This3.Size that)=native{trusted:#val} error void
  read method This1.Key immKey(This3.Size that)=native{trusted:immKey} error void
  read method read This1.OVal val(This1.Key key)=native{trusted:mapVal} error void
  mut method mut This1.OVal #val(This1.Key key)=native{trusted:#mapVal} error void
  mut method Void put(This1.Key key,mut This1.Val val)=native{trusted:put} error void
  mut method Void remove(This1.Key key)=native{trusted:removeKey} error void
  #norm{
    nativeKind=HMMap
    nativePar=This1.Key,This1.Val,This1.OVal,This3.Collection.OutOfBounds
    typeDep=This,This3.Size,This3.Bool,This1.Key,This1.Val,This1.OVal,This3.Collection.OutOfBounds
    coherentDep=This,This3.Size,This3.Bool,This1.Key,This1.Val,This1.OVal,This3.Collection.OutOfBounds
    watched=This3.Size,This3.Bool,This1.OVal,This3.Collection.OutOfBounds
    }
  }