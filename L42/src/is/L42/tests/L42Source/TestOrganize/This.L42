reuse[AdamTowel]

Full={class method S (Trait that)=
  Introspection.Nested.from(library=that.code()).toFullS()
  }
  
TestOrganize0=(
  lib={
    Public2={}
    @Public2 A={method B b()}
    B={}
    }
  n1=Introspection.Nested.from(library=lib).nested(name='Public2)
  n2=Introspection.Nested.from(library=lib).nested(name='A)
  organize=Organize(public='Public2)
  {}:Test"eqOk"(n1==n1)
  {}:Test"annotatedAs"(n2.outerDoc().annotatedAs(nested=n1))
  res=organize:lib
  {}:Test"Public"(actual=Full(res)
  expected=S"""
    |{@<private>A={method<private>b()#typed{typeDep=<private>watched=This1 close}}#norm{typeDep=<private>close}}
    """)
  )
TestOrganize1=(
  organize=Organize()
  res=organize:{
    @Public A={method B b()}
    B={}
    }
  {}:Test"Public"(actual=Full(res)
  expected=S"""
    |{@This1.Public A={method<private>b()#typed{typeDep=<private>watched=This1 close}}#norm{close}}
    """)
  )  
TestOrganize=(
  res=Organize:{
    A={method Void m1()}
    A$={method Void m2()}
    $={method Void m3()}
    }
  {}:Test"$s"(actual=Full(res)
  expected=S"""
    |{method Void m3()A={
    |  method Void m1()
    |  method Void m2()
    |  #typed{close}
    |  }
    |#norm{close}}
    """)
  res2=Organize:{
    @Public A={method Void m1()=void}
    A$={@Public method Void m2()=void}
    $={method Void m3()=void}
    B={method Void m4()=void}
    @Public A$C={method Void m5()=void}
    }
  {}:Test"Public"(actual=Full(res2)
  expected=S"""
    |{@This1.Public A={
    |  @This2.Public method Void m2()=(..)
    |  @This2.Public C={method Void m5()=(..)#typed{close}}
    |  #typed{close}
    |  }
    |#norm{close}}
    """)
  )  