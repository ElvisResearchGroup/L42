//Match.any[] and Match.all[] ??

//Match.Some[for x in l \match(x>y)]
//Match.All[for x in l \match(x>y)]
Some={
  var Bool pass
  class method mut This(Bool pass)
  class method mut This #squareBuilder()=This(pass=Bool.false())
  class method Bool (mut This squareBuilder)=squareBuilder.pass()
  class method Bool #shortCircutSquare()=Bool.true()
  mut method Void #yield(Void that)=void
  mut method mut This match()=this
  mut method Void (Bool that)[Void]=if that (this.pass(that) exception void)
  }