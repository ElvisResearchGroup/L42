[This1.HasToS]
class method This zero()
class method This from(This1.S string)=string.toDouble()
class method This from(This1.Num num)=native{trusted:fromNum} error void
method This1.Num toNum()=This1.S<:class This1.S.doubleToNum(that=this)
method This #plus0(This that)=native{trusted:OP+} error void
method This #times0(This that)=native{trusted:OP*} error void
method This #divide0(This that)=native{trusted:OP/} error void
method This #minus0(This that)=native{trusted:OP-} error void

method This1.Bool #lt0(This that)=native{trusted:OP<} error void
method This1.Bool #gt0(This that)=that.#lt0(that=this)
method This1.Bool #ltequal0(This that)=native{trusted:OP<=} error void
method This1.Bool #gtequal0(This that)=that.#ltequal0(that=this)

read method This1.Bool readEquality(read This that)=native{trusted:OP==} error void
method This1.Bool #equalequal0(This that)=this.readEquality(that=that)
method This1.Bool #bangequal0(This that)=(This1.Bool tmp=this.#equalequal0(that=that) tmp.not())

method This pow(This exp)=native{trusted:mathPow} error void
method This sin()=native{trusted:mathSin} error void
method This cos()=native{trusted:mathCos} error void
method This tan()=native{trusted:mathTan} error void
method This atan2(This that)=native{trusted:mathATan2} error void

read method This1.S toS()=native{trusted:toS} error void
@This1.Cache.Call class method This0 #from(This1.S$StringBuilder stringLiteral)=(
  This1.S s=stringLiteral.toS()
  s.toDouble()
  )

method This1.Long floorLong()=native{trusted:mathFloorLong} error void
method This1.I floor()=native{trusted:mathFloorInt} error void
method This1.Long ceilLong()=native{trusted:mathCeilLong} error void
method This1.I ceil()=native{trusted:mathCeilInt} error void
method This1.I round()=native{trusted:mathRoundInt} error void
method This1.I roundLong()=native{trusted:mathRoundLong} error void
method This1.Double toDouble()=this

#norm{nativeKind=Double
  typeDep=This,This1.I,This1.Long,This1.Num,This1.S,This1.Bool,This1.S$StringBuilder,This1.HasToS,This1.AbstractTowel,This1.Cache.Call
  coherentDep=This,This1.I,This1.Long,This1.Num,This1.Bool,This1.S
  usedMethods=This1.S.toDouble(),This1.S.doubleToNum(that),This1.Bool.not(), This1.S$StringBuilder.toS()
  refined=toS()
  }
@This1.AbstractTowel{double}