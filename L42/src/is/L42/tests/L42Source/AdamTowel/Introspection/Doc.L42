[HasToS]
NativeDoc i
class method This(NativeDoc that)=\(i=that)

@Public method Nested root()=\(this.i().root())
@Public method Name nameFromRoot()=\.of(this.i().nameFromRoot())

@Public method Doc$List docs()=\()((
  size=this.i().docNum()
  var i=0Size
  while i<size (
    \add(Doc$(this.i().docIn(i)))
    i+=1Size//sadly, range will be added later
  )))
@Public method S$List texts()=\()((
  size=this.i().docNum()+1Size
  var i=0Size
  while i<size (
    \add(this.i().textIn(i))
    i+=1Size//sadly, range will be added later
  )))
@Public method Bool hasAnnotation()=this.i().hasAnnotation()
@Public method Nested nested()=\(this.i().nested())
@Public method Name name()=\.of(this.i().name())

method toS()=this.i().toS()

@Public method Bool annotatedAs(class Any that)=this.annotatedAs(nested=\.from(classAny=that))
@Public method Bool annotatedAs(Nested nested)={
  @DelayTyping Void _=void//delays typing so Doc$ do not get typed before is merged
  if this.hasAnnotation() && this.nested()==nested return Bool.true()
  return Match.Some()(for d in this.docs() \add(d.annotatedAs(nested=nested)))
  }
@Public method Doc$Opt annotation(class Any that)=this.annotation(nested=\.from(classAny=that))
@Public method Doc$Opt annotation(Nested nested)={
  if this.hasAnnotation() && this.nested()==nested 
    return Doc$Opt(this)<:Doc$Opt//TODO: should we tweak the TS since this was known from the block?
  for d in this.docs() (
    tmp=d.annotation(nested=nested)<:Doc$Opt
    if tmp return tmp
    )
  return Doc$Opt()<:Doc$Opt
  }