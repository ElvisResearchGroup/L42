NativeNested={
  class method This instance()
  class method This fromClass(class Any that)=native{trusted:fromClass}error void
  class method This fromLibrary(Library that)=native{trusted:fromLibrary}error void
  method This nestedByName(This2.NativeName name)=native{trusted:nestedByName}error void
  method This2.S outerName()=native{trusted:outerName}error void
  method This outer()=native{trusted:outer}error void
  method This1.NativeDoc outerDoc()=native{trusted:outerDoc}error void
  method This1.NativeDoc innerDoc()=native{trusted:innerDoc}error void
  method This2.Size nestedNum()=native{trusted:nestedNum}error void
  method This nestedIn(This2.Size that)=native{trusted:nestedIn}error void
  method This2.Size methodNum()=native{trusted:methodNum}error void
  method This1.NativeMethod methodIn(This2.Size that)=native{trusted:methodIn}error void
  method This2.Size implementedNum()=native{trusted:implementedNum}error void
  method This1.NativeType implementedIn(This2.Size that)=native{trusted:implementedIn}error void
  method This2.Bool hasOuter()=native{trusted:hasOuter}error void
  method This2.Bool hasHiddenImplements()=native{trusted:hasHiddenImplements}error void
  method This2.Bool isClose()=native{trusted:isClose}error void
  method This2.Bool isInterface()=native{trusted:isInterface}error void
  method This2.Bool isBinded()=native{trusted:isBinded}error void
  method This2.S toFullString()=native{trusted:toFullString}error void
  method This root()=native{trusted:root}error void  
  method This2.NativeName nameFromRoot()=native{trusted:nameFromRoot}error void
  method This2.S position()=native{trusted:position}error void
  method class Any classAny()=native{trusted:classAny}error void
  read method This2.S toS()=native{trusted:toS}error void
  
  #norm{nativeKind=Nested,nativePar=This2.Trait$InvalidName,This2.OutOfBounds,This2.NoElementInOpt
    typeDep=
      This,This2.Bool,This2.S,This2.Size,This2.NativeName,
      This1.NativeType,This1.NativeDoc,This1.NativeMethod
      This2.Trait$InvalidName,This2.OutOfBounds,This2.NoElementInOpt 
    coherentDep=
      This,This2.Bool,This2.S,This2.Size,This2.NativeName,
      This1.NativeType,This1.NativeDoc,This1.NativeMethod
      This2.Trait$InvalidName,This2.OutOfBounds,This2.NoElementInOpt 
    }}    
NativeType={
  class method This instance()
  class method This fromClass(This2.S mdf,This1.NativeDoc doc,class Any classAny)=native{trusted:fromClass}error void
  class method This fromLibrary(This2.S mdf,This1.NativeDoc doc,This2.NativeName name)=native{trusted:fromLibrary}error void

  method This2.S mdf()=native{trusted:mdf}error void
  method This1.NativeDoc doc()=native{trusted:doc}error void
  method This1.NativeNested nested()=native{trusted:nested}error void
  read method This2.S toS()=native{trusted:toS}error void
  
  #norm{nativeKind=Type
    typeDep=This,This2.S,This1.NativeDoc,This1.NativeNested,This2.NativeName
    coherentDep=This,This2.S,This1.NativeDoc,This1.NativeNested,This2.NativeName
    }}

NativeDoc={
  class method This instance()
  method This1.NativeNested root()=native{trusted:root}error void
  method This2.NativeName nameFromRoot()=native{trusted:nameFromRoot}error void
  method This2.Size docNum()=native{trusted:docNum}error void
  method This docIn(This2.Size that)=native{trusted:docIn}error void
  method This2.S textIn(This2.Size that)=native{trusted:textIn}error void
  method This2.Bool hasAnnotation()=native{trusted:hasAnnotation}error void
  method This1.NativeNested nested()=native{trusted:nested}error void
  method This2.NativeName name()=native{trusted:name}error void
      
  read method This2.S toS()=native{trusted:toS}error void
  
  #norm{nativeKind=Doc,nativePar=This2.OutOfBounds,This2.NoElementInOpt
    typeDep=This,This1.NativeNested,This2.S,This2.Bool,This2.Size,This2.NativeName,This2.OutOfBounds,This2.NoElementInOpt
    coherentDep=This,This1.NativeNested,This2.S,This2.Bool,This2.Size,This2.NativeName,This2.OutOfBounds,This2.NoElementInOpt
    }}
NativeMethod={
  class method This instance()
  method This1.NativeDoc doc()=native{trusted:doc}error void
  method This1.NativeType returnType()=native{trusted:returnType}error void
  method This2.Size parNum()=native{trusted:parNum}error void
  method This1.NativeType parIn(This2.Size that)=native{trusted:parIn}error void
  method This2.Size excNum()=native{trusted:excNum}error void
  method This1.NativeType excIn(This2.Size that)=native{trusted:excIn}error void
  method This2.Bool isRefined()=native{trusted:isRefined}error void
  method This2.Bool isAbstract()=native{trusted:isAbstract}error void
  method This1.NativeNested nested()=native{trusted:nested}error void
  method This2.NativeName nameFromRoot()=native{trusted:nameFromRoot}error void
  method This2.S position()=native{trusted:position}error void
  read method This2.S toS()=native{trusted:toS}error void
    
  #norm{nativeKind=Method,nativePar=This2.NoElementInOpt
    typeDep=
       This,This2.S,This2.Size,This2.Bool,
       This1.NativeDoc,This1.NativeNested,This1.NativeType,
       This2.NativeName,This2.NoElementInOpt
    coherentDep=
       This,This2.S,This2.Size,This2.Bool,
       This1.NativeDoc,This1.NativeNested,This1.NativeType,
       This2.NativeName,This2.NoElementInOpt
    }}
Nested$={class method This(NativeNested that) read method Bool readEquality(read This that)}
Nesteds=Collection.list(Nested$)
Type$={class method This(NativeType that) read method Bool readEquality(read This that)}
Types=Collection.list(Type$)
Doc$={class method This(NativeDoc that) read method Bool readEquality(read This that)}
Docs=Collection.list(Doc$)
Method$={class method This(NativeMethod that) read method Bool readEquality(read This that)}
Methods=Collection.list(Method$)
Nested=Data:{...}
Type=Data:{...}
Doc=Data:{...}
Method=Data:{...}