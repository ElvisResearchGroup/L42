class method Void #apply(read This1.HasToS that)=(
  This d=This<:class This.of() 
  d.strDebug(that=that.toS())
  )
class method This0 of()  
method Void strDebug(This1.S that)=
  native{trusted:strDebug} error void
method Void deployLibrary(This1.S that,Library lib)=
  native{trusted:deployLibrary} error void
method Void testActualExpected(Library pos,This1.S name,This1.S actual,This1.S expected,This1.S message,This1.S hole)=
  native{trusted:testActualExpected} error void
method Void testCondition(Library pos,This1.S name,This1.Bool cond,This1.S message)=
  native{trusted:testCondition} error void

method Void addToLog(This1.S logName,This1.S text)=native{trusted:addToLog} error void
method Void clearLog(This1.S logName)=native{trusted:clearLog} error void
method This1.S #$readLog(This1.S logName)=native{trusted:#$readLog} error void
  
#norm{nativeKind=TrustedIO
  typeDep=This,This1.HasToS,This1.S,This1.Bool
  coherentDep=This,This1.S 
  usedMethods=This1.HasToS.toS()}