class method Void #apply(This1.S that)=(
  This d=This<:class This.of() 
  d.strDebug(that=that)
  )
class method mut This0 of()        
method Void strDebug(This1.S that)=
  native{trusted:strDebug} error void
method Void deployLibrary(This1.S that,Library lib)=
  native{trusted:deployLibrary} error void
method Void testCondition(Library pos,This1.S name,This1.Bool cond,This1.S message)=
  native{trusted:testCondition} error void
//class method Void testExpected(Library pos,This1.S name,This1.S actual,This.S expected,This1.S message)
  
#norm{declaresClassMethods, typeDep=This, This1.S,This1.Bool coherentDep=This nativeKind=TrustedIO}