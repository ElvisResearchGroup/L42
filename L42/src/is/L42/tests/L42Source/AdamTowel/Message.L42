interface [HasToS]
@Public var S text
@Public method This #whoopsed(Library atPos)
@Public ClassOperators={class method Trait()=MessageTrait.ClassOperators()}
Native={
  class method Trait()=LazyMessageTrait.$.ClassOperators()
  ClassOperators={class method Trait()=This1()}
  }
@Public OptMessage={
  class method mut This #apply()
  class method mut This #apply(fwd mut This2.Message that)=native{trusted:optK} error void
  read method read This1 get()=native{trusted:get}error void
  mut method mut This1 #get()=native{trusted:#get}error void
  read method This2.Bool #if()=native{trusted:isPresent}error void
  #norm{nativeKind=Opt nativePar=This1,This2.S$ParseError
    typeDep=This2.Bool,This1,This,This2.S$ParseError
    coherentDep=This2.Bool,This1,This,This2.S$ParseError 
    }
  }
@AbstractTowel{message}