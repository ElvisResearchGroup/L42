//###Maps
MapNative=Trait:{...}
MapOps=Trait:{...}
TraitMap=MapNative+MapOps
@Public class method Trait mapTrait()=TraitMap()
@Public class method Library map(class Any key,class Any val)={
  res=this.mapTrait()['Key=>key;'Val=>val]
  return Organize:Class$Relax:res
  catch Any e error e
  }
//###Sets
SetNative=Trait:{...}
SetOps=Trait:{...}
TraitSet=SetNative+SetOps
@Public class method Trait setTrait()=TraitSet()
@Public class method Library set(class Any that)={
  res=this.setTrait()['Key=>that]
  return Organize:Class$Relax:res
  catch Any e error e
  }

// read linked list
LinkedListOps = Trait({...})['L=>'This]
@Public class method Trait linkedListTrait() = LinkedListOps()
@Public class method Library linkedList(class Any that) = {
  res=this.linkedListTrait()['Elem=>that]
  return Organize : Class$Relax : res
  catch Any e error e
  }
