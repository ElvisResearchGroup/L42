[Message]
var S text
var Message.OptMessage cause
method toS()=(
  var res=Introspection$Nested.from(classAny=This).msgTitle(text=this.text())
  if this.cause() res:=res++S.nl()++this.cause().get().toS()
  res 
  )
class method mut This (S text, Message.OptMessage cause)
class method mut This (S that)=This(text=that,cause=Message.OptMessage()) 
class method This #from(S$StringBuilder stringLiteral)=This(stringLiteral.toS())
method This #whoopsed(Library atPos)=This(
  text=S"""%
    |%this.text()
    |Whoopsed in position:
    |  %Introspection$Nested.from(library=atPos).position()
    """
  cause=this.cause()
  )
method This with(Message cause)=This(
  text=this.text()
  cause=Message.OptMessage(cause)
  )