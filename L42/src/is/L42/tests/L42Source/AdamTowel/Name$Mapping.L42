@This1.Public class method This #apply()
method This addMap(This1.NativeName name,class Any classAny)=
  native{trusted:addMapP} error void
method This addMapDoubleArrow(This1.NativeName a,This1.NativeName b)=
  native{trusted:addMapDoubleArrow} error void
method This addMapSingleArrow(This1.NativeName a,This1.NativeName b)=
  native{trusted:addMapSingleArrow} error void
method This mergeMap(This that)=
  native{trusted:mergeMap} error void
method This mergeMap(This deep)=
  native{trusted:mergeMapDeep} error void
method Library applyMap(Library that)=
  native{trusted:applyMap} error void
method Library resource(Library that,This1.NativeName name)=
  native{trusted:resource} error void
method Library simpleSum(Library a, Library b)=
  native{trusted:simpleSum} error void
method This1.S pathName(class Any that)=
  native{trusted:pathName} error void

@This1.Public @This1.Cache.Call class method This1.Name #from(This1.S$StringBuilder stringLiteral)=
  This1.Name<:class This1.Name.#from(stringLiteral=stringLiteral)

//OLD watched=This1.S,This1.Name,This1.S$StringBuilder,This1.S$ParseError,This1.Trait$MethodClash,This1.Trait$ClassClash,This1.Trait$InvalidName,This1.Trait$InvalidMap,This1.NativeName,This1.Public,This1.Cache.Call    
#norm{
  nativeKind=Meta
  typeDep=This0, This1.S,This1.Name,This1.S$StringBuilder,This1.S$ParseError,This1.Trait$MethodClash,This1.Trait$ClassClash,This1.Trait$InvalidName,This1.Trait$InvalidMap,This1.NativeName,This1.Public,This1.Cache.Call
  coherentDep=This0, This1.Name This1.S$ParseError,This1.Trait$MethodClash,This1.Trait$ClassClash,This1.Trait$InvalidName,This1.Trait$InvalidMap,This1.S
  nativePar= This1.Trait$ClassClash This1.Trait$MethodClash This1.Trait$InvalidName This1.Trait$InvalidMap This1.S$ParseError
  usedMethods=This1.Name.#from(stringLiteral)
  }