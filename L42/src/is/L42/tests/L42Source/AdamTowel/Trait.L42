Lifted={interface
  class method Library code()
  class method Trait +(Library lib)[ClassClash,MethodClash]
  class method Trait +1(Library lib)[ClassClash,MethodClash]
  }
ClassOperators={class method Trait()=Trait(code={#norm{}})}
Library code
class method This(Library code)
class method This(Library that)=This(code=that)

class method This sum::0(Library a,Library b)[ClassClash,MethodClash]={
  return This(code=Meta().simpleSum(a=a,b=b))
  catch error ClassClash e exception e
  catch error MethodClash e exception e
  } 
method This +(Library lib)[ClassClash,MethodClash]=This.sum::0(a=this.code(),b=lib)
method This +1(Library lib)[ClassClash,MethodClash]=This.sum::0(a=lib,b=this.code())
method This +(class Lifted lifted)[ClassClash,MethodClash]=This.sum::0(a=this.code(),b=lifted.code())
method This +1(class Lifted lifted)[ClassClash,MethodClash]=This.sum::0(a=lifted.code(),b=this.code())
method This +(This trait)[ClassClash,MethodClash]=This.sum::0(a=this.code(),b=trait.code())
method This :(Library lib)[ClassClash,MethodClash]=This.sum::0(a=this.code(),b=lib)
method This :(class Lifted lifted)[ClassClash,MethodClash]=This.sum::0(a=this.code(),b=lifted.code())
method This :(This trait)[ClassClash,MethodClash]=This.sum::0(a=this.code(),b=trait.code())


Acc={
  var Meta that
  class method mut This(Meta that)
  class method mut This (mut This squareBuilder)=squareBuilder
  class method mut This ##apply#squareBuilder()=Acc(Meta())
  class method Bool #shortCircutSquare()=Bool.true()
  mut method Void #squareAdd(Meta that)=this.that(\that.mergeMap(that))
  mut method Void #squareAdd(Name hide)=this.#squareAdd(hide=>Name"")
  mut method Void #squareAdd(Name clear)=this.#squareAdd(clear->Name"")
  }
method This (mut Acc squareBuilder)[InvalidName,InvalidMap,ClassClash,MethodClash]=This(code={
  return squareBuilder.that().applyMap(this.code())
  catch error InvalidName e exception e
  catch error InvalidMap e exception e
  catch error ClassClash e exception e
  catch error MethodClash e exception e
  })


method Library #toLibrary()=
  Meta().simpleSum(a=Meta().resource(this.code()),b=ToLibrary())

ToLibrary=Meta().resource({[Lifted]
  class method Library ()
  method code()=This()
  method +(lib)=ClassOperators()+lib
  method +1(lib)=lib+ClassOperators()
  class method Trait (mut Acc squareBuilder)[InvalidName,InvalidMap,ClassClash,MethodClash]=
    ClassOperators()(squareBuilder=squareBuilder)
  ClassOperators={class method Trait()=Trait(code=This1.code())}
  })