ListNative=Trait:{...}
ListOps=ListNative + {...} + Class.ReadToString+Class.ImmToString+Class.ReadClone
@Public class method Trait listTrait()=Trait(ListOps())//TODO: Meta.resource need to take a NativeName, so that Trait.Lifted() may return a Trait
ListEqOps=Trait:{...}
@Public class method Trait listEqTrait()={
  return this.listTrait()+ListEqOps
  catch Trait$ClassClash e error e
  catch Trait$MethodClash e error e
  }
EqBase=Trait:{
  Elem={read method Bool readEquality(read This that)}
  class method Bool equals(read Elem a,read Elem b)=a.readEquality(b)
  }
@Public class method Library list(class Any that)[Trait$InvalidMap]={
  return Class:(this.listEqTrait()+EqBase)['Elem=>that]
  catch Trait$InvalidName e error e
  catch Trait$ClassClash e error e
  catch Trait$MethodClash e error e
  }