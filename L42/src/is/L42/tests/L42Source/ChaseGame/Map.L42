Env={}
Entity={interface
  Bool solid
  Vector pos
  Vector speed
  Double radius
  Double break
  mut method Void ping(mut Env that)
  read method S paint()
  }
Entity$Opt=Collection.optional(Entity)
Entity$List=Collection.list(Entity)
Env$=Data:{
  mut Entity$List es
  mut Entity$List removeQueue
  mut Random r
  mut method Bool sameEntity(mut Entity a, mut Entity b)=
    System.mutReferenceEquality(a,and=b)
  mut method Void remove(mut Entity that)=this.#removeQueue().#add(right=that)
  mut method Void clearRemoveQueue()=(
    r=this.#removeQueue()
    for mut e in r ( this.removeQueue(e) )
    while !r.isEmpty() ( r.removeRight() )
    )
  mut method Void removeQueue(mut Entity that)=(
    es=this.#es()
    for i in es.size().range(), mut e in es (
      if this.sameEntity(a=that,b=e) Break(es.remove(i))
      )
    )
  class method mut This #$of(mut Entity player)=
    This(es=Entity$List[mutVal=player],removeQueue=Entity$List(),r=Random.#$random())
  }