class method S (S url)=S"""%%
  |package db;
  |import is.L42.platformSpecific.javaEvents.Event;
  |import java.sql.Connection;
  |import java.sql.DriverManager;
  |import java.sql.DatabaseMetaData;
  |import java.sql.ResultSet;
  |import java.sql.SQLException;
  |import java.sql.Statement;
  |import java.util.Map;
  |public class DB{
  |  Connection c;
  |  Statement s;
  |  DatabaseMetaData m;
  |  ResultSet r;
  |  static interface Ask{String of(String msg) throws SQLException;}
  |  public DB()throws SQLException{
  |    Event.class.getClass();
  |    c=DriverManager.getConnection("%%url");
  |    s = c.createStatement();
  |    m = c.getMetaData();
  |    Map<String,Ask> hm=Map.of(
  |      "execute(sql)",this::execute,
  |      "executeQuery(sql)",this::executeQuery,
  |      "next()",this::next,
  |      "get(label)",this::get,
  |      "findColumn(label)",this::findColumn,
  |      "get(that)",this::getIndex,
  |      "queryTables()",this::queryTables,
  |      "queryColumns(tableName)",this::queryColumns,
  |      "kill()",this::kill
  |      );
  |    Event.registerAskEvent("DB",(k,id,msg)->{
  |      try{return hm.get(id).of(msg);}
  |      catch(NullPointerException npe){throw new RuntimeException("Invalid id: "+id);}
  |      catch(SQLException e){throw new RuntimeException(e);}
  |      });
  |    }
  |  String execute(String sql)throws SQLException{s.execute(sql);return "";}
  |  String executeQuery(String sql)throws SQLException{
  |    if(r!=null){r.close();}
  |    r=s.executeQuery(sql);
  |    return "";
  |    }
  |  String next(String empty)throws SQLException{
  |    if(r==null){return "false";}
  |    return r.next()?"true":"false";
  |    }
  |  String get(String field)throws SQLException{
  |    if(r==null){return "";}
  |    return r.getString(field);
  |    }
  |  String findColumn(String field)throws SQLException{
  |    if(r==null){return "";}
  |    return r.findColumn(field)+"";
  |    }
  |  String getIndex(String that)throws SQLException{
  |    if(r==null){return "";}
  |    return r.getString(Integer.parseInt(that));
  |    }
  |  String queryTables(String unused)throws SQLException{
  |    if(r!=null){r.close();}
  |    r=m.getTables(null, null, "%",new String[]{"TABLE"});
  |    return "";
  |    }
  |  String queryColumns(String tableName)throws SQLException{
  |    if(r!=null){r.close();}
  |    r=m.getColumns(null, null, tableName.toUpperCase(), null);
  |    return "";
  |    }
  |  String kill(String empty)throws SQLException{
  |    if(r!=null){s.close();r.close();}
  |    System.exit(0);
  |    return "";//unreachable
  |    }
  |  }  
"""