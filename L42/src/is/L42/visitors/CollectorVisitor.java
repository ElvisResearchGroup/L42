package is.L42.visitors;
import java.util.List;
import is.L42.generated.*;

public interface CollectorVisitor {
  void visitC(C c);
  void visitCs(List<C> cs);
  void visitMdf(Mdf mdf);
  void visitOp(Op op);
  void visitP(P p);
  void visitPos(Pos pos);
  void visitS(S s);
  void visitThrow(Throw thr);
  void visitX(X x);
  void visitXs(List<X> xs);

  void visitSTMeth(ST.STMeth stMeth);
  void visitSTOp(ST.STOp stOp);
  void visitSTz(List<ST> stz);

  void visitEX(Core.EX x);
  void visitPCastT(Core.PCastT pCastT);
  void visitEVoid(Core.EVoid eVoid);
  void visitL(Core.L l);
  void visitMWT(Core.L.MWT mwt);
  void visitMWTs(List<Core.L.MWT> mwts);
  void visitNC(Core.L.NC nc);
  void visitInfo(Core.L.Info info);
  void visitNCs(List<Core.L.NC> ncs);
  void visitMCall(Core.MCall mCall);
  void visitBlock(Core.Block block);
  void visitLoop(Core.Loop loop);
  void visitThrow(Core.Throw thr);
  void visitOpUpdate(Core.OpUpdate opUpdate);
  void visitD(Core.D d);
  void visitDs(List<Core.D> ds);
  void visitK(Core.K k);
  void visitKs(List<Core.K> ks);
  void visitT(Core.T t);
  void visitTs(List<Core.T> ts);
  void visitDoc(Core.Doc doc);
  void visitDocs(List<Core.Doc> docs);
  void visitPathSel(Core.PathSel pathSel);
  void visitMH(Core.MH mh);
  
  void visitPCastT(Half.PCastT pCastT);
  void visitSlash(Half.Slash slash);
  void visitBinOp(Half.BinOp binOp);
  void visitMCall(Half.MCall mCall);
  void visitBlock(Half.Block block);
  void visitLoop(Half.Loop loop);
  void visitThrow(Half.Throw thr);
  void visitOpUpdate(Half.OpUpdate opUpdate);
  void visitD(Half.D d);
  void visitHalfDs(List<Half.D> ds);
  void visitK(Half.K k);
  void visitHalfKs(List<Half.K> ks);
  void visitT(Half.T t);
  void visitHalfTs(List<Half.T> ts);

  void visitCsP(Full.CsP csP);
  void visitL(Full.L l);
  void visitF(Full.L.F f);
  void visitMI(Full.L.MI mi);
  void visitMWT(Full.L.MWT mwt);
  void visitNC(Full.L.NC nc);
  void visitFullMs(List<Full.L.M> ms);
  void visitSlash(Full.Slash slash);
  void visitSlashX(Full.SlashX slashX);
  void visitEString(Full.EString eString);
  void visitEPathSel(Full.EPathSel ePathSel);
  void visitUOp(Full.UOp uOp);
  void visitBinOp(Full.BinOp binOp);
  void visitCast(Full.Cast cast);
  void visitCall(Full.Call call);
  void visitBlock(Full.Block block);
  void visitLoop(Full.Loop loop);
  void visitWhile(Full.While sWhile);
  void visitFor(Full.For sFor);
  void visitThrow(Full.Throw thr);
  void visitOpUpdate(Full.OpUpdate opUpdate);
  void visitIf(Full.If sIf);
  void visitD(Full.D d);
  void visitFullDs(List<Full.D> ds);
  void visitVarTx(Full.VarTx varTx);
  void visitFullVarTx(List<Full.VarTx> varTxs);
  void visitK(Full.K k);
  void visitFullKs(List<Full.K> ks);
  void visitPar(Full.Par par);
  void visitFullPars(List<Full.Par> pars);
  void visitT(Full.T t);
  void visitFullT(List<Full.T> ts);
  void visitDoc(Full.Doc doc);
  void visitFullDoc(List<Full.Doc> docs);
  void visitPathSel(Full.PathSel pathSel);
  void visitMH(Full.MH mh);
  }
